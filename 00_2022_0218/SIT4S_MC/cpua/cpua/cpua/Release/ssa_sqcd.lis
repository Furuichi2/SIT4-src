*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;       ***************************************************
    2                               2     ;       ***                                             ***
    3                               3     ;       ***                                             ***
    4                               4     ;       ***     ÉVÅ[ÉPÉìÉXÉRÅ[Éhïœä∑É\ÉtÉg              ***
    5                               5     ;       ***                                             ***
    6                               6     ;       ***                                             ***
    7                               7     ;       ***************************************************
 2837                              20     
 2838                              21     
 2839 00000000                     22             .SECTION        P,CODE                  ;
 2840                              23     
 2841                              24     
 2842                              25     
 2843                              26     
 2844                              27     
 2845                              28     ;       //      ***********************************
 2846                              29     ;       //      ***     EXTERN êÈåæ PROGRAM     ***
 2847                              30     ;       //      ***********************************
 2848                              31     
 2849                              32     ;       //      ***********************************
 2850                              33     ;       //      ***     EXTERN êÈåæ MEMORY,HARD ***
 2851                              34     ;       //      ***********************************
 2852                              35     
 2853                              36     ;       //      ***********************************
 2854                              37     ;       //      ***     PUBLIC êÈåæ PROGRAM     ***
 2855                              38     ;       //      ***********************************
 2856                              39     
 2857                              40     
 2858                              41     
 2859                              42     ;       *****************************************************
 2860                              43     ;       *****           ÉVÅ[ÉPÉìÉXèàóù                  *****
 2861                              44     ;       *****************************************************
 2862                              45     ;
 2863                              46     ;       /********************************************************************
 2864                              47     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2865                              48     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2866                              49     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2867                              50     ;       /********************************************************************
 2868                              51     
 2869                              52     ;       *********************************************************************
 2870                              53     ;       *****   Read command                            22+2byte        *****
 2871                              54     ;       *********************************************************************
 2872                              55     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2873                              56     ;
 2874 00000000                     57             .ALIGN  4
 2875 00000000                     58     _LD_CODE:
 2876 00000000 2569                59             AND     R6,R5                           ; ARG and NRG
 2877 00000002 4700                60             SHLL    R7                              ; ARG save to MRG
 2878 00000004 275B                61             OR      R5,R7                           ;
 2879                              62     
 2880 00000006 E300                63             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2881 00000008 633C                64             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2882 0000000A E000                65             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2883 0000000C 600C                66             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2884 0000000E 00ED                67             MOV.W   @(R0,R14),R0                    ; read to ARG
 2885                              68                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2886 00000010 6008                69             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     2
PROGRAM NAME =

 2887 00000012 2038                70             TST     R3,R0                           ;
 2888 00000014 0029                71             MOVT    R0                              ; T->R0
 2889 00000016 CA01                72             XOR     #BIT0,R0                        ;
 2890 00000018 6503                73             MOV     R0,R5                           ; T->ARG
 2891                              74     
 2892 0000001A                     75     _LD_CODE_END:
 2893                              76     
 2894                              77     ;       *********************************************************************
 2895                              78     ;       *****   Read Not command                        26+2byte        *****
 2896                              79     ;       *********************************************************************
 2897                              80     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2898                              81     ;
 2899 0000001C                     82             .ALIGN  4
 2900 0000001C                     83     _LDN_CODE:
 2901 0000001C 2569                84             AND     R6,R5                           ; ARG and NRG
 2902 0000001E 4700                85             SHLL    R7                              ; ARG save to MRG
 2903 00000020 275B                86             OR      R5,R7                           ;
 2904                              87     
 2905 00000022 E300                88             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2906 00000024 633C                89             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2907 00000026 E000                90             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2908 00000028 600C                91             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2909 0000002A 00ED                92             MOV.W   @(R0,R14),R0                    ; read to ARG
 2910                              93                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2911 0000002C 6008                94             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2912 0000002E 2038                95             TST     R3,R0                           ;
 2913 00000030 0529                96             MOVT    R5                              ; TÇÃîΩì] -> ARG
 2914                              97     
 2915 00000032                     98     _LDN_CODE_END:
 2916                              99     
 2917                             100     ;       /********************************************************************
 2918                             101     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2919                             102     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2920                             103     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2921                             104     ;       /********************************************************************
 2922                             105     
 2923                             106     ;       *********************************************************************
 2924                             107     ;       *****   And command                             18+2byte        *****
 2925                             108     ;       *********************************************************************
 2926                             109     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2927                             110     ;
 2928 00000034                    111             .ALIGN  4
 2929 00000034                    112     _AND_CODE:
 2930                             113     
 2931 00000034 E300               114             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2932 00000036 633C               115             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2933 00000038 E000               116             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2934 0000003A 600C               117             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2935 0000003C 00ED               118             MOV.W   @(R0,R14),R0                    ; read to ARG
 2936                             119                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2937 0000003E 6008               120             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2938 00000040 2038               121             TST     R3,R0                           ;
 2939 00000042 0029               122             MOVT    R0                              ; T->R0
 2940 00000044 CA01               123             XOR     #BIT0,R0                        ; T îΩì]
 2941 00000046 2509               124             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2942 00000048                    125     _AND_CODE_END:
 2943                             126     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     3
PROGRAM NAME =

 2944                             127     ;       *********************************************************************
 2945                             128     ;       *****   And Not command                         20byte          *****
 2946                             129     ;       *********************************************************************
 2947                             130     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2948                             131     ;
 2949 00000048                    132             .ALIGN  4
 2950 00000048                    133     _ANDN_CODE:
 2951                             134     
 2952 00000048 E300               135             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2953 0000004A 633C               136             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2954 0000004C E000               137             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2955 0000004E 600C               138             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2956 00000050 00ED               139             MOV.W   @(R0,R14),R0                    ; read to ARG
 2957                             140                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2958 00000052 6008               141             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2959 00000054 2038               142             TST     R3,R0                           ;
 2960 00000056 0029               143             MOVT    R0                              ; T->R0
 2961 00000058 2509               144             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2962                             145     
 2963 0000005A                    146     _ANDN_CODE_END:
 2964                             147     
 2965                             148     
 2966                             149     
 2967                             150     ;       *********************************************************************
 2968                             151     ;       *****   Or command                               18+2byte       *****
 2969                             152     ;       *********************************************************************
 2970 0000005C                    153             .ALIGN  4
 2971 0000005C                    154     _OR_CODE:
 2972                             155     
 2973 0000005C E300               156             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2974 0000005E 633C               157             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2975 00000060 E000               158             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2976 00000062 600C               159             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2977 00000064 00ED               160             MOV.W   @(R0,R14),R0                    ; read to ARG
 2978                             161                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2979 00000066 6008               162             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2980 00000068 2038               163             TST     R3,R0                           ;
 2981 0000006A 0029               164             MOVT    R0                              ; T->R0
 2982 0000006C CA01               165             XOR     #BIT0,R0                        ;
 2983 0000006E 250B               166             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 2984                             167     
 2985 00000070                    168     _OR_CODE_END:
 2986                             169     
 2987                             170     
 2988                             171     ;       *********************************************************************
 2989                             172     ;       *****   Or command                               18+2byte       *****
 2990                             173     ;       *********************************************************************
 2991 00000070                    174             .ALIGN  4
 2992 00000070                    175     _ORN_CODE:
 2993                             176     
 2994 00000070 E300               177             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2995 00000072 633C               178             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2996 00000074 E000               179             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2997 00000076 600C               180             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2998 00000078 00ED               181             MOV.W   @(R0,R14),R0                    ; read to ARG
 2999                             182                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3000 0000007A 6008               183             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     4
PROGRAM NAME =

 3001 0000007C 2038               184             TST     R3,R0                           ;
 3002 0000007E 0029               185             MOVT    R0                              ; T->R0
 3003 00000080 250B               186             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 3004                             187     
 3005 00000082                    188     _ORN_CODE_END:
 3006                             189     
 3007                             190     
 3008                             191     ;       *********************************************************************
 3009                             192     ;       *****   Write command                           26+2byte        *****
 3010                             193     ;       *********************************************************************
 3011 00000084                    194             .ALIGN  4
 3012 00000084                    195     _ST_CODE:
 3013                             196     
 3014 00000084 2569               197             AND     R6,R5                           ; ARG and NRG
 3015                             198     
 3016 00000086 E300               199             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3017 00000088 633C               200             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3018 0000008A 4318               201             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3019 0000008C 6237               202             NOT     R3,R2                           ;                               0111111111
                                          111111B
 3020 0000008E E000               203             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3021 00000090 600C               204             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3022 00000092 01ED               205             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3023                             206                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3024 00000094 2129               207             AND     R2,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3025 00000096 625B               208             NEG     R5,R2                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3026 00000098 2239               209             AND     R3,R2                           ; ARG and BIT                   1000000000
                                          000000B
 3027 0000009A 212B               210             OR      R2,R1                           ; ARG SET                       1101010101
                                          010101B
 3028 0000009C 0E15               211             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3029                             212                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3030 0000009E                    213     _ST_CODE_END:                                                           ;
 3031                             214     ;
 3032                             215     
 3033                             216     
 3034                             217     ;       ***********************************************************
 3035                             218     ;       ***     SET BIT CODE CHANGE ROUTINE             20byte  ***
 3036                             219     ;       ***********************************************************
 3037 000000A0                    220             .ALIGN  4
 3038 000000A0                    221     _SET_CODE:                                      ; 00001110B     E
 3039 000000A0 2569               222             AND     R6,R5                           ; ARG and NRG
 3040                             223     
 3041 000000A2 E300               224             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3042 000000A4 633C               225             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3043 000000A6 4318               226             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3044 000000A8 E000               227             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3045 000000AA 600C               228             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3046 000000AC 01ED               229             MOV.W   @(R0,R14),R1                    ; read to ARG                   0101010101
                                          010101B
 3047                             230                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3048 000000AE 625B               231             NEG     R5,R2                           ;
 3049 000000B0 2239               232             AND     R3,R2                           ;
 3050                             233     ;;;;;;  OR      R3,R2                           ;
 3051 000000B2 212B               234             OR      R2,R1                           ; æØƒ                           1101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     5
PROGRAM NAME =

                                          010101B
 3052 000000B4 0E15               235             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3053                             236                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3054 000000B6                    237     _SET_CODE_END:
 3055                             238     
 3056                             239     
 3057                             240     ;       ***********************************************************
 3058                             241     ;       ***     RESET BIT CODE CHANGE ROUTINE           20byte  ***
 3059                             242     ;       ***********************************************************
 3060 000000B8                    243             .ALIGN  4
 3061 000000B8                    244     _RST_CODE:                                      ; 00001110B     E
 3062 000000B8 2569               245             AND     R6,R5                           ; ARG and NRG
 3063                             246     
 3064 000000BA E300               247             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3065 000000BC 633C               248             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3066 000000BE 4318               249             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3067 000000C0 625B               250             NEG     R5,R2                           ;
 3068 000000C2 2329               251             AND     R2,R3                           ;
 3069 000000C4 6337               252             NOT     R3,R3                           ;                               0111111111
                                          111111B
 3070 000000C6 E000               253             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3071 000000C8 600C               254             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3072 000000CA 01ED               255             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3073                             256                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3074 000000CC 2139               257             AND     R3,R1                           ; æØƒ                           0101010101
                                          010101B
 3075 000000CE 0E15               258             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3076                             259                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3077 000000D0                    260     _RST_CODE_END:
 3078                             261     
 3079                             262     ;       ***********************************************************
 3080                             263     ;       ***     ON EDGE 1PULSE ON CODE CHANGE ROUTINE   16byte  ***
 3081                             264     ;       ***********************************************************
 3082 000000D0                    265             .ALIGN  4
 3083 000000D0                    266     _PLS_CODE:                                      ; 00011000B     18
 3084 000000D0 E200               267             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3085 000000D2 622C               268             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3086 000000D4 4218               269             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3087 000000D6 E300               270             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3088 000000D8 633C               271             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3089 000000DA C601               272             MOV.L   @(_PLS_CMD,GBR),R0              ;
 3090 000000DC 400B               273             JSR     @R0                             ; INPUT R2,R3
 3091 000000DE 0009               274             NOP                                     ;
 3092 000000E0                    275     _PLS_CODE_END:
 3093                             276     
 3094                             277     ;       ***************************************************
 3095                             278     ;       ***     ON EDGE 1PULSE ON CODE CHANGE SUB       ***
 3096                             279     ;       ***************************************************
 3097                             280     ;       INPUT R2:BIT,R3,ADR
 3098 000000E0                    281             .ALIGN  4       ;2010-12-27
 3099 000000E0                    282     _PLS_SUB:
 3100                             283             SUB_START
 3101 000000E0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3102                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3103                             284     
 3104                             285     ;;;;2009-11-04  TST     R6,R6                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     6
PROGRAM NAME =

 3105                             286     ;;;;2009-11-04  BT      _PLS_SUB_END                    ; NRG = 0 THEN EXIT
 3106                             287     
 3107 000000E2 6427               288             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3108 000000E4 6033               289             MOV     R3,R0                           ; ADR
 3109 000000E6 01ED               290             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    0101010101
                                          010101B
 3110                             291                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3111 000000E8 6313               292             MOV     R1,R3                           ; ëOâÒíl -> R3
 3112 000000EA 2149               293             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3113 000000EC 645B               294             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3114 000000EE 2429               295             AND     R2,R4                           ; ARG and BIT                   1000000000
                                          000000B
 3115 000000F0 214B               296             OR      R4,R1                           ; ARG SET                       1101010101
                                          010101B
 3116 000000F2 0E15               297             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3117                             298     
 3118 000000F4 231A               299             XOR     R1,R3                           ; EDGE CHECK                 R1 1101010101
                                          010101B
 3119                             300                                                     ;                            R3 0101010101
                                          010101B
 3120 000000F6 2139               301             AND     R3,R1                           ;                        XOR R1 1000000000
                                          000000B
 3121                             302                                                     ;                        AND R1 1000000000
                                          000000B
 3122 000000F8 2128               303             TST     R2,R1                           ;
 3123 000000FA 0129               304             MOVT    R1                              ;
 3124 000000FC 2118               305             TST     R1,R1                           ;
 3125 000000FE 0529               306             MOVT    R5                              ; TÇÃîΩì] -> ARG
 3126                             307     
 3127 00000100                    308     _PLS_SUB_END:
 3128                             309             SUB_END
 3129                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3130 00000100 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3131                             310             M_RTS
 3132 00000102 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3133 00000104 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3134                             311     
 3135                             312     
 3136                             313     ;       ***********************************************************
 3137                             314     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE ROUTINE  16byte  ***
 3138                             315     ;       ***********************************************************
 3139 00000108                    316             .ALIGN  4
 3140 00000108                    317     _PLF_CODE:                                      ; 00011000B     18
 3141 00000108 E200               318             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3142 0000010A 622C               319             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3143 0000010C 4218               320             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3144 0000010E E300               321             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3145 00000110 633C               322             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3146 00000112 C602               323             MOV.L   @(_PLF_CMD,GBR),R0              ;
 3147 00000114 400B               324             JSR     @R0                             ; INPUT R2,R3
 3148 00000116 0009               325             NOP                                     ;
 3149 00000118                    326     _PLF_CODE_END:
 3150                             327     
 3151                             328     ;       ***************************************************
 3152                             329     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE SUB      ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     7
PROGRAM NAME =

 3153                             330     ;       ***************************************************
 3154                             331     ;       INPUT R2:BIT,R3,ADR
 3155 00000118                    332             .ALIGN  4       ;2010-12-27
 3156 00000118                    333     _PLF_SUB:
 3157                             334             SUB_START
 3158 00000118 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3159                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3160                             335     
 3161 0000011A 2668               336             TST     R6,R6                           ;
 3162 0000011C 890F               337             BT      _PLF_SUB_END                    ; NRG = 0 THEN EXIT
 3163                             338     
 3164 0000011E 6427               339             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3165 00000120 6033               340             MOV     R3,R0                           ; ADR
 3166 00000122 01ED               341             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    1101010101
                                          010101B
 3167                             342                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3168 00000124 6313               343             MOV     R1,R3                           ; ëOâÒíl -> R3
 3169 00000126 2149               344             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3170 00000128 645B               345             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  0000
 3171 0000012A 2429               346             AND     R2,R4                           ; ARG and BIT                   0000000000
                                          000000B
 3172 0000012C 214B               347             OR      R4,R1                           ; ARG SET                       0101010101
                                          010101B
 3173 0000012E 0E15               348             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3174                             349     
 3175 00000130 231A               350             XOR     R1,R3                           ; EDGE CHECK                 R1 0101010101
                                          010101B
 3176                             351                                                     ;                            R3 1101010101
                                          010101B
 3177 00000132 6117               352             NOT     R1,R1                           ;
 3178 00000134 2319               353             AND     R1,R3                           ;                        XOR R3 1000000000
                                          000000B
 3179                             354                                                     ;                        AND R1 0000000000
                                          000000B
 3180 00000136 2328               355             TST     R2,R3                           ; óßâ∫ÇË¥ØºÇÕT=1
 3181 00000138 0329               356             MOVT    R3                              ;
 3182 0000013A 2338               357             TST     R3,R3                           ;
 3183 0000013C 0529               358             MOVT    R5                              ; T -> ARG
 3184                             359     
 3185 0000013E                    360     _PLF_SUB_END:
 3186                             361             SUB_END
 3187                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3188 0000013E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3189                             362             M_RTS
 3190 00000140 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3191 00000142 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3192                             363     
 3193                             364     
 3194                             365     ;       /********************************************************************
 3195                             366     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 3196                             367     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 3197                             368     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 3198                             369     ;       /********************************************************************
 3199                             370     
 3200                             371     ;       *********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     8
PROGRAM NAME =

 3201                             372     ;       *****   And MRG command                 4step   10clocks        *****
 3202                             373     ;       *********************************************************************
 3203 00000144                    374             .ALIGN  4
 3204 00000144                    375     _AMRG_CODE:
 3205 00000144 2579               376             AND     R7,R5                           ; ARG and MRG           ;
 3206 00000146 4701               377             SHLR    R7                              ; shift old MRG         ;
 3207 00000148                    378     _AMRG_CODE_END:
 3208                             379     
 3209                             380     
 3210                             381     ;       *********************************************************************
 3211                             382     ;       *****   Or MRG command                  4step   10clocks        *****
 3212                             383     ;       *********************************************************************
 3213 00000148                    384             .ALIGN  4
 3214 00000148                    385     _OMRG_CODE:
 3215 00000148 257B               386             OR      R7,R5                           ; ARG or MRG
 3216 0000014A 4701               387             SHLR    R7                              ; shift old MRG         ;
 3217 0000014C                    388     _OMRG_CODE_END:
 3218                             389     ;
 3219                             390     
 3220                             391     
 3221                             392     ;       *********************************************************************
 3222                             393     ;       *****   Write NRG command               4step    4clocks        *****
 3223                             394     ;       *********************************************************************
 3224 0000014C                    395             .ALIGN  4
 3225 0000014C                    396     _WNRG_CODE:
 3226 0000014C 2569               397             AND     R6,R5                           ; ARG and NRG           ; 2
 3227 0000014E 6653               398             MOV     R5,R6                           ; ARG store to NRG      ; 2
 3228 00000150                    399     _WNRG_CODE_END:
 3229                             400     
 3230                             401     
 3231                             402     ;       *********************************************************************
 3232                             403     ;       *****   Write Not NRG command           2step    5clocks        *****
 3233                             404     ;       *********************************************************************
 3234 00000150                    405             .ALIGN  4
 3235 00000150                    406     _WNNRG_CODE:
 3236 00000150 0018               407             SETT                                    ;
 3237 00000152 0629               408             MOVT    R6                              ; clear NRG             ; 5
 3238 00000154                    409     _WNNRG_CODE_END:
 3239                             410     
 3240                             411     
 3241                             412     ;       *************************************************************
 3242                             413     ;       *****   Write Skip Controlor command                    *****
 3243                             414     ;       *************************************************************
 3244                             415     
 3245 00000154                    416             .ALIGN  4       ;2010-12-27
 3246 00000154                    417     _WSC_CODE:                                      ; 00001110B     E
 3247 00000154 E300               418             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3248 00000156 633C               419             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3249 00000158 4318               420             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3250                             421     
 3251 0000015A C606               422             MOV.L   @(_WSC_CMD,GBR),R0              ;
 3252 0000015C 400B               423             JSR     @R0                             ; INPUT R2,R3
 3253 0000015E 0009               424             NOP                                     ;
 3254                             425     
 3255 00000160 E000               426             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3256 00000162 600C               427             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3257 00000164 0E15               428             MOV.W   R1,@(R0,R14)                    ; read to ARG                   0101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE     9
PROGRAM NAME =

                                          010101B
 3258                             429                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3259                             430     
 3260 00000166                    431     _WSC_CODE_END:
 3261                             432     
 3262                             433     ;       *************************************************************
 3263                             434     ;       *****   Write Skip Controlor command subroutine         *****
 3264                             435     ;       *************************************************************
 3265                             436     ;       INPUT R1 WRITE ADR,R3 BIT
 3266                             437     ;       OUTPUT R1
 3267 00000168                    438             .ALIGN  4       ;2010-12-27
 3268 00000168                    439     _WSC_SUB:
 3269                             440             SUB_START
 3270 00000168 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3271                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3272                             441     
 3273 0000016A 2569               442             AND     R6,R5                   ; ARG and NRG
 3274 0000016C 2558               443             TST     R5,R5                   ;
 3275 0000016E 8903               444             BT      _WSC_S10                ; if ARG = 0  then jump
 3276                             445     ;
 3277 00000170 6053               446             MOV     R5,R0                   ;
 3278 00000172 600B               447             NEG     R0,R0                   ;
 3279 00000174 2039               448             AND     R3,R0                   ; ÇªÇÃBITÇÃÇ›ON
 3280 00000176 6103               449             MOV     R0,R1                   ; store ARG
 3281 00000178                    450     _WSC_S10:
 3282                             451             SUB_END
 3283                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3284 00000178 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3285                             452             M_RTS
 3286 0000017A 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3287 0000017C 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3288                             453     
 3289                             454     ;       ***********************************************************
 3290                             455     ;       ***     Shift Register commnd                   20byte  ***
 3291                             456     ;       ***********************************************************
 3292 00000180                    457             .ALIGN  4
 3293 00000180                    458     _WSR_CODE:                                      ; 00011000B     18
 3294 00000180 E100               459             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3295 00000182 611C               460             EXTU.B  R1,R1                           ;
 3296 00000184 E000               461             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3297 00000186 600C               462             EXTU.B  R0,R0                           ;
 3298 00000188 4018               463             SHLL8   R0                              ;
 3299 0000018A 310C               464             ADD     R0,R1                           ;
 3300 0000018C 4100               465             SHLL    R1                              ; CARD*2
 3301                             466     ;;;;;   ADD     R1,R3                           ; SHIFT CARD ADDRESS MAKE
 3302                             467     
 3303 0000018E C607               468             MOV.L   @(_WSR_CMD,GBR),R0              ;
 3304 00000190 400B               469             JSR     @R0                             ; INPUT R3
 3305 00000192 0009               470             NOP                                     ;
 3306 00000194                    471     _WSR_CODE_END:
 3307                             472     
 3308                             473     
 3309                             474     ;       ***********************************************************
 3310                             475     ;       ***     Shift Register CODE CHANGE ROUTINE              ***
 3311                             476     ;       ***********************************************************
 3312                             477     ;       INPUT   R1 SHIFT CARD ADDRESS
 3313 00000194                    478             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    10
PROGRAM NAME =

 3314 00000194                    479     _WSR_SUB:
 3315                             480             SUB_START
 3316 00000194 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3317                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3318                             481     
 3319 00000196 2569               482             AND     R6,R5                   ; ARG and NRG
 3320                             483     
 3321 00000198 D309               484             MOV.L   #_SEQ_CARD_RAM,R3       ; SEQUENCE BIT AREA TOP
 3322 0000019A D20A               485             MOV.L   #_SEQ_SR_FLG,R2         ; SHIFT (OLD ARG) CARD ADDRESS TOP
 3323 0000019C 331C               486             ADD     R1,R3                   ; CARD TOP + CARD ADDRESS
 3324 0000019E 321C               487             ADD     R1,R2                   ; SHIFT TOP + CARD ADDRESS
 3325                             488     
 3326 000001A0 6021               489             MOV.W   @R2,R0                  ; load old ARG
 3327 000001A2 2251               490             MOV.W   R5,@R2                  ; store new ARG
 3328 000001A4 205A               491             XOR     R5,R0                   ; (old ARG) xor (new ARG)
 3329 000001A6 2059               492             AND     R5,R0                   ; and (new ARG)
 3330 000001A8 2008               493             TST     R0,R0                   ; ON EGDE CHECK
 3331 000001AA 8905               494             BT      _WSR_S10                ; if ARG not 0-->1 then jump
 3332                             495     
 3333 000001AC 6031               496             MOV.W   @R3,R0                  ;
 3334 000001AE 4000               497             SHLL    R0                      ;
 3335                             498     ;;;;2009-11-04  AND     #NBIT0,R0       ; MRG ÇSTOREÇ∑ÇÈBIT CLEAR
 3336 000001B0 9205               499             MOV.W   #BIT0,R2                ;
 3337 000001B2 2279               500             AND     R7,R2                   ;
 3338 000001B4 202B               501             OR      R2,R0                   ;
 3339 000001B6 2301               502             MOV.W   R0,@R3                  ; ºÃƒÇµÇƒBIT0Ç…MRGÇΩƒ±
 3340                             503     
 3341 000001B8                    504     _WSR_S10:
 3342                             505             SUB_END
 3343                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3344 000001B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3345                             506             M_RTS
 3346 000001BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3347 000001BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3348                             507     
 3349                             508     
 3350                             509     
 3351                             510     ;       *********************************************************************
 3352                             511     ;       *****   Data Set command                        14byte          *****
 3353                             512     ;       *********************************************************************
 3354                             513     ;         ------------------------------
 3355                             514     ;       +0|       ñΩóﬂCODE      (  )   |
 3356                             515     ;         ------------------------------
 3357                             516     ;       +1|         ãÛÇ´        (  )   |
 3358                             517     ;         ------------------------------
 3359                             518     ;       +2|       √ﬁ∞¿è„à       (  )   |
 3360                             519     ;         ------------------------------
 3361                             520     ;       +3|       √ﬁ∞¿â∫à       (  )   |
 3362                             521     ;         ------------------------------
 3363                             522     ;
 3364                                     ***** BEGIN-POOL *****
 3365 000001BE 0001                       DATA FOR SOURCE-LINE 499
 3366 000001C0 00000000                   DATA FOR SOURCE-LINE 484
 3367 000001C4 00000000                   DATA FOR SOURCE-LINE 485
 3368                                     ***** END-POOL *****
 3369 000001C8                    523             .ALIGN  4
 3370 000001C8                    524     _DS_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    11
PROGRAM NAME =

 3371 000001C8 E100               525             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3372 000001CA 611C               526             EXTU.B  R1,R1                           ;
 3373 000001CC E000               527             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3374 000001CE 600C               528             EXTU.B  R0,R0                           ;
 3375 000001D0 4018               529             SHLL8   R0                              ;
 3376 000001D2 301C               530             ADD     R1,R0                           ; SET DATA MAKE
 3377 000001D4 0112               531             STC     GBR,R1                          ;
 3378 000001D6 6112               532             MOV.L   @R1,R1                          ;
 3379 000001D8 2101               533             MOV.W   R0,@R1                          ;
 3380                             534     ;;;;;   MOV.W   R0,@(DREG,GBR)                  ; DATA REG SET
 3381 000001DA                    535     _DS_CODE_END:
 3382                             536     
 3383                             537     
 3384                             538     ;       *********************************************************************
 3385                             539     ;       *****   Clear Card command                      16byte          *****
 3386                             540     ;       *********************************************************************
 3387                             541     ;         ------------------------------
 3388                             542     ;       +0|       ñΩóﬂCODE      (  )   |
 3389                             543     ;         ------------------------------
 3390                             544     ;       +1|         ãÛÇ´        (  )   |
 3391                             545     ;         ------------------------------
 3392                             546     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3393                             547     ;         ------------------------------
 3394                             548     ;       +3|         ADR         (  )   |        R4
 3395                             549     ;         ------------------------------
 3396                             550     
 3397 000001DC                    551             .ALIGN  4
 3398 000001DC                    552     _CLR_CODE:
 3399 000001DC E300               553             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3400 000001DE 603C               554             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3401                             555     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3402 000001E0 30EC               556             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3403 000001E2 6303               557             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3404                             558     
 3405 000001E4 C603               559             MOV.L   @(_CLR_CMD,GBR),R0              ;
 3406 000001E6 400B               560             JSR     @R0                             ; INPUT R3
 3407 000001E8 0009               561             NOP                                     ;
 3408 000001EA                    562     _CLR_CODE_END:
 3409                             563     
 3410                             564     ;       ***********************************
 3411                             565     ;       ***     CLRñΩóﬂªÃﬁŸ∞¡›          ***
 3412                             566     ;       ***********************************
 3413                             567     ;       INPUT R3
 3414 000001EC                    568             .ALIGN  4       ;2010-12-27
 3415 000001EC                    569     _CLR_SUB:
 3416                             570             SUB_START
 3417 000001EC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3418                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3419                             571     
 3420 000001EE 2569               572             AND     R6,R5                           ; ARG and NRG
 3421 000001F0 2558               573             TST     R5,R5                           ;
 3422 000001F2 8901               574             BT      _CLR_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3423                             575     
 3424 000001F4 9003               576             MOV.W   #0,R0                           ; CLEAR DATA
 3425 000001F6 2301               577             MOV.W   R0,@R3                          ; DATA STORE
 3426 000001F8                    578     _CLR_SUB_END:
 3427                             579             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    12
PROGRAM NAME =

 3428                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3429 000001F8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3430                             580             M_RTS
 3431 000001FA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3432 000001FC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3433                             581     
 3434                             582     
 3435                             583     ;       *********************************************************************
 3436                             584     ;       *****   Write Timmer command                    10+2byte        *****
 3437                             585     ;       *********************************************************************
 3438                                     ***** BEGIN-POOL *****
 3439 000001FE 0000                       DATA FOR SOURCE-LINE 576
 3440                                     ***** END-POOL *****
 3441 00000200                    586             .ALIGN  4
 3442 00000200                    587     _WTMR_CODE:
 3443 00000200 E200               588             MOV.B   #_SEQ_TMR_DT,R2                 ; TMR data buffer pointer
 3444 00000202 4208               589             SHLL2   R2                              ; TMR No. * 4
 3445                             590     ;;;;;   MOV.W   @R2,R2                          ;
 3446 00000204 C604               591             MOV.L   @(_TMR_CMD,GBR),R0              ;
 3447 00000206 400B               592             JSR     @R0                             ;
 3448 00000208 0009               593             NOP                                     ;
 3449                             594     ;
 3450 0000020A                    595     _WTMR_CODE_END:
 3451                             596     
 3452                             597     
 3453                             598     ;;;;;;;2010-12-27??     SUB_START
 3454                             599     ;       *************************************************************
 3455                             600     ;       *****   Write Timmer command subroutine                 *****
 3456                             601     ;       *************************************************************
 3457 0000020C                    602             .ALIGN  4       ;2010-12-27
 3458 0000020C                    603     _WTMR_SUB:
 3459                             604             SUB_START
 3460 0000020C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3461                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3462                             605     ;
 3463 0000020E 2569               606             AND     R6,R5                           ; ARG and NRG
 3464 00000210 9017               607             MOV.W   #BIT0,R0                        ;
 3465 00000212 2708               608             TST     R0,R7                           ; check MRG
 3466 00000214 893C               609             BT      _WTMR_S50                       ; if MRG = 0  then jump ¿≤œñ≥å¯ THEN Ω¿∞ƒB
                                          IT OFF,¿≤œílÃﬂÿæØƒ
 3467                             610     ;
 3468                             611     ;       *** START BIT CHECK ***
 3469 00000216 D40B               612             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3470 00000218 6023               613             MOV     R2,R0                           ;
 3471 0000021A 7002               614             ADD     #2,R0                           ; TIMER START FLG AREA
 3472 0000021C 014C               615             MOV.B   @(R0,R4),R1                     ; store timmer count start bit
 3473 0000021E 2118               616             TST     R1,R1                           ;
 3474 00000220 8B03               617             BF      _WTMR_S10_000                   ; START BIT ON THEN JUMP
 3475                             618     
 3476                             619     ;       *** TIMER INITIAL SET ***
 3477                             620     ;;;;;   MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3478                             621     
 3479 00000222 D109               622             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3480 00000224 6111               623             MOV.W   @R1,R1                          ;
 3481 00000226 6023               624             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3482 00000228 0415               625             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3483                             626     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    13
PROGRAM NAME =

 3484                             627     ;       *** TIM UP CHECK ***
 3485 0000022A                    628     _WTMR_S10_000:
 3486 0000022A D406               629             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3487 0000022C 6023               630             MOV     R2,R0                           ;
 3488 0000022E 7002               631             ADD     #2,R0                           ; TIMER START FLG AREA
 3489 00000230 0454               632             MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3490                             633     
 3491 00000232 2558               634             TST     R5,R5                           ;
 3492 00000234 8B0A               635             BF      _WTMR_S10_020                   ;
 3493 00000236 E110               636             MOV.B   #BIT4,R1                        ;
 3494 00000238 034C               637             MOV.B   @(R0,R4),R3                     ; store timmer count start bit  í«â¡DEBUG
 3495 0000023A 231B               638             OR      R1,R3                           ;
 3496 0000023C 0434               639             MOV.B   R3,@(R0,R4)                     ; store timmer count start bit  í«â¡DEBUG
 3497                             640             M_BRA   _WTMR_SUB_END                   ;
 3498 0000023E A041                   M           BRA     _WTMR_SUB_END
 3499 00000240 0009                   M           NOP
 3500                             641     
 3501                                     ***** BEGIN-POOL *****
 3502 00000242 0001                       DATA FOR SOURCE-LINE 607
 3503 00000244 00000000                   DATA FOR SOURCE-LINE 612,629
 3504 00000248 00000000                   DATA FOR SOURCE-LINE 622
 3505                                     ***** END-POOL *****
 3506 0000024C                    642     _WTMR_S10_020:
 3507 0000024C 6023               643             MOV     R2,R0                           ;
 3508 0000024E 014D               644             MOV.W   @(R0,R4),R1                     ;
 3509 00000250 2118               645             TST     R1,R1                           ; time up check
 3510 00000252 8901               646             BT      _WTMR_S10                       ; if time is up then jump
 3511                             647     
 3512                             648             M_BRA   _WTMR_SUB_END                   ;
 3513 00000254 A036                   M           BRA     _WTMR_SUB_END
 3514 00000256 0009                   M           NOP
 3515                             649     ;
 3516                             650     ;       *** ¿≤—±ØÃﬂ THEN ¿≤—±ØÃﬂÀﬁØƒON ***
 3517 00000258                    651     _WTMR_S10:
 3518                             652     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3519                             653     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3520 00000258 D109               654             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3521 0000025A D00A               655             MOV.L   #_SEQ_TMR_CARD_TOP,R0   ;
 3522 0000025C 310C               656             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3523                             657     
 3524 0000025E D30A               658             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3525 00000260 6023               659             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3526 00000262 4001               660             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3527 00000264 303C               661             ADD     R3,R0                   ;
 3528 00000266 6001               662             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3529 00000268 310C               663             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3530 0000026A 6411               664             MOV.W   @R1,R4                  ;
 3531                             665     
 3532 0000026C 6023               666             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3533                             667     ;;;;;   SHLL    R0                      ; ∂≥›¿≈› ﬁ∞ * 2
 3534 0000026E 4001               668             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3535 00000270 D306               669             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3536 00000272 303C               670             ADD     R3,R0                   ;
 3537 00000274 6001               671             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3538 00000276 240B               672             OR      R0,R4                   ;
 3539 00000278 2141               673             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3540                             674     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    14
PROGRAM NAME =

 3541                             675             M_BRA   _WTMR_SUB_END                   ;
 3542 0000027A A023                   M           BRA     _WTMR_SUB_END
 3543 0000027C 0009                   M           NOP
 3544                             676     
 3545                             677     ;
 3546                             678     ;       *** ¿≤œñ≥å¯ THEN Ω¿∞ƒBIT OFF,¿≤œílÃﬂÿæØƒ ***
 3547                                     ***** BEGIN-POOL *****
 3548 0000027E 0000                       ALIGNMENT CODE
 3549 00000280 00000000                   DATA FOR SOURCE-LINE 654
 3550 00000284 00000424                   DATA FOR SOURCE-LINE 655
 3551 00000288 00000000                   DATA FOR SOURCE-LINE 658
 3552 0000028C 00000000                   DATA FOR SOURCE-LINE 669
 3553                                     ***** END-POOL *****
 3554 00000290                    679     _WTMR_S50:
 3555 00000290 D40E               680             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3556 00000292 D10F               681             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3557 00000294 6111               682             MOV.W   @R1,R1                          ;
 3558 00000296 6023               683             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3559                             684     ;;;;;   SHLL2   R0                              ; ¿≤œ≈› ﬁ∞ *4
 3560 00000298 0415               685             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3561                             686     
 3562 0000029A 7002               687             ADD     #2,R0                           ; ARG SAVE AREA
 3563 0000029C 211A               688             XOR     R1,R1                           ;
 3564 0000029E 0414               689             MOV.B   R1,@(R0,R4)                     ; START BIT CLEAR
 3565                             690     
 3566                             691     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3567                             692     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3568 000002A0 D10C               693             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3569 000002A2 D00D               694             MOV.L   #_SEQ_TMR_CARD_TOP,R0           ;
 3570 000002A4 310C               695             ADD     R0,R1                           ; CARD TOP + TMR AREA TOP
 3571                             696     
 3572 000002A6 D30D               697             MOV.L   #_SEQ_SEEK_CARD_TBL,R3          ;
 3573 000002A8 6023               698             MOV     R2,R0                           ; ∂≥›¿≈› ﬁ∞*4
 3574 000002AA 4001               699             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3575 000002AC 303C               700             ADD     R3,R0                           ;
 3576 000002AE 6001               701             MOV.W   @R0,R0                          ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3577 000002B0 310C               702             ADD     R0,R1                           ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3578 000002B2 6411               703             MOV.W   @R1,R4                          ;
 3579                             704     
 3580 000002B4 6023               705             MOV     R2,R0                           ; ¿≤œ≈› ﬁ∞*4
 3581 000002B6 4001               706             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3582 000002B8 D309               707             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3          ;
 3583 000002BA 303C               708             ADD     R3,R0                           ;
 3584 000002BC 6001               709             MOV.W   @R0,R0                          ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3585 000002BE 6007               710             NOT     R0,R0                           ;
 3586 000002C0 2409               711             AND     R0,R4                           ; TIME UP BIT CLEAR
 3587 000002C2 2141               712             MOV.W   R4,@R1                          ; STORE
 3588                             713     
 3589 000002C4                    714     _WTMR_SUB_END:
 3590                             715     
 3591                             716             SUB_END
 3592                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3593 000002C4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3594                             717             M_RTS
 3595 000002C6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3596 000002C8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3597                             718     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    15
PROGRAM NAME =

 3598                             719     ;       *********************************************************************
 3599                             720     ;       *****   Write Counter command                   10+2byte        *****
 3600                             721     ;       *********************************************************************
 3601                                     ***** BEGIN-POOL *****
 3602 000002CA 0000                       ALIGNMENT CODE
 3603 000002CC 00000000                   DATA FOR SOURCE-LINE 680
 3604 000002D0 00000000                   DATA FOR SOURCE-LINE 681
 3605 000002D4 00000000                   DATA FOR SOURCE-LINE 693
 3606 000002D8 00000424                   DATA FOR SOURCE-LINE 694
 3607 000002DC 00000000                   DATA FOR SOURCE-LINE 697
 3608 000002E0 00000000                   DATA FOR SOURCE-LINE 707
 3609                                     ***** END-POOL *****
 3610 000002E4                    722             .ALIGN  4
 3611 000002E4                    723     _WCTR_CODE:
 3612 000002E4 E200               724             MOV.B   #_SEQ_CTR_DT,R2                 ; TMR data buffer pointer
 3613 000002E6 4208               725             SHLL2   R2
 3614                             726     ;;;;;   MOV.W   @R2,R2                          ;
 3615 000002E8 C605               727             MOV.L   @(_CTR_CMD,GBR),R0              ;
 3616 000002EA 400B               728             JSR     @R0                             ;
 3617 000002EC 0009               729             NOP                                     ;
 3618                             730     ;
 3619 000002EE                    731     _WCTR_CODE_END:
 3620                             732     
 3621                             733     
 3622                             734     ;       *************************************************************
 3623                             735     ;       *****   Write Counter command subroutine                *****
 3624                             736     ;       *************************************************************
 3625                             737     ;       INPUT R2 :∂≥›¿≈› ﬁ∞*4 (0*4,1*4,2*4,,,,,,)  struct:
 3626                             738     ;       SEQ_CTR_DATA 4byteÅ@1234h
 3627                             739     ;       +0 ∂≥›¿ê›íË/é¿ë™ è„à Å@12h
 3628                             740     ;       +1 ∂≥›¿ê›íË/é¿ë™ â∫à Å@34h
 3629                             741     ;       +2 èâä˙âªÃ◊∏ﬁ 0(èâä˙âªäÆóπ)/ff(èâä˙âªïKóv) ff:∂≥›¿ÃﬂÿæØƒ(ê›íË=>é¿ë™)
 3630                             742     ;       +3 AregëOâÒíl(∂≥›¿ ﬂŸΩçÏê¨ÇÃÇΩÇﬂ)
 3631                             743     ;
 3632                             744     ;       Mreg(R7)ÅFóLå¯/ñ≥å¯(ÃﬂÿæØƒ)
 3633                             745     ;       Areg(R5)ÅF∂≥›ƒ ﬂŸΩ
 3634                             746     ;
 3635 000002F0                    747             .ALIGN  4       ;2010-12-27
 3636 000002F0                    748     _WCTR_SUB:
 3637                             749             SUB_START
 3638 000002F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3639                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3640                             750     ;
 3641 000002F2 2569               751             AND     R6,R5                   ; ARG and NRG                   ; 2
 3642 000002F4 9003               752             MOV.W   #BIT0,R0                ;
 3643 000002F6 2708               753             TST     R0,R7                   ; check MRG                     ; 7 1999-5-26
 3644 000002F8 8B02               754             BF      _WCTR_S05               ; if MRG = 1  then jump         ; 8/15
 3645                             755     
 3646                             756             M_BRA   _WCTR_S50               ; ∂≥›¿ñ≥å¯ THEN èâä˙ílÇ…ÃﬂÿæØƒ
 3647 000002FA A05F                   M           BRA     _WCTR_S50
 3648 000002FC 0009                   M           NOP
 3649                             757     
 3650                             758     ;
 3651                                     ***** BEGIN-POOL *****
 3652 000002FE 0001                       DATA FOR SOURCE-LINE 752
 3653                                     ***** END-POOL *****
 3654 00000300                    759     _WCTR_S05:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    16
PROGRAM NAME =

 3655 00000300 D403               760             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3656 00000302 6023               761             MOV     R2,R0                   ;
 3657                             762     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3658 00000304 7002               763             ADD     #2,R0                   ; èâä˙ílSET FLG,START/STOP FLG AREA
 3659                             764     ;;;;2008-08-08 BUG      MOV.W   @(R0,R4),R1             ; INITIAL DATA SET CHECK
 3660 00000306 014C               765             MOV.B   @(R0,R4),R1             ; INITIAL DATA SET CHECK 2008-08-08
 3661 00000308 2118               766             TST     R1,R1                   ;
 3662 0000030A 8B03               767             BF      _WCTR_S05_10            ; SETçœÇ› THEN JUMP
 3663                             768             M_BRA   _WCTR_S50               ; INITIAL DATA SET
 3664 0000030C A056                   M           BRA     _WCTR_S50
 3665 0000030E 0009                   M           NOP
 3666                             769     
 3667                                     ***** BEGIN-POOL *****
 3668 00000310 00000000                   DATA FOR SOURCE-LINE 760
 3669                                     ***** END-POOL *****
 3670 00000314                    770     _WCTR_S05_10:
 3671 00000314 D405               771             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3672 00000316 6023               772             MOV     R2,R0                   ;
 3673                             773     ;;;;;2008-08-06 ﬁ∏ﬁ     SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2 2008-08-06 SAITO
                                          ÉoÉOÇ≈Ç∑
 3674 00000318 7003               774             ADD     #3,R0                   ; ARG SAVE AREA
 3675 0000031A 014C               775             MOV.B   @(R0,R4),R1             ; load old ARG                  ; 9
 3676 0000031C 0454               776             MOV.B   R5,@(R0,R4)             ; store new ARG                 ; 5
 3677 0000031E 215A               777             XOR     R5,R1                   ; (old ARG) xor (new ARG)       ; 2
 3678 00000320 2159               778             AND     R5,R1                   ; and (new ARG)                 ; 2
 3679 00000322 2118               779             TST     R1,R1                   ;
 3680 00000324 8B04               780             BF      _WCTR_S10               ; if ARG change 0 --> 1 then jump ;8/15
 3681                             781     ;
 3682                             782             M_BRA   _WCTR_SUB_END           ; if ARG not changed  then return ;29
 3683 00000326 A065                   M           BRA     _WCTR_SUB_END
 3684 00000328 0009                   M           NOP
 3685                             783     
 3686                                     ***** BEGIN-POOL *****
 3687 0000032A 0000                       ALIGNMENT CODE
 3688 0000032C 00000000                   DATA FOR SOURCE-LINE 771
 3689                                     ***** END-POOL *****
 3690 00000330                    784     _WCTR_S10:
 3691                             785     
 3692                             786     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3693                             787     ;;;     MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3694 00000330 D109               788             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3695 00000332 D00A               789             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3696 00000334 310C               790             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3697                             791     
 3698 00000336 D30A               792             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3699 00000338 6023               793             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3700 0000033A 4001               794             SHLR    R0                      ; /2
 3701 0000033C 303C               795             ADD     R3,R0                   ;
 3702 0000033E 6001               796             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3703 00000340 310C               797             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3704 00000342 6411               798             MOV.W   @R1,R4                  ;16bit
 3705                             799     
 3706 00000344 6023               800             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3707 00000346 4001               801             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3708 00000348 D306               802             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3709 0000034A 303C               803             ADD     R3,R0                   ;
 3710 0000034C 6001               804             MOV.W   @R0,R0                  ; R0=¡™Ø∏Ç∑ÇÈÀﬁØƒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    17
PROGRAM NAME =

 3711 0000034E 2049               805             AND     R4,R0                   ;
 3712 00000350 2008               806             TST     R0,R0                   ;
 3713 00000352 8909               807             BT      _WCTR_S15               ; if not count upped then jump
 3714                             808     ;
 3715                             809             M_BRA   _WCTR_SUB_END           ; if already count upped then ret
 3716 00000354 A04E                   M           BRA     _WCTR_SUB_END
 3717 00000356 0009                   M           NOP
 3718                             810     
 3719                                     ***** BEGIN-POOL *****
 3720 00000358 00000000                   DATA FOR SOURCE-LINE 788
 3721 0000035C 00000430                   DATA FOR SOURCE-LINE 789
 3722 00000360 00000000                   DATA FOR SOURCE-LINE 792
 3723 00000364 00000000                   DATA FOR SOURCE-LINE 802
 3724                                     ***** END-POOL *****
 3725 00000368                    811     _WCTR_S15:
 3726 00000368 D40E               812             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3727 0000036A 6023               813             MOV     R2,R0                   ;
 3728                             814     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3729 0000036C 014D               815             MOV.W   @(R0,R4),R1             ; COUNTER DATA LOAD
 3730 0000036E D30E               816             MOV.L   #1,R3                   ;
 3731                             817     
 3732 00000370 0008               818             CLRT                            ; T <- 0 CLEAR
 3733 00000372 313A               819             SUBC    R3,R1                   ; COUNER DATA -1
 3734 00000374 233A               820             XOR     R3,R3                   ;
 3735 00000376 313E               821             ADDC    R3,R1                   ; counter = FF --> 0 set
 3736 00000378 0415               822             MOV.W   R1,@(R0,R4)             ; COUNER DATA -1 SET
 3737                             823     ;
 3738 0000037A 2118               824             TST     R1,R1                   ; counter 0 check               ; 2
 3739 0000037C 8B10               825             BF      _WCTR_S20               ; if not count upped then jump  ; 8/15
 3740                             826     
 3741                             827     ;       *** ∂≥›ƒ±ØÃﬂÇ»ÇÁ∂≥›ƒ±ØÃﬂÀﬁØƒSET ***
 3742                             828     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3743                             829     ;;;;;   MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3744 0000037E D10B               830             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3745 00000380 D00B               831             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3746 00000382 310C               832             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3747                             833     
 3748 00000384 D30B               834             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3749 00000386 6023               835             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4/2
 3750 00000388 4001               836             SHLR    R0                      ;
 3751 0000038A 303C               837             ADD     R3,R0                   ;
 3752 0000038C 6001               838             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3753 0000038E 310C               839             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3754 00000390 6411               840             MOV.W   @R1,R4                  ;
 3755                             841     
 3756 00000392 6023               842             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3757 00000394 4001               843             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3758 00000396 D308               844             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3759 00000398 303C               845             ADD     R3,R0                   ;
 3760 0000039A 6001               846             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3761 0000039C 240B               847             OR      R0,R4                   ;
 3762 0000039E 2141               848             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3763                             849     
 3764 000003A0                    850     _WCTR_S20:
 3765                             851             M_BRA   _WCTR_SUB_END
 3766 000003A0 A028                   M           BRA     _WCTR_SUB_END
 3767 000003A2 0009                   M           NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    18
PROGRAM NAME =

 3768                             852     ;
 3769                                     ***** BEGIN-POOL *****
 3770 000003A4 00000000                   DATA FOR SOURCE-LINE 812
 3771 000003A8 00000001                   DATA FOR SOURCE-LINE 816
 3772 000003AC 00000000                   DATA FOR SOURCE-LINE 830
 3773 000003B0 00000430                   DATA FOR SOURCE-LINE 831
 3774 000003B4 00000000                   DATA FOR SOURCE-LINE 834
 3775 000003B8 00000000                   DATA FOR SOURCE-LINE 844
 3776                                     ***** END-POOL *****
 3777 000003BC                    853     _WCTR_S50:
 3778 000003BC D40F               854             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3779 000003BE D110               855             MOV.L   #_SEQ_DRG1_DATA,R1      ; DATA REG data load
 3780 000003C0 6111               856             MOV.W   @R1,R1                  ;
 3781 000003C2 6023               857             MOV     R2,R0                   ; R2=∂≥›¿≈› ﬁ∞
 3782                             858     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3783 000003C4 0415               859             MOV.W   R1,@(R0,R4)             ; ∂≥›¿√ﬁ∞¿ ÃﬂÿæØƒ
 3784                             860     
 3785 000003C6 7002               861             ADD     #2,R0                   ;
 3786 000003C8 E1FF               862             MOV.B   #H'FF,R1                ; èâä˙ílSET CODE
 3787 000003CA 0414               863             MOV.B   R1,@(R0,R4)             ; INITIAL DATA SET CODE WRITE
 3788                             864     
 3789 000003CC 7001               865             ADD     #1,R0                   ; ARG SAVE AREA
 3790 000003CE 0454               866             MOV.B   R5,@(R0,R4)             ; STORE ARG
 3791                             867     
 3792                             868     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3793                             869     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3794 000003D0 D10C               870             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3795 000003D2 D00D               871             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3796 000003D4 310C               872             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3797                             873     
 3798 000003D6 D30D               874             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3799 000003D8 6023               875             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3800 000003DA 4001               876             SHLR    R0                      ; /2
 3801 000003DC 303C               877             ADD     R3,R0                   ;
 3802 000003DE 6001               878             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3803 000003E0 310C               879             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3804 000003E2 6411               880             MOV.W   @R1,R4                  ;
 3805                             881     
 3806 000003E4 6023               882             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3807 000003E6 4001               883             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3808 000003E8 D309               884             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3809 000003EA 303C               885             ADD     R3,R0                   ;
 3810 000003EC 6001               886             MOV.W   @R0,R0                  ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3811 000003EE 6007               887             NOT     R0,R0                   ;
 3812 000003F0 2409               888             AND     R0,R4                   ; BIT CLEAR
 3813 000003F2 2141               889             MOV.W   R4,@R1                  ; STORE
 3814                             890     
 3815 000003F4                    891     _WCTR_SUB_END:
 3816                             892     
 3817                             893             SUB_END
 3818                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3819 000003F4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3820                             894             M_RTS
 3821 000003F6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3822 000003F8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3823                             895     ;
 3824                             896     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    19
PROGRAM NAME =

 3825                             897     
 3826                             898     ;       *********************************************************************
 3827                             899     ;       *****   LDW command                             12byte          *****
 3828                             900     ;       *********************************************************************
 3829                             901     ;         ------------------------------
 3830                             902     ;       +0|       ñΩóﬂCODE      (  )   |
 3831                             903     ;         ------------------------------
 3832                             904     ;       +1|         ãÛÇ´        (  )   |
 3833                             905     ;         ------------------------------
 3834                             906     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3835                             907     ;         ------------------------------
 3836                             908     ;       +3|         ADR         (  )   |        R4
 3837                             909     ;         ------------------------------
 3838                             910     
 3839                                     ***** BEGIN-POOL *****
 3840 000003FA 0000                       ALIGNMENT CODE
 3841 000003FC 00000000                   DATA FOR SOURCE-LINE 854
 3842 00000400 00000000                   DATA FOR SOURCE-LINE 855
 3843 00000404 00000000                   DATA FOR SOURCE-LINE 870
 3844 00000408 00000430                   DATA FOR SOURCE-LINE 871
 3845 0000040C 00000000                   DATA FOR SOURCE-LINE 874
 3846 00000410 00000000                   DATA FOR SOURCE-LINE 884
 3847                                     ***** END-POOL *****
 3848 00000414                    911             .ALIGN  4
 3849 00000414                    912     _LDW_CODE:
 3850 00000414 E300               913             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3851 00000416 603C               914             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3852 00000418 03ED               915             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3853                             916     
 3854 0000041A C608               917             MOV.L   @(_LDW_CMD,GBR),R0              ;
 3855 0000041C 400B               918             JSR     @R0                             ; INPUT R3
 3856 0000041E 0009               919             NOP                                     ;
 3857 00000420                    920     _LDW_CODE_END:
 3858                             921     
 3859                             922     ;       ***********************************
 3860                             923     ;       ***     LDWñΩóﬂªÃﬁŸ∞¡›          ***
 3861                             924     ;       ***********************************
 3862                             925     ;       INPUT R3
 3863 00000420                    926             .ALIGN  4       ;2010-12-27
 3864 00000420                    927     _LDW_SUB:
 3865                             928             SUB_START
 3866 00000420 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3867                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3868                             929     
 3869 00000422 2569               930             AND     R6,R5                           ; ARG and NRG
 3870 00000424 2558               931             TST     R5,R5                           ;
 3871 00000426 8901               932             BT      _LDW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3872                             933     
 3873 00000428 C600               934             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3874 0000042A 2031               935             MOV.W   R3,@R0                          ;
 3875 0000042C                    936     _LDW_SUB_END:
 3876                             937             SUB_END
 3877                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3878 0000042C 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3879                             938             M_RTS
 3880 0000042E 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3881 00000430 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    20
PROGRAM NAME =

 3882                             939     
 3883                             940     ;       *********************************************************************
 3884                             941     ;       *****   èåèÇ»ÇµLDW command                     12byte          *****
 3885                             942     ;       *********************************************************************
 3886                             943     ;         ------------------------------
 3887                             944     ;       +0|       ñΩóﬂCODE      (  )   |
 3888                             945     ;         ------------------------------
 3889                             946     ;       +1|         ãÛÇ´        (  )   |
 3890                             947     ;         ------------------------------
 3891                             948     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3892                             949     ;         ------------------------------
 3893                             950     ;       +3|         ADR         (  )   |        R4
 3894                             951     ;         ------------------------------
 3895                             952     
 3896 00000434                    953             .ALIGN  4
 3897 00000434                    954     _LDWU_CODE:
 3898 00000434 E300               955             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3899 00000436 603C               956             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3900 00000438 03ED               957             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3901                             958     
 3902 0000043A C600               959             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3903 0000043C 2031               960             MOV.W   R3,@R0                          ;
 3904                             961     
 3905 0000043E                    962     _LDWU_CODE_END:
 3906                             963     
 3907                             964     
 3908                             965     ;       *********************************************************************
 3909                             966     ;       *****   STW command                             16byte          *****
 3910                             967     ;       *********************************************************************
 3911                             968     ;         ------------------------------
 3912                             969     ;       +0|       ñΩóﬂCODE      (  )   |
 3913                             970     ;         ------------------------------
 3914                             971     ;       +1|         ãÛÇ´        (  )   |
 3915                             972     ;         ------------------------------
 3916                             973     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3917                             974     ;         ------------------------------
 3918                             975     ;       +3|         ADR         (  )   |        R4
 3919                             976     ;         ------------------------------
 3920                             977     
 3921 00000440                    978             .ALIGN  4
 3922 00000440                    979     _STW_CODE:
 3923 00000440 E300               980             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3924 00000442 603C               981             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3925                             982     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3926 00000444 30EC               983             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3927 00000446 6303               984             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3928                             985     
 3929 00000448 C609               986             MOV.L   @(_STW_CMD,GBR),R0              ;
 3930 0000044A 400B               987             JSR     @R0                             ; INPUT R3
 3931 0000044C 0009               988             NOP                                     ;
 3932 0000044E                    989     _STW_CODE_END:
 3933                             990     
 3934                             991     ;       ***********************************
 3935                             992     ;       ***     STWñΩóﬂªÃﬁŸ∞¡›          ***
 3936                             993     ;       ***********************************
 3937                             994     ;       INPUT R3
 3938 00000450                    995             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    21
PROGRAM NAME =

 3939 00000450                    996     _STW_SUB:
 3940                             997             SUB_START
 3941 00000450 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3942                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3943                             998     
 3944 00000452 2569               999             AND     R6,R5                           ; ARG and NRG
 3945 00000454 2558              1000             TST     R5,R5                           ;
 3946 00000456 8902              1001             BT      _STW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3947                            1002     
 3948 00000458 C600              1003             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3949 0000045A 6001              1004             MOV.W   @R0,R0                          ;
 3950 0000045C 2301              1005             MOV.W   R0,@R3                          ; DATA STORE
 3951 0000045E                   1006     _STW_SUB_END:
 3952                            1007             SUB_END
 3953                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3954 0000045E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3955                            1008             M_RTS
 3956 00000460 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3957 00000462 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3958                            1009     
 3959                            1010     
 3960                            1011     ;       *********************************************************************
 3961                            1012     ;       *****   èåèÇ»ÇµSTW command                     16byte          *****
 3962                            1013     ;       *********************************************************************
 3963                            1014     ;         ------------------------------
 3964                            1015     ;       +0|       ñΩóﬂCODE      (  )   |
 3965                            1016     ;         ------------------------------
 3966                            1017     ;       +1|         ãÛÇ´        (  )   |
 3967                            1018     ;         ------------------------------
 3968                            1019     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3969                            1020     ;         ------------------------------
 3970                            1021     ;       +3|         ADR         (  )   |        R4
 3971                            1022     ;         ------------------------------
 3972                            1023     
 3973 00000464                   1024             .ALIGN  4
 3974 00000464                   1025     _STWU_CODE:
 3975 00000464 E300              1026             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3976 00000466 603C              1027             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3977 00000468 30EC              1028             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3978 0000046A 6303              1029             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3979                            1030     
 3980 0000046C C600              1031             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3981 0000046E 6001              1032             MOV.W   @R0,R0                          ;
 3982 00000470 2301              1033             MOV.W   R0,@R3                          ; DATA STORE
 3983 00000472                   1034     _STWU_CODE_END:
 3984                            1035     
 3985                            1036     
 3986                            1037     ;       *********************************************************************
 3987                            1038     ;       *****   CMP EQ command                          12byte          *****
 3988                            1039     ;       *********************************************************************
 3989                            1040     ;         ------------------------------
 3990                            1041     ;       +0|       ñΩóﬂCODE      (  )   |
 3991                            1042     ;         ------------------------------
 3992                            1043     ;       +1|         ãÛÇ´        (  )   |
 3993                            1044     ;         ------------------------------
 3994                            1045     ;       +2|    OFFSET ADR CODE  (  )   |
 3995                            1046     ;         ------------------------------
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    22
PROGRAM NAME =

 3996                            1047     ;       +3|         ADR         (  )   |
 3997                            1048     ;         ------------------------------
 3998 00000474                   1049             .ALIGN  4
 3999 00000474                   1050     _EQ_CODE:
 4000 00000474 E300              1051             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4001 00000476 603C              1052             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4002 00000478 03ED              1053             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4003                            1054                                                     ; INPUT R3
 4004                            1055     
 4005 0000047A C60A              1056             MOV.L   @(_EQ_CMD,GBR),R0               ;
 4006 0000047C 400B              1057             JSR     @R0                             ;
 4007 0000047E 0009              1058             NOP                                     ;
 4008 00000480                   1059     _EQ_CODE_END:
 4009                            1060     
 4010                            1061     
 4011                            1062     ;       ***********************************
 4012                            1063     ;       ***     CMP EQñΩóﬂªÃﬁŸ∞¡›       ***
 4013                            1064     ;       ***********************************
 4014                            1065     ;       INPUT R3
 4015 00000480                   1066             .ALIGN  4       ;2010-12-27
 4016 00000480                   1067     _EQ_SUB:
 4017                            1068             SUB_START
 4018 00000480 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4019                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4020                            1069     
 4021 00000482 2569              1070             AND     R6,R5                           ; ARG and NRG
 4022 00000484 2558              1071             TST     R5,R5                           ;
 4023 00000486 8903              1072             BT      _EQ_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4024                            1073     
 4025 00000488 C600              1074             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4026 0000048A 6001              1075             MOV.W   @R0,R0                          ;
 4027 0000048C 3030              1076             CMP/EQ  R3,R0                           ; DATA REG = µÕﬂ◊›ƒﬁDATA -> DATA REG
 4028 0000048E 0529              1077             MOVT    R5                              ; T->ARG
 4029                            1078     
 4030 00000490                   1079     _EQ_SUB_END:
 4031                            1080             SUB_END
 4032                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4033 00000490 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4034                            1081             M_RTS
 4035 00000492 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4036 00000494 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4037                            1082     
 4038                            1083     
 4039                            1084     ;       *********************************************************************
 4040                            1085     ;       *****   CMP NE command                          12byte          *****
 4041                            1086     ;       *********************************************************************
 4042                            1087     ;         ------------------------------
 4043                            1088     ;       +0|       ñΩóﬂCODE      (  )   |
 4044                            1089     ;         ------------------------------
 4045                            1090     ;       +1|         ãÛÇ´        (  )   |
 4046                            1091     ;         ------------------------------
 4047                            1092     ;       +2|    OFFSET ADR CODE  (  )   |
 4048                            1093     ;         ------------------------------
 4049                            1094     ;       +3|         ADR         (  )   |
 4050                            1095     ;         ------------------------------
 4051 00000498                   1096             .ALIGN  4
 4052 00000498                   1097     _NE_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    23
PROGRAM NAME =

 4053 00000498 E300              1098             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4054 0000049A 603C              1099             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4055 0000049C 03ED              1100             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4056                            1101                                                     ; INPUT R3
 4057                            1102     
 4058 0000049E C60B              1103             MOV.L   @(_NE_CMD,GBR),R0               ;
 4059 000004A0 400B              1104             JSR     @R0                             ;
 4060 000004A2 0009              1105             NOP                                     ;
 4061 000004A4                   1106     _NE_CODE_END:
 4062                            1107     
 4063                            1108     
 4064                            1109     ;       ***********************************
 4065                            1110     ;       ***     CMP NEñΩóﬂªÃﬁŸ∞¡›       ***
 4066                            1111     ;       ***********************************
 4067                            1112     ;       INPUT R3
 4068 000004A4                   1113             .ALIGN  4       ;2010-12-27
 4069 000004A4                   1114     _NE_SUB:
 4070                            1115             SUB_START
 4071 000004A4 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4072                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4073                            1116     
 4074 000004A6 2569              1117             AND     R6,R5                           ; ARG and NRG
 4075 000004A8 2558              1118             TST     R5,R5                           ;
 4076 000004AA 8905              1119             BT      _NE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4077                            1120     
 4078 000004AC C600              1121             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4079 000004AE 6001              1122             MOV.W   @R0,R0                          ;
 4080 000004B0 3030              1123             CMP/EQ  R3,R0                           ; DATA REG =/= µÕﬂ◊›ƒﬁDATA -> T
 4081 000004B2 0029              1124             MOVT    R0                              ; T->R0
 4082 000004B4 2008              1125             TST     R0,R0                           ;
 4083 000004B6 0529              1126             MOVT    R5                              ; TÇÃîΩì]SET
 4084                            1127     
 4085 000004B8                   1128     _NE_SUB_END:
 4086                            1129             SUB_END
 4087                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4088 000004B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4089                            1130             M_RTS
 4090 000004BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4091 000004BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4092                            1131     
 4093                            1132     ;       *********************************************************************
 4094                            1133     ;       *****   CMP GT command                          12byte          *****
 4095                            1134     ;       *********************************************************************
 4096                            1135     ;         ------------------------------
 4097                            1136     ;       +0|       ñΩóﬂCODE      (  )   |
 4098                            1137     ;         ------------------------------
 4099                            1138     ;       +1|         ãÛÇ´        (  )   |
 4100                            1139     ;         ------------------------------
 4101                            1140     ;       +2|    OFFSET ADR CODE  (  )   |
 4102                            1141     ;         ------------------------------
 4103                            1142     ;       +3|         ADR         (  )   |
 4104                            1143     ;         ------------------------------
 4105 000004C0                   1144             .ALIGN  4
 4106 000004C0                   1145     _GT_CODE:
 4107 000004C0 E300              1146             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4108 000004C2 603C              1147             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4109 000004C4 03ED              1148             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    24
PROGRAM NAME =

 4110                            1149                                                     ; INPUT R3
 4111                            1150     
 4112 000004C6 C60C              1151             MOV.L   @(_GT_CMD,GBR),R0               ;
 4113 000004C8 400B              1152             JSR     @R0                             ;
 4114 000004CA 0009              1153             NOP                                     ;
 4115 000004CC                   1154     _GT_CODE_END:
 4116                            1155     
 4117                            1156     
 4118                            1157     ;       ***********************************
 4119                            1158     ;       ***     CMP GTñΩóﬂªÃﬁŸ∞¡›       ***
 4120                            1159     ;       ***********************************
 4121                            1160     ;       INPUT R3
 4122 000004CC                   1161             .ALIGN  4       ;2010-12-27
 4123 000004CC                   1162     _GT_SUB:
 4124                            1163             SUB_START
 4125 000004CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4126                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4127                            1164     
 4128 000004CE 2569              1165             AND     R6,R5                           ; ARG and NRG
 4129 000004D0 2558              1166             TST     R5,R5                           ;
 4130 000004D2 8903              1167             BT      _GT_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4131                            1168     
 4132 000004D4 C600              1169             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4133 000004D6 6001              1170             MOV.W   @R0,R0                          ;
 4134 000004D8 3037              1171             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4135 000004DA 0529              1172             MOVT    R5                              ; T->R0
 4136                            1173     
 4137                            1174     
 4138 000004DC                   1175     _GT_SUB_END:
 4139                            1176             SUB_END
 4140                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4141 000004DC 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4142                            1177             M_RTS
 4143 000004DE 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4144 000004E0 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4145                            1178     
 4146                            1179     
 4147                            1180     ;       *********************************************************************
 4148                            1181     ;       *****   CMP LE command                          12      byte    *****
 4149                            1182     ;       *********************************************************************
 4150                            1183     ;         ------------------------------
 4151                            1184     ;       +0|       ñΩóﬂCODE      (  )   |
 4152                            1185     ;         ------------------------------
 4153                            1186     ;       +1|         ãÛÇ´        (  )   |
 4154                            1187     ;         ------------------------------
 4155                            1188     ;       +2|    OFFSET ADR CODE  (  )   |
 4156                            1189     ;         ------------------------------
 4157                            1190     ;       +3|         ADR         (  )   |
 4158                            1191     ;         ------------------------------
 4159 000004E4                   1192             .ALIGN  4
 4160 000004E4                   1193     _LE_CODE:
 4161 000004E4 E300              1194             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4162 000004E6 603C              1195             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4163 000004E8 03ED              1196             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4164                            1197                                                     ; INPUT R3
 4165                            1198     
 4166 000004EA C60D              1199             MOV.L   @(_LE_CMD,GBR),R0               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    25
PROGRAM NAME =

 4167 000004EC 400B              1200             JSR     @R0                             ;
 4168 000004EE 0009              1201             NOP                                     ;
 4169 000004F0                   1202     _LE_CODE_END:
 4170                            1203     
 4171                            1204     
 4172                            1205     ;       ***********************************
 4173                            1206     ;       ***     CMP LEñΩóﬂªÃﬁŸ∞¡›       ***
 4174                            1207     ;       ***********************************
 4175                            1208     ;       INPUT R3
 4176 000004F0                   1209             .ALIGN  4       ;2010-12-27
 4177 000004F0                   1210     _LE_SUB:
 4178                            1211             SUB_START
 4179 000004F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4180                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4181                            1212     
 4182 000004F2 2569              1213             AND     R6,R5                           ; ARG and NRG
 4183 000004F4 2558              1214             TST     R5,R5                           ;
 4184 000004F6 8905              1215             BT      _LE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4185                            1216     
 4186 000004F8 C600              1217             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4187 000004FA 6001              1218             MOV.W   @R0,R0                          ;
 4188 000004FC 3037              1219             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4189 000004FE 0029              1220             MOVT    R0                              ; T->R0
 4190 00000500 2008              1221             TST     R0,R0                           ;
 4191 00000502 0529              1222             MOVT    R5                              ; TÇÃîΩì]SET
 4192                            1223     
 4193 00000504                   1224     _LE_SUB_END:
 4194                            1225             SUB_END
 4195                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4196 00000504 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4197                            1226             M_RTS
 4198 00000506 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4199 00000508 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4200                            1227     
 4201                            1228     
 4202                            1229     ;       *********************************************************************
 4203                            1230     ;       *****   ANDW command                            12byte          *****
 4204                            1231     ;       *********************************************************************
 4205                            1232     ;         ------------------------------
 4206                            1233     ;       +0|       ñΩóﬂCODE      (  )   |
 4207                            1234     ;         ------------------------------
 4208                            1235     ;       +1|         ãÛÇ´        (  )   |
 4209                            1236     ;         ------------------------------
 4210                            1237     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4211                            1238     ;         ------------------------------
 4212                            1239     ;       +3|         ADR         (  )   |        R4
 4213                            1240     ;         ------------------------------
 4214 0000050C                   1241             .ALIGN  4
 4215 0000050C                   1242     _ANDW_CODE:
 4216 0000050C E300              1243             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4217 0000050E 603C              1244             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4218 00000510 03ED              1245             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4219                            1246                                                     ; INPUT R3
 4220                            1247     
 4221 00000512 C60E              1248             MOV.L   @(_ANDW_CMD,GBR),R0             ;
 4222 00000514 400B              1249             JSR     @R0                             ;
 4223 00000516 0009              1250             NOP                                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    26
PROGRAM NAME =

 4224 00000518                   1251     _ANDW_CODE_END:
 4225                            1252     
 4226                            1253     
 4227                            1254     ;       ***********************************
 4228                            1255     ;       ***     ANDWñΩóﬂªÃﬁŸ∞¡›         ***
 4229                            1256     ;       ***********************************
 4230                            1257     ;       INPUT R3
 4231 00000518                   1258             .ALIGN  4       ;2010-12-27
 4232 00000518                   1259     _ANDW_SUB:
 4233                            1260             SUB_START
 4234 00000518 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4235                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4236                            1261     
 4237 0000051A 2569              1262             AND     R6,R5                           ; ARG and NRG
 4238 0000051C 2558              1263             TST     R5,R5                           ;
 4239 0000051E 8904              1264             BT      _ANDW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4240                            1265     
 4241 00000520 C600              1266             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4242 00000522 6103              1267             MOV     R0,R1                           ;
 4243 00000524 6011              1268             MOV.W   @R1,R0                          ;
 4244 00000526 2039              1269             AND     R3,R0                           ; DATA REG and µÕﬂ◊›ƒﬁDATA -> DATA REG
 4245 00000528 2101              1270             MOV.W   R0,@R1                          ; DATA REG SET
 4246 0000052A                   1271     _ANDW_SUB_END:
 4247                            1272             SUB_END
 4248                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4249 0000052A 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4250                            1273             M_RTS
 4251 0000052C 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4252 0000052E 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4253                            1274     
 4254                            1275     
 4255                            1276     ;       *********************************************************************
 4256                            1277     ;       *****   ORW command                             12byte          *****
 4257                            1278     ;       *********************************************************************
 4258                            1279     ;         ------------------------------
 4259                            1280     ;       +0|       ñΩóﬂCODE      (  )   |
 4260                            1281     ;         ------------------------------
 4261                            1282     ;       +1|         ãÛÇ´        (  )   |
 4262                            1283     ;         ------------------------------
 4263                            1284     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4264                            1285     ;         ------------------------------
 4265                            1286     ;       +3|         ADR         (  )   |        R4
 4266                            1287     ;         ------------------------------
 4267 00000530                   1288             .ALIGN  4
 4268 00000530                   1289     _ORW_CODE:
 4269 00000530 E300              1290             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4270 00000532 603C              1291             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4271 00000534 03ED              1292             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4272                            1293                                                     ; INPUT R3
 4273                            1294     
 4274 00000536 C60F              1295             MOV.L   @(_ORW_CMD,GBR),R0              ;
 4275 00000538 400B              1296             JSR     @R0                             ;
 4276 0000053A 0009              1297             NOP                                     ;
 4277 0000053C                   1298     _ORW_CODE_END:
 4278                            1299     
 4279                            1300     
 4280                            1301     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    27
PROGRAM NAME =

 4281                            1302     ;       ***     ORWñΩóﬂªÃﬁŸ∞¡›          ***
 4282                            1303     ;       ***********************************
 4283                            1304     ;       INPUT R3
 4284 0000053C                   1305             .ALIGN  4       ;2010-12-27
 4285 0000053C                   1306     _ORW_SUB:
 4286                            1307             SUB_START
 4287 0000053C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4288                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4289                            1308     
 4290 0000053E 2569              1309             AND     R6,R5                           ; ARG and NRG
 4291 00000540 2558              1310             TST     R5,R5                           ;
 4292 00000542 8904              1311             BT      _ORW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4293                            1312     
 4294 00000544 C600              1313             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4295 00000546 6103              1314             MOV     R0,R1
 4296 00000548 6011              1315             MOV.W   @R1,R0                          ;
 4297 0000054A 203B              1316             OR      R3,R0                           ; DATA REG or µÕﬂ◊›ƒﬁDATA -> DATA REG
 4298 0000054C 2101              1317             MOV.W   R0,@R1                          ; DATA REG SET
 4299 0000054E                   1318     _ORW_SUB_END:
 4300                            1319             SUB_END
 4301                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4302 0000054E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4303                            1320             M_RTS
 4304 00000550 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4305 00000552 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4306                            1321     
 4307                            1322     
 4308                            1323     ;       *********************************************************************
 4309                            1324     ;       *****   XORW command                            12byte          *****
 4310                            1325     ;       *********************************************************************
 4311                            1326     ;         ------------------------------
 4312                            1327     ;       +0|       ñΩóﬂCODE      (  )   |
 4313                            1328     ;         ------------------------------
 4314                            1329     ;       +1|         ãÛÇ´        (  )   |
 4315                            1330     ;         ------------------------------
 4316                            1331     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4317                            1332     ;         ------------------------------
 4318                            1333     ;       +3|         ADR         (  )   |        R4
 4319                            1334     ;         ------------------------------
 4320 00000554                   1335             .ALIGN  4
 4321 00000554                   1336     _XORW_CODE:
 4322 00000554 E300              1337             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4323 00000556 603C              1338             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4324 00000558 03ED              1339             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4325                            1340                                                     ; INPUT R3
 4326                            1341     
 4327 0000055A C610              1342             MOV.L   @(_XORW_CMD,GBR),R0             ;
 4328 0000055C 400B              1343             JSR     @R0                             ;
 4329 0000055E 0009              1344             NOP                                     ;
 4330 00000560                   1345     _XORW_CODE_END:
 4331                            1346     
 4332                            1347     
 4333                            1348     ;       ***********************************
 4334                            1349     ;       ***     XORWñΩóﬂªÃﬁŸ∞¡›         ***
 4335                            1350     ;       ***********************************
 4336                            1351     ;       INPUT R3
 4337 00000560                   1352             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    28
PROGRAM NAME =

 4338 00000560                   1353     _XORW_SUB:
 4339                            1354             SUB_START
 4340 00000560 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4341                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4342                            1355     
 4343 00000562 2569              1356             AND     R6,R5                           ; ARG and NRG
 4344 00000564 2558              1357             TST     R5,R5                           ;
 4345 00000566 8904              1358             BT      _XORW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4346                            1359     
 4347 00000568 C600              1360             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4348 0000056A 6103              1361             MOV     R0,R1                           ;
 4349 0000056C 6011              1362             MOV.W   @R1,R0                          ;
 4350 0000056E 203A              1363             XOR     R3,R0                           ; DATA REG xor µÕﬂ◊›ƒﬁDATA -> DATA REG
 4351 00000570 2101              1364             MOV.W   R0,@R1                          ; DATA REG SET
 4352 00000572                   1365     _XORW_SUB_END:
 4353                            1366             SUB_END
 4354                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4355 00000572 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4356                            1367             M_RTS
 4357 00000574 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4358 00000576 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4359                            1368     
 4360                            1369     
 4361                            1370     
 4362                            1371     ;       *********************************************************************
 4363                            1372     ;       *****   ADD command                             12byte          *****
 4364                            1373     ;       *********************************************************************
 4365                            1374     ;         ------------------------------
 4366                            1375     ;       +0|       ñΩóﬂCODE      (  )   |
 4367                            1376     ;         ------------------------------
 4368                            1377     ;       +1|         ãÛÇ´        (  )   |
 4369                            1378     ;         ------------------------------
 4370                            1379     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4371                            1380     ;         ------------------------------
 4372                            1381     ;       +3|         ADR         (  )   |        R4
 4373                            1382     ;         ------------------------------
 4374 00000578                   1383             .ALIGN  4
 4375 00000578                   1384     _ADD_CODE:
 4376 00000578 E300              1385             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4377 0000057A 603C              1386             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4378 0000057C 03ED              1387             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4379                            1388                                                     ; INPUT R3
 4380                            1389     
 4381 0000057E C611              1390             MOV.L   @(_ADD_CMD,GBR),R0              ;
 4382 00000580 400B              1391             JSR     @R0                             ;
 4383 00000582 0009              1392             NOP                                     ;
 4384 00000584                   1393     _ADD_CODE_END:
 4385                            1394     
 4386                            1395     
 4387                            1396     ;       ***********************************
 4388                            1397     ;       ***     ADDñΩóﬂªÃﬁŸ∞¡›          ***
 4389                            1398     ;       ***********************************
 4390                            1399     ;       INPUT R3
 4391 00000584                   1400             .ALIGN  4       ;2010-12-27
 4392 00000584                   1401     _ADD_SUB:
 4393                            1402             SUB_START
 4394 00000584 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    29
PROGRAM NAME =

 4395                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4396                            1403     
 4397 00000586 2569              1404             AND     R6,R5                           ; ARG and NRG
 4398 00000588 2558              1405             TST     R5,R5                           ;
 4399 0000058A 8904              1406             BT      _ADD_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4400                            1407     
 4401 0000058C C600              1408             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4402 0000058E 6103              1409             MOV     R0,R1                           ;
 4403 00000590 6011              1410             MOV.W   @R1,R0                          ;
 4404 00000592 303C              1411             ADD     R3,R0                           ; DATA REG + µÕﬂ◊›ƒﬁDATA -> DATA REG
 4405 00000594 2101              1412             MOV.W   R0,@R1                          ; DATA REG SET
 4406 00000596                   1413     _ADD_SUB_END:
 4407                            1414             SUB_END
 4408                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4409 00000596 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4410                            1415             M_RTS
 4411 00000598 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4412 0000059A 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4413                            1416     
 4414                            1417     ;       *********************************************************************
 4415                            1418     ;       *****   SUB command                             12byte          *****
 4416                            1419     ;       *********************************************************************
 4417                            1420     ;         ------------------------------
 4418                            1421     ;       +0|       ñΩóﬂCODE      (  )   |
 4419                            1422     ;         ------------------------------
 4420                            1423     ;       +1|         ãÛÇ´        (  )   |
 4421                            1424     ;         ------------------------------
 4422                            1425     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4423                            1426     ;         ------------------------------
 4424                            1427     ;       +3|         ADR         (  )   |        R4
 4425                            1428     ;         ------------------------------
 4426                            1429     
 4427 0000059C                   1430             .ALIGN  4
 4428 0000059C                   1431     _SUB_CODE:
 4429 0000059C E300              1432             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4430 0000059E 603C              1433             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4431 000005A0 03ED              1434             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4432                            1435                                                     ; INPUT R3
 4433                            1436     
 4434 000005A2 C612              1437             MOV.L   @(_SUB_CMD,GBR),R0              ;
 4435 000005A4 400B              1438             JSR     @R0                             ;
 4436 000005A6 0009              1439             NOP                                     ;
 4437 000005A8                   1440     _SUB_CODE_END:
 4438                            1441     
 4439                            1442     
 4440                            1443     ;       ***********************************
 4441                            1444     ;       ***     SUBñΩóﬂªÃﬁŸ∞¡›          ***
 4442                            1445     ;       ***********************************
 4443                            1446     ;       INPUT R3
 4444 000005A8                   1447             .ALIGN  4       ;2010-12-27
 4445 000005A8                   1448     _SUB_SUB:
 4446                            1449             SUB_START
 4447 000005A8 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4448                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4449                            1450     
 4450 000005AA 2569              1451             AND     R6,R5                           ; ARG and NRG
 4451 000005AC 2558              1452             TST     R5,R5                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    30
PROGRAM NAME =

 4452 000005AE 8904              1453             BT      _SUB_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4453                            1454     
 4454 000005B0 C600              1455             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4455 000005B2 6103              1456             MOV     R0,R1                           ;
 4456 000005B4 6011              1457             MOV.W   @R1,R0                          ;
 4457 000005B6 3038              1458             SUB     R3,R0                           ; DATA REG - µÕﬂ◊›ƒﬁDATA -> DATA REG
 4458 000005B8 2101              1459             MOV.W   R0,@R1                          ; DATA REG SET
 4459 000005BA                   1460     _SUB_SUB_END:
 4460                            1461             SUB_END
 4461                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4462 000005BA 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4463                            1462             M_RTS
 4464 000005BC 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4465 000005BE 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4466                            1463     
 4467                            1464     
 4468                            1465     
 4469                            1466     ;       *********************************************************************
 4470                            1467     ;       *****   End command                             8byte           *****
 4471                            1468     ;       *********************************************************************
 4472 000005C0                   1469             .ALIGN  4
 4473 000005C0                   1470     _END_CODE:
 4474                            1471     ;;;;;   MOV.L   @(_END_CMD,GBR),R0              ;
 4475                            1472     ;;;;;   JSR     @R0                             ;
 4476                            1473     ;;;;;   NOP                                     ;
 4477                            1474     
 4478                            1475             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4479                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4480 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4481                            1476             M_RTS                                   ;
 4482 000005C2 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4483 000005C4 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4484 000005C6                   1477     _END_CODE_END:
 4485 000005C6 0009              1478             nop                                     ;2010-12-27
 4486 000005C8 0009              1479             nop                                     ;2010-12-27
 4487 000005CC                   1480             .ALIGN  4                               ;2010-12-27
 4488 000005CC                   1481     _END_SUB:
 4489                            1482             SUB_START
 4490 000005CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4491                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4492                            1483     
 4493                            1484             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4494                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4495 000005CE 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4496                            1485             M_RTS                                   ;
 4497 000005D0 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4498 000005D2 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4499                            1486     
 4500                            1487             SUB_END
 4501                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4502 000005D4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4503                            1488             M_RTS
 4504 000005D6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4505 000005D8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4506                            1489     
 4507                            1490     
 4508                            1491     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    31
PROGRAM NAME =

 4509                            1492     ;       *********************************************************************
 4510                            1493     ;       *****   No Operation command            1step    4clocks        *****
 4511                            1494     ;       *********************************************************************
 4512 000005DC                   1495             .ALIGN  4
 4513 000005DC                   1496     _NOP_CODE:
 4514 000005DC 0009              1497             NOP                                     ; no operation
 4515 000005DE                   1498     _NOP_CODE_END:
 4516                            1499     ;
 4517                            1500     
 4518                            1501     
 4519                            1502     
 4520                            1503     
 4521                            1504     
 4522                            1505     
 4523                            1506     
 4524                            1507     
 4525                            1508     
 4526                            1509     
 4527                            1510     
 4528                            1511     
 4529                            1512     
 4530                            1513     
 4531                            1514             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    32

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

BIT0                                      EQU  00000001     15* 2889  2940  2982  3336  3464  3642 
BIT1                                      EQU  00000002     16*
BIT10                                     EQU  00000400     25*
BIT11                                     EQU  00000800     26*
BIT12                                     EQU  00001000     27*
BIT13                                     EQU  00002000     28*
BIT14                                     EQU  00004000     29*
BIT15                                     EQU  00008000     30*
BIT16                                     EQU  00010000     31*
BIT17                                     EQU  00020000     32*
BIT18                                     EQU  00040000     33*
BIT19                                     EQU  00080000     34*
BIT2                                      EQU  00000004     17*
BIT20                                     EQU  00100000     35*
BIT21                                     EQU  00200000     36*
BIT22                                     EQU  00400000     37*
BIT23                                     EQU  00800000     38*
BIT24                                     EQU  01000000     39*
BIT25                                     EQU  02000000     40*
BIT26                                     EQU  04000000     41*
BIT27                                     EQU  08000000     42*
BIT28                                     EQU  10000000     43*
BIT29                                     EQU  20000000     44*
BIT3                                      EQU  00000008     18*
BIT30                                     EQU  40000000     45*
BIT31                                     EQU  80000000     46*
BIT4                                      EQU  00000010     19* 3493 
BIT5                                      EQU  00000020     20*
BIT6                                      EQU  00000040     21*
BIT7                                      EQU  00000080     22*
BIT8                                      EQU  00000100     23*
BIT9                                      EQU  00000200     24*
DREG                                      EQU  00000000   2022* 3873  3902  3948  3980  4025  4078  4132  4186  4241  4294  4347 
                                                          4401  4454 
H_BYTE                                    EQU  00000000     82*
L_BYTE                                    EQU  00000001     81*
NBIT0                                     EQU  000000FE     49*
NBIT1                                     EQU  000000FD     50*
NBIT10                                    EQU  0000FBFF     60*
NBIT11                                    EQU  0000F7FF     61*
NBIT12                                    EQU  0000EFFF     62*
NBIT13                                    EQU  0000DFFF     63*
NBIT14                                    EQU  0000BFFF     64*
NBIT15                                    EQU  00007FFF     65*
NBIT2                                     EQU  000000FB     51*
NBIT3                                     EQU  000000F7     52*
NBIT4                                     EQU  000000EF     53*
NBIT5                                     EQU  000000DF     54*
NBIT6                                     EQU  000000BF     55*
NBIT7                                     EQU  0000007F     56*
NBIT8                                     EQU  0000FEFF     58*
NBIT9                                     EQU  0000FDFF     59*
P                                P        SCT  00000000   2839*
XBIT0                                     EQU  00000000     68*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    33

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

XBIT1                                     EQU  00000001     69*
XBIT2                                     EQU  00000002     70*
XBIT3                                     EQU  00000003     71*
XBIT4                                     EQU  00000004     72*
XBIT5                                     EQU  00000005     73*
XBIT6                                     EQU  00000006     74*
XBIT7                                     EQU  00000007     75*
_ADD_CHG                                  IMPT 00000000   1951 
_ADD_CMD                                  EQU  00000044   2041* 4381 
_ADD_CODE                        P        EXPT 00000578   1906  4375*
_ADD_CODE_END                    P        EXPT 00000584   1907  4384*
_ADD_SUB                         P        EXPT 00000584   1831  4392*
_ADD_SUB_END                     P             00000596   4399  4406*
_AMRG_CHG                                 IMPT 00000000   1938 
_AMRG_CODE                       P        EXPT 00000144   1864  3204*
_AMRG_CODE_END                   P        EXPT 00000148   1865  3207*
_ANDN_CHG                                 IMPT 00000000   1924 
_ANDN_CODE                       P        EXPT 00000048   1848  2950*
_ANDN_CODE_END                   P        EXPT 0000005A   1849  2963*
_ANDW_CHG                                 IMPT 00000000   1953 
_ANDW_CMD                                 EQU  00000038   2038* 4221 
_ANDW_CODE                       P        EXPT 0000050C   1900  4215*
_ANDW_CODE_END                   P        EXPT 00000518   1901  4224*
_ANDW_SUB                        P        EXPT 00000518   1828  4232*
_ANDW_SUB_END                    P             0000052A   4239  4246*
_AND_CHG                                  IMPT 00000000   1923 
_AND_CODE                        P        EXPT 00000034   1846  2929*
_AND_CODE_END                    P        EXPT 00000048   1847  2942*
_BAMRA                                    IMPT 00000000    295 
_BAMRB                                    IMPT 00000000    298 
_BARA                                     IMPT 00000000    294 
_BARB                                     IMPT 00000000    297 
_BASRA                                    IMPT 00000000    283 
_BASRB                                    IMPT 00000000    284 
_BBIT_CHG_TBL                             IMPT 00000000   1968 
_BBRA                                     IMPT 00000000    296 
_BBRB                                     IMPT 00000000    299 
_BCR1                                     IMPT 00000000    305 
_BCR2                                     IMPT 00000000    306 
_BDMRB                                    IMPT 00000000    301 
_BDRB                                     IMPT 00000000    300 
_BRCR                                     IMPT 00000000    302 
_CB_BAKUP_CMD1                            EQU  00005678    114*
_CB_BAKUP_CMD2                            EQU  00001234    115*
_CB_BAK_SUM_COD1                          EQU  5AA51234    112*
_CB_BAK_SUM_COD2                          EQU  A55A4321    113*
_CB_ERR_INFO_MEM                          EQU  00000080    138*
_CB_ERR_INFO_PSIZE                        EQU  00000008    139*
_CB_STS_BUF_1BLK                          EQU  00000040    117*  119 
_CB_STS_BUF_BLKMAX                        EQU  00000008    118*  119 
_CB_STS_BUF_MAX                           EQU  00000200    119*
_CB_TRD_BEFORE                            EQU  00000060    127*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    131*
_CB_TRD_BUF_MAX                           EQU  00000800    128*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    34

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_CB_TRD_DP_1CNT                           EQU  00000008    130*
_CB_TRD_DP_CH                             EQU  00000004    123*
_CB_TRD_SMP_CNT                           EQU  00000080    126*
_CCR                                      IMPT 00000000    285 
_CHCR0                                    IMPT 00000000    326 
_CHCR1                                    IMPT 00000000    330 
_CHCR2                                    IMPT 00000000    334 
_CHCR3                                    IMPT 00000000    338 
_CLR_CHG                                  IMPT 00000000   1936 
_CLR_CMD                                  EQU  0000000C   2027* 3405 
_CLR_CODE                        P        EXPT 000001DC   1874  3398*
_CLR_CODE_END                    P        EXPT 000001EA   1875  3408*
_CLR_SUB                         P        EXPT 000001EC   1817  3415*
_CLR_SUB_END                     P             000001F8   3422  3426*
_CTR_CMD                                  EQU  00000014   2029* 3615 
_DAR0                                     IMPT 00000000    324 
_DAR1                                     IMPT 00000000    328 
_DAR2                                     IMPT 00000000    332 
_DAR3                                     IMPT 00000000    336 
_DA_CNV_DT0                               IMPT 00000000   1800 
_DMAOR                                    IMPT 00000000    339 
_DMATCR0                                  IMPT 00000000    325 
_DMATCR1                                  IMPT 00000000    329 
_DMATCR2                                  IMPT 00000000    333 
_DMATCR3                                  IMPT 00000000    337 
_DSET_CHG                                 IMPT 00000000   1937 
_DS_CODE                         P        EXPT 000001C8   1872  3370*
_DS_CODE_END                     P        EXPT 000001DA   1873  3381*
_DUMMY_SUM_CODE                           EQU  5AA53CC3    105*
_END_CHG                                  IMPT 00000000   1942 
_END_CMD                                  EQU  0000004C   2043*
_END_CODE                        P        EXPT 000005C0   1910  4473*
_END_CODE_END                    P        EXPT 000005C6   1911  4484*
_END_SUB                         P        EXPT 000005CC   1833  4488*
_EQ_CHG                                   IMPT 00000000   1947 
_EQ_CMD                                   EQU  00000028   2034* 4005 
_EQ_CODE                         P        EXPT 00000474   1892  3999*
_EQ_CODE_END                     P        EXPT 00000480   1893  4008*
_EQ_SUB                          P        EXPT 00000480   1824  4016*
_EQ_SUB_END                      P             00000490   4023  4030*
_EXPEVT                                   IMPT 00000000    287 
_FRQCR                                    IMPT 00000000    342 
_GPIOIC                                   IMPT 00000000    320 
_GT_CHG                                   IMPT 00000000   1949 
_GT_CMD                                   EQU  00000030   2036* 4112 
_GT_CODE                         P        EXPT 000004C0   1896  4106*
_GT_CODE_END                     P        EXPT 000004CC   1897  4115*
_GT_SUB                          P        EXPT 000004CC   1826  4123*
_GT_SUB_END                      P             000004DC   4130  4138*
_ICR                                      IMPT 00000000    349 
_INTEVT                                   IMPT 00000000    288 
_INT_2MS_SEL                              IMPT 00000000   1768 
_IPRA                                     IMPT 00000000    350 
_IPRB                                     IMPT 00000000    351 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    35

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_IPRC                                     IMPT 00000000    352 
_IPRD                                     IMPT 00000000    353 
_LDN_CHG                                  IMPT 00000000   1922 
_LDN_CODE                        P        EXPT 0000001C   1844  2900*
_LDN_CODE_END                    P        EXPT 00000032   1845  2915*
_LDWU_CHG                                 IMPT 00000000   1944 
_LDWU_CODE                       P        EXPT 00000434   1886  3897*
_LDWU_CODE_END                   P        EXPT 0000043E   1887  3905*
_LDW_CHG                                  IMPT 00000000   1943 
_LDW_CMD                                  EQU  00000020   2032* 3854 
_LDW_CODE                        P        EXPT 00000414   1884  3849*
_LDW_CODE_END                    P        EXPT 00000420   1885  3857*
_LDW_SUB                         P        EXPT 00000420   1822  3864*
_LDW_SUB_END                     P             0000042C   3871  3875*
_LD_CHG                                   IMPT 00000000   1921 
_LD_CODE                         P        EXPT 00000000   1842  2875*
_LD_CODE_END                     P        EXPT 0000001A   1843  2892*
_LE_CHG                                   IMPT 00000000   1950 
_LE_CMD                                   EQU  00000034   2037* 4166 
_LE_CODE                         P        EXPT 000004E4   1898  4160*
_LE_CODE_END                     P        EXPT 000004F0   1899  4169*
_LE_SUB                          P        EXPT 000004F0   1827  4177*
_LE_SUB_END                      P             00000504   4184  4193*
_MCR                                      IMPT 00000000    310 
_MMUCR                                    IMPT 00000000    282 
_NE_CHG                                   IMPT 00000000   1948 
_NE_CMD                                   EQU  0000002C   2035* 4058 
_NE_CODE                         P        EXPT 00000498   1894  4052*
_NE_CODE_END                     P        EXPT 000004A4   1895  4061*
_NE_SUB                          P        EXPT 000004A4   1825  4069*
_NE_SUB_END                      P             000004B8   4076  4085*
_NOP_CHG                                  IMPT 00000000   1920 
_NOP_CODE                        P        EXPT 000005DC   1840  4513*
_NOP_CODE_END                    P        EXPT 000005DE   1841  4515*
_NOP_SHLL8_R0_TBL0                        IMPT 00000000   1980 
_NOP_SHLL8_R1_TBL0                        IMPT 00000000   1981 
_NOP_SHLL8_R2_TBL0                        IMPT 00000000   1982 
_NOP_SHLL8_R3_TBL0                        IMPT 00000000   1983 
_NOP_SHLL8_R4_TBL0                        IMPT 00000000   1984 
_NOP_SWAP_TBL0                            IMPT 00000000   1979 
_OMRG_CHG                                 IMPT 00000000   1939 
_OMRG_CODE                       P        EXPT 00000148   1866  3214*
_OMRG_CODE_END                   P        EXPT 0000014C   1867  3217*
_ORN_CHG                                  IMPT 00000000   1926 
_ORN_CODE                        P        EXPT 00000070   1852  2992*
_ORN_CODE_END                    P        EXPT 00000082   1853  3005*
_ORW_CHG                                  IMPT 00000000   1954 
_ORW_CMD                                  EQU  0000003C   2039* 4274 
_ORW_CODE                        P        EXPT 00000530   1902  4268*
_ORW_CODE_END                    P        EXPT 0000053C   1903  4277*
_ORW_SUB                         P        EXPT 0000053C   1829  4285*
_ORW_SUB_END                     P             0000054E   4292  4299*
_OR_CHG                                   IMPT 00000000   1925 
_OR_CODE                         P        EXPT 0000005C   1850  2971*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    36

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_OR_CODE_END                     P        EXPT 00000070   1851  2985*
_PCR                                      IMPT 00000000    311 
_PCTRA                                    IMPT 00000000    316 
_PCTRB                                    IMPT 00000000    318 
_PDTRA                                    IMPT 00000000    317 
_PDTRB                                    IMPT 00000000    319 
_PLF_CHG                                  IMPT 00000000   1928 
_PLF_CMD                                  EQU  00000008   2026* 3146 
_PLF_CODE                        P        EXPT 00000108   1862  3140*
_PLF_CODE_END                    P        EXPT 00000118   1863  3149*
_PLF_SUB                         P        EXPT 00000118   1816  3156*
_PLF_SUB_END                     P             0000013E   3162  3185*
_PLS_CHG                                  IMPT 00000000   1927 
_PLS_CMD                                  EQU  00000004   2025* 3089 
_PLS_CODE                        P        EXPT 000000D0   1860  3083*
_PLS_CODE_END                    P        EXPT 000000E0   1861  3092*
_PLS_SUB                         P        EXPT 000000E0   1815  3099*
_PLS_SUB_END                     P             00000100   3127*
_PTEA                                     IMPT 00000000    289 
_PTEH                                     IMPT 00000000    278 
_PTEL                                     IMPT 00000000    279 
_QACR0                                    IMPT 00000000    290 
_QACR1                                    IMPT 00000000    291 
_RFCR                                     IMPT 00000000    315 
_RMIO2_IN_DATA                            IMPT 00000000   1798 
_RMIO_IN_DATA                             IMPT 00000000   1797 
_RST_CHG                                  IMPT 00000000   1932 
_RST_CODE                        P        EXPT 000000B8   1858  3061*
_RST_CODE_END                    P        EXPT 000000D0   1859  3077*
_RTCNT                                    IMPT 00000000    313 
_RTCOR                                    IMPT 00000000    314 
_RTCSR                                    IMPT 00000000    312 
_SAR0                                     IMPT 00000000    323 
_SAR1                                     IMPT 00000000    327 
_SAR2                                     IMPT 00000000    331 
_SAR3                                     IMPT 00000000    335 
_SCBRR1                                   IMPT 00000000    371 
_SCBRR2                                   IMPT 00000000    381 
_SCFCR2                                   IMPT 00000000    386 
_SCFDR2                                   IMPT 00000000    387 
_SCFRDR2                                  IMPT 00000000    385 
_SCFSR2                                   IMPT 00000000    384 
_SCFTDR2                                  IMPT 00000000    383 
_SCLSR2                                   IMPT 00000000    389 
_SCRDR1                                   IMPT 00000000    375 
_SCSCMR1                                  IMPT 00000000    376 
_SCSCR1                                   IMPT 00000000    372 
_SCSCR2                                   IMPT 00000000    382 
_SCSMR1                                   IMPT 00000000    370 
_SCSMR2                                   IMPT 00000000    380 
_SCSPTR1                                  IMPT 00000000    377 
_SCSPTR2                                  IMPT 00000000    388 
_SCSSR1                                   IMPT 00000000    374 
_SCTDR1                                   IMPT 00000000    373 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    37

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_ADDCMD_R0_TBL                        IMPT 00000000   1977 
_SEQ_ADR                                  EQU  00000000   2003* 2882  2907  2933  2954  2975  2996  3020  3044  3070  3087  3144 
                                                          3255  3399  3850  3898  3923  3975  4000  4053  4107  4161  4216  4269 
                                                          4322  4376  4429 
_SEQ_ADR_HI                               EQU  00000000   2008*
_SEQ_ADR_LO                               EQU  00000000   2009*
_SEQ_ARG1_DATA                            IMPT 00000000    433 
_SEQ_ASM_RAM_TOP                          IMPT 00000000    402 
_SEQ_BBIT_CHG_TBL                         IMPT 00000000   1969 
_SEQ_BIT                                  EQU  00000000   2002* 2880  2905  2931  2952  2973  2994  3016  3041  3064  3084  3141 
                                                          3247 
_SEQ_CARD_MAX                             EQU  0000007F   1999*
_SEQ_CARD_RAM                             IMPT 00000000    417  3321  3520  3568  3694  3744  3794 
_SEQ_CHG_TBL0                             IMPT 00000000   1965 
_SEQ_CMP_ERR                              IMPT 00000000    432 
_SEQ_CMP_ERR_ADR                          IMPT 00000000    438 
_SEQ_CTR_CARD_TOP                         EQU  00000430   2047* 3695  3745  3795 
_SEQ_CTR_DATA                             IMPT 00000000    426  3655  3671  3726  3778 
_SEQ_CTR_DT                               EQU  00000000   2006* 3612 
_SEQ_DRG1_DATA                            IMPT 00000000    436  3479  3556  3779 
_SEQ_DT_HI                                EQU  00000000   2012* 3296  3373 
_SEQ_DT_LO                                EQU  00000000   2011* 3294  3371 
_SEQ_GBR_TBL                              IMPT 00000000   1967 
_SEQ_MAX_BYTE                             EQU  0000001C   1994*
_SEQ_MOVCMD_R0RD_TBL                      IMPT 00000000   1970 
_SEQ_MOVCMD_R1RD_TBL                      IMPT 00000000   1971 
_SEQ_MOVCMD_R1WR_TBL                      IMPT 00000000   1972 
_SEQ_MOVCMD_R3RD_TBL                      IMPT 00000000   1974 
_SEQ_MOVCMD_R3WR_TBL                      IMPT 00000000   1975 
_SEQ_MRG1_DATA                            IMPT 00000000    434 
_SEQ_NRG1_DATA                            IMPT 00000000    435 
_SEQ_OFFSET_ADR1                          EQU  00000000   2014*
_SEQ_OFFSET_ADR2                          EQU  000000C8   2015*
_SEQ_OFFSET_ADR3                          EQU  00000190   2016*
_SEQ_OFFSET_ADR4                          EQU  0000021C   2017*
_SEQ_OFFSET_ADR5                          EQU  000002F8   2018*
_SEQ_OFFSET_ADR6                          EQU  00000384   2019*
_SEQ_OFFSET_ADR7                          EQU  00000424   2020*
_SEQ_RUN1                                 IMPT 00000000    409 
_SEQ_RUN1_END                             IMPT 00000000    410 
_SEQ_RUN1_TOP                             IMPT 00000000    408 
_SEQ_RUN_CHG1_ERR_END                     IMPT 00000000   1956 
_SEQ_SEEK_CARD_TBL                        IMPT 00000000   1987  3524  3572  3698  3748  3798 
_SEQ_SEEK_WBIT_TBL                        IMPT 00000000   1986  3535  3582  3708  3758  3808 
_SEQ_SR_FLG                               IMPT 00000000    429  3322 
_SEQ_TMR_CARD_TOP                         EQU  00000424   2046* 3521  3569 
_SEQ_TMR_DATA                             IMPT 00000000    422  3469  3486  3555 
_SEQ_TMR_DT                               EQU  00000000   2005* 3443 
_SET_CHG                                  IMPT 00000000   1931 
_SET_CODE                        P        EXPT 000000A0   1856  3038*
_SET_CODE_END                    P        EXPT 000000B6   1857  3054*
_SQ000                                    EQU  00000000   2126*
_SQ001                                    EQU  00000002   2127*
_SQ002                                    EQU  00000004   2128*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    38

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ003                                    EQU  00000006   2129*
_SQ004                                    EQU  00000008   2130*
_SQ005                                    EQU  0000000A   2131*
_SQ006                                    EQU  0000000C   2132*
_SQ007                                    EQU  0000000E   2133*
_SQ008                                    EQU  00000010   2134*
_SQ009                                    EQU  00000012   2135*
_SQ010                                    EQU  00000014   2136*
_SQ011                                    EQU  00000016   2137*
_SQ012                                    EQU  00000018   2138*
_SQ013                                    EQU  0000001A   2139*
_SQ014                                    EQU  0000001C   2140*
_SQ015                                    EQU  0000001E   2141*
_SQ016                                    EQU  00000020   2142*
_SQ017                                    EQU  00000022   2143*
_SQ018                                    EQU  00000024   2144*
_SQ019                                    EQU  00000026   2145*
_SQ020                                    EQU  00000028   2146*
_SQ021                                    EQU  0000002A   2147*
_SQ022                                    EQU  0000002C   2148*
_SQ023                                    EQU  0000002E   2149*
_SQ024                                    EQU  00000030   2150*
_SQ025                                    EQU  00000032   2151*
_SQ026                                    EQU  00000034   2152*
_SQ027                                    EQU  00000036   2153*
_SQ028                                    EQU  00000038   2154*
_SQ029                                    EQU  0000003A   2155*
_SQ030                                    EQU  0000003C   2156*
_SQ031                                    EQU  0000003E   2157*
_SQ032                                    EQU  00000040   2158*
_SQ033                                    EQU  00000042   2159*
_SQ034                                    EQU  00000044   2160*
_SQ035                                    EQU  00000046   2161*
_SQ036                                    EQU  00000048   2162*
_SQ037                                    EQU  0000004A   2163*
_SQ038                                    EQU  0000004C   2164*
_SQ039                                    EQU  0000004E   2165*
_SQ040                                    EQU  00000050   2166*
_SQ041                                    EQU  00000052   2167*
_SQ042                                    EQU  00000054   2168*
_SQ043                                    EQU  00000056   2169*
_SQ044                                    EQU  00000058   2170*
_SQ045                                    EQU  0000005A   2171*
_SQ046                                    EQU  0000005C   2172*
_SQ047                                    EQU  0000005E   2173*
_SQ048                                    EQU  00000060   2174*
_SQ049                                    EQU  00000062   2175*
_SQ050                                    EQU  00000064   2176*
_SQ051                                    EQU  00000066   2177*
_SQ052                                    EQU  00000068   2178*
_SQ053                                    EQU  0000006A   2179*
_SQ054                                    EQU  0000006C   2180*
_SQ055                                    EQU  0000006E   2181*
_SQ056                                    EQU  00000070   2182*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    39

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ057                                    EQU  00000072   2183*
_SQ058                                    EQU  00000074   2184*
_SQ059                                    EQU  00000076   2185*
_SQ060                                    EQU  00000078   2186*
_SQ061                                    EQU  0000007A   2187*
_SQ062                                    EQU  0000007C   2188*
_SQ063                                    EQU  0000007E   2189*
_SQ064                                    EQU  00000080   2190*
_SQ065                                    EQU  00000082   2191*
_SQ066                                    EQU  00000084   2192*
_SQ067                                    EQU  00000086   2193*
_SQ068                                    EQU  00000088   2194*
_SQ069                                    EQU  0000008A   2195*
_SQ070                                    EQU  0000008C   2196*
_SQ071                                    EQU  0000008E   2197*
_SQ072                                    EQU  00000090   2198*
_SQ073                                    EQU  00000092   2199*
_SQ074                                    EQU  00000094   2200*
_SQ075                                    EQU  00000096   2201*
_SQ076                                    EQU  00000098   2202*
_SQ077                                    EQU  0000009A   2203*
_SQ078                                    EQU  0000009C   2204*
_SQ079                                    EQU  0000009E   2205*
_SQ080                                    EQU  000000A0   2206*
_SQ081                                    EQU  000000A2   2207*
_SQ082                                    EQU  000000A4   2208*
_SQ083                                    EQU  000000A6   2209*
_SQ084                                    EQU  000000A8   2210*
_SQ085                                    EQU  000000AA   2211*
_SQ086                                    EQU  000000AC   2212*
_SQ087                                    EQU  000000AE   2213*
_SQ088                                    EQU  000000B0   2214*
_SQ089                                    EQU  000000B2   2215*
_SQ090                                    EQU  000000B4   2216*
_SQ091                                    EQU  000000B6   2217*
_SQ092                                    EQU  000000B8   2218*
_SQ093                                    EQU  000000BA   2219*
_SQ094                                    EQU  000000BC   2220*
_SQ095                                    EQU  000000BE   2221*
_SQ096                                    EQU  000000C0   2222*
_SQ097                                    EQU  000000C2   2223*
_SQ098                                    EQU  000000C4   2224*
_SQ099                                    EQU  000000C6   2225*
_SQ100                                    EQU  000000C8   2227*
_SQ101                                    EQU  000000CA   2228*
_SQ102                                    EQU  000000CC   2229*
_SQ103                                    EQU  000000CE   2230*
_SQ104                                    EQU  000000D0   2231*
_SQ105                                    EQU  000000D2   2232*
_SQ106                                    EQU  000000D4   2233*
_SQ107                                    EQU  000000D6   2234*
_SQ108                                    EQU  000000D8   2235*
_SQ109                                    EQU  000000DA   2236*
_SQ110                                    EQU  000000DC   2237*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    40

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ111                                    EQU  000000DE   2238*
_SQ112                                    EQU  000000E0   2239*
_SQ113                                    EQU  000000E2   2240*
_SQ114                                    EQU  000000E4   2241*
_SQ115                                    EQU  000000E6   2242*
_SQ116                                    EQU  000000E8   2243*
_SQ117                                    EQU  000000EA   2244*
_SQ118                                    EQU  000000EC   2245*
_SQ119                                    EQU  000000EE   2246*
_SQ120                                    EQU  000000F0   2247*
_SQ121                                    EQU  000000F2   2248*
_SQ122                                    EQU  000000F4   2249*
_SQ123                                    EQU  000000F6   2250*
_SQ124                                    EQU  000000F8   2251*
_SQ125                                    EQU  000000FA   2252*
_SQ126                                    EQU  000000FC   2253*
_SQ127                                    EQU  000000FE   2254*
_SQ128                                    EQU  00000100   2255*
_SQ129                                    EQU  00000102   2256*
_SQ130                                    EQU  00000104   2257*
_SQ131                                    EQU  00000106   2258*
_SQ132                                    EQU  00000108   2259*
_SQ133                                    EQU  0000010A   2260*
_SQ134                                    EQU  0000010C   2261*
_SQ135                                    EQU  0000010E   2262*
_SQ136                                    EQU  00000110   2263*
_SQ137                                    EQU  00000112   2264*
_SQ138                                    EQU  00000114   2265*
_SQ139                                    EQU  00000116   2266*
_SQ140                                    EQU  00000118   2267*
_SQ141                                    EQU  0000011A   2268*
_SQ142                                    EQU  0000011C   2269*
_SQ143                                    EQU  0000011E   2270*
_SQ144                                    EQU  00000120   2271*
_SQ145                                    EQU  00000122   2272*
_SQ146                                    EQU  00000124   2273*
_SQ147                                    EQU  00000126   2274*
_SQ148                                    EQU  00000128   2275*
_SQ149                                    EQU  0000012A   2276*
_SQ150                                    EQU  0000012C   2277*
_SQ151                                    EQU  0000012E   2278*
_SQ152                                    EQU  00000130   2279*
_SQ153                                    EQU  00000132   2280*
_SQ154                                    EQU  00000134   2281*
_SQ155                                    EQU  00000136   2282*
_SQ156                                    EQU  00000138   2283*
_SQ157                                    EQU  0000013A   2284*
_SQ158                                    EQU  0000013C   2285*
_SQ159                                    EQU  0000013E   2286*
_SQ160                                    EQU  00000140   2287*
_SQ161                                    EQU  00000142   2288*
_SQ162                                    EQU  00000144   2289*
_SQ163                                    EQU  00000146   2290*
_SQ164                                    EQU  00000148   2291*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    41

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ165                                    EQU  0000014A   2292*
_SQ166                                    EQU  0000014C   2293*
_SQ167                                    EQU  0000014E   2294*
_SQ168                                    EQU  00000150   2295*
_SQ169                                    EQU  00000152   2296*
_SQ170                                    EQU  00000154   2297*
_SQ171                                    EQU  00000156   2298*
_SQ172                                    EQU  00000158   2299*
_SQ173                                    EQU  0000015A   2300*
_SQ174                                    EQU  0000015C   2301*
_SQ175                                    EQU  0000015E   2302*
_SQ176                                    EQU  00000160   2303*
_SQ177                                    EQU  00000162   2304*
_SQ178                                    EQU  00000164   2305*
_SQ179                                    EQU  00000166   2306*
_SQ180                                    EQU  00000168   2307*
_SQ181                                    EQU  0000016A   2308*
_SQ182                                    EQU  0000016C   2309*
_SQ183                                    EQU  0000016E   2310*
_SQ184                                    EQU  00000170   2311*
_SQ185                                    EQU  00000172   2312*
_SQ186                                    EQU  00000174   2313*
_SQ187                                    EQU  00000176   2314*
_SQ188                                    EQU  00000178   2315*
_SQ189                                    EQU  0000017A   2316*
_SQ190                                    EQU  0000017C   2317*
_SQ191                                    EQU  0000017E   2318*
_SQ192                                    EQU  00000180   2319*
_SQ193                                    EQU  00000182   2320*
_SQ194                                    EQU  00000184   2321*
_SQ195                                    EQU  00000186   2322*
_SQ196                                    EQU  00000188   2323*
_SQ197                                    EQU  0000018A   2324*
_SQ198                                    EQU  0000018C   2325*
_SQ199                                    EQU  0000018E   2326*
_SQ200                                    EQU  00000190   2328*
_SQ201                                    EQU  00000192   2329*
_SQ202                                    EQU  00000194   2330*
_SQ203                                    EQU  00000196   2331*
_SQ204                                    EQU  00000198   2332*
_SQ205                                    EQU  0000019A   2333*
_SQ206                                    EQU  0000019C   2334*
_SQ207                                    EQU  0000019E   2335*
_SQ208                                    EQU  000001A0   2336*
_SQ209                                    EQU  000001A2   2337*
_SQ210                                    EQU  000001A4   2338*
_SQ211                                    EQU  000001A6   2339*
_SQ212                                    EQU  000001A8   2340*
_SQ213                                    EQU  000001AA   2341*
_SQ214                                    EQU  000001AC   2342*
_SQ215                                    EQU  000001AE   2343*
_SQ216                                    EQU  000001B0   2344*
_SQ217                                    EQU  000001B2   2345*
_SQ218                                    EQU  000001B4   2346*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    42

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ219                                    EQU  000001B6   2347*
_SQ220                                    EQU  000001B8   2348*
_SQ221                                    EQU  000001BA   2349*
_SQ222                                    EQU  000001BC   2350*
_SQ223                                    EQU  000001BE   2351*
_SQ224                                    EQU  000001C0   2352*
_SQ225                                    EQU  000001C2   2353*
_SQ226                                    EQU  000001C4   2354*
_SQ227                                    EQU  000001C6   2355*
_SQ228                                    EQU  000001C8   2356*
_SQ229                                    EQU  000001CA   2357*
_SQ230                                    EQU  000001CC   2358*
_SQ231                                    EQU  000001CE   2359*
_SQ232                                    EQU  000001D0   2360*
_SQ233                                    EQU  000001D2   2361*
_SQ234                                    EQU  000001D4   2362*
_SQ235                                    EQU  000001D6   2363*
_SQ236                                    EQU  000001D8   2364*
_SQ237                                    EQU  000001DA   2365*
_SQ238                                    EQU  000001DC   2366*
_SQ239                                    EQU  000001DE   2367*
_SQ240                                    EQU  000001E0   2368*
_SQ241                                    EQU  000001E2   2369*
_SQ242                                    EQU  000001E4   2370*
_SQ243                                    EQU  000001E6   2371*
_SQ244                                    EQU  000001E8   2372*
_SQ245                                    EQU  000001EA   2373*
_SQ246                                    EQU  000001EC   2374*
_SQ247                                    EQU  000001EE   2375*
_SQ248                                    EQU  000001F0   2376*
_SQ249                                    EQU  000001F2   2377*
_SQ250                                    EQU  000001F4   2378*
_SQ251                                    EQU  000001F6   2379*
_SQ252                                    EQU  000001F8   2380*
_SQ253                                    EQU  000001FA   2381*
_SQ254                                    EQU  000001FC   2382*
_SQ255                                    EQU  000001FE   2383*
_SQ256                                    EQU  00000200   2384*
_SQ257                                    EQU  00000202   2385*
_SQ258                                    EQU  00000204   2386*
_SQ259                                    EQU  00000206   2387*
_SQ260                                    EQU  00000208   2388*
_SQ261                                    EQU  0000020A   2389*
_SQ262                                    EQU  0000020C   2390*
_SQ263                                    EQU  0000020E   2391*
_SQ264                                    EQU  00000210   2392*
_SQ265                                    EQU  00000212   2393*
_SQ266                                    EQU  00000214   2394*
_SQ267                                    EQU  00000216   2395*
_SQ268                                    EQU  00000218   2396*
_SQ269                                    EQU  0000021A   2397*
_SQ270                                    EQU  0000021C   2398*
_SQ271                                    EQU  0000021E   2399*
_SQ272                                    EQU  00000220   2400*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    43

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ273                                    EQU  00000222   2401*
_SQ274                                    EQU  00000224   2402*
_SQ275                                    EQU  00000226   2403*
_SQ276                                    EQU  00000228   2404*
_SQ277                                    EQU  0000022A   2405*
_SQ278                                    EQU  0000022C   2406*
_SQ279                                    EQU  0000022E   2407*
_SQ280                                    EQU  00000230   2408*
_SQ281                                    EQU  00000232   2409*
_SQ282                                    EQU  00000234   2410*
_SQ283                                    EQU  00000236   2411*
_SQ284                                    EQU  00000238   2412*
_SQ285                                    EQU  0000023A   2413*
_SQ286                                    EQU  0000023C   2414*
_SQ287                                    EQU  0000023E   2415*
_SQ288                                    EQU  00000240   2416*
_SQ289                                    EQU  00000242   2417*
_SQ290                                    EQU  00000244   2418*
_SQ291                                    EQU  00000246   2419*
_SQ292                                    EQU  00000248   2420*
_SQ293                                    EQU  0000024A   2421*
_SQ294                                    EQU  0000024C   2422*
_SQ295                                    EQU  0000024E   2423*
_SQ296                                    EQU  00000250   2424*
_SQ297                                    EQU  00000252   2425*
_SQ298                                    EQU  00000254   2426*
_SQ299                                    EQU  00000256   2427*
_SQ300                                    EQU  00000258   2429*
_SQ301                                    EQU  0000025A   2430*
_SQ302                                    EQU  0000025C   2431*
_SQ303                                    EQU  0000025E   2432*
_SQ304                                    EQU  00000260   2433*
_SQ305                                    EQU  00000262   2434*
_SQ306                                    EQU  00000264   2435*
_SQ307                                    EQU  00000266   2436*
_SQ308                                    EQU  00000268   2437*
_SQ309                                    EQU  0000026A   2438*
_SQ310                                    EQU  0000026C   2439*
_SQ311                                    EQU  0000026E   2440*
_SQ312                                    EQU  00000270   2441*
_SQ313                                    EQU  00000272   2442*
_SQ314                                    EQU  00000274   2443*
_SQ315                                    EQU  00000276   2444*
_SQ316                                    EQU  00000278   2445*
_SQ317                                    EQU  0000027A   2446*
_SQ318                                    EQU  0000027C   2447*
_SQ319                                    EQU  0000027E   2448*
_SQ320                                    EQU  00000280   2449*
_SQ321                                    EQU  00000282   2450*
_SQ322                                    EQU  00000284   2451*
_SQ323                                    EQU  00000286   2452*
_SQ324                                    EQU  00000288   2453*
_SQ325                                    EQU  0000028A   2454*
_SQ326                                    EQU  0000028C   2455*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    44

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ327                                    EQU  0000028E   2456*
_SQ328                                    EQU  00000290   2457*
_SQ329                                    EQU  00000292   2458*
_SQ330                                    EQU  00000294   2459*
_SQ331                                    EQU  00000296   2460*
_SQ332                                    EQU  00000298   2461*
_SQ333                                    EQU  0000029A   2462*
_SQ334                                    EQU  0000029C   2463*
_SQ335                                    EQU  0000029E   2464*
_SQ336                                    EQU  000002A0   2465*
_SQ337                                    EQU  000002A2   2466*
_SQ338                                    EQU  000002A4   2467*
_SQ339                                    EQU  000002A6   2468*
_SQ340                                    EQU  000002A8   2469*
_SQ341                                    EQU  000002AA   2470*
_SQ342                                    EQU  000002AC   2471*
_SQ343                                    EQU  000002AE   2472*
_SQ344                                    EQU  000002B0   2473*
_SQ345                                    EQU  000002B2   2474*
_SQ346                                    EQU  000002B4   2475*
_SQ347                                    EQU  000002B6   2476*
_SQ348                                    EQU  000002B8   2477*
_SQ349                                    EQU  000002BA   2478*
_SQ350                                    EQU  000002BC   2479*
_SQ351                                    EQU  000002BE   2480*
_SQ352                                    EQU  000002C0   2481*
_SQ353                                    EQU  000002C2   2482*
_SQ354                                    EQU  000002C4   2483*
_SQ355                                    EQU  000002C6   2484*
_SQ356                                    EQU  000002C8   2485*
_SQ357                                    EQU  000002CA   2486*
_SQ358                                    EQU  000002CC   2487*
_SQ359                                    EQU  000002CE   2488*
_SQ360                                    EQU  000002D0   2489*
_SQ361                                    EQU  000002D2   2490*
_SQ362                                    EQU  000002D4   2491*
_SQ363                                    EQU  000002D6   2492*
_SQ364                                    EQU  000002D8   2493*
_SQ365                                    EQU  000002DA   2494*
_SQ366                                    EQU  000002DC   2495*
_SQ367                                    EQU  000002DE   2496*
_SQ368                                    EQU  000002E0   2497*
_SQ369                                    EQU  000002E2   2498*
_SQ370                                    EQU  000002E4   2499*
_SQ371                                    EQU  000002E6   2500*
_SQ372                                    EQU  000002E8   2501*
_SQ373                                    EQU  000002EA   2502*
_SQ374                                    EQU  000002EC   2503*
_SQ375                                    EQU  000002EE   2504*
_SQ376                                    EQU  000002F0   2505*
_SQ377                                    EQU  000002F2   2506*
_SQ378                                    EQU  000002F4   2507*
_SQ379                                    EQU  000002F6   2508*
_SQ380                                    EQU  000002F8   2509*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    45

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ381                                    EQU  000002FA   2510*
_SQ382                                    EQU  000002FC   2511*
_SQ383                                    EQU  000002FE   2512*
_SQ384                                    EQU  00000300   2513*
_SQ385                                    EQU  00000302   2514*
_SQ386                                    EQU  00000304   2515*
_SQ387                                    EQU  00000306   2516*
_SQ388                                    EQU  00000308   2517*
_SQ389                                    EQU  0000030A   2518*
_SQ390                                    EQU  0000030C   2519*
_SQ391                                    EQU  0000030E   2520*
_SQ392                                    EQU  00000310   2521*
_SQ393                                    EQU  00000312   2522*
_SQ394                                    EQU  00000314   2523*
_SQ395                                    EQU  00000316   2524*
_SQ396                                    EQU  00000318   2525*
_SQ397                                    EQU  0000031A   2526*
_SQ398                                    EQU  0000031C   2527*
_SQ399                                    EQU  0000031E   2528*
_SQ400                                    EQU  00000320   2530*
_SQ401                                    EQU  00000322   2531*
_SQ402                                    EQU  00000324   2532*
_SQ403                                    EQU  00000326   2533*
_SQ404                                    EQU  00000328   2534*
_SQ405                                    EQU  0000032A   2535*
_SQ406                                    EQU  0000032C   2536*
_SQ407                                    EQU  0000032E   2537*
_SQ408                                    EQU  00000330   2538*
_SQ409                                    EQU  00000332   2539*
_SQ410                                    EQU  00000334   2540*
_SQ411                                    EQU  00000336   2541*
_SQ412                                    EQU  00000338   2542*
_SQ413                                    EQU  0000033A   2543*
_SQ414                                    EQU  0000033C   2544*
_SQ415                                    EQU  0000033E   2545*
_SQ416                                    EQU  00000340   2546*
_SQ417                                    EQU  00000342   2547*
_SQ418                                    EQU  00000344   2548*
_SQ419                                    EQU  00000346   2549*
_SQ420                                    EQU  00000348   2550*
_SQ421                                    EQU  0000034A   2551*
_SQ422                                    EQU  0000034C   2552*
_SQ423                                    EQU  0000034E   2553*
_SQ424                                    EQU  00000350   2554*
_SQ425                                    EQU  00000352   2555*
_SQ426                                    EQU  00000354   2556*
_SQ427                                    EQU  00000356   2557*
_SQ428                                    EQU  00000358   2558*
_SQ429                                    EQU  0000035A   2559*
_SQ430                                    EQU  0000035C   2560*
_SQ431                                    EQU  0000035E   2561*
_SQ432                                    EQU  00000360   2562*
_SQ433                                    EQU  00000362   2563*
_SQ434                                    EQU  00000364   2564*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    46

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ435                                    EQU  00000366   2565*
_SQ436                                    EQU  00000368   2566*
_SQ437                                    EQU  0000036A   2567*
_SQ438                                    EQU  0000036C   2568*
_SQ439                                    EQU  0000036E   2569*
_SQ440                                    EQU  00000370   2570*
_SQ441                                    EQU  00000372   2571*
_SQ442                                    EQU  00000374   2572*
_SQ443                                    EQU  00000376   2573*
_SQ444                                    EQU  00000378   2574*
_SQ445                                    EQU  0000037A   2575*
_SQ446                                    EQU  0000037C   2576*
_SQ447                                    EQU  0000037E   2577*
_SQ448                                    EQU  00000380   2578*
_SQ449                                    EQU  00000382   2579*
_SQ450                                    EQU  00000384   2580*
_SQ451                                    EQU  00000386   2581*
_SQ452                                    EQU  00000388   2582*
_SQ453                                    EQU  0000038A   2583*
_SQ454                                    EQU  0000038C   2584*
_SQ455                                    EQU  0000038E   2585*
_SQ456                                    EQU  00000390   2586*
_SQ457                                    EQU  00000392   2587*
_SQ458                                    EQU  00000394   2588*
_SQ459                                    EQU  00000396   2589*
_SQ460                                    EQU  00000398   2590*
_SQ461                                    EQU  0000039A   2591*
_SQ462                                    EQU  0000039C   2592*
_SQ463                                    EQU  0000039E   2593*
_SQ464                                    EQU  000003A0   2594*
_SQ465                                    EQU  000003A2   2595*
_SQ466                                    EQU  000003A4   2596*
_SQ467                                    EQU  000003A6   2597*
_SQ468                                    EQU  000003A8   2598*
_SQ469                                    EQU  000003AA   2599*
_SQ470                                    EQU  000003AC   2600*
_SQ471                                    EQU  000003AE   2601*
_SQ472                                    EQU  000003B0   2602*
_SQ473                                    EQU  000003B2   2603*
_SQ474                                    EQU  000003B4   2604*
_SQ475                                    EQU  000003B6   2605*
_SQ476                                    EQU  000003B8   2606*
_SQ477                                    EQU  000003BA   2607*
_SQ478                                    EQU  000003BC   2608*
_SQ479                                    EQU  000003BE   2609*
_SQ480                                    EQU  000003C0   2610*
_SQ481                                    EQU  000003C2   2611*
_SQ482                                    EQU  000003C4   2612*
_SQ483                                    EQU  000003C6   2613*
_SQ484                                    EQU  000003C8   2614*
_SQ485                                    EQU  000003CA   2615*
_SQ486                                    EQU  000003CC   2616*
_SQ487                                    EQU  000003CE   2617*
_SQ488                                    EQU  000003D0   2618*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    47

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ489                                    EQU  000003D2   2619*
_SQ490                                    EQU  000003D4   2620*
_SQ491                                    EQU  000003D6   2621*
_SQ492                                    EQU  000003D8   2622*
_SQ493                                    EQU  000003DA   2623*
_SQ494                                    EQU  000003DC   2624*
_SQ495                                    EQU  000003DE   2625*
_SQ496                                    EQU  000003E0   2626*
_SQ497                                    EQU  000003E2   2627*
_SQ498                                    EQU  000003E4   2628*
_SQ499                                    EQU  000003E6   2629*
_SQ500                                    EQU  000003E8   2631*
_SQ501                                    EQU  000003EA   2632*
_SQ502                                    EQU  000003EC   2633*
_SQ503                                    EQU  000003EE   2634*
_SQ504                                    EQU  000003F0   2635*
_SQ505                                    EQU  000003F2   2636*
_SQ506                                    EQU  000003F4   2637*
_SQ507                                    EQU  000003F6   2638*
_SQ508                                    EQU  000003F8   2639*
_SQ509                                    EQU  000003FA   2640*
_SQ510                                    EQU  000003FC   2641*
_SQ511                                    EQU  000003FE   2642*
_SQ512                                    EQU  00000400   2643*
_SQ513                                    EQU  00000402   2644*
_SQ514                                    EQU  00000404   2645*
_SQ515                                    EQU  00000406   2646*
_SQ516                                    EQU  00000408   2647*
_SQ517                                    EQU  0000040A   2648*
_SQ518                                    EQU  0000040C   2649*
_SQ519                                    EQU  0000040E   2650*
_SQ520                                    EQU  00000410   2651*
_SQ521                                    EQU  00000412   2652*
_SQ522                                    EQU  00000414   2653*
_SQ523                                    EQU  00000416   2654*
_SQ524                                    EQU  00000418   2655*
_SQ525                                    EQU  0000041A   2656*
_SQ526                                    EQU  0000041C   2657*
_SQ527                                    EQU  0000041E   2658*
_SQ528                                    EQU  00000420   2659*
_SQ529                                    EQU  00000422   2660*
_SQ530                                    EQU  00000424   2661*
_SQ531                                    EQU  00000426   2662*
_SQ532                                    EQU  00000428   2663*
_SQ533                                    EQU  0000042A   2664*
_SQ534                                    EQU  0000042C   2665*
_SQ535                                    EQU  0000042E   2666*
_SQ536                                    EQU  00000430   2667*
_SQ537                                    EQU  00000432   2668*
_SQ538                                    EQU  00000434   2669*
_SQ539                                    EQU  00000436   2670*
_SQ540                                    EQU  00000438   2671*
_SQ541                                    EQU  0000043A   2672*
_SQ542                                    EQU  0000043C   2673*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    48

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ543                                    EQU  0000043E   2674*
_SQ544                                    EQU  00000440   2675*
_SQ545                                    EQU  00000442   2676*
_SQ546                                    EQU  00000444   2677*
_SQ547                                    EQU  00000446   2678*
_SQ548                                    EQU  00000448   2679*
_SQ549                                    EQU  0000044A   2680*
_SQ550                                    EQU  0000044C   2681*
_SQ551                                    EQU  0000044E   2682*
_SQ552                                    EQU  00000450   2683*
_SQ553                                    EQU  00000452   2684*
_SQ554                                    EQU  00000454   2685*
_SQ555                                    EQU  00000456   2686*
_SQ556                                    EQU  00000458   2687*
_SQ557                                    EQU  0000045A   2688*
_SQ558                                    EQU  0000045C   2689*
_SQ559                                    EQU  0000045E   2690*
_SQ560                                    EQU  00000460   2691*
_SQ561                                    EQU  00000462   2692*
_SQ562                                    EQU  00000464   2693*
_SQ563                                    EQU  00000466   2694*
_SQ564                                    EQU  00000468   2695*
_SQ565                                    EQU  0000046A   2696*
_SQ566                                    EQU  0000046C   2697*
_SQ567                                    EQU  0000046E   2698*
_SQ568                                    EQU  00000470   2699*
_SQ569                                    EQU  00000472   2700*
_SQ570                                    EQU  00000474   2701*
_SQ571                                    EQU  00000476   2702*
_SQ572                                    EQU  00000478   2703*
_SQ573                                    EQU  0000047A   2704*
_SQ574                                    EQU  0000047C   2705*
_SQ575                                    EQU  0000047E   2706*
_SQ576                                    EQU  00000480   2707*
_SQ577                                    EQU  00000482   2708*
_SQ578                                    EQU  00000484   2709*
_SQ579                                    EQU  00000486   2710*
_SQ580                                    EQU  00000488   2711*
_SQ581                                    EQU  0000048A   2712*
_SQ582                                    EQU  0000048C   2713*
_SQ583                                    EQU  0000048E   2714*
_SQ584                                    EQU  00000490   2715*
_SQ585                                    EQU  00000492   2716*
_SQ586                                    EQU  00000494   2717*
_SQ587                                    EQU  00000496   2718*
_SQ588                                    EQU  00000498   2719*
_SQ589                                    EQU  0000049A   2720*
_SQ590                                    EQU  0000049C   2721*
_SQ591                                    EQU  0000049E   2722*
_SQ592                                    EQU  000004A0   2723*
_SQ593                                    EQU  000004A2   2724*
_SQ594                                    EQU  000004A4   2725*
_SQ595                                    EQU  000004A6   2726*
_SQ596                                    EQU  000004A8   2727*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    49

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ597                                    EQU  000004AA   2728*
_SQ598                                    EQU  000004AC   2729*
_SQ599                                    EQU  000004AE   2730*
_SQ600                                    EQU  000004B0   2732*
_SQ601                                    EQU  000004B2   2733*
_SQ602                                    EQU  000004B4   2734*
_SQ603                                    EQU  000004B6   2735*
_SQ604                                    EQU  000004B8   2736*
_SQ605                                    EQU  000004BA   2737*
_SQ606                                    EQU  000004BC   2738*
_SQ607                                    EQU  000004BE   2739*
_SQ608                                    EQU  000004C0   2740*
_SQ609                                    EQU  000004C2   2741*
_SQ610                                    EQU  000004C4   2742*
_SQ611                                    EQU  000004C6   2743*
_SQ612                                    EQU  000004C8   2744*
_SQ613                                    EQU  000004CA   2745*
_SQ614                                    EQU  000004CC   2746*
_SQ615                                    EQU  000004CE   2747*
_SQ616                                    EQU  000004D0   2748*
_SQ617                                    EQU  000004D2   2749*
_SQ618                                    EQU  000004D4   2750*
_SQ619                                    EQU  000004D6   2751*
_SQ620                                    EQU  000004D8   2752*
_SQ621                                    EQU  000004DA   2753*
_SQ622                                    EQU  000004DC   2754*
_SQ623                                    EQU  000004DE   2755*
_SQ624                                    EQU  000004E0   2756*
_SQ625                                    EQU  000004E2   2757*
_SQ626                                    EQU  000004E4   2758*
_SQ627                                    EQU  000004E6   2759*
_SQ628                                    EQU  000004E8   2760*
_SQ629                                    EQU  000004EA   2761*
_SQ630                                    EQU  000004EC   2762*
_SQ631                                    EQU  000004EE   2763*
_SQ632                                    EQU  000004F0   2764*
_SQ633                                    EQU  000004F2   2765*
_SQ634                                    EQU  000004F4   2766*
_SQ635                                    EQU  000004F6   2767*
_SQ636                                    EQU  000004F8   2768*
_SQ637                                    EQU  000004FA   2769*
_SQ638                                    EQU  000004FC   2770*
_SQ639                                    EQU  000004FE   2771*
_SQ640                                    EQU  00000500   2772*
_SQ641                                    EQU  00000502   2773*
_SQ642                                    EQU  00000504   2774*
_SQ643                                    EQU  00000506   2775*
_SQ644                                    EQU  00000508   2776*
_SQ645                                    EQU  0000050A   2777*
_SQ646                                    EQU  0000050C   2778*
_SQ647                                    EQU  0000050E   2779*
_SQ648                                    EQU  00000510   2780*
_SQ649                                    EQU  00000512   2781*
_SQ650                                    EQU  00000514   2782*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    50

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ651                                    EQU  00000516   2783*
_SQ652                                    EQU  00000518   2784*
_SQ653                                    EQU  0000051A   2785*
_SQ654                                    EQU  0000051C   2786*
_SQ655                                    EQU  0000051E   2787*
_SQ656                                    EQU  00000520   2788*
_SQ657                                    EQU  00000522   2789*
_SQ658                                    EQU  00000524   2790*
_SQ659                                    EQU  00000526   2791*
_SQ660                                    EQU  00000528   2792*
_SQ661                                    EQU  0000052A   2793*
_SQ662                                    EQU  0000052C   2794*
_SQ663                                    EQU  0000052E   2795*
_SQ664                                    EQU  00000530   2796*
_SQ665                                    EQU  00000532   2797*
_SQ666                                    EQU  00000534   2798*
_SQ667                                    EQU  00000536   2799*
_SQ668                                    EQU  00000538   2800*
_SQ669                                    EQU  0000053A   2801*
_SQ670                                    EQU  0000053C   2802*
_SQ671                                    EQU  0000053E   2803*
_SQ672                                    EQU  00000540   2804*
_SQ673                                    EQU  00000542   2805*
_SQ674                                    EQU  00000544   2806*
_SQ675                                    EQU  00000546   2807*
_SQ676                                    EQU  00000548   2808*
_SQ677                                    EQU  0000054A   2809*
_SQ678                                    EQU  0000054C   2810*
_SQ679                                    EQU  0000054E   2811*
_SQ680                                    EQU  00000550   2812*
_SQ681                                    EQU  00000552   2813*
_SQ682                                    EQU  00000554   2814*
_SQ683                                    EQU  00000556   2815*
_SQ684                                    EQU  00000558   2816*
_SQ685                                    EQU  0000055A   2817*
_SQ686                                    EQU  0000055C   2818*
_SQ687                                    EQU  0000055E   2819*
_SQ688                                    EQU  00000560   2820*
_SQ689                                    EQU  00000562   2821*
_SQ690                                    EQU  00000564   2822*
_SQ691                                    EQU  00000566   2823*
_SQ692                                    EQU  00000568   2824*
_SQ693                                    EQU  0000056A   2825*
_SQ694                                    EQU  0000056C   2826*
_SQ695                                    EQU  0000056E   2827*
_SQ696                                    EQU  00000570   2828*
_SQ697                                    EQU  00000572   2829*
_SQ698                                    EQU  00000574   2830*
_SQ699                                    EQU  00000576   2831*
_SQCB200                                  EQU  00000000   2053*
_SQCB201                                  EQU  00000002   2054*
_SQCB202                                  EQU  00000004   2055*
_SQCB203                                  EQU  00000006   2056*
_SQCB204                                  EQU  00000008   2057*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    51

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB205                                  EQU  0000000A   2058*
_SQCB206                                  EQU  0000000C   2059*
_SQCB207                                  EQU  0000000E   2060*
_SQCB208                                  EQU  00000010   2061*
_SQCB209                                  EQU  00000012   2062*
_SQCB210                                  EQU  00000014   2063*
_SQCB211                                  EQU  00000016   2064*
_SQCB212                                  EQU  00000018   2065*
_SQCB213                                  EQU  0000001A   2066*
_SQCB214                                  EQU  0000001C   2067*
_SQCB215                                  EQU  0000001E   2068*
_SQCB216                                  EQU  00000020   2069*
_SQCB217                                  EQU  00000022   2070*
_SQCB218                                  EQU  00000024   2071*
_SQCB219                                  EQU  00000026   2072*
_SQCB220                                  EQU  00000028   2073*
_SQCB221                                  EQU  0000002A   2074*
_SQCB222                                  EQU  0000002C   2075*
_SQCB223                                  EQU  0000002E   2076*
_SQCB224                                  EQU  00000030   2077*
_SQCB225                                  EQU  00000032   2078*
_SQCB226                                  EQU  00000034   2079*
_SQCB227                                  EQU  00000036   2080*
_SQCB228                                  EQU  00000038   2081*
_SQCB229                                  EQU  0000003A   2082*
_SQCB230                                  EQU  0000003C   2083*
_SQCB231                                  EQU  0000003E   2084*
_SQCB232                                  EQU  00000040   2085*
_SQCB233                                  EQU  00000042   2086*
_SQCB234                                  EQU  00000044   2087*
_SQCB235                                  EQU  00000046   2088*
_SQCB236                                  EQU  00000048   2089*
_SQCB237                                  EQU  0000004A   2090*
_SQCB238                                  EQU  0000004C   2091*
_SQCB239                                  EQU  0000004E   2092*
_SQCB240                                  EQU  00000050   2093*
_SQCB241                                  EQU  00000052   2094*
_SQCB242                                  EQU  00000054   2095*
_SQCB243                                  EQU  00000056   2096*
_SQCB244                                  EQU  00000058   2097*
_SQCB245                                  EQU  0000005A   2098*
_SQCB246                                  EQU  0000005C   2099*
_SQCB247                                  EQU  0000005E   2100*
_SQCB248                                  EQU  00000060   2101*
_SQCB249                                  EQU  00000062   2102*
_SQCB250                                  EQU  00000064   2103*
_SQCB251                                  EQU  00000066   2104*
_SQCB252                                  EQU  00000068   2105*
_SQCB253                                  EQU  0000006A   2106*
_SQCB254                                  EQU  0000006C   2107*
_SQCB255                                  EQU  0000006E   2108*
_SQCB256                                  EQU  00000070   2109*
_SQCB257                                  EQU  00000072   2110*
_SQCB258                                  EQU  00000074   2111*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    52

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB259                                  EQU  00000076   2112*
_SQCB260                                  EQU  00000078   2113*
_SQCB261                                  EQU  0000007A   2114*
_SQCB262                                  EQU  0000007C   2115*
_SQCB263                                  EQU  0000007E   2116*
_SQCB264                                  EQU  00000080   2117*
_SQCB265                                  EQU  00000082   2118*
_SQCB266                                  EQU  00000084   2119*
_SQCB267                                  EQU  00000086   2120*
_SQCB268                                  EQU  00000088   2121*
_SQCB269                                  EQU  0000008A   2122*
_SQ_CB_DAT1                               EQU  00000046   2049*
_SQ_ERR_END                               EQU  0000FF00   1998*
_SQ_NML_COD                               EQU  00000000   1996*
_SQ_NML_END                               EQU  00000055   1997*
_START_ACK_COD                            EQU  00004321    213*
_START_REQ_COD                            EQU  00009876    212*
_STBCR                                    IMPT 00000000    343 
_STBCR2                                   IMPT 00000000    346 
_STWU_CHG                                 IMPT 00000000   1945 
_STWU_CODE                       P        EXPT 00000464   1888  3974*
_STWU_CODE_END                   P        EXPT 00000472   1889  3983*
_STW_CHG                                  IMPT 00000000   1946 
_STW_CMD                                  EQU  00000024   2033* 3929 
_STW_CODE                        P        EXPT 00000440   1890  3922*
_STW_CODE_END                    P        EXPT 0000044E   1891  3932*
_STW_SUB                         P        EXPT 00000450   1823  3939*
_STW_SUB_END                     P             0000045E   3946  3951*
_ST_CHG                                   IMPT 00000000   1929 
_ST_CODE                         P        EXPT 00000084   1854  3012*
_ST_CODE_END                     P        EXPT 0000009E   1855  3030*
_SUB_CHG                                  IMPT 00000000   1952 
_SUB_CMD                                  EQU  00000048   2042* 4434 
_SUB_CODE                        P        EXPT 0000059C   1908  4428*
_SUB_CODE_END                    P        EXPT 000005A8   1909  4437*
_SUB_SUB                         P        EXPT 000005A8   1832  4445*
_SUB_SUB_END                     P             000005BA   4452  4459*
_TCNT0                                    IMPT 00000000    359 
_TCNT1                                    IMPT 00000000    362 
_TCNT2                                    IMPT 00000000    365 
_TCOR0                                    IMPT 00000000    358 
_TCOR1                                    IMPT 00000000    361 
_TCOR2                                    IMPT 00000000    364 
_TCPR2                                    IMPT 00000000    367 
_TCR0                                     IMPT 00000000    360 
_TCR1                                     IMPT 00000000    363 
_TCR2                                     IMPT 00000000    366 
_TEA                                      IMPT 00000000    281 
_TMR_CMD                                  EQU  00000010   2028* 3446 
_TOCR                                     IMPT 00000000    356 
_TRA                                      IMPT 00000000    286 
_TSTR                                     IMPT 00000000    357 
_TTB                                      IMPT 00000000    280 
_VUPCHECK_EQU                             EQU  11AB3739     98*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    53

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_WCR1                                     IMPT 00000000    307 
_WCR2                                     IMPT 00000000    308 
_WCR3                                     IMPT 00000000    309 
_WCTR_CHG                                 IMPT 00000000   1934 
_WCTR_CODE                       P        EXPT 000002E4   1878  3611*
_WCTR_CODE_END                   P        EXPT 000002EE   1879  3619*
_WCTR_S05                        P             00000300   3644  3654*
_WCTR_S05_10                     P             00000314   3662  3670*
_WCTR_S10                        P             00000330   3680  3690*
_WCTR_S15                        P             00000368   3713  3725*
_WCTR_S20                        P             000003A0   3739  3764*
_WCTR_S50                        P             000003BC   3647  3664  3777*
_WCTR_SUB                        P        EXPT 000002F0   1819  3636*
_WCTR_SUB_END                    P             000003F4   3683  3716  3766  3815*
_WNNRG_CHG                                IMPT 00000000   1941 
_WNNRG_CODE                      P        EXPT 00000150   1870  3235*
_WNNRG_CODE_END                  P        EXPT 00000154   1871  3238*
_WNRG_CHG                                 IMPT 00000000   1940 
_WNRG_CODE                       P        EXPT 0000014C   1868  3225*
_WNRG_CODE_END                   P        EXPT 00000150   1869  3228*
_WSC_CHG                                  IMPT 00000000   1930 
_WSC_CMD                                  EQU  00000018   2030* 3251 
_WSC_CODE                        P        EXPT 00000154   1880  3246*
_WSC_CODE_END                    P        EXPT 00000166   1881  3260*
_WSC_S10                         P             00000178   3275  3281*
_WSC_SUB                         P        EXPT 00000168   1820  3268*
_WSR_CHG                                  IMPT 00000000   1935 
_WSR_CMD                                  EQU  0000001C   2031* 3303 
_WSR_CODE                        P        EXPT 00000180   1882  3293*
_WSR_CODE_END                    P        EXPT 00000194   1883  3306*
_WSR_S10                         P             000001B8   3331  3341*
_WSR_SUB                         P        EXPT 00000194   1821  3314*
_WTCNT                                    IMPT 00000000    344 
_WTCSR                                    IMPT 00000000    345 
_WTMR_CHG                                 IMPT 00000000   1933 
_WTMR_CODE                       P        EXPT 00000200   1876  3442*
_WTMR_CODE_END                   P        EXPT 0000020A   1877  3450*
_WTMR_S10                        P             00000258   3510  3517*
_WTMR_S10_000                    P             0000022A   3474  3485*
_WTMR_S10_020                    P             0000024C   3492  3506*
_WTMR_S50                        P             00000290   3466  3554*
_WTMR_SUB                        P        EXPT 0000020C   1818  3458*
_WTMR_SUB_END                    P             000002C4   3498  3513  3542  3589*
_XORW_CHG                                 IMPT 00000000   1955 
_XORW_CMD                                 EQU  00000040   2040* 4327 
_XORW_CODE                       P        EXPT 00000554   1904  4321*
_XORW_CODE_END                   P        EXPT 00000560   1905  4330*
_XORW_SUB                        P        EXPT 00000560   1830  4338*
_XORW_SUB_END                    P             00000572   4345  4352*
_data_init2_timer                         IMPT 00000000   1765 
_mem_chk_flg                              IMPT 00000000   1767 
_sram_top                                 IMPT 00000000   1763 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/14/21 17:25:07                                                  PAGE    54

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000005DE        
