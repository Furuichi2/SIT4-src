*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;       ***************************************************
    2                               2     ;       ***                                             ***
    3                               3     ;       ***                                             ***
    4                               4     ;       ***     ÉVÅ[ÉPÉìÉXÉRÅ[Éhïœä∑É\ÉtÉg              ***
    5                               5     ;       ***                                             ***
    6                               6     ;       ***                                             ***
    7                               7     ;       ***************************************************
 2835                              20     
 2836                              21     
 2837 00000000                     22             .SECTION        P,CODE                  ;
 2838                              23     
 2839                              24     
 2840                              25     
 2841                              26     
 2842                              27     
 2843                              28     ;       //      ***********************************
 2844                              29     ;       //      ***     EXTERN êÈåæ PROGRAM     ***
 2845                              30     ;       //      ***********************************
 2846                              31     
 2847                              32     ;       //      ***********************************
 2848                              33     ;       //      ***     EXTERN êÈåæ MEMORY,HARD ***
 2849                              34     ;       //      ***********************************
 2850                              35     
 2851                              36     ;       //      ***********************************
 2852                              37     ;       //      ***     PUBLIC êÈåæ PROGRAM     ***
 2853                              38     ;       //      ***********************************
 2854                              39     
 2855                              40     
 2856                              41     
 2857                              42     ;       *****************************************************
 2858                              43     ;       *****           ÉVÅ[ÉPÉìÉXèàóù                  *****
 2859                              44     ;       *****************************************************
 2860                              45     ;
 2861                              46     ;       /********************************************************************
 2862                              47     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2863                              48     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2864                              49     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2865                              50     ;       /********************************************************************
 2866                              51     
 2867                              52     ;       *********************************************************************
 2868                              53     ;       *****   Read command                            22+2byte        *****
 2869                              54     ;       *********************************************************************
 2870                              55     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2871                              56     ;
 2872 00000000                     57             .ALIGN  4
 2873 00000000                     58     _LD_CODE:
 2874 00000000 2569                59             AND     R6,R5                           ; ARG and NRG
 2875 00000002 4700                60             SHLL    R7                              ; ARG save to MRG
 2876 00000004 275B                61             OR      R5,R7                           ;
 2877                              62     
 2878 00000006 E300                63             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2879 00000008 633C                64             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2880 0000000A E000                65             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2881 0000000C 600C                66             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2882 0000000E 00ED                67             MOV.W   @(R0,R14),R0                    ; read to ARG
 2883                              68                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2884 00000010 6008                69             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     2
PROGRAM NAME =

 2885 00000012 2038                70             TST     R3,R0                           ;
 2886 00000014 0029                71             MOVT    R0                              ; T->R0
 2887 00000016 CA01                72             XOR     #BIT0,R0                        ;
 2888 00000018 6503                73             MOV     R0,R5                           ; T->ARG
 2889                              74     
 2890 0000001A                     75     _LD_CODE_END:
 2891                              76     
 2892                              77     ;       *********************************************************************
 2893                              78     ;       *****   Read Not command                        26+2byte        *****
 2894                              79     ;       *********************************************************************
 2895                              80     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2896                              81     ;
 2897 0000001C                     82             .ALIGN  4
 2898 0000001C                     83     _LDN_CODE:
 2899 0000001C 2569                84             AND     R6,R5                           ; ARG and NRG
 2900 0000001E 4700                85             SHLL    R7                              ; ARG save to MRG
 2901 00000020 275B                86             OR      R5,R7                           ;
 2902                              87     
 2903 00000022 E300                88             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2904 00000024 633C                89             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2905 00000026 E000                90             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2906 00000028 600C                91             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2907 0000002A 00ED                92             MOV.W   @(R0,R14),R0                    ; read to ARG
 2908                              93                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2909 0000002C 6008                94             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2910 0000002E 2038                95             TST     R3,R0                           ;
 2911 00000030 0529                96             MOVT    R5                              ; TÇÃîΩì] -> ARG
 2912                              97     
 2913 00000032                     98     _LDN_CODE_END:
 2914                              99     
 2915                             100     ;       /********************************************************************
 2916                             101     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2917                             102     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2918                             103     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2919                             104     ;       /********************************************************************
 2920                             105     
 2921                             106     ;       *********************************************************************
 2922                             107     ;       *****   And command                             18+2byte        *****
 2923                             108     ;       *********************************************************************
 2924                             109     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2925                             110     ;
 2926 00000034                    111             .ALIGN  4
 2927 00000034                    112     _AND_CODE:
 2928                             113     
 2929 00000034 E300               114             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2930 00000036 633C               115             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2931 00000038 E000               116             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2932 0000003A 600C               117             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2933 0000003C 00ED               118             MOV.W   @(R0,R14),R0                    ; read to ARG
 2934                             119                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2935 0000003E 6008               120             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2936 00000040 2038               121             TST     R3,R0                           ;
 2937 00000042 0029               122             MOVT    R0                              ; T->R0
 2938 00000044 CA01               123             XOR     #BIT0,R0                        ; T îΩì]
 2939 00000046 2509               124             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2940 00000048                    125     _AND_CODE_END:
 2941                             126     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     3
PROGRAM NAME =

 2942                             127     ;       *********************************************************************
 2943                             128     ;       *****   And Not command                         20byte          *****
 2944                             129     ;       *********************************************************************
 2945                             130     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2946                             131     ;
 2947 00000048                    132             .ALIGN  4
 2948 00000048                    133     _ANDN_CODE:
 2949                             134     
 2950 00000048 E300               135             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2951 0000004A 633C               136             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2952 0000004C E000               137             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2953 0000004E 600C               138             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2954 00000050 00ED               139             MOV.W   @(R0,R14),R0                    ; read to ARG
 2955                             140                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2956 00000052 6008               141             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2957 00000054 2038               142             TST     R3,R0                           ;
 2958 00000056 0029               143             MOVT    R0                              ; T->R0
 2959 00000058 2509               144             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2960                             145     
 2961 0000005A                    146     _ANDN_CODE_END:
 2962                             147     
 2963                             148     
 2964                             149     
 2965                             150     ;       *********************************************************************
 2966                             151     ;       *****   Or command                               18+2byte       *****
 2967                             152     ;       *********************************************************************
 2968 0000005C                    153             .ALIGN  4
 2969 0000005C                    154     _OR_CODE:
 2970                             155     
 2971 0000005C E300               156             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2972 0000005E 633C               157             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2973 00000060 E000               158             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2974 00000062 600C               159             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2975 00000064 00ED               160             MOV.W   @(R0,R14),R0                    ; read to ARG
 2976                             161                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2977 00000066 6008               162             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2978 00000068 2038               163             TST     R3,R0                           ;
 2979 0000006A 0029               164             MOVT    R0                              ; T->R0
 2980 0000006C CA01               165             XOR     #BIT0,R0                        ;
 2981 0000006E 250B               166             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 2982                             167     
 2983 00000070                    168     _OR_CODE_END:
 2984                             169     
 2985                             170     
 2986                             171     ;       *********************************************************************
 2987                             172     ;       *****   Or command                               18+2byte       *****
 2988                             173     ;       *********************************************************************
 2989 00000070                    174             .ALIGN  4
 2990 00000070                    175     _ORN_CODE:
 2991                             176     
 2992 00000070 E300               177             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2993 00000072 633C               178             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2994 00000074 E000               179             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2995 00000076 600C               180             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2996 00000078 00ED               181             MOV.W   @(R0,R14),R0                    ; read to ARG
 2997                             182                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2998 0000007A 6008               183             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     4
PROGRAM NAME =

 2999 0000007C 2038               184             TST     R3,R0                           ;
 3000 0000007E 0029               185             MOVT    R0                              ; T->R0
 3001 00000080 250B               186             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 3002                             187     
 3003 00000082                    188     _ORN_CODE_END:
 3004                             189     
 3005                             190     
 3006                             191     ;       *********************************************************************
 3007                             192     ;       *****   Write command                           26+2byte        *****
 3008                             193     ;       *********************************************************************
 3009 00000084                    194             .ALIGN  4
 3010 00000084                    195     _ST_CODE:
 3011                             196     
 3012 00000084 2569               197             AND     R6,R5                           ; ARG and NRG
 3013                             198     
 3014 00000086 E300               199             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3015 00000088 633C               200             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3016 0000008A 4318               201             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3017 0000008C 6237               202             NOT     R3,R2                           ;                               0111111111
                                          111111B
 3018 0000008E E000               203             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3019 00000090 600C               204             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3020 00000092 01ED               205             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3021                             206                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3022 00000094 2129               207             AND     R2,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3023 00000096 625B               208             NEG     R5,R2                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3024 00000098 2239               209             AND     R3,R2                           ; ARG and BIT                   1000000000
                                          000000B
 3025 0000009A 212B               210             OR      R2,R1                           ; ARG SET                       1101010101
                                          010101B
 3026 0000009C 0E15               211             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3027                             212                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3028 0000009E                    213     _ST_CODE_END:                                                           ;
 3029                             214     ;
 3030                             215     
 3031                             216     
 3032                             217     ;       ***********************************************************
 3033                             218     ;       ***     SET BIT CODE CHANGE ROUTINE             20byte  ***
 3034                             219     ;       ***********************************************************
 3035 000000A0                    220             .ALIGN  4
 3036 000000A0                    221     _SET_CODE:                                      ; 00001110B     E
 3037 000000A0 2569               222             AND     R6,R5                           ; ARG and NRG
 3038                             223     
 3039 000000A2 E300               224             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3040 000000A4 633C               225             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3041 000000A6 4318               226             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3042 000000A8 E000               227             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3043 000000AA 600C               228             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3044 000000AC 01ED               229             MOV.W   @(R0,R14),R1                    ; read to ARG                   0101010101
                                          010101B
 3045                             230                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3046 000000AE 625B               231             NEG     R5,R2                           ;
 3047 000000B0 2239               232             AND     R3,R2                           ;
 3048                             233     ;;;;;;  OR      R3,R2                           ;
 3049 000000B2 212B               234             OR      R2,R1                           ; æØƒ                           1101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     5
PROGRAM NAME =

                                          010101B
 3050 000000B4 0E15               235             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3051                             236                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3052 000000B6                    237     _SET_CODE_END:
 3053                             238     
 3054                             239     
 3055                             240     ;       ***********************************************************
 3056                             241     ;       ***     RESET BIT CODE CHANGE ROUTINE           20byte  ***
 3057                             242     ;       ***********************************************************
 3058 000000B8                    243             .ALIGN  4
 3059 000000B8                    244     _RST_CODE:                                      ; 00001110B     E
 3060 000000B8 2569               245             AND     R6,R5                           ; ARG and NRG
 3061                             246     
 3062 000000BA E300               247             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3063 000000BC 633C               248             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3064 000000BE 4318               249             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3065 000000C0 625B               250             NEG     R5,R2                           ;
 3066 000000C2 2329               251             AND     R2,R3                           ;
 3067 000000C4 6337               252             NOT     R3,R3                           ;                               0111111111
                                          111111B
 3068 000000C6 E000               253             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3069 000000C8 600C               254             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3070 000000CA 01ED               255             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3071                             256                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3072 000000CC 2139               257             AND     R3,R1                           ; æØƒ                           0101010101
                                          010101B
 3073 000000CE 0E15               258             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3074                             259                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3075 000000D0                    260     _RST_CODE_END:
 3076                             261     
 3077                             262     ;       ***********************************************************
 3078                             263     ;       ***     ON EDGE 1PULSE ON CODE CHANGE ROUTINE   16byte  ***
 3079                             264     ;       ***********************************************************
 3080 000000D0                    265             .ALIGN  4
 3081 000000D0                    266     _PLS_CODE:                                      ; 00011000B     18
 3082 000000D0 E200               267             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3083 000000D2 622C               268             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3084 000000D4 4218               269             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3085 000000D6 E300               270             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3086 000000D8 633C               271             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3087 000000DA C601               272             MOV.L   @(_PLS_CMD,GBR),R0              ;
 3088 000000DC 400B               273             JSR     @R0                             ; INPUT R2,R3
 3089 000000DE 0009               274             NOP                                     ;
 3090 000000E0                    275     _PLS_CODE_END:
 3091                             276     
 3092                             277     ;       ***************************************************
 3093                             278     ;       ***     ON EDGE 1PULSE ON CODE CHANGE SUB       ***
 3094                             279     ;       ***************************************************
 3095                             280     ;       INPUT R2:BIT,R3,ADR
 3096 000000E0                    281             .ALIGN  4       ;2010-12-27
 3097 000000E0                    282     _PLS_SUB:
 3098                             283             SUB_START
 3099 000000E0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3100                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3101                             284     
 3102                             285     ;;;;2009-11-04  TST     R6,R6                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     6
PROGRAM NAME =

 3103                             286     ;;;;2009-11-04  BT      _PLS_SUB_END                    ; NRG = 0 THEN EXIT
 3104                             287     
 3105 000000E2 6427               288             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3106 000000E4 6033               289             MOV     R3,R0                           ; ADR
 3107 000000E6 01ED               290             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    0101010101
                                          010101B
 3108                             291                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3109 000000E8 6313               292             MOV     R1,R3                           ; ëOâÒíl -> R3
 3110 000000EA 2149               293             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3111 000000EC 645B               294             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3112 000000EE 2429               295             AND     R2,R4                           ; ARG and BIT                   1000000000
                                          000000B
 3113 000000F0 214B               296             OR      R4,R1                           ; ARG SET                       1101010101
                                          010101B
 3114 000000F2 0E15               297             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3115                             298     
 3116 000000F4 231A               299             XOR     R1,R3                           ; EDGE CHECK                 R1 1101010101
                                          010101B
 3117                             300                                                     ;                            R3 0101010101
                                          010101B
 3118 000000F6 2139               301             AND     R3,R1                           ;                        XOR R1 1000000000
                                          000000B
 3119                             302                                                     ;                        AND R1 1000000000
                                          000000B
 3120 000000F8 2128               303             TST     R2,R1                           ;
 3121 000000FA 0129               304             MOVT    R1                              ;
 3122 000000FC 2118               305             TST     R1,R1                           ;
 3123 000000FE 0529               306             MOVT    R5                              ; TÇÃîΩì] -> ARG
 3124                             307     
 3125 00000100                    308     _PLS_SUB_END:
 3126                             309             SUB_END
 3127                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3128 00000100 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3129                             310             M_RTS
 3130 00000102 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3131 00000104 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3132                             311     
 3133                             312     
 3134                             313     ;       ***********************************************************
 3135                             314     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE ROUTINE  16byte  ***
 3136                             315     ;       ***********************************************************
 3137 00000108                    316             .ALIGN  4
 3138 00000108                    317     _PLF_CODE:                                      ; 00011000B     18
 3139 00000108 E200               318             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3140 0000010A 622C               319             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3141 0000010C 4218               320             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3142 0000010E E300               321             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3143 00000110 633C               322             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3144 00000112 C602               323             MOV.L   @(_PLF_CMD,GBR),R0              ;
 3145 00000114 400B               324             JSR     @R0                             ; INPUT R2,R3
 3146 00000116 0009               325             NOP                                     ;
 3147 00000118                    326     _PLF_CODE_END:
 3148                             327     
 3149                             328     ;       ***************************************************
 3150                             329     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE SUB      ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     7
PROGRAM NAME =

 3151                             330     ;       ***************************************************
 3152                             331     ;       INPUT R2:BIT,R3,ADR
 3153 00000118                    332             .ALIGN  4       ;2010-12-27
 3154 00000118                    333     _PLF_SUB:
 3155                             334             SUB_START
 3156 00000118 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3157                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3158                             335     
 3159 0000011A 2668               336             TST     R6,R6                           ;
 3160 0000011C 890F               337             BT      _PLF_SUB_END                    ; NRG = 0 THEN EXIT
 3161                             338     
 3162 0000011E 6427               339             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3163 00000120 6033               340             MOV     R3,R0                           ; ADR
 3164 00000122 01ED               341             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    1101010101
                                          010101B
 3165                             342                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3166 00000124 6313               343             MOV     R1,R3                           ; ëOâÒíl -> R3
 3167 00000126 2149               344             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3168 00000128 645B               345             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  0000
 3169 0000012A 2429               346             AND     R2,R4                           ; ARG and BIT                   0000000000
                                          000000B
 3170 0000012C 214B               347             OR      R4,R1                           ; ARG SET                       0101010101
                                          010101B
 3171 0000012E 0E15               348             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3172                             349     
 3173 00000130 231A               350             XOR     R1,R3                           ; EDGE CHECK                 R1 0101010101
                                          010101B
 3174                             351                                                     ;                            R3 1101010101
                                          010101B
 3175 00000132 6117               352             NOT     R1,R1                           ;
 3176 00000134 2319               353             AND     R1,R3                           ;                        XOR R3 1000000000
                                          000000B
 3177                             354                                                     ;                        AND R1 0000000000
                                          000000B
 3178 00000136 2328               355             TST     R2,R3                           ; óßâ∫ÇË¥ØºÇÕT=1
 3179 00000138 0329               356             MOVT    R3                              ;
 3180 0000013A 2338               357             TST     R3,R3                           ;
 3181 0000013C 0529               358             MOVT    R5                              ; T -> ARG
 3182                             359     
 3183 0000013E                    360     _PLF_SUB_END:
 3184                             361             SUB_END
 3185                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3186 0000013E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3187                             362             M_RTS
 3188 00000140 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3189 00000142 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3190                             363     
 3191                             364     
 3192                             365     ;       /********************************************************************
 3193                             366     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 3194                             367     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 3195                             368     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 3196                             369     ;       /********************************************************************
 3197                             370     
 3198                             371     ;       *********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     8
PROGRAM NAME =

 3199                             372     ;       *****   And MRG command                 4step   10clocks        *****
 3200                             373     ;       *********************************************************************
 3201 00000144                    374             .ALIGN  4
 3202 00000144                    375     _AMRG_CODE:
 3203 00000144 2579               376             AND     R7,R5                           ; ARG and MRG           ;
 3204 00000146 4701               377             SHLR    R7                              ; shift old MRG         ;
 3205 00000148                    378     _AMRG_CODE_END:
 3206                             379     
 3207                             380     
 3208                             381     ;       *********************************************************************
 3209                             382     ;       *****   Or MRG command                  4step   10clocks        *****
 3210                             383     ;       *********************************************************************
 3211 00000148                    384             .ALIGN  4
 3212 00000148                    385     _OMRG_CODE:
 3213 00000148 257B               386             OR      R7,R5                           ; ARG or MRG
 3214 0000014A 4701               387             SHLR    R7                              ; shift old MRG         ;
 3215 0000014C                    388     _OMRG_CODE_END:
 3216                             389     ;
 3217                             390     
 3218                             391     
 3219                             392     ;       *********************************************************************
 3220                             393     ;       *****   Write NRG command               4step    4clocks        *****
 3221                             394     ;       *********************************************************************
 3222 0000014C                    395             .ALIGN  4
 3223 0000014C                    396     _WNRG_CODE:
 3224 0000014C 2569               397             AND     R6,R5                           ; ARG and NRG           ; 2
 3225 0000014E 6653               398             MOV     R5,R6                           ; ARG store to NRG      ; 2
 3226 00000150                    399     _WNRG_CODE_END:
 3227                             400     
 3228                             401     
 3229                             402     ;       *********************************************************************
 3230                             403     ;       *****   Write Not NRG command           2step    5clocks        *****
 3231                             404     ;       *********************************************************************
 3232 00000150                    405             .ALIGN  4
 3233 00000150                    406     _WNNRG_CODE:
 3234 00000150 0018               407             SETT                                    ;
 3235 00000152 0629               408             MOVT    R6                              ; clear NRG             ; 5
 3236 00000154                    409     _WNNRG_CODE_END:
 3237                             410     
 3238                             411     
 3239                             412     ;       *************************************************************
 3240                             413     ;       *****   Write Skip Controlor command                    *****
 3241                             414     ;       *************************************************************
 3242                             415     
 3243 00000154                    416             .ALIGN  4       ;2010-12-27
 3244 00000154                    417     _WSC_CODE:                                      ; 00001110B     E
 3245 00000154 E300               418             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3246 00000156 633C               419             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3247 00000158 4318               420             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3248                             421     
 3249 0000015A C606               422             MOV.L   @(_WSC_CMD,GBR),R0              ;
 3250 0000015C 400B               423             JSR     @R0                             ; INPUT R2,R3
 3251 0000015E 0009               424             NOP                                     ;
 3252                             425     
 3253 00000160 E000               426             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3254 00000162 600C               427             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3255 00000164 0E15               428             MOV.W   R1,@(R0,R14)                    ; read to ARG                   0101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE     9
PROGRAM NAME =

                                          010101B
 3256                             429                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3257                             430     
 3258 00000166                    431     _WSC_CODE_END:
 3259                             432     
 3260                             433     ;       *************************************************************
 3261                             434     ;       *****   Write Skip Controlor command subroutine         *****
 3262                             435     ;       *************************************************************
 3263                             436     ;       INPUT R1 WRITE ADR,R3 BIT
 3264                             437     ;       OUTPUT R1
 3265 00000168                    438             .ALIGN  4       ;2010-12-27
 3266 00000168                    439     _WSC_SUB:
 3267                             440             SUB_START
 3268 00000168 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3269                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3270                             441     
 3271 0000016A 2569               442             AND     R6,R5                   ; ARG and NRG
 3272 0000016C 2558               443             TST     R5,R5                   ;
 3273 0000016E 8903               444             BT      _WSC_S10                ; if ARG = 0  then jump
 3274                             445     ;
 3275 00000170 6053               446             MOV     R5,R0                   ;
 3276 00000172 600B               447             NEG     R0,R0                   ;
 3277 00000174 2039               448             AND     R3,R0                   ; ÇªÇÃBITÇÃÇ›ON
 3278 00000176 6103               449             MOV     R0,R1                   ; store ARG
 3279 00000178                    450     _WSC_S10:
 3280                             451             SUB_END
 3281                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3282 00000178 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3283                             452             M_RTS
 3284 0000017A 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3285 0000017C 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3286                             453     
 3287                             454     ;       ***********************************************************
 3288                             455     ;       ***     Shift Register commnd                   20byte  ***
 3289                             456     ;       ***********************************************************
 3290 00000180                    457             .ALIGN  4
 3291 00000180                    458     _WSR_CODE:                                      ; 00011000B     18
 3292 00000180 E100               459             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3293 00000182 611C               460             EXTU.B  R1,R1                           ;
 3294 00000184 E000               461             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3295 00000186 600C               462             EXTU.B  R0,R0                           ;
 3296 00000188 4018               463             SHLL8   R0                              ;
 3297 0000018A 310C               464             ADD     R0,R1                           ;
 3298 0000018C 4100               465             SHLL    R1                              ; CARD*2
 3299                             466     ;;;;;   ADD     R1,R3                           ; SHIFT CARD ADDRESS MAKE
 3300                             467     
 3301 0000018E C607               468             MOV.L   @(_WSR_CMD,GBR),R0              ;
 3302 00000190 400B               469             JSR     @R0                             ; INPUT R3
 3303 00000192 0009               470             NOP                                     ;
 3304 00000194                    471     _WSR_CODE_END:
 3305                             472     
 3306                             473     
 3307                             474     ;       ***********************************************************
 3308                             475     ;       ***     Shift Register CODE CHANGE ROUTINE              ***
 3309                             476     ;       ***********************************************************
 3310                             477     ;       INPUT   R1 SHIFT CARD ADDRESS
 3311 00000194                    478             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    10
PROGRAM NAME =

 3312 00000194                    479     _WSR_SUB:
 3313                             480             SUB_START
 3314 00000194 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3315                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3316                             481     
 3317 00000196 2569               482             AND     R6,R5                   ; ARG and NRG
 3318                             483     
 3319 00000198 D309               484             MOV.L   #_SEQ_CARD_RAM,R3       ; SEQUENCE BIT AREA TOP
 3320 0000019A D20A               485             MOV.L   #_SEQ_SR_FLG,R2         ; SHIFT (OLD ARG) CARD ADDRESS TOP
 3321 0000019C 331C               486             ADD     R1,R3                   ; CARD TOP + CARD ADDRESS
 3322 0000019E 321C               487             ADD     R1,R2                   ; SHIFT TOP + CARD ADDRESS
 3323                             488     
 3324 000001A0 6021               489             MOV.W   @R2,R0                  ; load old ARG
 3325 000001A2 2251               490             MOV.W   R5,@R2                  ; store new ARG
 3326 000001A4 205A               491             XOR     R5,R0                   ; (old ARG) xor (new ARG)
 3327 000001A6 2059               492             AND     R5,R0                   ; and (new ARG)
 3328 000001A8 2008               493             TST     R0,R0                   ; ON EGDE CHECK
 3329 000001AA 8905               494             BT      _WSR_S10                ; if ARG not 0-->1 then jump
 3330                             495     
 3331 000001AC 6031               496             MOV.W   @R3,R0                  ;
 3332 000001AE 4000               497             SHLL    R0                      ;
 3333                             498     ;;;;2009-11-04  AND     #NBIT0,R0       ; MRG ÇSTOREÇ∑ÇÈBIT CLEAR
 3334 000001B0 9205               499             MOV.W   #BIT0,R2                ;
 3335 000001B2 2279               500             AND     R7,R2                   ;
 3336 000001B4 202B               501             OR      R2,R0                   ;
 3337 000001B6 2301               502             MOV.W   R0,@R3                  ; ºÃƒÇµÇƒBIT0Ç…MRGÇΩƒ±
 3338                             503     
 3339 000001B8                    504     _WSR_S10:
 3340                             505             SUB_END
 3341                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3342 000001B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3343                             506             M_RTS
 3344 000001BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3345 000001BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3346                             507     
 3347                             508     
 3348                             509     
 3349                             510     ;       *********************************************************************
 3350                             511     ;       *****   Data Set command                        14byte          *****
 3351                             512     ;       *********************************************************************
 3352                             513     ;         ------------------------------
 3353                             514     ;       +0|       ñΩóﬂCODE      (  )   |
 3354                             515     ;         ------------------------------
 3355                             516     ;       +1|         ãÛÇ´        (  )   |
 3356                             517     ;         ------------------------------
 3357                             518     ;       +2|       √ﬁ∞¿è„à       (  )   |
 3358                             519     ;         ------------------------------
 3359                             520     ;       +3|       √ﬁ∞¿â∫à       (  )   |
 3360                             521     ;         ------------------------------
 3361                             522     ;
 3362                                     ***** BEGIN-POOL *****
 3363 000001BE 0001                       DATA FOR SOURCE-LINE 499
 3364 000001C0 00000000                   DATA FOR SOURCE-LINE 484
 3365 000001C4 00000000                   DATA FOR SOURCE-LINE 485
 3366                                     ***** END-POOL *****
 3367 000001C8                    523             .ALIGN  4
 3368 000001C8                    524     _DS_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    11
PROGRAM NAME =

 3369 000001C8 E100               525             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3370 000001CA 611C               526             EXTU.B  R1,R1                           ;
 3371 000001CC E000               527             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3372 000001CE 600C               528             EXTU.B  R0,R0                           ;
 3373 000001D0 4018               529             SHLL8   R0                              ;
 3374 000001D2 301C               530             ADD     R1,R0                           ; SET DATA MAKE
 3375 000001D4 0112               531             STC     GBR,R1                          ;
 3376 000001D6 6112               532             MOV.L   @R1,R1                          ;
 3377 000001D8 2101               533             MOV.W   R0,@R1                          ;
 3378                             534     ;;;;;   MOV.W   R0,@(DREG,GBR)                  ; DATA REG SET
 3379 000001DA                    535     _DS_CODE_END:
 3380                             536     
 3381                             537     
 3382                             538     ;       *********************************************************************
 3383                             539     ;       *****   Clear Card command                      16byte          *****
 3384                             540     ;       *********************************************************************
 3385                             541     ;         ------------------------------
 3386                             542     ;       +0|       ñΩóﬂCODE      (  )   |
 3387                             543     ;         ------------------------------
 3388                             544     ;       +1|         ãÛÇ´        (  )   |
 3389                             545     ;         ------------------------------
 3390                             546     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3391                             547     ;         ------------------------------
 3392                             548     ;       +3|         ADR         (  )   |        R4
 3393                             549     ;         ------------------------------
 3394                             550     
 3395 000001DC                    551             .ALIGN  4
 3396 000001DC                    552     _CLR_CODE:
 3397 000001DC E300               553             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3398 000001DE 603C               554             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3399                             555     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3400 000001E0 30EC               556             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3401 000001E2 6303               557             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3402                             558     
 3403 000001E4 C603               559             MOV.L   @(_CLR_CMD,GBR),R0              ;
 3404 000001E6 400B               560             JSR     @R0                             ; INPUT R3
 3405 000001E8 0009               561             NOP                                     ;
 3406 000001EA                    562     _CLR_CODE_END:
 3407                             563     
 3408                             564     ;       ***********************************
 3409                             565     ;       ***     CLRñΩóﬂªÃﬁŸ∞¡›          ***
 3410                             566     ;       ***********************************
 3411                             567     ;       INPUT R3
 3412 000001EC                    568             .ALIGN  4       ;2010-12-27
 3413 000001EC                    569     _CLR_SUB:
 3414                             570             SUB_START
 3415 000001EC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3416                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3417                             571     
 3418 000001EE 2569               572             AND     R6,R5                           ; ARG and NRG
 3419 000001F0 2558               573             TST     R5,R5                           ;
 3420 000001F2 8901               574             BT      _CLR_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3421                             575     
 3422 000001F4 9003               576             MOV.W   #0,R0                           ; CLEAR DATA
 3423 000001F6 2301               577             MOV.W   R0,@R3                          ; DATA STORE
 3424 000001F8                    578     _CLR_SUB_END:
 3425                             579             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    12
PROGRAM NAME =

 3426                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3427 000001F8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3428                             580             M_RTS
 3429 000001FA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3430 000001FC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3431                             581     
 3432                             582     
 3433                             583     ;       *********************************************************************
 3434                             584     ;       *****   Write Timmer command                    10+2byte        *****
 3435                             585     ;       *********************************************************************
 3436                                     ***** BEGIN-POOL *****
 3437 000001FE 0000                       DATA FOR SOURCE-LINE 576
 3438                                     ***** END-POOL *****
 3439 00000200                    586             .ALIGN  4
 3440 00000200                    587     _WTMR_CODE:
 3441 00000200 E200               588             MOV.B   #_SEQ_TMR_DT,R2                 ; TMR data buffer pointer
 3442 00000202 4208               589             SHLL2   R2                              ; TMR No. * 4
 3443                             590     ;;;;;   MOV.W   @R2,R2                          ;
 3444 00000204 C604               591             MOV.L   @(_TMR_CMD,GBR),R0              ;
 3445 00000206 400B               592             JSR     @R0                             ;
 3446 00000208 0009               593             NOP                                     ;
 3447                             594     ;
 3448 0000020A                    595     _WTMR_CODE_END:
 3449                             596     
 3450                             597     
 3451                             598     ;;;;;;;2010-12-27??     SUB_START
 3452                             599     ;       *************************************************************
 3453                             600     ;       *****   Write Timmer command subroutine                 *****
 3454                             601     ;       *************************************************************
 3455 0000020C                    602             .ALIGN  4       ;2010-12-27
 3456 0000020C                    603     _WTMR_SUB:
 3457                             604             SUB_START
 3458 0000020C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3459                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3460                             605     ;
 3461 0000020E 2569               606             AND     R6,R5                           ; ARG and NRG
 3462 00000210 9017               607             MOV.W   #BIT0,R0                        ;
 3463 00000212 2708               608             TST     R0,R7                           ; check MRG
 3464 00000214 893C               609             BT      _WTMR_S50                       ; if MRG = 0  then jump ¿≤œñ≥å¯ THEN Ω¿∞ƒB
                                          IT OFF,¿≤œílÃﬂÿæØƒ
 3465                             610     ;
 3466                             611     ;       *** START BIT CHECK ***
 3467 00000216 D40B               612             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3468 00000218 6023               613             MOV     R2,R0                           ;
 3469 0000021A 7002               614             ADD     #2,R0                           ; TIMER START FLG AREA
 3470 0000021C 014C               615             MOV.B   @(R0,R4),R1                     ; store timmer count start bit
 3471 0000021E 2118               616             TST     R1,R1                           ;
 3472 00000220 8B03               617             BF      _WTMR_S10_000                   ; START BIT ON THEN JUMP
 3473                             618     
 3474                             619     ;       *** TIMER INITIAL SET ***
 3475                             620     ;;;;;   MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3476                             621     
 3477 00000222 D109               622             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3478 00000224 6111               623             MOV.W   @R1,R1                          ;
 3479 00000226 6023               624             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3480 00000228 0415               625             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3481                             626     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    13
PROGRAM NAME =

 3482                             627     ;       *** TIM UP CHECK ***
 3483 0000022A                    628     _WTMR_S10_000:
 3484 0000022A D406               629             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3485 0000022C 6023               630             MOV     R2,R0                           ;
 3486 0000022E 7002               631             ADD     #2,R0                           ; TIMER START FLG AREA
 3487 00000230 0454               632             MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3488                             633     
 3489 00000232 2558               634             TST     R5,R5                           ;
 3490 00000234 8B0A               635             BF      _WTMR_S10_020                   ;
 3491 00000236 E110               636             MOV.B   #BIT4,R1                        ;
 3492 00000238 034C               637             MOV.B   @(R0,R4),R3                     ; store timmer count start bit  í«â¡DEBUG
 3493 0000023A 231B               638             OR      R1,R3                           ;
 3494 0000023C 0434               639             MOV.B   R3,@(R0,R4)                     ; store timmer count start bit  í«â¡DEBUG
 3495                             640             M_BRA   _WTMR_SUB_END                   ;
 3496 0000023E A041                   M           BRA     _WTMR_SUB_END
 3497 00000240 0009                   M           NOP
 3498                             641     
 3499                                     ***** BEGIN-POOL *****
 3500 00000242 0001                       DATA FOR SOURCE-LINE 607
 3501 00000244 00000000                   DATA FOR SOURCE-LINE 612,629
 3502 00000248 00000000                   DATA FOR SOURCE-LINE 622
 3503                                     ***** END-POOL *****
 3504 0000024C                    642     _WTMR_S10_020:
 3505 0000024C 6023               643             MOV     R2,R0                           ;
 3506 0000024E 014D               644             MOV.W   @(R0,R4),R1                     ;
 3507 00000250 2118               645             TST     R1,R1                           ; time up check
 3508 00000252 8901               646             BT      _WTMR_S10                       ; if time is up then jump
 3509                             647     
 3510                             648             M_BRA   _WTMR_SUB_END                   ;
 3511 00000254 A036                   M           BRA     _WTMR_SUB_END
 3512 00000256 0009                   M           NOP
 3513                             649     ;
 3514                             650     ;       *** ¿≤—±ØÃﬂ THEN ¿≤—±ØÃﬂÀﬁØƒON ***
 3515 00000258                    651     _WTMR_S10:
 3516                             652     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3517                             653     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3518 00000258 D109               654             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3519 0000025A D00A               655             MOV.L   #_SEQ_TMR_CARD_TOP,R0   ;
 3520 0000025C 310C               656             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3521                             657     
 3522 0000025E D30A               658             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3523 00000260 6023               659             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3524 00000262 4001               660             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3525 00000264 303C               661             ADD     R3,R0                   ;
 3526 00000266 6001               662             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3527 00000268 310C               663             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3528 0000026A 6411               664             MOV.W   @R1,R4                  ;
 3529                             665     
 3530 0000026C 6023               666             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3531                             667     ;;;;;   SHLL    R0                      ; ∂≥›¿≈› ﬁ∞ * 2
 3532 0000026E 4001               668             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3533 00000270 D306               669             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3534 00000272 303C               670             ADD     R3,R0                   ;
 3535 00000274 6001               671             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3536 00000276 240B               672             OR      R0,R4                   ;
 3537 00000278 2141               673             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3538                             674     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    14
PROGRAM NAME =

 3539                             675             M_BRA   _WTMR_SUB_END                   ;
 3540 0000027A A023                   M           BRA     _WTMR_SUB_END
 3541 0000027C 0009                   M           NOP
 3542                             676     
 3543                             677     ;
 3544                             678     ;       *** ¿≤œñ≥å¯ THEN Ω¿∞ƒBIT OFF,¿≤œílÃﬂÿæØƒ ***
 3545                                     ***** BEGIN-POOL *****
 3546 0000027E 0000                       ALIGNMENT CODE
 3547 00000280 00000000                   DATA FOR SOURCE-LINE 654
 3548 00000284 00000424                   DATA FOR SOURCE-LINE 655
 3549 00000288 00000000                   DATA FOR SOURCE-LINE 658
 3550 0000028C 00000000                   DATA FOR SOURCE-LINE 669
 3551                                     ***** END-POOL *****
 3552 00000290                    679     _WTMR_S50:
 3553 00000290 D40E               680             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3554 00000292 D10F               681             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3555 00000294 6111               682             MOV.W   @R1,R1                          ;
 3556 00000296 6023               683             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3557                             684     ;;;;;   SHLL2   R0                              ; ¿≤œ≈› ﬁ∞ *4
 3558 00000298 0415               685             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3559                             686     
 3560 0000029A 7002               687             ADD     #2,R0                           ; ARG SAVE AREA
 3561 0000029C 211A               688             XOR     R1,R1                           ;
 3562 0000029E 0414               689             MOV.B   R1,@(R0,R4)                     ; START BIT CLEAR
 3563                             690     
 3564                             691     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3565                             692     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3566 000002A0 D10C               693             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3567 000002A2 D00D               694             MOV.L   #_SEQ_TMR_CARD_TOP,R0           ;
 3568 000002A4 310C               695             ADD     R0,R1                           ; CARD TOP + TMR AREA TOP
 3569                             696     
 3570 000002A6 D30D               697             MOV.L   #_SEQ_SEEK_CARD_TBL,R3          ;
 3571 000002A8 6023               698             MOV     R2,R0                           ; ∂≥›¿≈› ﬁ∞*4
 3572 000002AA 4001               699             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3573 000002AC 303C               700             ADD     R3,R0                           ;
 3574 000002AE 6001               701             MOV.W   @R0,R0                          ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3575 000002B0 310C               702             ADD     R0,R1                           ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3576 000002B2 6411               703             MOV.W   @R1,R4                          ;
 3577                             704     
 3578 000002B4 6023               705             MOV     R2,R0                           ; ¿≤œ≈› ﬁ∞*4
 3579 000002B6 4001               706             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3580 000002B8 D309               707             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3          ;
 3581 000002BA 303C               708             ADD     R3,R0                           ;
 3582 000002BC 6001               709             MOV.W   @R0,R0                          ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3583 000002BE 6007               710             NOT     R0,R0                           ;
 3584 000002C0 2409               711             AND     R0,R4                           ; TIME UP BIT CLEAR
 3585 000002C2 2141               712             MOV.W   R4,@R1                          ; STORE
 3586                             713     
 3587 000002C4                    714     _WTMR_SUB_END:
 3588                             715     
 3589                             716             SUB_END
 3590                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3591 000002C4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3592                             717             M_RTS
 3593 000002C6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3594 000002C8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3595                             718     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    15
PROGRAM NAME =

 3596                             719     ;       *********************************************************************
 3597                             720     ;       *****   Write Counter command                   10+2byte        *****
 3598                             721     ;       *********************************************************************
 3599                                     ***** BEGIN-POOL *****
 3600 000002CA 0000                       ALIGNMENT CODE
 3601 000002CC 00000000                   DATA FOR SOURCE-LINE 680
 3602 000002D0 00000000                   DATA FOR SOURCE-LINE 681
 3603 000002D4 00000000                   DATA FOR SOURCE-LINE 693
 3604 000002D8 00000424                   DATA FOR SOURCE-LINE 694
 3605 000002DC 00000000                   DATA FOR SOURCE-LINE 697
 3606 000002E0 00000000                   DATA FOR SOURCE-LINE 707
 3607                                     ***** END-POOL *****
 3608 000002E4                    722             .ALIGN  4
 3609 000002E4                    723     _WCTR_CODE:
 3610 000002E4 E200               724             MOV.B   #_SEQ_CTR_DT,R2                 ; TMR data buffer pointer
 3611 000002E6 4208               725             SHLL2   R2
 3612                             726     ;;;;;   MOV.W   @R2,R2                          ;
 3613 000002E8 C605               727             MOV.L   @(_CTR_CMD,GBR),R0              ;
 3614 000002EA 400B               728             JSR     @R0                             ;
 3615 000002EC 0009               729             NOP                                     ;
 3616                             730     ;
 3617 000002EE                    731     _WCTR_CODE_END:
 3618                             732     
 3619                             733     
 3620                             734     ;       *************************************************************
 3621                             735     ;       *****   Write Counter command subroutine                *****
 3622                             736     ;       *************************************************************
 3623                             737     ;       INPUT R2 :∂≥›¿≈› ﬁ∞*4 (0*4,1*4,2*4,,,,,,)  struct:
 3624                             738     ;       SEQ_CTR_DATA 4byteÅ@1234h
 3625                             739     ;       +0 ∂≥›¿ê›íË/é¿ë™ è„à Å@12h
 3626                             740     ;       +1 ∂≥›¿ê›íË/é¿ë™ â∫à Å@34h
 3627                             741     ;       +2 èâä˙âªÃ◊∏ﬁ 0(èâä˙âªäÆóπ)/ff(èâä˙âªïKóv) ff:∂≥›¿ÃﬂÿæØƒ(ê›íË=>é¿ë™)
 3628                             742     ;       +3 AregëOâÒíl(∂≥›¿ ﬂŸΩçÏê¨ÇÃÇΩÇﬂ)
 3629                             743     ;
 3630                             744     ;       Mreg(R7)ÅFóLå¯/ñ≥å¯(ÃﬂÿæØƒ)
 3631                             745     ;       Areg(R5)ÅF∂≥›ƒ ﬂŸΩ
 3632                             746     ;
 3633 000002F0                    747             .ALIGN  4       ;2010-12-27
 3634 000002F0                    748     _WCTR_SUB:
 3635                             749             SUB_START
 3636 000002F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3637                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3638                             750     ;
 3639 000002F2 2569               751             AND     R6,R5                   ; ARG and NRG                   ; 2
 3640 000002F4 9003               752             MOV.W   #BIT0,R0                ;
 3641 000002F6 2708               753             TST     R0,R7                   ; check MRG                     ; 7 1999-5-26
 3642 000002F8 8B02               754             BF      _WCTR_S05               ; if MRG = 1  then jump         ; 8/15
 3643                             755     
 3644                             756             M_BRA   _WCTR_S50               ; ∂≥›¿ñ≥å¯ THEN èâä˙ílÇ…ÃﬂÿæØƒ
 3645 000002FA A05F                   M           BRA     _WCTR_S50
 3646 000002FC 0009                   M           NOP
 3647                             757     
 3648                             758     ;
 3649                                     ***** BEGIN-POOL *****
 3650 000002FE 0001                       DATA FOR SOURCE-LINE 752
 3651                                     ***** END-POOL *****
 3652 00000300                    759     _WCTR_S05:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    16
PROGRAM NAME =

 3653 00000300 D403               760             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3654 00000302 6023               761             MOV     R2,R0                   ;
 3655                             762     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3656 00000304 7002               763             ADD     #2,R0                   ; èâä˙ílSET FLG,START/STOP FLG AREA
 3657                             764     ;;;;2008-08-08 BUG      MOV.W   @(R0,R4),R1             ; INITIAL DATA SET CHECK
 3658 00000306 014C               765             MOV.B   @(R0,R4),R1             ; INITIAL DATA SET CHECK 2008-08-08
 3659 00000308 2118               766             TST     R1,R1                   ;
 3660 0000030A 8B03               767             BF      _WCTR_S05_10            ; SETçœÇ› THEN JUMP
 3661                             768             M_BRA   _WCTR_S50               ; INITIAL DATA SET
 3662 0000030C A056                   M           BRA     _WCTR_S50
 3663 0000030E 0009                   M           NOP
 3664                             769     
 3665                                     ***** BEGIN-POOL *****
 3666 00000310 00000000                   DATA FOR SOURCE-LINE 760
 3667                                     ***** END-POOL *****
 3668 00000314                    770     _WCTR_S05_10:
 3669 00000314 D405               771             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3670 00000316 6023               772             MOV     R2,R0                   ;
 3671                             773     ;;;;;2008-08-06 ﬁ∏ﬁ     SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2 2008-08-06 SAITO
                                          ÉoÉOÇ≈Ç∑
 3672 00000318 7003               774             ADD     #3,R0                   ; ARG SAVE AREA
 3673 0000031A 014C               775             MOV.B   @(R0,R4),R1             ; load old ARG                  ; 9
 3674 0000031C 0454               776             MOV.B   R5,@(R0,R4)             ; store new ARG                 ; 5
 3675 0000031E 215A               777             XOR     R5,R1                   ; (old ARG) xor (new ARG)       ; 2
 3676 00000320 2159               778             AND     R5,R1                   ; and (new ARG)                 ; 2
 3677 00000322 2118               779             TST     R1,R1                   ;
 3678 00000324 8B04               780             BF      _WCTR_S10               ; if ARG change 0 --> 1 then jump ;8/15
 3679                             781     ;
 3680                             782             M_BRA   _WCTR_SUB_END           ; if ARG not changed  then return ;29
 3681 00000326 A065                   M           BRA     _WCTR_SUB_END
 3682 00000328 0009                   M           NOP
 3683                             783     
 3684                                     ***** BEGIN-POOL *****
 3685 0000032A 0000                       ALIGNMENT CODE
 3686 0000032C 00000000                   DATA FOR SOURCE-LINE 771
 3687                                     ***** END-POOL *****
 3688 00000330                    784     _WCTR_S10:
 3689                             785     
 3690                             786     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3691                             787     ;;;     MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3692 00000330 D109               788             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3693 00000332 D00A               789             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3694 00000334 310C               790             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3695                             791     
 3696 00000336 D30A               792             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3697 00000338 6023               793             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3698 0000033A 4001               794             SHLR    R0                      ; /2
 3699 0000033C 303C               795             ADD     R3,R0                   ;
 3700 0000033E 6001               796             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3701 00000340 310C               797             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3702 00000342 6411               798             MOV.W   @R1,R4                  ;16bit
 3703                             799     
 3704 00000344 6023               800             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3705 00000346 4001               801             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3706 00000348 D306               802             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3707 0000034A 303C               803             ADD     R3,R0                   ;
 3708 0000034C 6001               804             MOV.W   @R0,R0                  ; R0=¡™Ø∏Ç∑ÇÈÀﬁØƒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    17
PROGRAM NAME =

 3709 0000034E 2049               805             AND     R4,R0                   ;
 3710 00000350 2008               806             TST     R0,R0                   ;
 3711 00000352 8909               807             BT      _WCTR_S15               ; if not count upped then jump
 3712                             808     ;
 3713                             809             M_BRA   _WCTR_SUB_END           ; if already count upped then ret
 3714 00000354 A04E                   M           BRA     _WCTR_SUB_END
 3715 00000356 0009                   M           NOP
 3716                             810     
 3717                                     ***** BEGIN-POOL *****
 3718 00000358 00000000                   DATA FOR SOURCE-LINE 788
 3719 0000035C 00000430                   DATA FOR SOURCE-LINE 789
 3720 00000360 00000000                   DATA FOR SOURCE-LINE 792
 3721 00000364 00000000                   DATA FOR SOURCE-LINE 802
 3722                                     ***** END-POOL *****
 3723 00000368                    811     _WCTR_S15:
 3724 00000368 D40E               812             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3725 0000036A 6023               813             MOV     R2,R0                   ;
 3726                             814     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3727 0000036C 014D               815             MOV.W   @(R0,R4),R1             ; COUNTER DATA LOAD
 3728 0000036E D30E               816             MOV.L   #1,R3                   ;
 3729                             817     
 3730 00000370 0008               818             CLRT                            ; T <- 0 CLEAR
 3731 00000372 313A               819             SUBC    R3,R1                   ; COUNER DATA -1
 3732 00000374 233A               820             XOR     R3,R3                   ;
 3733 00000376 313E               821             ADDC    R3,R1                   ; counter = FF --> 0 set
 3734 00000378 0415               822             MOV.W   R1,@(R0,R4)             ; COUNER DATA -1 SET
 3735                             823     ;
 3736 0000037A 2118               824             TST     R1,R1                   ; counter 0 check               ; 2
 3737 0000037C 8B10               825             BF      _WCTR_S20               ; if not count upped then jump  ; 8/15
 3738                             826     
 3739                             827     ;       *** ∂≥›ƒ±ØÃﬂÇ»ÇÁ∂≥›ƒ±ØÃﬂÀﬁØƒSET ***
 3740                             828     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3741                             829     ;;;;;   MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3742 0000037E D10B               830             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3743 00000380 D00B               831             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3744 00000382 310C               832             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3745                             833     
 3746 00000384 D30B               834             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3747 00000386 6023               835             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4/2
 3748 00000388 4001               836             SHLR    R0                      ;
 3749 0000038A 303C               837             ADD     R3,R0                   ;
 3750 0000038C 6001               838             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3751 0000038E 310C               839             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3752 00000390 6411               840             MOV.W   @R1,R4                  ;
 3753                             841     
 3754 00000392 6023               842             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3755 00000394 4001               843             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3756 00000396 D308               844             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3757 00000398 303C               845             ADD     R3,R0                   ;
 3758 0000039A 6001               846             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3759 0000039C 240B               847             OR      R0,R4                   ;
 3760 0000039E 2141               848             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3761                             849     
 3762 000003A0                    850     _WCTR_S20:
 3763                             851             M_BRA   _WCTR_SUB_END
 3764 000003A0 A028                   M           BRA     _WCTR_SUB_END
 3765 000003A2 0009                   M           NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    18
PROGRAM NAME =

 3766                             852     ;
 3767                                     ***** BEGIN-POOL *****
 3768 000003A4 00000000                   DATA FOR SOURCE-LINE 812
 3769 000003A8 00000001                   DATA FOR SOURCE-LINE 816
 3770 000003AC 00000000                   DATA FOR SOURCE-LINE 830
 3771 000003B0 00000430                   DATA FOR SOURCE-LINE 831
 3772 000003B4 00000000                   DATA FOR SOURCE-LINE 834
 3773 000003B8 00000000                   DATA FOR SOURCE-LINE 844
 3774                                     ***** END-POOL *****
 3775 000003BC                    853     _WCTR_S50:
 3776 000003BC D40F               854             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3777 000003BE D110               855             MOV.L   #_SEQ_DRG1_DATA,R1      ; DATA REG data load
 3778 000003C0 6111               856             MOV.W   @R1,R1                  ;
 3779 000003C2 6023               857             MOV     R2,R0                   ; R2=∂≥›¿≈› ﬁ∞
 3780                             858     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3781 000003C4 0415               859             MOV.W   R1,@(R0,R4)             ; ∂≥›¿√ﬁ∞¿ ÃﬂÿæØƒ
 3782                             860     
 3783 000003C6 7002               861             ADD     #2,R0                   ;
 3784 000003C8 E1FF               862             MOV.B   #H'FF,R1                ; èâä˙ílSET CODE
 3785 000003CA 0414               863             MOV.B   R1,@(R0,R4)             ; INITIAL DATA SET CODE WRITE
 3786                             864     
 3787 000003CC 7001               865             ADD     #1,R0                   ; ARG SAVE AREA
 3788 000003CE 0454               866             MOV.B   R5,@(R0,R4)             ; STORE ARG
 3789                             867     
 3790                             868     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3791                             869     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3792 000003D0 D10C               870             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3793 000003D2 D00D               871             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3794 000003D4 310C               872             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3795                             873     
 3796 000003D6 D30D               874             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3797 000003D8 6023               875             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3798 000003DA 4001               876             SHLR    R0                      ; /2
 3799 000003DC 303C               877             ADD     R3,R0                   ;
 3800 000003DE 6001               878             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3801 000003E0 310C               879             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3802 000003E2 6411               880             MOV.W   @R1,R4                  ;
 3803                             881     
 3804 000003E4 6023               882             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3805 000003E6 4001               883             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3806 000003E8 D309               884             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3807 000003EA 303C               885             ADD     R3,R0                   ;
 3808 000003EC 6001               886             MOV.W   @R0,R0                  ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3809 000003EE 6007               887             NOT     R0,R0                   ;
 3810 000003F0 2409               888             AND     R0,R4                   ; BIT CLEAR
 3811 000003F2 2141               889             MOV.W   R4,@R1                  ; STORE
 3812                             890     
 3813 000003F4                    891     _WCTR_SUB_END:
 3814                             892     
 3815                             893             SUB_END
 3816                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3817 000003F4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3818                             894             M_RTS
 3819 000003F6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3820 000003F8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3821                             895     ;
 3822                             896     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    19
PROGRAM NAME =

 3823                             897     
 3824                             898     ;       *********************************************************************
 3825                             899     ;       *****   LDW command                             12byte          *****
 3826                             900     ;       *********************************************************************
 3827                             901     ;         ------------------------------
 3828                             902     ;       +0|       ñΩóﬂCODE      (  )   |
 3829                             903     ;         ------------------------------
 3830                             904     ;       +1|         ãÛÇ´        (  )   |
 3831                             905     ;         ------------------------------
 3832                             906     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3833                             907     ;         ------------------------------
 3834                             908     ;       +3|         ADR         (  )   |        R4
 3835                             909     ;         ------------------------------
 3836                             910     
 3837                                     ***** BEGIN-POOL *****
 3838 000003FA 0000                       ALIGNMENT CODE
 3839 000003FC 00000000                   DATA FOR SOURCE-LINE 854
 3840 00000400 00000000                   DATA FOR SOURCE-LINE 855
 3841 00000404 00000000                   DATA FOR SOURCE-LINE 870
 3842 00000408 00000430                   DATA FOR SOURCE-LINE 871
 3843 0000040C 00000000                   DATA FOR SOURCE-LINE 874
 3844 00000410 00000000                   DATA FOR SOURCE-LINE 884
 3845                                     ***** END-POOL *****
 3846 00000414                    911             .ALIGN  4
 3847 00000414                    912     _LDW_CODE:
 3848 00000414 E300               913             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3849 00000416 603C               914             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3850 00000418 03ED               915             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3851                             916     
 3852 0000041A C608               917             MOV.L   @(_LDW_CMD,GBR),R0              ;
 3853 0000041C 400B               918             JSR     @R0                             ; INPUT R3
 3854 0000041E 0009               919             NOP                                     ;
 3855 00000420                    920     _LDW_CODE_END:
 3856                             921     
 3857                             922     ;       ***********************************
 3858                             923     ;       ***     LDWñΩóﬂªÃﬁŸ∞¡›          ***
 3859                             924     ;       ***********************************
 3860                             925     ;       INPUT R3
 3861 00000420                    926             .ALIGN  4       ;2010-12-27
 3862 00000420                    927     _LDW_SUB:
 3863                             928             SUB_START
 3864 00000420 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3865                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3866                             929     
 3867 00000422 2569               930             AND     R6,R5                           ; ARG and NRG
 3868 00000424 2558               931             TST     R5,R5                           ;
 3869 00000426 8901               932             BT      _LDW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3870                             933     
 3871 00000428 C600               934             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3872 0000042A 2031               935             MOV.W   R3,@R0                          ;
 3873 0000042C                    936     _LDW_SUB_END:
 3874                             937             SUB_END
 3875                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3876 0000042C 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3877                             938             M_RTS
 3878 0000042E 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3879 00000430 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    20
PROGRAM NAME =

 3880                             939     
 3881                             940     ;       *********************************************************************
 3882                             941     ;       *****   èåèÇ»ÇµLDW command                     12byte          *****
 3883                             942     ;       *********************************************************************
 3884                             943     ;         ------------------------------
 3885                             944     ;       +0|       ñΩóﬂCODE      (  )   |
 3886                             945     ;         ------------------------------
 3887                             946     ;       +1|         ãÛÇ´        (  )   |
 3888                             947     ;         ------------------------------
 3889                             948     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3890                             949     ;         ------------------------------
 3891                             950     ;       +3|         ADR         (  )   |        R4
 3892                             951     ;         ------------------------------
 3893                             952     
 3894 00000434                    953             .ALIGN  4
 3895 00000434                    954     _LDWU_CODE:
 3896 00000434 E300               955             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3897 00000436 603C               956             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3898 00000438 03ED               957             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3899                             958     
 3900 0000043A C600               959             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3901 0000043C 2031               960             MOV.W   R3,@R0                          ;
 3902                             961     
 3903 0000043E                    962     _LDWU_CODE_END:
 3904                             963     
 3905                             964     
 3906                             965     ;       *********************************************************************
 3907                             966     ;       *****   STW command                             16byte          *****
 3908                             967     ;       *********************************************************************
 3909                             968     ;         ------------------------------
 3910                             969     ;       +0|       ñΩóﬂCODE      (  )   |
 3911                             970     ;         ------------------------------
 3912                             971     ;       +1|         ãÛÇ´        (  )   |
 3913                             972     ;         ------------------------------
 3914                             973     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3915                             974     ;         ------------------------------
 3916                             975     ;       +3|         ADR         (  )   |        R4
 3917                             976     ;         ------------------------------
 3918                             977     
 3919 00000440                    978             .ALIGN  4
 3920 00000440                    979     _STW_CODE:
 3921 00000440 E300               980             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3922 00000442 603C               981             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3923                             982     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3924 00000444 30EC               983             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3925 00000446 6303               984             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3926                             985     
 3927 00000448 C609               986             MOV.L   @(_STW_CMD,GBR),R0              ;
 3928 0000044A 400B               987             JSR     @R0                             ; INPUT R3
 3929 0000044C 0009               988             NOP                                     ;
 3930 0000044E                    989     _STW_CODE_END:
 3931                             990     
 3932                             991     ;       ***********************************
 3933                             992     ;       ***     STWñΩóﬂªÃﬁŸ∞¡›          ***
 3934                             993     ;       ***********************************
 3935                             994     ;       INPUT R3
 3936 00000450                    995             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    21
PROGRAM NAME =

 3937 00000450                    996     _STW_SUB:
 3938                             997             SUB_START
 3939 00000450 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3940                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3941                             998     
 3942 00000452 2569               999             AND     R6,R5                           ; ARG and NRG
 3943 00000454 2558              1000             TST     R5,R5                           ;
 3944 00000456 8902              1001             BT      _STW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3945                            1002     
 3946 00000458 C600              1003             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3947 0000045A 6001              1004             MOV.W   @R0,R0                          ;
 3948 0000045C 2301              1005             MOV.W   R0,@R3                          ; DATA STORE
 3949 0000045E                   1006     _STW_SUB_END:
 3950                            1007             SUB_END
 3951                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3952 0000045E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3953                            1008             M_RTS
 3954 00000460 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3955 00000462 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3956                            1009     
 3957                            1010     
 3958                            1011     ;       *********************************************************************
 3959                            1012     ;       *****   èåèÇ»ÇµSTW command                     16byte          *****
 3960                            1013     ;       *********************************************************************
 3961                            1014     ;         ------------------------------
 3962                            1015     ;       +0|       ñΩóﬂCODE      (  )   |
 3963                            1016     ;         ------------------------------
 3964                            1017     ;       +1|         ãÛÇ´        (  )   |
 3965                            1018     ;         ------------------------------
 3966                            1019     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3967                            1020     ;         ------------------------------
 3968                            1021     ;       +3|         ADR         (  )   |        R4
 3969                            1022     ;         ------------------------------
 3970                            1023     
 3971 00000464                   1024             .ALIGN  4
 3972 00000464                   1025     _STWU_CODE:
 3973 00000464 E300              1026             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3974 00000466 603C              1027             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3975 00000468 30EC              1028             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3976 0000046A 6303              1029             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3977                            1030     
 3978 0000046C C600              1031             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3979 0000046E 6001              1032             MOV.W   @R0,R0                          ;
 3980 00000470 2301              1033             MOV.W   R0,@R3                          ; DATA STORE
 3981 00000472                   1034     _STWU_CODE_END:
 3982                            1035     
 3983                            1036     
 3984                            1037     ;       *********************************************************************
 3985                            1038     ;       *****   CMP EQ command                          12byte          *****
 3986                            1039     ;       *********************************************************************
 3987                            1040     ;         ------------------------------
 3988                            1041     ;       +0|       ñΩóﬂCODE      (  )   |
 3989                            1042     ;         ------------------------------
 3990                            1043     ;       +1|         ãÛÇ´        (  )   |
 3991                            1044     ;         ------------------------------
 3992                            1045     ;       +2|    OFFSET ADR CODE  (  )   |
 3993                            1046     ;         ------------------------------
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    22
PROGRAM NAME =

 3994                            1047     ;       +3|         ADR         (  )   |
 3995                            1048     ;         ------------------------------
 3996 00000474                   1049             .ALIGN  4
 3997 00000474                   1050     _EQ_CODE:
 3998 00000474 E300              1051             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3999 00000476 603C              1052             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4000 00000478 03ED              1053             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4001                            1054                                                     ; INPUT R3
 4002                            1055     
 4003 0000047A C60A              1056             MOV.L   @(_EQ_CMD,GBR),R0               ;
 4004 0000047C 400B              1057             JSR     @R0                             ;
 4005 0000047E 0009              1058             NOP                                     ;
 4006 00000480                   1059     _EQ_CODE_END:
 4007                            1060     
 4008                            1061     
 4009                            1062     ;       ***********************************
 4010                            1063     ;       ***     CMP EQñΩóﬂªÃﬁŸ∞¡›       ***
 4011                            1064     ;       ***********************************
 4012                            1065     ;       INPUT R3
 4013 00000480                   1066             .ALIGN  4       ;2010-12-27
 4014 00000480                   1067     _EQ_SUB:
 4015                            1068             SUB_START
 4016 00000480 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4017                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4018                            1069     
 4019 00000482 2569              1070             AND     R6,R5                           ; ARG and NRG
 4020 00000484 2558              1071             TST     R5,R5                           ;
 4021 00000486 8903              1072             BT      _EQ_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4022                            1073     
 4023 00000488 C600              1074             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4024 0000048A 6001              1075             MOV.W   @R0,R0                          ;
 4025 0000048C 3030              1076             CMP/EQ  R3,R0                           ; DATA REG = µÕﬂ◊›ƒﬁDATA -> DATA REG
 4026 0000048E 0529              1077             MOVT    R5                              ; T->ARG
 4027                            1078     
 4028 00000490                   1079     _EQ_SUB_END:
 4029                            1080             SUB_END
 4030                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4031 00000490 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4032                            1081             M_RTS
 4033 00000492 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4034 00000494 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4035                            1082     
 4036                            1083     
 4037                            1084     ;       *********************************************************************
 4038                            1085     ;       *****   CMP NE command                          12byte          *****
 4039                            1086     ;       *********************************************************************
 4040                            1087     ;         ------------------------------
 4041                            1088     ;       +0|       ñΩóﬂCODE      (  )   |
 4042                            1089     ;         ------------------------------
 4043                            1090     ;       +1|         ãÛÇ´        (  )   |
 4044                            1091     ;         ------------------------------
 4045                            1092     ;       +2|    OFFSET ADR CODE  (  )   |
 4046                            1093     ;         ------------------------------
 4047                            1094     ;       +3|         ADR         (  )   |
 4048                            1095     ;         ------------------------------
 4049 00000498                   1096             .ALIGN  4
 4050 00000498                   1097     _NE_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    23
PROGRAM NAME =

 4051 00000498 E300              1098             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4052 0000049A 603C              1099             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4053 0000049C 03ED              1100             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4054                            1101                                                     ; INPUT R3
 4055                            1102     
 4056 0000049E C60B              1103             MOV.L   @(_NE_CMD,GBR),R0               ;
 4057 000004A0 400B              1104             JSR     @R0                             ;
 4058 000004A2 0009              1105             NOP                                     ;
 4059 000004A4                   1106     _NE_CODE_END:
 4060                            1107     
 4061                            1108     
 4062                            1109     ;       ***********************************
 4063                            1110     ;       ***     CMP NEñΩóﬂªÃﬁŸ∞¡›       ***
 4064                            1111     ;       ***********************************
 4065                            1112     ;       INPUT R3
 4066 000004A4                   1113             .ALIGN  4       ;2010-12-27
 4067 000004A4                   1114     _NE_SUB:
 4068                            1115             SUB_START
 4069 000004A4 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4070                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4071                            1116     
 4072 000004A6 2569              1117             AND     R6,R5                           ; ARG and NRG
 4073 000004A8 2558              1118             TST     R5,R5                           ;
 4074 000004AA 8905              1119             BT      _NE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4075                            1120     
 4076 000004AC C600              1121             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4077 000004AE 6001              1122             MOV.W   @R0,R0                          ;
 4078 000004B0 3030              1123             CMP/EQ  R3,R0                           ; DATA REG =/= µÕﬂ◊›ƒﬁDATA -> T
 4079 000004B2 0029              1124             MOVT    R0                              ; T->R0
 4080 000004B4 2008              1125             TST     R0,R0                           ;
 4081 000004B6 0529              1126             MOVT    R5                              ; TÇÃîΩì]SET
 4082                            1127     
 4083 000004B8                   1128     _NE_SUB_END:
 4084                            1129             SUB_END
 4085                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4086 000004B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4087                            1130             M_RTS
 4088 000004BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4089 000004BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4090                            1131     
 4091                            1132     ;       *********************************************************************
 4092                            1133     ;       *****   CMP GT command                          12byte          *****
 4093                            1134     ;       *********************************************************************
 4094                            1135     ;         ------------------------------
 4095                            1136     ;       +0|       ñΩóﬂCODE      (  )   |
 4096                            1137     ;         ------------------------------
 4097                            1138     ;       +1|         ãÛÇ´        (  )   |
 4098                            1139     ;         ------------------------------
 4099                            1140     ;       +2|    OFFSET ADR CODE  (  )   |
 4100                            1141     ;         ------------------------------
 4101                            1142     ;       +3|         ADR         (  )   |
 4102                            1143     ;         ------------------------------
 4103 000004C0                   1144             .ALIGN  4
 4104 000004C0                   1145     _GT_CODE:
 4105 000004C0 E300              1146             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4106 000004C2 603C              1147             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4107 000004C4 03ED              1148             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    24
PROGRAM NAME =

 4108                            1149                                                     ; INPUT R3
 4109                            1150     
 4110 000004C6 C60C              1151             MOV.L   @(_GT_CMD,GBR),R0               ;
 4111 000004C8 400B              1152             JSR     @R0                             ;
 4112 000004CA 0009              1153             NOP                                     ;
 4113 000004CC                   1154     _GT_CODE_END:
 4114                            1155     
 4115                            1156     
 4116                            1157     ;       ***********************************
 4117                            1158     ;       ***     CMP GTñΩóﬂªÃﬁŸ∞¡›       ***
 4118                            1159     ;       ***********************************
 4119                            1160     ;       INPUT R3
 4120 000004CC                   1161             .ALIGN  4       ;2010-12-27
 4121 000004CC                   1162     _GT_SUB:
 4122                            1163             SUB_START
 4123 000004CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4124                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4125                            1164     
 4126 000004CE 2569              1165             AND     R6,R5                           ; ARG and NRG
 4127 000004D0 2558              1166             TST     R5,R5                           ;
 4128 000004D2 8903              1167             BT      _GT_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4129                            1168     
 4130 000004D4 C600              1169             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4131 000004D6 6001              1170             MOV.W   @R0,R0                          ;
 4132 000004D8 3037              1171             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4133 000004DA 0529              1172             MOVT    R5                              ; T->R0
 4134                            1173     
 4135                            1174     
 4136 000004DC                   1175     _GT_SUB_END:
 4137                            1176             SUB_END
 4138                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4139 000004DC 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4140                            1177             M_RTS
 4141 000004DE 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4142 000004E0 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4143                            1178     
 4144                            1179     
 4145                            1180     ;       *********************************************************************
 4146                            1181     ;       *****   CMP LE command                          12      byte    *****
 4147                            1182     ;       *********************************************************************
 4148                            1183     ;         ------------------------------
 4149                            1184     ;       +0|       ñΩóﬂCODE      (  )   |
 4150                            1185     ;         ------------------------------
 4151                            1186     ;       +1|         ãÛÇ´        (  )   |
 4152                            1187     ;         ------------------------------
 4153                            1188     ;       +2|    OFFSET ADR CODE  (  )   |
 4154                            1189     ;         ------------------------------
 4155                            1190     ;       +3|         ADR         (  )   |
 4156                            1191     ;         ------------------------------
 4157 000004E4                   1192             .ALIGN  4
 4158 000004E4                   1193     _LE_CODE:
 4159 000004E4 E300              1194             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4160 000004E6 603C              1195             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4161 000004E8 03ED              1196             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4162                            1197                                                     ; INPUT R3
 4163                            1198     
 4164 000004EA C60D              1199             MOV.L   @(_LE_CMD,GBR),R0               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    25
PROGRAM NAME =

 4165 000004EC 400B              1200             JSR     @R0                             ;
 4166 000004EE 0009              1201             NOP                                     ;
 4167 000004F0                   1202     _LE_CODE_END:
 4168                            1203     
 4169                            1204     
 4170                            1205     ;       ***********************************
 4171                            1206     ;       ***     CMP LEñΩóﬂªÃﬁŸ∞¡›       ***
 4172                            1207     ;       ***********************************
 4173                            1208     ;       INPUT R3
 4174 000004F0                   1209             .ALIGN  4       ;2010-12-27
 4175 000004F0                   1210     _LE_SUB:
 4176                            1211             SUB_START
 4177 000004F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4178                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4179                            1212     
 4180 000004F2 2569              1213             AND     R6,R5                           ; ARG and NRG
 4181 000004F4 2558              1214             TST     R5,R5                           ;
 4182 000004F6 8905              1215             BT      _LE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4183                            1216     
 4184 000004F8 C600              1217             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4185 000004FA 6001              1218             MOV.W   @R0,R0                          ;
 4186 000004FC 3037              1219             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4187 000004FE 0029              1220             MOVT    R0                              ; T->R0
 4188 00000500 2008              1221             TST     R0,R0                           ;
 4189 00000502 0529              1222             MOVT    R5                              ; TÇÃîΩì]SET
 4190                            1223     
 4191 00000504                   1224     _LE_SUB_END:
 4192                            1225             SUB_END
 4193                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4194 00000504 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4195                            1226             M_RTS
 4196 00000506 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4197 00000508 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4198                            1227     
 4199                            1228     
 4200                            1229     ;       *********************************************************************
 4201                            1230     ;       *****   ANDW command                            12byte          *****
 4202                            1231     ;       *********************************************************************
 4203                            1232     ;         ------------------------------
 4204                            1233     ;       +0|       ñΩóﬂCODE      (  )   |
 4205                            1234     ;         ------------------------------
 4206                            1235     ;       +1|         ãÛÇ´        (  )   |
 4207                            1236     ;         ------------------------------
 4208                            1237     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4209                            1238     ;         ------------------------------
 4210                            1239     ;       +3|         ADR         (  )   |        R4
 4211                            1240     ;         ------------------------------
 4212 0000050C                   1241             .ALIGN  4
 4213 0000050C                   1242     _ANDW_CODE:
 4214 0000050C E300              1243             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4215 0000050E 603C              1244             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4216 00000510 03ED              1245             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4217                            1246                                                     ; INPUT R3
 4218                            1247     
 4219 00000512 C60E              1248             MOV.L   @(_ANDW_CMD,GBR),R0             ;
 4220 00000514 400B              1249             JSR     @R0                             ;
 4221 00000516 0009              1250             NOP                                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    26
PROGRAM NAME =

 4222 00000518                   1251     _ANDW_CODE_END:
 4223                            1252     
 4224                            1253     
 4225                            1254     ;       ***********************************
 4226                            1255     ;       ***     ANDWñΩóﬂªÃﬁŸ∞¡›         ***
 4227                            1256     ;       ***********************************
 4228                            1257     ;       INPUT R3
 4229 00000518                   1258             .ALIGN  4       ;2010-12-27
 4230 00000518                   1259     _ANDW_SUB:
 4231                            1260             SUB_START
 4232 00000518 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4233                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4234                            1261     
 4235 0000051A 2569              1262             AND     R6,R5                           ; ARG and NRG
 4236 0000051C 2558              1263             TST     R5,R5                           ;
 4237 0000051E 8904              1264             BT      _ANDW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4238                            1265     
 4239 00000520 C600              1266             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4240 00000522 6103              1267             MOV     R0,R1                           ;
 4241 00000524 6011              1268             MOV.W   @R1,R0                          ;
 4242 00000526 2039              1269             AND     R3,R0                           ; DATA REG and µÕﬂ◊›ƒﬁDATA -> DATA REG
 4243 00000528 2101              1270             MOV.W   R0,@R1                          ; DATA REG SET
 4244 0000052A                   1271     _ANDW_SUB_END:
 4245                            1272             SUB_END
 4246                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4247 0000052A 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4248                            1273             M_RTS
 4249 0000052C 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4250 0000052E 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4251                            1274     
 4252                            1275     
 4253                            1276     ;       *********************************************************************
 4254                            1277     ;       *****   ORW command                             12byte          *****
 4255                            1278     ;       *********************************************************************
 4256                            1279     ;         ------------------------------
 4257                            1280     ;       +0|       ñΩóﬂCODE      (  )   |
 4258                            1281     ;         ------------------------------
 4259                            1282     ;       +1|         ãÛÇ´        (  )   |
 4260                            1283     ;         ------------------------------
 4261                            1284     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4262                            1285     ;         ------------------------------
 4263                            1286     ;       +3|         ADR         (  )   |        R4
 4264                            1287     ;         ------------------------------
 4265 00000530                   1288             .ALIGN  4
 4266 00000530                   1289     _ORW_CODE:
 4267 00000530 E300              1290             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4268 00000532 603C              1291             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4269 00000534 03ED              1292             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4270                            1293                                                     ; INPUT R3
 4271                            1294     
 4272 00000536 C60F              1295             MOV.L   @(_ORW_CMD,GBR),R0              ;
 4273 00000538 400B              1296             JSR     @R0                             ;
 4274 0000053A 0009              1297             NOP                                     ;
 4275 0000053C                   1298     _ORW_CODE_END:
 4276                            1299     
 4277                            1300     
 4278                            1301     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    27
PROGRAM NAME =

 4279                            1302     ;       ***     ORWñΩóﬂªÃﬁŸ∞¡›          ***
 4280                            1303     ;       ***********************************
 4281                            1304     ;       INPUT R3
 4282 0000053C                   1305             .ALIGN  4       ;2010-12-27
 4283 0000053C                   1306     _ORW_SUB:
 4284                            1307             SUB_START
 4285 0000053C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4286                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4287                            1308     
 4288 0000053E 2569              1309             AND     R6,R5                           ; ARG and NRG
 4289 00000540 2558              1310             TST     R5,R5                           ;
 4290 00000542 8904              1311             BT      _ORW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4291                            1312     
 4292 00000544 C600              1313             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4293 00000546 6103              1314             MOV     R0,R1
 4294 00000548 6011              1315             MOV.W   @R1,R0                          ;
 4295 0000054A 203B              1316             OR      R3,R0                           ; DATA REG or µÕﬂ◊›ƒﬁDATA -> DATA REG
 4296 0000054C 2101              1317             MOV.W   R0,@R1                          ; DATA REG SET
 4297 0000054E                   1318     _ORW_SUB_END:
 4298                            1319             SUB_END
 4299                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4300 0000054E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4301                            1320             M_RTS
 4302 00000550 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4303 00000552 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4304                            1321     
 4305                            1322     
 4306                            1323     ;       *********************************************************************
 4307                            1324     ;       *****   XORW command                            12byte          *****
 4308                            1325     ;       *********************************************************************
 4309                            1326     ;         ------------------------------
 4310                            1327     ;       +0|       ñΩóﬂCODE      (  )   |
 4311                            1328     ;         ------------------------------
 4312                            1329     ;       +1|         ãÛÇ´        (  )   |
 4313                            1330     ;         ------------------------------
 4314                            1331     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4315                            1332     ;         ------------------------------
 4316                            1333     ;       +3|         ADR         (  )   |        R4
 4317                            1334     ;         ------------------------------
 4318 00000554                   1335             .ALIGN  4
 4319 00000554                   1336     _XORW_CODE:
 4320 00000554 E300              1337             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4321 00000556 603C              1338             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4322 00000558 03ED              1339             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4323                            1340                                                     ; INPUT R3
 4324                            1341     
 4325 0000055A C610              1342             MOV.L   @(_XORW_CMD,GBR),R0             ;
 4326 0000055C 400B              1343             JSR     @R0                             ;
 4327 0000055E 0009              1344             NOP                                     ;
 4328 00000560                   1345     _XORW_CODE_END:
 4329                            1346     
 4330                            1347     
 4331                            1348     ;       ***********************************
 4332                            1349     ;       ***     XORWñΩóﬂªÃﬁŸ∞¡›         ***
 4333                            1350     ;       ***********************************
 4334                            1351     ;       INPUT R3
 4335 00000560                   1352             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    28
PROGRAM NAME =

 4336 00000560                   1353     _XORW_SUB:
 4337                            1354             SUB_START
 4338 00000560 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4339                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4340                            1355     
 4341 00000562 2569              1356             AND     R6,R5                           ; ARG and NRG
 4342 00000564 2558              1357             TST     R5,R5                           ;
 4343 00000566 8904              1358             BT      _XORW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4344                            1359     
 4345 00000568 C600              1360             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4346 0000056A 6103              1361             MOV     R0,R1                           ;
 4347 0000056C 6011              1362             MOV.W   @R1,R0                          ;
 4348 0000056E 203A              1363             XOR     R3,R0                           ; DATA REG xor µÕﬂ◊›ƒﬁDATA -> DATA REG
 4349 00000570 2101              1364             MOV.W   R0,@R1                          ; DATA REG SET
 4350 00000572                   1365     _XORW_SUB_END:
 4351                            1366             SUB_END
 4352                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4353 00000572 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4354                            1367             M_RTS
 4355 00000574 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4356 00000576 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4357                            1368     
 4358                            1369     
 4359                            1370     
 4360                            1371     ;       *********************************************************************
 4361                            1372     ;       *****   ADD command                             12byte          *****
 4362                            1373     ;       *********************************************************************
 4363                            1374     ;         ------------------------------
 4364                            1375     ;       +0|       ñΩóﬂCODE      (  )   |
 4365                            1376     ;         ------------------------------
 4366                            1377     ;       +1|         ãÛÇ´        (  )   |
 4367                            1378     ;         ------------------------------
 4368                            1379     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4369                            1380     ;         ------------------------------
 4370                            1381     ;       +3|         ADR         (  )   |        R4
 4371                            1382     ;         ------------------------------
 4372 00000578                   1383             .ALIGN  4
 4373 00000578                   1384     _ADD_CODE:
 4374 00000578 E300              1385             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4375 0000057A 603C              1386             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4376 0000057C 03ED              1387             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4377                            1388                                                     ; INPUT R3
 4378                            1389     
 4379 0000057E C611              1390             MOV.L   @(_ADD_CMD,GBR),R0              ;
 4380 00000580 400B              1391             JSR     @R0                             ;
 4381 00000582 0009              1392             NOP                                     ;
 4382 00000584                   1393     _ADD_CODE_END:
 4383                            1394     
 4384                            1395     
 4385                            1396     ;       ***********************************
 4386                            1397     ;       ***     ADDñΩóﬂªÃﬁŸ∞¡›          ***
 4387                            1398     ;       ***********************************
 4388                            1399     ;       INPUT R3
 4389 00000584                   1400             .ALIGN  4       ;2010-12-27
 4390 00000584                   1401     _ADD_SUB:
 4391                            1402             SUB_START
 4392 00000584 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    29
PROGRAM NAME =

 4393                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4394                            1403     
 4395 00000586 2569              1404             AND     R6,R5                           ; ARG and NRG
 4396 00000588 2558              1405             TST     R5,R5                           ;
 4397 0000058A 8904              1406             BT      _ADD_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4398                            1407     
 4399 0000058C C600              1408             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4400 0000058E 6103              1409             MOV     R0,R1                           ;
 4401 00000590 6011              1410             MOV.W   @R1,R0                          ;
 4402 00000592 303C              1411             ADD     R3,R0                           ; DATA REG + µÕﬂ◊›ƒﬁDATA -> DATA REG
 4403 00000594 2101              1412             MOV.W   R0,@R1                          ; DATA REG SET
 4404 00000596                   1413     _ADD_SUB_END:
 4405                            1414             SUB_END
 4406                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4407 00000596 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4408                            1415             M_RTS
 4409 00000598 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4410 0000059A 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4411                            1416     
 4412                            1417     ;       *********************************************************************
 4413                            1418     ;       *****   SUB command                             12byte          *****
 4414                            1419     ;       *********************************************************************
 4415                            1420     ;         ------------------------------
 4416                            1421     ;       +0|       ñΩóﬂCODE      (  )   |
 4417                            1422     ;         ------------------------------
 4418                            1423     ;       +1|         ãÛÇ´        (  )   |
 4419                            1424     ;         ------------------------------
 4420                            1425     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4421                            1426     ;         ------------------------------
 4422                            1427     ;       +3|         ADR         (  )   |        R4
 4423                            1428     ;         ------------------------------
 4424                            1429     
 4425 0000059C                   1430             .ALIGN  4
 4426 0000059C                   1431     _SUB_CODE:
 4427 0000059C E300              1432             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4428 0000059E 603C              1433             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4429 000005A0 03ED              1434             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4430                            1435                                                     ; INPUT R3
 4431                            1436     
 4432 000005A2 C612              1437             MOV.L   @(_SUB_CMD,GBR),R0              ;
 4433 000005A4 400B              1438             JSR     @R0                             ;
 4434 000005A6 0009              1439             NOP                                     ;
 4435 000005A8                   1440     _SUB_CODE_END:
 4436                            1441     
 4437                            1442     
 4438                            1443     ;       ***********************************
 4439                            1444     ;       ***     SUBñΩóﬂªÃﬁŸ∞¡›          ***
 4440                            1445     ;       ***********************************
 4441                            1446     ;       INPUT R3
 4442 000005A8                   1447             .ALIGN  4       ;2010-12-27
 4443 000005A8                   1448     _SUB_SUB:
 4444                            1449             SUB_START
 4445 000005A8 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4446                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4447                            1450     
 4448 000005AA 2569              1451             AND     R6,R5                           ; ARG and NRG
 4449 000005AC 2558              1452             TST     R5,R5                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    30
PROGRAM NAME =

 4450 000005AE 8904              1453             BT      _SUB_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4451                            1454     
 4452 000005B0 C600              1455             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4453 000005B2 6103              1456             MOV     R0,R1                           ;
 4454 000005B4 6011              1457             MOV.W   @R1,R0                          ;
 4455 000005B6 3038              1458             SUB     R3,R0                           ; DATA REG - µÕﬂ◊›ƒﬁDATA -> DATA REG
 4456 000005B8 2101              1459             MOV.W   R0,@R1                          ; DATA REG SET
 4457 000005BA                   1460     _SUB_SUB_END:
 4458                            1461             SUB_END
 4459                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4460 000005BA 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4461                            1462             M_RTS
 4462 000005BC 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4463 000005BE 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4464                            1463     
 4465                            1464     
 4466                            1465     
 4467                            1466     ;       *********************************************************************
 4468                            1467     ;       *****   End command                             8byte           *****
 4469                            1468     ;       *********************************************************************
 4470 000005C0                   1469             .ALIGN  4
 4471 000005C0                   1470     _END_CODE:
 4472                            1471     ;;;;;   MOV.L   @(_END_CMD,GBR),R0              ;
 4473                            1472     ;;;;;   JSR     @R0                             ;
 4474                            1473     ;;;;;   NOP                                     ;
 4475                            1474     
 4476                            1475             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4477                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4478 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4479                            1476             M_RTS                                   ;
 4480 000005C2 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4481 000005C4 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4482 000005C6                   1477     _END_CODE_END:
 4483 000005C6 0009              1478             nop                                     ;2010-12-27
 4484 000005C8 0009              1479             nop                                     ;2010-12-27
 4485 000005CC                   1480             .ALIGN  4                               ;2010-12-27
 4486 000005CC                   1481     _END_SUB:
 4487                            1482             SUB_START
 4488 000005CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4489                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4490                            1483     
 4491                            1484             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4492                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4493 000005CE 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4494                            1485             M_RTS                                   ;
 4495 000005D0 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4496 000005D2 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4497                            1486     
 4498                            1487             SUB_END
 4499                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4500 000005D4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4501                            1488             M_RTS
 4502 000005D6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4503 000005D8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4504                            1489     
 4505                            1490     
 4506                            1491     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    31
PROGRAM NAME =

 4507                            1492     ;       *********************************************************************
 4508                            1493     ;       *****   No Operation command            1step    4clocks        *****
 4509                            1494     ;       *********************************************************************
 4510 000005DC                   1495             .ALIGN  4
 4511 000005DC                   1496     _NOP_CODE:
 4512 000005DC 0009              1497             NOP                                     ; no operation
 4513 000005DE                   1498     _NOP_CODE_END:
 4514                            1499     ;
 4515                            1500     
 4516                            1501     
 4517                            1502     
 4518                            1503     
 4519                            1504     
 4520                            1505     
 4521                            1506     
 4522                            1507     
 4523                            1508     
 4524                            1509     
 4525                            1510     
 4526                            1511     
 4527                            1512     
 4528                            1513     
 4529                            1514             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    32

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

BIT0                                      EQU  00000001     15* 2887  2938  2980  3334  3462  3640 
BIT1                                      EQU  00000002     16*
BIT10                                     EQU  00000400     25*
BIT11                                     EQU  00000800     26*
BIT12                                     EQU  00001000     27*
BIT13                                     EQU  00002000     28*
BIT14                                     EQU  00004000     29*
BIT15                                     EQU  00008000     30*
BIT16                                     EQU  00010000     31*
BIT17                                     EQU  00020000     32*
BIT18                                     EQU  00040000     33*
BIT19                                     EQU  00080000     34*
BIT2                                      EQU  00000004     17*
BIT20                                     EQU  00100000     35*
BIT21                                     EQU  00200000     36*
BIT22                                     EQU  00400000     37*
BIT23                                     EQU  00800000     38*
BIT24                                     EQU  01000000     39*
BIT25                                     EQU  02000000     40*
BIT26                                     EQU  04000000     41*
BIT27                                     EQU  08000000     42*
BIT28                                     EQU  10000000     43*
BIT29                                     EQU  20000000     44*
BIT3                                      EQU  00000008     18*
BIT30                                     EQU  40000000     45*
BIT31                                     EQU  80000000     46*
BIT4                                      EQU  00000010     19* 3491 
BIT5                                      EQU  00000020     20*
BIT6                                      EQU  00000040     21*
BIT7                                      EQU  00000080     22*
BIT8                                      EQU  00000100     23*
BIT9                                      EQU  00000200     24*
DREG                                      EQU  00000000   2020* 3871  3900  3946  3978  4023  4076  4130  4184  4239  4292  4345 
                                                          4399  4452 
H_BYTE                                    EQU  00000000     82*
L_BYTE                                    EQU  00000001     81*
NBIT0                                     EQU  000000FE     49*
NBIT1                                     EQU  000000FD     50*
NBIT10                                    EQU  0000FBFF     60*
NBIT11                                    EQU  0000F7FF     61*
NBIT12                                    EQU  0000EFFF     62*
NBIT13                                    EQU  0000DFFF     63*
NBIT14                                    EQU  0000BFFF     64*
NBIT15                                    EQU  00007FFF     65*
NBIT2                                     EQU  000000FB     51*
NBIT3                                     EQU  000000F7     52*
NBIT4                                     EQU  000000EF     53*
NBIT5                                     EQU  000000DF     54*
NBIT6                                     EQU  000000BF     55*
NBIT7                                     EQU  0000007F     56*
NBIT8                                     EQU  0000FEFF     58*
NBIT9                                     EQU  0000FDFF     59*
P                                P        SCT  00000000   2837*
XBIT0                                     EQU  00000000     68*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    33

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

XBIT1                                     EQU  00000001     69*
XBIT2                                     EQU  00000002     70*
XBIT3                                     EQU  00000003     71*
XBIT4                                     EQU  00000004     72*
XBIT5                                     EQU  00000005     73*
XBIT6                                     EQU  00000006     74*
XBIT7                                     EQU  00000007     75*
_ADD_CHG                                  IMPT 00000000   1949 
_ADD_CMD                                  EQU  00000044   2039* 4379 
_ADD_CODE                        P        EXPT 00000578   1904  4373*
_ADD_CODE_END                    P        EXPT 00000584   1905  4382*
_ADD_SUB                         P        EXPT 00000584   1829  4390*
_ADD_SUB_END                     P             00000596   4397  4404*
_AMRG_CHG                                 IMPT 00000000   1936 
_AMRG_CODE                       P        EXPT 00000144   1862  3202*
_AMRG_CODE_END                   P        EXPT 00000148   1863  3205*
_ANDN_CHG                                 IMPT 00000000   1922 
_ANDN_CODE                       P        EXPT 00000048   1846  2948*
_ANDN_CODE_END                   P        EXPT 0000005A   1847  2961*
_ANDW_CHG                                 IMPT 00000000   1951 
_ANDW_CMD                                 EQU  00000038   2036* 4219 
_ANDW_CODE                       P        EXPT 0000050C   1898  4213*
_ANDW_CODE_END                   P        EXPT 00000518   1899  4222*
_ANDW_SUB                        P        EXPT 00000518   1826  4230*
_ANDW_SUB_END                    P             0000052A   4237  4244*
_AND_CHG                                  IMPT 00000000   1921 
_AND_CODE                        P        EXPT 00000034   1844  2927*
_AND_CODE_END                    P        EXPT 00000048   1845  2940*
_BAMRA                                    IMPT 00000000    293 
_BAMRB                                    IMPT 00000000    296 
_BARA                                     IMPT 00000000    292 
_BARB                                     IMPT 00000000    295 
_BASRA                                    IMPT 00000000    281 
_BASRB                                    IMPT 00000000    282 
_BBIT_CHG_TBL                             IMPT 00000000   1966 
_BBRA                                     IMPT 00000000    294 
_BBRB                                     IMPT 00000000    297 
_BCR1                                     IMPT 00000000    303 
_BCR2                                     IMPT 00000000    304 
_BDMRB                                    IMPT 00000000    299 
_BDRB                                     IMPT 00000000    298 
_BRCR                                     IMPT 00000000    300 
_CB_BAKUP_CMD1                            EQU  00005678    114*
_CB_BAKUP_CMD2                            EQU  00001234    115*
_CB_BAK_SUM_COD1                          EQU  5AA51234    112*
_CB_BAK_SUM_COD2                          EQU  A55A4321    113*
_CB_ERR_INFO_MEM                          EQU  00000040    137*
_CB_STS_BUF_1BLK                          EQU  00000040    117*  119 
_CB_STS_BUF_BLKMAX                        EQU  00000008    118*  119 
_CB_STS_BUF_MAX                           EQU  00000200    119*
_CB_TRD_BEFORE                            EQU  00000060    127*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    131*
_CB_TRD_BUF_MAX                           EQU  00000800    128*
_CB_TRD_DP_1CNT                           EQU  00000008    130*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    34

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_CB_TRD_DP_CH                             EQU  00000004    123*
_CB_TRD_SMP_CNT                           EQU  00000080    126*
_CCR                                      IMPT 00000000    283 
_CHCR0                                    IMPT 00000000    324 
_CHCR1                                    IMPT 00000000    328 
_CHCR2                                    IMPT 00000000    332 
_CHCR3                                    IMPT 00000000    336 
_CLR_CHG                                  IMPT 00000000   1934 
_CLR_CMD                                  EQU  0000000C   2025* 3403 
_CLR_CODE                        P        EXPT 000001DC   1872  3396*
_CLR_CODE_END                    P        EXPT 000001EA   1873  3406*
_CLR_SUB                         P        EXPT 000001EC   1815  3413*
_CLR_SUB_END                     P             000001F8   3420  3424*
_CTR_CMD                                  EQU  00000014   2027* 3613 
_DAR0                                     IMPT 00000000    322 
_DAR1                                     IMPT 00000000    326 
_DAR2                                     IMPT 00000000    330 
_DAR3                                     IMPT 00000000    334 
_DA_CNV_DT0                               IMPT 00000000   1798 
_DMAOR                                    IMPT 00000000    337 
_DMATCR0                                  IMPT 00000000    323 
_DMATCR1                                  IMPT 00000000    327 
_DMATCR2                                  IMPT 00000000    331 
_DMATCR3                                  IMPT 00000000    335 
_DSET_CHG                                 IMPT 00000000   1935 
_DS_CODE                         P        EXPT 000001C8   1870  3368*
_DS_CODE_END                     P        EXPT 000001DA   1871  3379*
_DUMMY_SUM_CODE                           EQU  5AA53CC3    105*
_END_CHG                                  IMPT 00000000   1940 
_END_CMD                                  EQU  0000004C   2041*
_END_CODE                        P        EXPT 000005C0   1908  4471*
_END_CODE_END                    P        EXPT 000005C6   1909  4482*
_END_SUB                         P        EXPT 000005CC   1831  4486*
_EQ_CHG                                   IMPT 00000000   1945 
_EQ_CMD                                   EQU  00000028   2032* 4003 
_EQ_CODE                         P        EXPT 00000474   1890  3997*
_EQ_CODE_END                     P        EXPT 00000480   1891  4006*
_EQ_SUB                          P        EXPT 00000480   1822  4014*
_EQ_SUB_END                      P             00000490   4021  4028*
_EXPEVT                                   IMPT 00000000    285 
_FRQCR                                    IMPT 00000000    340 
_GPIOIC                                   IMPT 00000000    318 
_GT_CHG                                   IMPT 00000000   1947 
_GT_CMD                                   EQU  00000030   2034* 4110 
_GT_CODE                         P        EXPT 000004C0   1894  4104*
_GT_CODE_END                     P        EXPT 000004CC   1895  4113*
_GT_SUB                          P        EXPT 000004CC   1824  4121*
_GT_SUB_END                      P             000004DC   4128  4136*
_ICR                                      IMPT 00000000    347 
_INTEVT                                   IMPT 00000000    286 
_INT_2MS_SEL                              IMPT 00000000   1766 
_IPRA                                     IMPT 00000000    348 
_IPRB                                     IMPT 00000000    349 
_IPRC                                     IMPT 00000000    350 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    35

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_IPRD                                     IMPT 00000000    351 
_LDN_CHG                                  IMPT 00000000   1920 
_LDN_CODE                        P        EXPT 0000001C   1842  2898*
_LDN_CODE_END                    P        EXPT 00000032   1843  2913*
_LDWU_CHG                                 IMPT 00000000   1942 
_LDWU_CODE                       P        EXPT 00000434   1884  3895*
_LDWU_CODE_END                   P        EXPT 0000043E   1885  3903*
_LDW_CHG                                  IMPT 00000000   1941 
_LDW_CMD                                  EQU  00000020   2030* 3852 
_LDW_CODE                        P        EXPT 00000414   1882  3847*
_LDW_CODE_END                    P        EXPT 00000420   1883  3855*
_LDW_SUB                         P        EXPT 00000420   1820  3862*
_LDW_SUB_END                     P             0000042C   3869  3873*
_LD_CHG                                   IMPT 00000000   1919 
_LD_CODE                         P        EXPT 00000000   1840  2873*
_LD_CODE_END                     P        EXPT 0000001A   1841  2890*
_LE_CHG                                   IMPT 00000000   1948 
_LE_CMD                                   EQU  00000034   2035* 4164 
_LE_CODE                         P        EXPT 000004E4   1896  4158*
_LE_CODE_END                     P        EXPT 000004F0   1897  4167*
_LE_SUB                          P        EXPT 000004F0   1825  4175*
_LE_SUB_END                      P             00000504   4182  4191*
_MCR                                      IMPT 00000000    308 
_MMUCR                                    IMPT 00000000    280 
_NE_CHG                                   IMPT 00000000   1946 
_NE_CMD                                   EQU  0000002C   2033* 4056 
_NE_CODE                         P        EXPT 00000498   1892  4050*
_NE_CODE_END                     P        EXPT 000004A4   1893  4059*
_NE_SUB                          P        EXPT 000004A4   1823  4067*
_NE_SUB_END                      P             000004B8   4074  4083*
_NOP_CHG                                  IMPT 00000000   1918 
_NOP_CODE                        P        EXPT 000005DC   1838  4511*
_NOP_CODE_END                    P        EXPT 000005DE   1839  4513*
_NOP_SHLL8_R0_TBL0                        IMPT 00000000   1978 
_NOP_SHLL8_R1_TBL0                        IMPT 00000000   1979 
_NOP_SHLL8_R2_TBL0                        IMPT 00000000   1980 
_NOP_SHLL8_R3_TBL0                        IMPT 00000000   1981 
_NOP_SHLL8_R4_TBL0                        IMPT 00000000   1982 
_NOP_SWAP_TBL0                            IMPT 00000000   1977 
_OMRG_CHG                                 IMPT 00000000   1937 
_OMRG_CODE                       P        EXPT 00000148   1864  3212*
_OMRG_CODE_END                   P        EXPT 0000014C   1865  3215*
_ORN_CHG                                  IMPT 00000000   1924 
_ORN_CODE                        P        EXPT 00000070   1850  2990*
_ORN_CODE_END                    P        EXPT 00000082   1851  3003*
_ORW_CHG                                  IMPT 00000000   1952 
_ORW_CMD                                  EQU  0000003C   2037* 4272 
_ORW_CODE                        P        EXPT 00000530   1900  4266*
_ORW_CODE_END                    P        EXPT 0000053C   1901  4275*
_ORW_SUB                         P        EXPT 0000053C   1827  4283*
_ORW_SUB_END                     P             0000054E   4290  4297*
_OR_CHG                                   IMPT 00000000   1923 
_OR_CODE                         P        EXPT 0000005C   1848  2969*
_OR_CODE_END                     P        EXPT 00000070   1849  2983*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    36

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_PCR                                      IMPT 00000000    309 
_PCTRA                                    IMPT 00000000    314 
_PCTRB                                    IMPT 00000000    316 
_PDTRA                                    IMPT 00000000    315 
_PDTRB                                    IMPT 00000000    317 
_PLF_CHG                                  IMPT 00000000   1926 
_PLF_CMD                                  EQU  00000008   2024* 3144 
_PLF_CODE                        P        EXPT 00000108   1860  3138*
_PLF_CODE_END                    P        EXPT 00000118   1861  3147*
_PLF_SUB                         P        EXPT 00000118   1814  3154*
_PLF_SUB_END                     P             0000013E   3160  3183*
_PLS_CHG                                  IMPT 00000000   1925 
_PLS_CMD                                  EQU  00000004   2023* 3087 
_PLS_CODE                        P        EXPT 000000D0   1858  3081*
_PLS_CODE_END                    P        EXPT 000000E0   1859  3090*
_PLS_SUB                         P        EXPT 000000E0   1813  3097*
_PLS_SUB_END                     P             00000100   3125*
_PTEA                                     IMPT 00000000    287 
_PTEH                                     IMPT 00000000    276 
_PTEL                                     IMPT 00000000    277 
_QACR0                                    IMPT 00000000    288 
_QACR1                                    IMPT 00000000    289 
_RFCR                                     IMPT 00000000    313 
_RMIO2_IN_DATA                            IMPT 00000000   1796 
_RMIO_IN_DATA                             IMPT 00000000   1795 
_RST_CHG                                  IMPT 00000000   1930 
_RST_CODE                        P        EXPT 000000B8   1856  3059*
_RST_CODE_END                    P        EXPT 000000D0   1857  3075*
_RTCNT                                    IMPT 00000000    311 
_RTCOR                                    IMPT 00000000    312 
_RTCSR                                    IMPT 00000000    310 
_SAR0                                     IMPT 00000000    321 
_SAR1                                     IMPT 00000000    325 
_SAR2                                     IMPT 00000000    329 
_SAR3                                     IMPT 00000000    333 
_SCBRR1                                   IMPT 00000000    369 
_SCBRR2                                   IMPT 00000000    379 
_SCFCR2                                   IMPT 00000000    384 
_SCFDR2                                   IMPT 00000000    385 
_SCFRDR2                                  IMPT 00000000    383 
_SCFSR2                                   IMPT 00000000    382 
_SCFTDR2                                  IMPT 00000000    381 
_SCLSR2                                   IMPT 00000000    387 
_SCRDR1                                   IMPT 00000000    373 
_SCSCMR1                                  IMPT 00000000    374 
_SCSCR1                                   IMPT 00000000    370 
_SCSCR2                                   IMPT 00000000    380 
_SCSMR1                                   IMPT 00000000    368 
_SCSMR2                                   IMPT 00000000    378 
_SCSPTR1                                  IMPT 00000000    375 
_SCSPTR2                                  IMPT 00000000    386 
_SCSSR1                                   IMPT 00000000    372 
_SCTDR1                                   IMPT 00000000    371 
_SEQ_ADDCMD_R0_TBL                        IMPT 00000000   1975 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    37

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_ADR                                  EQU  00000000   2001* 2880  2905  2931  2952  2973  2994  3018  3042  3068  3085  3142 
                                                          3253  3397  3848  3896  3921  3973  3998  4051  4105  4159  4214  4267 
                                                          4320  4374  4427 
_SEQ_ADR_HI                               EQU  00000000   2006*
_SEQ_ADR_LO                               EQU  00000000   2007*
_SEQ_ARG1_DATA                            IMPT 00000000    431 
_SEQ_ASM_RAM_TOP                          IMPT 00000000    400 
_SEQ_BBIT_CHG_TBL                         IMPT 00000000   1967 
_SEQ_BIT                                  EQU  00000000   2000* 2878  2903  2929  2950  2971  2992  3014  3039  3062  3082  3139 
                                                          3245 
_SEQ_CARD_MAX                             EQU  0000007F   1997*
_SEQ_CARD_RAM                             IMPT 00000000    415  3319  3518  3566  3692  3742  3792 
_SEQ_CHG_TBL0                             IMPT 00000000   1963 
_SEQ_CMP_ERR                              IMPT 00000000    430 
_SEQ_CMP_ERR_ADR                          IMPT 00000000    436 
_SEQ_CTR_CARD_TOP                         EQU  00000430   2045* 3693  3743  3793 
_SEQ_CTR_DATA                             IMPT 00000000    424  3653  3669  3724  3776 
_SEQ_CTR_DT                               EQU  00000000   2004* 3610 
_SEQ_DRG1_DATA                            IMPT 00000000    434  3477  3554  3777 
_SEQ_DT_HI                                EQU  00000000   2010* 3294  3371 
_SEQ_DT_LO                                EQU  00000000   2009* 3292  3369 
_SEQ_GBR_TBL                              IMPT 00000000   1965 
_SEQ_MAX_BYTE                             EQU  0000001C   1992*
_SEQ_MOVCMD_R0RD_TBL                      IMPT 00000000   1968 
_SEQ_MOVCMD_R1RD_TBL                      IMPT 00000000   1969 
_SEQ_MOVCMD_R1WR_TBL                      IMPT 00000000   1970 
_SEQ_MOVCMD_R3RD_TBL                      IMPT 00000000   1972 
_SEQ_MOVCMD_R3WR_TBL                      IMPT 00000000   1973 
_SEQ_MRG1_DATA                            IMPT 00000000    432 
_SEQ_NRG1_DATA                            IMPT 00000000    433 
_SEQ_OFFSET_ADR1                          EQU  00000000   2012*
_SEQ_OFFSET_ADR2                          EQU  000000C8   2013*
_SEQ_OFFSET_ADR3                          EQU  00000190   2014*
_SEQ_OFFSET_ADR4                          EQU  0000021C   2015*
_SEQ_OFFSET_ADR5                          EQU  000002F8   2016*
_SEQ_OFFSET_ADR6                          EQU  00000384   2017*
_SEQ_OFFSET_ADR7                          EQU  00000424   2018*
_SEQ_RUN1                                 IMPT 00000000    407 
_SEQ_RUN1_END                             IMPT 00000000    408 
_SEQ_RUN1_TOP                             IMPT 00000000    406 
_SEQ_RUN_CHG1_ERR_END                     IMPT 00000000   1954 
_SEQ_SEEK_CARD_TBL                        IMPT 00000000   1985  3522  3570  3696  3746  3796 
_SEQ_SEEK_WBIT_TBL                        IMPT 00000000   1984  3533  3580  3706  3756  3806 
_SEQ_SR_FLG                               IMPT 00000000    427  3320 
_SEQ_TMR_CARD_TOP                         EQU  00000424   2044* 3519  3567 
_SEQ_TMR_DATA                             IMPT 00000000    420  3467  3484  3553 
_SEQ_TMR_DT                               EQU  00000000   2003* 3441 
_SET_CHG                                  IMPT 00000000   1929 
_SET_CODE                        P        EXPT 000000A0   1854  3036*
_SET_CODE_END                    P        EXPT 000000B6   1855  3052*
_SQ000                                    EQU  00000000   2124*
_SQ001                                    EQU  00000002   2125*
_SQ002                                    EQU  00000004   2126*
_SQ003                                    EQU  00000006   2127*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    38

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ004                                    EQU  00000008   2128*
_SQ005                                    EQU  0000000A   2129*
_SQ006                                    EQU  0000000C   2130*
_SQ007                                    EQU  0000000E   2131*
_SQ008                                    EQU  00000010   2132*
_SQ009                                    EQU  00000012   2133*
_SQ010                                    EQU  00000014   2134*
_SQ011                                    EQU  00000016   2135*
_SQ012                                    EQU  00000018   2136*
_SQ013                                    EQU  0000001A   2137*
_SQ014                                    EQU  0000001C   2138*
_SQ015                                    EQU  0000001E   2139*
_SQ016                                    EQU  00000020   2140*
_SQ017                                    EQU  00000022   2141*
_SQ018                                    EQU  00000024   2142*
_SQ019                                    EQU  00000026   2143*
_SQ020                                    EQU  00000028   2144*
_SQ021                                    EQU  0000002A   2145*
_SQ022                                    EQU  0000002C   2146*
_SQ023                                    EQU  0000002E   2147*
_SQ024                                    EQU  00000030   2148*
_SQ025                                    EQU  00000032   2149*
_SQ026                                    EQU  00000034   2150*
_SQ027                                    EQU  00000036   2151*
_SQ028                                    EQU  00000038   2152*
_SQ029                                    EQU  0000003A   2153*
_SQ030                                    EQU  0000003C   2154*
_SQ031                                    EQU  0000003E   2155*
_SQ032                                    EQU  00000040   2156*
_SQ033                                    EQU  00000042   2157*
_SQ034                                    EQU  00000044   2158*
_SQ035                                    EQU  00000046   2159*
_SQ036                                    EQU  00000048   2160*
_SQ037                                    EQU  0000004A   2161*
_SQ038                                    EQU  0000004C   2162*
_SQ039                                    EQU  0000004E   2163*
_SQ040                                    EQU  00000050   2164*
_SQ041                                    EQU  00000052   2165*
_SQ042                                    EQU  00000054   2166*
_SQ043                                    EQU  00000056   2167*
_SQ044                                    EQU  00000058   2168*
_SQ045                                    EQU  0000005A   2169*
_SQ046                                    EQU  0000005C   2170*
_SQ047                                    EQU  0000005E   2171*
_SQ048                                    EQU  00000060   2172*
_SQ049                                    EQU  00000062   2173*
_SQ050                                    EQU  00000064   2174*
_SQ051                                    EQU  00000066   2175*
_SQ052                                    EQU  00000068   2176*
_SQ053                                    EQU  0000006A   2177*
_SQ054                                    EQU  0000006C   2178*
_SQ055                                    EQU  0000006E   2179*
_SQ056                                    EQU  00000070   2180*
_SQ057                                    EQU  00000072   2181*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    39

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ058                                    EQU  00000074   2182*
_SQ059                                    EQU  00000076   2183*
_SQ060                                    EQU  00000078   2184*
_SQ061                                    EQU  0000007A   2185*
_SQ062                                    EQU  0000007C   2186*
_SQ063                                    EQU  0000007E   2187*
_SQ064                                    EQU  00000080   2188*
_SQ065                                    EQU  00000082   2189*
_SQ066                                    EQU  00000084   2190*
_SQ067                                    EQU  00000086   2191*
_SQ068                                    EQU  00000088   2192*
_SQ069                                    EQU  0000008A   2193*
_SQ070                                    EQU  0000008C   2194*
_SQ071                                    EQU  0000008E   2195*
_SQ072                                    EQU  00000090   2196*
_SQ073                                    EQU  00000092   2197*
_SQ074                                    EQU  00000094   2198*
_SQ075                                    EQU  00000096   2199*
_SQ076                                    EQU  00000098   2200*
_SQ077                                    EQU  0000009A   2201*
_SQ078                                    EQU  0000009C   2202*
_SQ079                                    EQU  0000009E   2203*
_SQ080                                    EQU  000000A0   2204*
_SQ081                                    EQU  000000A2   2205*
_SQ082                                    EQU  000000A4   2206*
_SQ083                                    EQU  000000A6   2207*
_SQ084                                    EQU  000000A8   2208*
_SQ085                                    EQU  000000AA   2209*
_SQ086                                    EQU  000000AC   2210*
_SQ087                                    EQU  000000AE   2211*
_SQ088                                    EQU  000000B0   2212*
_SQ089                                    EQU  000000B2   2213*
_SQ090                                    EQU  000000B4   2214*
_SQ091                                    EQU  000000B6   2215*
_SQ092                                    EQU  000000B8   2216*
_SQ093                                    EQU  000000BA   2217*
_SQ094                                    EQU  000000BC   2218*
_SQ095                                    EQU  000000BE   2219*
_SQ096                                    EQU  000000C0   2220*
_SQ097                                    EQU  000000C2   2221*
_SQ098                                    EQU  000000C4   2222*
_SQ099                                    EQU  000000C6   2223*
_SQ100                                    EQU  000000C8   2225*
_SQ101                                    EQU  000000CA   2226*
_SQ102                                    EQU  000000CC   2227*
_SQ103                                    EQU  000000CE   2228*
_SQ104                                    EQU  000000D0   2229*
_SQ105                                    EQU  000000D2   2230*
_SQ106                                    EQU  000000D4   2231*
_SQ107                                    EQU  000000D6   2232*
_SQ108                                    EQU  000000D8   2233*
_SQ109                                    EQU  000000DA   2234*
_SQ110                                    EQU  000000DC   2235*
_SQ111                                    EQU  000000DE   2236*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    40

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ112                                    EQU  000000E0   2237*
_SQ113                                    EQU  000000E2   2238*
_SQ114                                    EQU  000000E4   2239*
_SQ115                                    EQU  000000E6   2240*
_SQ116                                    EQU  000000E8   2241*
_SQ117                                    EQU  000000EA   2242*
_SQ118                                    EQU  000000EC   2243*
_SQ119                                    EQU  000000EE   2244*
_SQ120                                    EQU  000000F0   2245*
_SQ121                                    EQU  000000F2   2246*
_SQ122                                    EQU  000000F4   2247*
_SQ123                                    EQU  000000F6   2248*
_SQ124                                    EQU  000000F8   2249*
_SQ125                                    EQU  000000FA   2250*
_SQ126                                    EQU  000000FC   2251*
_SQ127                                    EQU  000000FE   2252*
_SQ128                                    EQU  00000100   2253*
_SQ129                                    EQU  00000102   2254*
_SQ130                                    EQU  00000104   2255*
_SQ131                                    EQU  00000106   2256*
_SQ132                                    EQU  00000108   2257*
_SQ133                                    EQU  0000010A   2258*
_SQ134                                    EQU  0000010C   2259*
_SQ135                                    EQU  0000010E   2260*
_SQ136                                    EQU  00000110   2261*
_SQ137                                    EQU  00000112   2262*
_SQ138                                    EQU  00000114   2263*
_SQ139                                    EQU  00000116   2264*
_SQ140                                    EQU  00000118   2265*
_SQ141                                    EQU  0000011A   2266*
_SQ142                                    EQU  0000011C   2267*
_SQ143                                    EQU  0000011E   2268*
_SQ144                                    EQU  00000120   2269*
_SQ145                                    EQU  00000122   2270*
_SQ146                                    EQU  00000124   2271*
_SQ147                                    EQU  00000126   2272*
_SQ148                                    EQU  00000128   2273*
_SQ149                                    EQU  0000012A   2274*
_SQ150                                    EQU  0000012C   2275*
_SQ151                                    EQU  0000012E   2276*
_SQ152                                    EQU  00000130   2277*
_SQ153                                    EQU  00000132   2278*
_SQ154                                    EQU  00000134   2279*
_SQ155                                    EQU  00000136   2280*
_SQ156                                    EQU  00000138   2281*
_SQ157                                    EQU  0000013A   2282*
_SQ158                                    EQU  0000013C   2283*
_SQ159                                    EQU  0000013E   2284*
_SQ160                                    EQU  00000140   2285*
_SQ161                                    EQU  00000142   2286*
_SQ162                                    EQU  00000144   2287*
_SQ163                                    EQU  00000146   2288*
_SQ164                                    EQU  00000148   2289*
_SQ165                                    EQU  0000014A   2290*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    41

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ166                                    EQU  0000014C   2291*
_SQ167                                    EQU  0000014E   2292*
_SQ168                                    EQU  00000150   2293*
_SQ169                                    EQU  00000152   2294*
_SQ170                                    EQU  00000154   2295*
_SQ171                                    EQU  00000156   2296*
_SQ172                                    EQU  00000158   2297*
_SQ173                                    EQU  0000015A   2298*
_SQ174                                    EQU  0000015C   2299*
_SQ175                                    EQU  0000015E   2300*
_SQ176                                    EQU  00000160   2301*
_SQ177                                    EQU  00000162   2302*
_SQ178                                    EQU  00000164   2303*
_SQ179                                    EQU  00000166   2304*
_SQ180                                    EQU  00000168   2305*
_SQ181                                    EQU  0000016A   2306*
_SQ182                                    EQU  0000016C   2307*
_SQ183                                    EQU  0000016E   2308*
_SQ184                                    EQU  00000170   2309*
_SQ185                                    EQU  00000172   2310*
_SQ186                                    EQU  00000174   2311*
_SQ187                                    EQU  00000176   2312*
_SQ188                                    EQU  00000178   2313*
_SQ189                                    EQU  0000017A   2314*
_SQ190                                    EQU  0000017C   2315*
_SQ191                                    EQU  0000017E   2316*
_SQ192                                    EQU  00000180   2317*
_SQ193                                    EQU  00000182   2318*
_SQ194                                    EQU  00000184   2319*
_SQ195                                    EQU  00000186   2320*
_SQ196                                    EQU  00000188   2321*
_SQ197                                    EQU  0000018A   2322*
_SQ198                                    EQU  0000018C   2323*
_SQ199                                    EQU  0000018E   2324*
_SQ200                                    EQU  00000190   2326*
_SQ201                                    EQU  00000192   2327*
_SQ202                                    EQU  00000194   2328*
_SQ203                                    EQU  00000196   2329*
_SQ204                                    EQU  00000198   2330*
_SQ205                                    EQU  0000019A   2331*
_SQ206                                    EQU  0000019C   2332*
_SQ207                                    EQU  0000019E   2333*
_SQ208                                    EQU  000001A0   2334*
_SQ209                                    EQU  000001A2   2335*
_SQ210                                    EQU  000001A4   2336*
_SQ211                                    EQU  000001A6   2337*
_SQ212                                    EQU  000001A8   2338*
_SQ213                                    EQU  000001AA   2339*
_SQ214                                    EQU  000001AC   2340*
_SQ215                                    EQU  000001AE   2341*
_SQ216                                    EQU  000001B0   2342*
_SQ217                                    EQU  000001B2   2343*
_SQ218                                    EQU  000001B4   2344*
_SQ219                                    EQU  000001B6   2345*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    42

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ220                                    EQU  000001B8   2346*
_SQ221                                    EQU  000001BA   2347*
_SQ222                                    EQU  000001BC   2348*
_SQ223                                    EQU  000001BE   2349*
_SQ224                                    EQU  000001C0   2350*
_SQ225                                    EQU  000001C2   2351*
_SQ226                                    EQU  000001C4   2352*
_SQ227                                    EQU  000001C6   2353*
_SQ228                                    EQU  000001C8   2354*
_SQ229                                    EQU  000001CA   2355*
_SQ230                                    EQU  000001CC   2356*
_SQ231                                    EQU  000001CE   2357*
_SQ232                                    EQU  000001D0   2358*
_SQ233                                    EQU  000001D2   2359*
_SQ234                                    EQU  000001D4   2360*
_SQ235                                    EQU  000001D6   2361*
_SQ236                                    EQU  000001D8   2362*
_SQ237                                    EQU  000001DA   2363*
_SQ238                                    EQU  000001DC   2364*
_SQ239                                    EQU  000001DE   2365*
_SQ240                                    EQU  000001E0   2366*
_SQ241                                    EQU  000001E2   2367*
_SQ242                                    EQU  000001E4   2368*
_SQ243                                    EQU  000001E6   2369*
_SQ244                                    EQU  000001E8   2370*
_SQ245                                    EQU  000001EA   2371*
_SQ246                                    EQU  000001EC   2372*
_SQ247                                    EQU  000001EE   2373*
_SQ248                                    EQU  000001F0   2374*
_SQ249                                    EQU  000001F2   2375*
_SQ250                                    EQU  000001F4   2376*
_SQ251                                    EQU  000001F6   2377*
_SQ252                                    EQU  000001F8   2378*
_SQ253                                    EQU  000001FA   2379*
_SQ254                                    EQU  000001FC   2380*
_SQ255                                    EQU  000001FE   2381*
_SQ256                                    EQU  00000200   2382*
_SQ257                                    EQU  00000202   2383*
_SQ258                                    EQU  00000204   2384*
_SQ259                                    EQU  00000206   2385*
_SQ260                                    EQU  00000208   2386*
_SQ261                                    EQU  0000020A   2387*
_SQ262                                    EQU  0000020C   2388*
_SQ263                                    EQU  0000020E   2389*
_SQ264                                    EQU  00000210   2390*
_SQ265                                    EQU  00000212   2391*
_SQ266                                    EQU  00000214   2392*
_SQ267                                    EQU  00000216   2393*
_SQ268                                    EQU  00000218   2394*
_SQ269                                    EQU  0000021A   2395*
_SQ270                                    EQU  0000021C   2396*
_SQ271                                    EQU  0000021E   2397*
_SQ272                                    EQU  00000220   2398*
_SQ273                                    EQU  00000222   2399*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    43

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ274                                    EQU  00000224   2400*
_SQ275                                    EQU  00000226   2401*
_SQ276                                    EQU  00000228   2402*
_SQ277                                    EQU  0000022A   2403*
_SQ278                                    EQU  0000022C   2404*
_SQ279                                    EQU  0000022E   2405*
_SQ280                                    EQU  00000230   2406*
_SQ281                                    EQU  00000232   2407*
_SQ282                                    EQU  00000234   2408*
_SQ283                                    EQU  00000236   2409*
_SQ284                                    EQU  00000238   2410*
_SQ285                                    EQU  0000023A   2411*
_SQ286                                    EQU  0000023C   2412*
_SQ287                                    EQU  0000023E   2413*
_SQ288                                    EQU  00000240   2414*
_SQ289                                    EQU  00000242   2415*
_SQ290                                    EQU  00000244   2416*
_SQ291                                    EQU  00000246   2417*
_SQ292                                    EQU  00000248   2418*
_SQ293                                    EQU  0000024A   2419*
_SQ294                                    EQU  0000024C   2420*
_SQ295                                    EQU  0000024E   2421*
_SQ296                                    EQU  00000250   2422*
_SQ297                                    EQU  00000252   2423*
_SQ298                                    EQU  00000254   2424*
_SQ299                                    EQU  00000256   2425*
_SQ300                                    EQU  00000258   2427*
_SQ301                                    EQU  0000025A   2428*
_SQ302                                    EQU  0000025C   2429*
_SQ303                                    EQU  0000025E   2430*
_SQ304                                    EQU  00000260   2431*
_SQ305                                    EQU  00000262   2432*
_SQ306                                    EQU  00000264   2433*
_SQ307                                    EQU  00000266   2434*
_SQ308                                    EQU  00000268   2435*
_SQ309                                    EQU  0000026A   2436*
_SQ310                                    EQU  0000026C   2437*
_SQ311                                    EQU  0000026E   2438*
_SQ312                                    EQU  00000270   2439*
_SQ313                                    EQU  00000272   2440*
_SQ314                                    EQU  00000274   2441*
_SQ315                                    EQU  00000276   2442*
_SQ316                                    EQU  00000278   2443*
_SQ317                                    EQU  0000027A   2444*
_SQ318                                    EQU  0000027C   2445*
_SQ319                                    EQU  0000027E   2446*
_SQ320                                    EQU  00000280   2447*
_SQ321                                    EQU  00000282   2448*
_SQ322                                    EQU  00000284   2449*
_SQ323                                    EQU  00000286   2450*
_SQ324                                    EQU  00000288   2451*
_SQ325                                    EQU  0000028A   2452*
_SQ326                                    EQU  0000028C   2453*
_SQ327                                    EQU  0000028E   2454*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    44

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ328                                    EQU  00000290   2455*
_SQ329                                    EQU  00000292   2456*
_SQ330                                    EQU  00000294   2457*
_SQ331                                    EQU  00000296   2458*
_SQ332                                    EQU  00000298   2459*
_SQ333                                    EQU  0000029A   2460*
_SQ334                                    EQU  0000029C   2461*
_SQ335                                    EQU  0000029E   2462*
_SQ336                                    EQU  000002A0   2463*
_SQ337                                    EQU  000002A2   2464*
_SQ338                                    EQU  000002A4   2465*
_SQ339                                    EQU  000002A6   2466*
_SQ340                                    EQU  000002A8   2467*
_SQ341                                    EQU  000002AA   2468*
_SQ342                                    EQU  000002AC   2469*
_SQ343                                    EQU  000002AE   2470*
_SQ344                                    EQU  000002B0   2471*
_SQ345                                    EQU  000002B2   2472*
_SQ346                                    EQU  000002B4   2473*
_SQ347                                    EQU  000002B6   2474*
_SQ348                                    EQU  000002B8   2475*
_SQ349                                    EQU  000002BA   2476*
_SQ350                                    EQU  000002BC   2477*
_SQ351                                    EQU  000002BE   2478*
_SQ352                                    EQU  000002C0   2479*
_SQ353                                    EQU  000002C2   2480*
_SQ354                                    EQU  000002C4   2481*
_SQ355                                    EQU  000002C6   2482*
_SQ356                                    EQU  000002C8   2483*
_SQ357                                    EQU  000002CA   2484*
_SQ358                                    EQU  000002CC   2485*
_SQ359                                    EQU  000002CE   2486*
_SQ360                                    EQU  000002D0   2487*
_SQ361                                    EQU  000002D2   2488*
_SQ362                                    EQU  000002D4   2489*
_SQ363                                    EQU  000002D6   2490*
_SQ364                                    EQU  000002D8   2491*
_SQ365                                    EQU  000002DA   2492*
_SQ366                                    EQU  000002DC   2493*
_SQ367                                    EQU  000002DE   2494*
_SQ368                                    EQU  000002E0   2495*
_SQ369                                    EQU  000002E2   2496*
_SQ370                                    EQU  000002E4   2497*
_SQ371                                    EQU  000002E6   2498*
_SQ372                                    EQU  000002E8   2499*
_SQ373                                    EQU  000002EA   2500*
_SQ374                                    EQU  000002EC   2501*
_SQ375                                    EQU  000002EE   2502*
_SQ376                                    EQU  000002F0   2503*
_SQ377                                    EQU  000002F2   2504*
_SQ378                                    EQU  000002F4   2505*
_SQ379                                    EQU  000002F6   2506*
_SQ380                                    EQU  000002F8   2507*
_SQ381                                    EQU  000002FA   2508*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    45

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ382                                    EQU  000002FC   2509*
_SQ383                                    EQU  000002FE   2510*
_SQ384                                    EQU  00000300   2511*
_SQ385                                    EQU  00000302   2512*
_SQ386                                    EQU  00000304   2513*
_SQ387                                    EQU  00000306   2514*
_SQ388                                    EQU  00000308   2515*
_SQ389                                    EQU  0000030A   2516*
_SQ390                                    EQU  0000030C   2517*
_SQ391                                    EQU  0000030E   2518*
_SQ392                                    EQU  00000310   2519*
_SQ393                                    EQU  00000312   2520*
_SQ394                                    EQU  00000314   2521*
_SQ395                                    EQU  00000316   2522*
_SQ396                                    EQU  00000318   2523*
_SQ397                                    EQU  0000031A   2524*
_SQ398                                    EQU  0000031C   2525*
_SQ399                                    EQU  0000031E   2526*
_SQ400                                    EQU  00000320   2528*
_SQ401                                    EQU  00000322   2529*
_SQ402                                    EQU  00000324   2530*
_SQ403                                    EQU  00000326   2531*
_SQ404                                    EQU  00000328   2532*
_SQ405                                    EQU  0000032A   2533*
_SQ406                                    EQU  0000032C   2534*
_SQ407                                    EQU  0000032E   2535*
_SQ408                                    EQU  00000330   2536*
_SQ409                                    EQU  00000332   2537*
_SQ410                                    EQU  00000334   2538*
_SQ411                                    EQU  00000336   2539*
_SQ412                                    EQU  00000338   2540*
_SQ413                                    EQU  0000033A   2541*
_SQ414                                    EQU  0000033C   2542*
_SQ415                                    EQU  0000033E   2543*
_SQ416                                    EQU  00000340   2544*
_SQ417                                    EQU  00000342   2545*
_SQ418                                    EQU  00000344   2546*
_SQ419                                    EQU  00000346   2547*
_SQ420                                    EQU  00000348   2548*
_SQ421                                    EQU  0000034A   2549*
_SQ422                                    EQU  0000034C   2550*
_SQ423                                    EQU  0000034E   2551*
_SQ424                                    EQU  00000350   2552*
_SQ425                                    EQU  00000352   2553*
_SQ426                                    EQU  00000354   2554*
_SQ427                                    EQU  00000356   2555*
_SQ428                                    EQU  00000358   2556*
_SQ429                                    EQU  0000035A   2557*
_SQ430                                    EQU  0000035C   2558*
_SQ431                                    EQU  0000035E   2559*
_SQ432                                    EQU  00000360   2560*
_SQ433                                    EQU  00000362   2561*
_SQ434                                    EQU  00000364   2562*
_SQ435                                    EQU  00000366   2563*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    46

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ436                                    EQU  00000368   2564*
_SQ437                                    EQU  0000036A   2565*
_SQ438                                    EQU  0000036C   2566*
_SQ439                                    EQU  0000036E   2567*
_SQ440                                    EQU  00000370   2568*
_SQ441                                    EQU  00000372   2569*
_SQ442                                    EQU  00000374   2570*
_SQ443                                    EQU  00000376   2571*
_SQ444                                    EQU  00000378   2572*
_SQ445                                    EQU  0000037A   2573*
_SQ446                                    EQU  0000037C   2574*
_SQ447                                    EQU  0000037E   2575*
_SQ448                                    EQU  00000380   2576*
_SQ449                                    EQU  00000382   2577*
_SQ450                                    EQU  00000384   2578*
_SQ451                                    EQU  00000386   2579*
_SQ452                                    EQU  00000388   2580*
_SQ453                                    EQU  0000038A   2581*
_SQ454                                    EQU  0000038C   2582*
_SQ455                                    EQU  0000038E   2583*
_SQ456                                    EQU  00000390   2584*
_SQ457                                    EQU  00000392   2585*
_SQ458                                    EQU  00000394   2586*
_SQ459                                    EQU  00000396   2587*
_SQ460                                    EQU  00000398   2588*
_SQ461                                    EQU  0000039A   2589*
_SQ462                                    EQU  0000039C   2590*
_SQ463                                    EQU  0000039E   2591*
_SQ464                                    EQU  000003A0   2592*
_SQ465                                    EQU  000003A2   2593*
_SQ466                                    EQU  000003A4   2594*
_SQ467                                    EQU  000003A6   2595*
_SQ468                                    EQU  000003A8   2596*
_SQ469                                    EQU  000003AA   2597*
_SQ470                                    EQU  000003AC   2598*
_SQ471                                    EQU  000003AE   2599*
_SQ472                                    EQU  000003B0   2600*
_SQ473                                    EQU  000003B2   2601*
_SQ474                                    EQU  000003B4   2602*
_SQ475                                    EQU  000003B6   2603*
_SQ476                                    EQU  000003B8   2604*
_SQ477                                    EQU  000003BA   2605*
_SQ478                                    EQU  000003BC   2606*
_SQ479                                    EQU  000003BE   2607*
_SQ480                                    EQU  000003C0   2608*
_SQ481                                    EQU  000003C2   2609*
_SQ482                                    EQU  000003C4   2610*
_SQ483                                    EQU  000003C6   2611*
_SQ484                                    EQU  000003C8   2612*
_SQ485                                    EQU  000003CA   2613*
_SQ486                                    EQU  000003CC   2614*
_SQ487                                    EQU  000003CE   2615*
_SQ488                                    EQU  000003D0   2616*
_SQ489                                    EQU  000003D2   2617*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    47

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ490                                    EQU  000003D4   2618*
_SQ491                                    EQU  000003D6   2619*
_SQ492                                    EQU  000003D8   2620*
_SQ493                                    EQU  000003DA   2621*
_SQ494                                    EQU  000003DC   2622*
_SQ495                                    EQU  000003DE   2623*
_SQ496                                    EQU  000003E0   2624*
_SQ497                                    EQU  000003E2   2625*
_SQ498                                    EQU  000003E4   2626*
_SQ499                                    EQU  000003E6   2627*
_SQ500                                    EQU  000003E8   2629*
_SQ501                                    EQU  000003EA   2630*
_SQ502                                    EQU  000003EC   2631*
_SQ503                                    EQU  000003EE   2632*
_SQ504                                    EQU  000003F0   2633*
_SQ505                                    EQU  000003F2   2634*
_SQ506                                    EQU  000003F4   2635*
_SQ507                                    EQU  000003F6   2636*
_SQ508                                    EQU  000003F8   2637*
_SQ509                                    EQU  000003FA   2638*
_SQ510                                    EQU  000003FC   2639*
_SQ511                                    EQU  000003FE   2640*
_SQ512                                    EQU  00000400   2641*
_SQ513                                    EQU  00000402   2642*
_SQ514                                    EQU  00000404   2643*
_SQ515                                    EQU  00000406   2644*
_SQ516                                    EQU  00000408   2645*
_SQ517                                    EQU  0000040A   2646*
_SQ518                                    EQU  0000040C   2647*
_SQ519                                    EQU  0000040E   2648*
_SQ520                                    EQU  00000410   2649*
_SQ521                                    EQU  00000412   2650*
_SQ522                                    EQU  00000414   2651*
_SQ523                                    EQU  00000416   2652*
_SQ524                                    EQU  00000418   2653*
_SQ525                                    EQU  0000041A   2654*
_SQ526                                    EQU  0000041C   2655*
_SQ527                                    EQU  0000041E   2656*
_SQ528                                    EQU  00000420   2657*
_SQ529                                    EQU  00000422   2658*
_SQ530                                    EQU  00000424   2659*
_SQ531                                    EQU  00000426   2660*
_SQ532                                    EQU  00000428   2661*
_SQ533                                    EQU  0000042A   2662*
_SQ534                                    EQU  0000042C   2663*
_SQ535                                    EQU  0000042E   2664*
_SQ536                                    EQU  00000430   2665*
_SQ537                                    EQU  00000432   2666*
_SQ538                                    EQU  00000434   2667*
_SQ539                                    EQU  00000436   2668*
_SQ540                                    EQU  00000438   2669*
_SQ541                                    EQU  0000043A   2670*
_SQ542                                    EQU  0000043C   2671*
_SQ543                                    EQU  0000043E   2672*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    48

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ544                                    EQU  00000440   2673*
_SQ545                                    EQU  00000442   2674*
_SQ546                                    EQU  00000444   2675*
_SQ547                                    EQU  00000446   2676*
_SQ548                                    EQU  00000448   2677*
_SQ549                                    EQU  0000044A   2678*
_SQ550                                    EQU  0000044C   2679*
_SQ551                                    EQU  0000044E   2680*
_SQ552                                    EQU  00000450   2681*
_SQ553                                    EQU  00000452   2682*
_SQ554                                    EQU  00000454   2683*
_SQ555                                    EQU  00000456   2684*
_SQ556                                    EQU  00000458   2685*
_SQ557                                    EQU  0000045A   2686*
_SQ558                                    EQU  0000045C   2687*
_SQ559                                    EQU  0000045E   2688*
_SQ560                                    EQU  00000460   2689*
_SQ561                                    EQU  00000462   2690*
_SQ562                                    EQU  00000464   2691*
_SQ563                                    EQU  00000466   2692*
_SQ564                                    EQU  00000468   2693*
_SQ565                                    EQU  0000046A   2694*
_SQ566                                    EQU  0000046C   2695*
_SQ567                                    EQU  0000046E   2696*
_SQ568                                    EQU  00000470   2697*
_SQ569                                    EQU  00000472   2698*
_SQ570                                    EQU  00000474   2699*
_SQ571                                    EQU  00000476   2700*
_SQ572                                    EQU  00000478   2701*
_SQ573                                    EQU  0000047A   2702*
_SQ574                                    EQU  0000047C   2703*
_SQ575                                    EQU  0000047E   2704*
_SQ576                                    EQU  00000480   2705*
_SQ577                                    EQU  00000482   2706*
_SQ578                                    EQU  00000484   2707*
_SQ579                                    EQU  00000486   2708*
_SQ580                                    EQU  00000488   2709*
_SQ581                                    EQU  0000048A   2710*
_SQ582                                    EQU  0000048C   2711*
_SQ583                                    EQU  0000048E   2712*
_SQ584                                    EQU  00000490   2713*
_SQ585                                    EQU  00000492   2714*
_SQ586                                    EQU  00000494   2715*
_SQ587                                    EQU  00000496   2716*
_SQ588                                    EQU  00000498   2717*
_SQ589                                    EQU  0000049A   2718*
_SQ590                                    EQU  0000049C   2719*
_SQ591                                    EQU  0000049E   2720*
_SQ592                                    EQU  000004A0   2721*
_SQ593                                    EQU  000004A2   2722*
_SQ594                                    EQU  000004A4   2723*
_SQ595                                    EQU  000004A6   2724*
_SQ596                                    EQU  000004A8   2725*
_SQ597                                    EQU  000004AA   2726*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    49

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ598                                    EQU  000004AC   2727*
_SQ599                                    EQU  000004AE   2728*
_SQ600                                    EQU  000004B0   2730*
_SQ601                                    EQU  000004B2   2731*
_SQ602                                    EQU  000004B4   2732*
_SQ603                                    EQU  000004B6   2733*
_SQ604                                    EQU  000004B8   2734*
_SQ605                                    EQU  000004BA   2735*
_SQ606                                    EQU  000004BC   2736*
_SQ607                                    EQU  000004BE   2737*
_SQ608                                    EQU  000004C0   2738*
_SQ609                                    EQU  000004C2   2739*
_SQ610                                    EQU  000004C4   2740*
_SQ611                                    EQU  000004C6   2741*
_SQ612                                    EQU  000004C8   2742*
_SQ613                                    EQU  000004CA   2743*
_SQ614                                    EQU  000004CC   2744*
_SQ615                                    EQU  000004CE   2745*
_SQ616                                    EQU  000004D0   2746*
_SQ617                                    EQU  000004D2   2747*
_SQ618                                    EQU  000004D4   2748*
_SQ619                                    EQU  000004D6   2749*
_SQ620                                    EQU  000004D8   2750*
_SQ621                                    EQU  000004DA   2751*
_SQ622                                    EQU  000004DC   2752*
_SQ623                                    EQU  000004DE   2753*
_SQ624                                    EQU  000004E0   2754*
_SQ625                                    EQU  000004E2   2755*
_SQ626                                    EQU  000004E4   2756*
_SQ627                                    EQU  000004E6   2757*
_SQ628                                    EQU  000004E8   2758*
_SQ629                                    EQU  000004EA   2759*
_SQ630                                    EQU  000004EC   2760*
_SQ631                                    EQU  000004EE   2761*
_SQ632                                    EQU  000004F0   2762*
_SQ633                                    EQU  000004F2   2763*
_SQ634                                    EQU  000004F4   2764*
_SQ635                                    EQU  000004F6   2765*
_SQ636                                    EQU  000004F8   2766*
_SQ637                                    EQU  000004FA   2767*
_SQ638                                    EQU  000004FC   2768*
_SQ639                                    EQU  000004FE   2769*
_SQ640                                    EQU  00000500   2770*
_SQ641                                    EQU  00000502   2771*
_SQ642                                    EQU  00000504   2772*
_SQ643                                    EQU  00000506   2773*
_SQ644                                    EQU  00000508   2774*
_SQ645                                    EQU  0000050A   2775*
_SQ646                                    EQU  0000050C   2776*
_SQ647                                    EQU  0000050E   2777*
_SQ648                                    EQU  00000510   2778*
_SQ649                                    EQU  00000512   2779*
_SQ650                                    EQU  00000514   2780*
_SQ651                                    EQU  00000516   2781*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    50

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ652                                    EQU  00000518   2782*
_SQ653                                    EQU  0000051A   2783*
_SQ654                                    EQU  0000051C   2784*
_SQ655                                    EQU  0000051E   2785*
_SQ656                                    EQU  00000520   2786*
_SQ657                                    EQU  00000522   2787*
_SQ658                                    EQU  00000524   2788*
_SQ659                                    EQU  00000526   2789*
_SQ660                                    EQU  00000528   2790*
_SQ661                                    EQU  0000052A   2791*
_SQ662                                    EQU  0000052C   2792*
_SQ663                                    EQU  0000052E   2793*
_SQ664                                    EQU  00000530   2794*
_SQ665                                    EQU  00000532   2795*
_SQ666                                    EQU  00000534   2796*
_SQ667                                    EQU  00000536   2797*
_SQ668                                    EQU  00000538   2798*
_SQ669                                    EQU  0000053A   2799*
_SQ670                                    EQU  0000053C   2800*
_SQ671                                    EQU  0000053E   2801*
_SQ672                                    EQU  00000540   2802*
_SQ673                                    EQU  00000542   2803*
_SQ674                                    EQU  00000544   2804*
_SQ675                                    EQU  00000546   2805*
_SQ676                                    EQU  00000548   2806*
_SQ677                                    EQU  0000054A   2807*
_SQ678                                    EQU  0000054C   2808*
_SQ679                                    EQU  0000054E   2809*
_SQ680                                    EQU  00000550   2810*
_SQ681                                    EQU  00000552   2811*
_SQ682                                    EQU  00000554   2812*
_SQ683                                    EQU  00000556   2813*
_SQ684                                    EQU  00000558   2814*
_SQ685                                    EQU  0000055A   2815*
_SQ686                                    EQU  0000055C   2816*
_SQ687                                    EQU  0000055E   2817*
_SQ688                                    EQU  00000560   2818*
_SQ689                                    EQU  00000562   2819*
_SQ690                                    EQU  00000564   2820*
_SQ691                                    EQU  00000566   2821*
_SQ692                                    EQU  00000568   2822*
_SQ693                                    EQU  0000056A   2823*
_SQ694                                    EQU  0000056C   2824*
_SQ695                                    EQU  0000056E   2825*
_SQ696                                    EQU  00000570   2826*
_SQ697                                    EQU  00000572   2827*
_SQ698                                    EQU  00000574   2828*
_SQ699                                    EQU  00000576   2829*
_SQCB200                                  EQU  00000000   2051*
_SQCB201                                  EQU  00000002   2052*
_SQCB202                                  EQU  00000004   2053*
_SQCB203                                  EQU  00000006   2054*
_SQCB204                                  EQU  00000008   2055*
_SQCB205                                  EQU  0000000A   2056*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    51

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB206                                  EQU  0000000C   2057*
_SQCB207                                  EQU  0000000E   2058*
_SQCB208                                  EQU  00000010   2059*
_SQCB209                                  EQU  00000012   2060*
_SQCB210                                  EQU  00000014   2061*
_SQCB211                                  EQU  00000016   2062*
_SQCB212                                  EQU  00000018   2063*
_SQCB213                                  EQU  0000001A   2064*
_SQCB214                                  EQU  0000001C   2065*
_SQCB215                                  EQU  0000001E   2066*
_SQCB216                                  EQU  00000020   2067*
_SQCB217                                  EQU  00000022   2068*
_SQCB218                                  EQU  00000024   2069*
_SQCB219                                  EQU  00000026   2070*
_SQCB220                                  EQU  00000028   2071*
_SQCB221                                  EQU  0000002A   2072*
_SQCB222                                  EQU  0000002C   2073*
_SQCB223                                  EQU  0000002E   2074*
_SQCB224                                  EQU  00000030   2075*
_SQCB225                                  EQU  00000032   2076*
_SQCB226                                  EQU  00000034   2077*
_SQCB227                                  EQU  00000036   2078*
_SQCB228                                  EQU  00000038   2079*
_SQCB229                                  EQU  0000003A   2080*
_SQCB230                                  EQU  0000003C   2081*
_SQCB231                                  EQU  0000003E   2082*
_SQCB232                                  EQU  00000040   2083*
_SQCB233                                  EQU  00000042   2084*
_SQCB234                                  EQU  00000044   2085*
_SQCB235                                  EQU  00000046   2086*
_SQCB236                                  EQU  00000048   2087*
_SQCB237                                  EQU  0000004A   2088*
_SQCB238                                  EQU  0000004C   2089*
_SQCB239                                  EQU  0000004E   2090*
_SQCB240                                  EQU  00000050   2091*
_SQCB241                                  EQU  00000052   2092*
_SQCB242                                  EQU  00000054   2093*
_SQCB243                                  EQU  00000056   2094*
_SQCB244                                  EQU  00000058   2095*
_SQCB245                                  EQU  0000005A   2096*
_SQCB246                                  EQU  0000005C   2097*
_SQCB247                                  EQU  0000005E   2098*
_SQCB248                                  EQU  00000060   2099*
_SQCB249                                  EQU  00000062   2100*
_SQCB250                                  EQU  00000064   2101*
_SQCB251                                  EQU  00000066   2102*
_SQCB252                                  EQU  00000068   2103*
_SQCB253                                  EQU  0000006A   2104*
_SQCB254                                  EQU  0000006C   2105*
_SQCB255                                  EQU  0000006E   2106*
_SQCB256                                  EQU  00000070   2107*
_SQCB257                                  EQU  00000072   2108*
_SQCB258                                  EQU  00000074   2109*
_SQCB259                                  EQU  00000076   2110*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    52

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB260                                  EQU  00000078   2111*
_SQCB261                                  EQU  0000007A   2112*
_SQCB262                                  EQU  0000007C   2113*
_SQCB263                                  EQU  0000007E   2114*
_SQCB264                                  EQU  00000080   2115*
_SQCB265                                  EQU  00000082   2116*
_SQCB266                                  EQU  00000084   2117*
_SQCB267                                  EQU  00000086   2118*
_SQCB268                                  EQU  00000088   2119*
_SQCB269                                  EQU  0000008A   2120*
_SQ_CB_DAT1                               EQU  00000046   2047*
_SQ_ERR_END                               EQU  0000FF00   1996*
_SQ_NML_COD                               EQU  00000000   1994*
_SQ_NML_END                               EQU  00000055   1995*
_START_ACK_COD                            EQU  00004321    211*
_START_REQ_COD                            EQU  00009876    210*
_STBCR                                    IMPT 00000000    341 
_STBCR2                                   IMPT 00000000    344 
_STWU_CHG                                 IMPT 00000000   1943 
_STWU_CODE                       P        EXPT 00000464   1886  3972*
_STWU_CODE_END                   P        EXPT 00000472   1887  3981*
_STW_CHG                                  IMPT 00000000   1944 
_STW_CMD                                  EQU  00000024   2031* 3927 
_STW_CODE                        P        EXPT 00000440   1888  3920*
_STW_CODE_END                    P        EXPT 0000044E   1889  3930*
_STW_SUB                         P        EXPT 00000450   1821  3937*
_STW_SUB_END                     P             0000045E   3944  3949*
_ST_CHG                                   IMPT 00000000   1927 
_ST_CODE                         P        EXPT 00000084   1852  3010*
_ST_CODE_END                     P        EXPT 0000009E   1853  3028*
_SUB_CHG                                  IMPT 00000000   1950 
_SUB_CMD                                  EQU  00000048   2040* 4432 
_SUB_CODE                        P        EXPT 0000059C   1906  4426*
_SUB_CODE_END                    P        EXPT 000005A8   1907  4435*
_SUB_SUB                         P        EXPT 000005A8   1830  4443*
_SUB_SUB_END                     P             000005BA   4450  4457*
_TCNT0                                    IMPT 00000000    357 
_TCNT1                                    IMPT 00000000    360 
_TCNT2                                    IMPT 00000000    363 
_TCOR0                                    IMPT 00000000    356 
_TCOR1                                    IMPT 00000000    359 
_TCOR2                                    IMPT 00000000    362 
_TCPR2                                    IMPT 00000000    365 
_TCR0                                     IMPT 00000000    358 
_TCR1                                     IMPT 00000000    361 
_TCR2                                     IMPT 00000000    364 
_TEA                                      IMPT 00000000    279 
_TMR_CMD                                  EQU  00000010   2026* 3444 
_TOCR                                     IMPT 00000000    354 
_TRA                                      IMPT 00000000    284 
_TSTR                                     IMPT 00000000    355 
_TTB                                      IMPT 00000000    278 
_VUPCHECK_EQU                             EQU  11AB3739     98*
_WCR1                                     IMPT 00000000    305 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    53

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_WCR2                                     IMPT 00000000    306 
_WCR3                                     IMPT 00000000    307 
_WCTR_CHG                                 IMPT 00000000   1932 
_WCTR_CODE                       P        EXPT 000002E4   1876  3609*
_WCTR_CODE_END                   P        EXPT 000002EE   1877  3617*
_WCTR_S05                        P             00000300   3642  3652*
_WCTR_S05_10                     P             00000314   3660  3668*
_WCTR_S10                        P             00000330   3678  3688*
_WCTR_S15                        P             00000368   3711  3723*
_WCTR_S20                        P             000003A0   3737  3762*
_WCTR_S50                        P             000003BC   3645  3662  3775*
_WCTR_SUB                        P        EXPT 000002F0   1817  3634*
_WCTR_SUB_END                    P             000003F4   3681  3714  3764  3813*
_WNNRG_CHG                                IMPT 00000000   1939 
_WNNRG_CODE                      P        EXPT 00000150   1868  3233*
_WNNRG_CODE_END                  P        EXPT 00000154   1869  3236*
_WNRG_CHG                                 IMPT 00000000   1938 
_WNRG_CODE                       P        EXPT 0000014C   1866  3223*
_WNRG_CODE_END                   P        EXPT 00000150   1867  3226*
_WSC_CHG                                  IMPT 00000000   1928 
_WSC_CMD                                  EQU  00000018   2028* 3249 
_WSC_CODE                        P        EXPT 00000154   1878  3244*
_WSC_CODE_END                    P        EXPT 00000166   1879  3258*
_WSC_S10                         P             00000178   3273  3279*
_WSC_SUB                         P        EXPT 00000168   1818  3266*
_WSR_CHG                                  IMPT 00000000   1933 
_WSR_CMD                                  EQU  0000001C   2029* 3301 
_WSR_CODE                        P        EXPT 00000180   1880  3291*
_WSR_CODE_END                    P        EXPT 00000194   1881  3304*
_WSR_S10                         P             000001B8   3329  3339*
_WSR_SUB                         P        EXPT 00000194   1819  3312*
_WTCNT                                    IMPT 00000000    342 
_WTCSR                                    IMPT 00000000    343 
_WTMR_CHG                                 IMPT 00000000   1931 
_WTMR_CODE                       P        EXPT 00000200   1874  3440*
_WTMR_CODE_END                   P        EXPT 0000020A   1875  3448*
_WTMR_S10                        P             00000258   3508  3515*
_WTMR_S10_000                    P             0000022A   3472  3483*
_WTMR_S10_020                    P             0000024C   3490  3504*
_WTMR_S50                        P             00000290   3464  3552*
_WTMR_SUB                        P        EXPT 0000020C   1816  3456*
_WTMR_SUB_END                    P             000002C4   3496  3511  3540  3587*
_XORW_CHG                                 IMPT 00000000   1953 
_XORW_CMD                                 EQU  00000040   2038* 4325 
_XORW_CODE                       P        EXPT 00000554   1902  4319*
_XORW_CODE_END                   P        EXPT 00000560   1903  4328*
_XORW_SUB                        P        EXPT 00000560   1828  4336*
_XORW_SUB_END                    P             00000572   4343  4350*
_data_init2_timer                         IMPT 00000000   1763 
_mem_chk_flg                              IMPT 00000000   1765 
_sram_top                                 IMPT 00000000   1761 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/12/17 19:19:42                                                  PAGE    54

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000005DE        
