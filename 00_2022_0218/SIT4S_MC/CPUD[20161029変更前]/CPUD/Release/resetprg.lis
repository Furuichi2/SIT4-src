*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;------------------------------------------------------------------------
    2                               2     ;                                                                       |
    3                               3     ;   FILE        :resetprg.src                                           |
    4                               4     ;   DATE        :Sun, Jul 16, 2006                                      |
    5                               5     ;   DESCRIPTION :Reset Program                                          |
    6                               6     ;   CPU TYPE    :Other                                                  |
    7                               7     ;                                                                       |
    8                               8     ;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
    9                               9     ;                                                                       |
   10                              10     ;------------------------------------------------------------------------
   11                              11             .include        "vect.inc"
   12                               1 I1  ;------------------------------------------------------------------------
   13                               2 I1  ;                                                                       |
   14                               3 I1  ;   FILE        :vect.inc                                               |
   15                               4 I1  ;   DATE        :Fri, Nov 22, 2013                                      |
   16                               5 I1  ;   DESCRIPTION :Definition of Vector                                   |
   17                               6 I1  ;   CPU TYPE    :SH7727                                                 |
   18                               7 I1  ;                                                                       |
   19                               8 I1  ;   This file is generated by Renesas Project Generator (Ver.4.19).     |
   20                               9 I1  ;   NOTE:THIS IS A TYPICAL EXAMPLE.                                     |
   21                              10 I1  ;------------------------------------------------------------------------
   22                              11 I1  
   23                              12 I1  
   24                              13 I1  ;;SR_Init:      .equ    B'01100000000000000000000011110000
   25          40000010            14 I1  SR_Init:        .equ    B'01000000000000000000000000010000      ;// ëSäÑçûÇ›ãñâ¬
   26          400000F0            15 I1  SR_Init_DI:     .equ    B'01000000000000000000000011110000      ;// ëSäÑçûÇ›ã÷é~
   27          400000D0            16 I1  SR_Init_SCIEI   .equ    B'01000000000000000000000011010000      ;// ≤∆º¨ŸéûÇÃ ﬁ∞ºﬁÆ›UPë“Çø
                                          éû(SCI(E)ÇæÇØãñâ¬)
   28                              17 I1  
   29                              18 I1  
   30                              19 I1  ;<<VECTOR DATA START (POWER ON RESET)>>
   31                              20 I1          ;H'000 Power On Reset (H-UDI RESET)
   32                              21 I1          .global _PowerON_Reset
                                          
   33                              22 I1  ;<<VECTOR DATA END (POWER ON RESET)>>
   34                              23 I1  ;<<VECTOR DATA START (MANUAL RESET)>>
   35                              24 I1          ;H'020 Manual Reset
   36                              25 I1          .global _Manual_Reset
                                          
   37                              26 I1  ;<<VECTOR DATA END (MANUAL RESET)>>
   38                              27 I1          ;H'040 TLB miss/invalid (load)
   39                              28 I1          .global     _INT_TLBMiss_Load
   40                              29 I1          ;H'060 TLB miss/invalid (store)
   41                              30 I1          .global     _INT_TLBMiss_Store
   42                              31 I1          ;H'070 TBL exception/CPU Address error in repeat loop
   43                              32 I1          .global     _INT_TLBCPU_ADERR
   44                              33 I1          ;H'080 Initial page write
   45                              34 I1          .global     _INT_TLBInitial_Page
   46                              35 I1          ;H'0A0 TLB protect (load)
   47                              36 I1          .global     _INT_TLBProtect_Load
   48                              37 I1          ;H'0C0 TLB protect (store)
   49                              38 I1          .global     _INT_TLBProtect_Store
   50                              39 I1          ;H'0D0 TLB protect in repeat loop
   51                              40 I1          .global     _INT_TLBProtect_Loop
   52                              41 I1          ;H'0E0 Address error (load)
   53                              42 I1          .global     _INT_Address_load
   54                              43 I1          ;H'100 Address error (store)
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     2
PROGRAM NAME =

   55                              44 I1          .global     _INT_Address_store
   56                              45 I1          ;H'120 Reserved
   57                              46 I1          .global     _INT_Reserved1
   58                              47 I1          ;H'140 Reserved
   59                              48 I1          .global     _INT_Reserved2
   60                              49 I1          ;H'160 TRAPA
   61                              50 I1          .global     _INT_TRAPA
   62                              51 I1          ;H'180 Illegal code
   63                              52 I1          .global     _INT_Illegal_code
   64                              53 I1          ;H'1A0 Illegal slot
   65                              54 I1          .global     _INT_Illegal_slot
   66                              55 I1          ;H'1C0 Nonmaskable interrupt
   67                              56 I1          .global     _INT_NMI
   68                              57 I1          ;H'1E0 User breakpoint trap
   69                              58 I1          .global     _INT_User_Break
   70                              59 I1          ;H'200 External hardware interrupt
   71                              60 I1          .global     _INT_Extern_0000
   72                              61 I1          ;H'220 External hardware interrupt
   73                              62 I1          .global     _INT_Extern_0001
   74                              63 I1          ;H'240 External hardware interrupt
   75                              64 I1          .global     _INT_Extern_0010
   76                              65 I1          ;H'260 External hardware interrupt
   77                              66 I1          .global     _INT_Extern_0011
   78                              67 I1          ;H'280 External hardware interrupt
   79                              68 I1          .global     _INT_Extern_0100
   80                              69 I1          ;H'2A0 External hardware interrupt
   81                              70 I1          .global     _INT_Extern_0101
   82                              71 I1          ;H'2C0 External hardware interrupt
   83                              72 I1          .global     _INT_Extern_0110
   84                              73 I1          ;H'2E0 External hardware interrupt
   85                              74 I1          .global     _INT_Extern_0111
   86                              75 I1          ;H'300 External hardware interrupt
   87                              76 I1          .global     _INT_Extern_1000
   88                              77 I1          ;H'320 External hardware interrupt
   89                              78 I1          .global     _INT_Extern_1001
   90                              79 I1          ;H'340 External hardware interrupt
   91                              80 I1          .global     _INT_Extern_1010
   92                              81 I1          ;H'360 External hardware interrupt
   93                              82 I1          .global     _INT_Extern_1011
   94                              83 I1          ;H'380 External hardware interrupt
   95                              84 I1          .global     _INT_Extern_1100
   96                              85 I1          ;H'3A0 External hardware interrupt
   97                              86 I1          .global     _INT_Extern_1101
   98                              87 I1          ;H'3C0 External hardware interrupt
   99                              88 I1          .global     _INT_Extern_1110
  100                              89 I1          ;H'3E0 Reserved
  101                              90 I1          .global     _INT_Reserved3E0
  102                              91 I1          ;H'400 TMU TUNI0
  103                              92 I1          .global     _INT_TMU_TUNI0
  104                              93 I1          ;H'420 TMU TUNI1
  105                              94 I1          .global     _INT_TMU_TUNI1
  106                              95 I1          ;H'440 TMU TUNI2
  107                              96 I1          .global     _INT_TMU_TUNI2
  108                              97 I1          ;H'460 TMU TICPI2
  109                              98 I1          .global     _INT_TMU_TICPI2
  110                              99 I1          ;H'480 RTC ATI
  111                             100 I1          .global     _INT_RTC_ATI
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     3
PROGRAM NAME =

  112                             101 I1          ;H'4A0 RTC PRI
  113                             102 I1          .global     _INT_RTC_PRI
  114                             103 I1          ;H'4C0 RTC CUI
  115                             104 I1          .global     _INT_RTC_CUI
  116                             105 I1          ;H'4E0 SCI ERI
  117                             106 I1          .global     _INT_SCI_ERI
  118                             107 I1          ;H'500 SCI RXI
  119                             108 I1          .global     _INT_SCI_RXI
  120                             109 I1          ;H'520 SCI TXI
  121                             110 I1          .global     _INT_SCI_TXI
  122                             111 I1          ;H'540 SCI TEI
  123                             112 I1          .global     _INT_SCI_TEI
  124                             113 I1          ;H'560 CPG ITI
  125                             114 I1          .global     _INT_CPG_ITI
  126                             115 I1          ;H'580 BSC RCMI
  127                             116 I1          .global     _INT_BSC_RCMI
  128                             117 I1          ;H'5A0 BSC ROVI
  129                             118 I1          .global     _INT_BSC_ROVI
  130                             119 I1          ;H'5C0 Reserved
  131                             120 I1          .global     _INT_Reserved5C0
  132                             121 I1          ;H'5E0 H-UDI
  133                             122 I1          .global     _INT_H_UDI
  134                             123 I1          ;H'600 IRQ0
  135                             124 I1          .global     _INT_IRQ0
  136                             125 I1          ;H'620 IRQ1
  137                             126 I1          .global     _INT_IRQ1
  138                             127 I1          ;H'640 IRQ2
  139                             128 I1          .global     _INT_IRQ2
  140                             129 I1          ;H'660 IRQ3
  141                             130 I1          .global     _INT_IRQ3
  142                             131 I1          ;H'680 IRQ4
  143                             132 I1          .global     _INT_IRQ4
  144                             133 I1          ;H'6A0 IRQ5
  145                             134 I1          .global     _INT_IRQ5
  146                             135 I1          ;H'6C0 Reserved
  147                             136 I1          .global     _INT_Reserved6C0
  148                             137 I1          ;H'6E0 Reserved
  149                             138 I1          .global     _INT_Reserved6E0
  150                             139 I1          ;H'700 PINT0_7
  151                             140 I1          .global     _INT_PINT0_7
  152                             141 I1          ;H'720 PINT8_15
  153                             142 I1          .global     _INT_PINT8_15
  154                             143 I1          ;H'740 Reserved
  155                             144 I1          .global     _INT_Reserved740
  156                             145 I1          ;H'760 Reserved
  157                             146 I1          .global     _INT_Reserved760
  158                             147 I1          ;H'780 Reserved
  159                             148 I1          .global     _INT_Reserved780
  160                             149 I1          ;H'7A0 Reserved
  161                             150 I1          .global     _INT_Reserved7A0
  162                             151 I1          ;H'7C0 Reserved
  163                             152 I1          .global     _INT_Reserved7C0
  164                             153 I1          ;H'7E0 Reserved
  165                             154 I1          .global     _INT_Reserved7E0
  166                             155 I1          ;H'800 DMAC DEI0
  167                             156 I1          .global     _INT_DMAC_DEI0
  168                             157 I1          ;H'820 DMAC DEI1
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     4
PROGRAM NAME =

  169                             158 I1          .global     _INT_DMAC_DEI1
  170                             159 I1          ;H'840 DMAC DEI2
  171                             160 I1          .global     _INT_DMAC_DEI2
  172                             161 I1          ;H'860 DMAC DEI3
  173                             162 I1          .global     _INT_DMAC_DEI3
  174                             163 I1          ;H'880 Reserved
  175                             164 I1          .global     _INT_Reserved880
  176                             165 I1          ;H'8A0 Reserved
  177                             166 I1          .global     _INT_Reserved8A0
  178                             167 I1          ;H'8C0 Reserved
  179                             168 I1          .global     _INT_Reserved8C0
  180                             169 I1          ;H'8E0 Reserved
  181                             170 I1          .global     _INT_Reserved8E0
  182                             171 I1          ;H'900 SCIF ERI2
  183                             172 I1          .global     _INT_SCIF_ERI2
  184                             173 I1          ;H'920 SCIF RXI2
  185                             174 I1          .global     _INT_SCIF_RXI2
  186                             175 I1          ;H'940 SCIF BRI2
  187                             176 I1          .global     _INT_SCIF_BRI2
  188                             177 I1          ;H'960 SCIF TXI2
  189                             178 I1          .global     _INT_SCIF_TXI2
  190                             179 I1          ;H'980 ADC ADI
  191                             180 I1          .global     _INT_ADC_ADI
  192                             181 I1          ;H'9A0 LCDC LCDCI
  193                             182 I1          .global     _INT_LCDC_LCDCI
  194                             183 I1          ;H'9C0 PCC0
  195                             184 I1          .global     _INT_PCC0
  196                             185 I1          ;H'9E0 Reserved
  197                             186 I1          .global     _INT_Reserved9E0
  198                             187 I1          ;H'A00 USBH USBHI
  199                             188 I1          .global     _INT_USBH_USBHI
  200                             189 I1          ;H'A20 USBF USBFI0
  201                             190 I1          .global     _INT_USBF_USBFI0
  202                             191 I1          ;H'A40 USBF USBFI1
  203                             192 I1          .global     _INT_USBF_USBFI1
  204                             193 I1          ;H'A60 AFEIF AFEIFI
  205                             194 I1          .global     _INT_AFEIF_AFEIFI
  206                             195 I1          ;H'A80 Reserved
  207                             196 I1          .global     _INT_ReservedA80
  208                             197 I1          ;H'AA0 Reserved
  209                             198 I1          .global     _INT_ReservedAA0
  210                             199 I1          ;H'AC0 Reserved
  211                             200 I1          .global     _INT_ReservedAC0
  212                             201 I1          ;H'AE0 Reserved
  213                             202 I1          .global     _INT_ReservedAE0
  214                             203 I1          ;H'B00 SIOF SIFERI
  215                             204 I1          .global     _INT_SIOF_SIFERI
  216                             205 I1          ;H'B20 SIOF SIFTXI
  217                             206 I1          .global     _INT_SIOF_SIFTXI
  218                             207 I1          ;H'B40 SIOF SIFRXI
  219                             208 I1          .global     _INT_SIOF_SIFRXI
  220                             209 I1          ;H'B60 SIOF SIFCCI
  221                             210 I1          .global     _INT_SIOF_SIFCCI
  222                             211 I1          ; dummy
  223                             212 I1          .global     _DUMMY
  224                             213 I1  
  225                              12             .include        "cm_equ1.equ"
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     5
PROGRAM NAME =

  226                               1 I1  ;       ***************************
  227                               2 I1  ;       ***     CONST           ***
  228                               3 I1  ;       ***************************
  229                               4 I1  
  230                               5 I1  ;       *****   ÉrÉbÉg   *****
  231          00000001             6 I1  BIT0            .EQU    B'00000001      ;01H
  232          00000002             7 I1  BIT1            .EQU    B'00000010      ;02H
  233          00000004             8 I1  BIT2            .EQU    B'00000100      ;04H
  234          00000008             9 I1  BIT3            .EQU    B'00001000      ;08H
  235          00000010            10 I1  BIT4            .EQU    B'00010000      ;10H
  236          00000020            11 I1  BIT5            .EQU    B'00100000      ;20H
  237          00000040            12 I1  BIT6            .EQU    B'01000000      ;40H
  238          00000080            13 I1  BIT7            .EQU    B'10000000      ;80H
  239          00000100            14 I1  BIT8            .EQU    B'0000000100000000      ;0100H
  240          00000200            15 I1  BIT9            .EQU    B'0000001000000000      ;0200H
  241          00000400            16 I1  BIT10           .EQU    B'0000010000000000      ;0400H
  242          00000800            17 I1  BIT11           .EQU    B'0000100000000000      ;0800H
  243          00001000            18 I1  BIT12           .EQU    B'0001000000000000      ;1000H
  244          00002000            19 I1  BIT13           .EQU    B'0010000000000000      ;2000H
  245          00004000            20 I1  BIT14           .EQU    B'0100000000000000      ;4000H
  246          00008000            21 I1  BIT15           .EQU    B'1000000000000000      ;8000H
  247          00010000            22 I1  BIT16           .EQU    H'00010000
  248          00020000            23 I1  BIT17           .EQU    H'00020000
  249          00040000            24 I1  BIT18           .EQU    H'00040000
  250          00080000            25 I1  BIT19           .EQU    H'00080000
  251          00100000            26 I1  BIT20           .EQU    H'00100000
  252          00200000            27 I1  BIT21           .EQU    H'00200000
  253          00400000            28 I1  BIT22           .EQU    H'00400000
  254          00800000            29 I1  BIT23           .EQU    H'00800000
  255          01000000            30 I1  BIT24           .EQU    H'01000000
  256          02000000            31 I1  BIT25           .EQU    H'02000000
  257          04000000            32 I1  BIT26           .EQU    H'04000000
  258          08000000            33 I1  BIT27           .EQU    H'08000000
  259          10000000            34 I1  BIT28           .EQU    H'10000000
  260          20000000            35 I1  BIT29           .EQU    H'20000000
  261          40000000            36 I1  BIT30           .EQU    H'40000000
  262          80000000            37 I1  BIT31           .EQU    H'80000000
  263                              38 I1  
  264                              39 I1  ;       *****   ÉrÉbÉg   *****
  265          000000FE            40 I1  NBIT0           .EQU    B'11111110              ;NOT 01H
  266          000000FD            41 I1  NBIT1           .EQU    B'11111101              ;02H
  267          000000FB            42 I1  NBIT2           .EQU    B'11111011              ;04H
  268          000000F7            43 I1  NBIT3           .EQU    B'11110111              ;08H
  269          000000EF            44 I1  NBIT4           .EQU    B'11101111              ;10H
  270          000000DF            45 I1  NBIT5           .EQU    B'11011111              ;20H
  271          000000BF            46 I1  NBIT6           .EQU    B'10111111              ;40H
  272          0000007F            47 I1  NBIT7           .EQU    B'01111111              ;80H
  273                              48 I1  
  274          0000FEFF            49 I1  NBIT8           .EQU    B'1111111011111111      ;NOT 01H
  275          0000FDFF            50 I1  NBIT9           .EQU    B'1111110111111111      ;02H
  276          0000FBFF            51 I1  NBIT10          .EQU    B'1111101111111111      ;04H
  277          0000F7FF            52 I1  NBIT11          .EQU    B'1111011111111111      ;08H
  278          0000EFFF            53 I1  NBIT12          .EQU    B'1110111111111111      ;10H
  279          0000DFFF            54 I1  NBIT13          .EQU    B'1101111111111111      ;20H
  280          0000BFFF            55 I1  NBIT14          .EQU    B'1011111111111111      ;40H
  281          00007FFF            56 I1  NBIT15          .EQU    B'0111111111111111      ;80H
  282                              57 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     6
PROGRAM NAME =

  283                              58 I1  ;       **** ÉrÉbÉgëÄçÏñΩóﬂ *****
  284          00000000            59 I1  XBIT0           .EQU    D'0             ;
  285          00000001            60 I1  XBIT1           .EQU    D'1             ;
  286          00000002            61 I1  XBIT2           .EQU    D'2             ;
  287          00000003            62 I1  XBIT3           .EQU    D'3             ;
  288          00000004            63 I1  XBIT4           .EQU    D'4             ;
  289          00000005            64 I1  XBIT5           .EQU    D'5             ;
  290          00000006            65 I1  XBIT6           .EQU    D'6             ;
  291          00000007            66 I1  XBIT7           .EQU    D'7             ;
  292                              67 I1  
  293                              68 I1  ;       *******************************************
  294                              69 I1  ;       ***             sh2/sh3                 ***
  295                              70 I1  ;       *******************************************
  296                              71 I1  ;       ================ WORD ±∏æΩ// ﬁ≤ƒ±∏æΩêÿë÷ =========
  297          00000001            72 I1  L_BYTE          .EQU    1               ;
  298          00000000            73 I1  H_BYTE          .EQU    0               ;
  299                              74 I1  
  300                              75 I1  ;/*     =================================       */
  301                              76 I1  
  302                              77 I1  _CMPILE_YES     .DEFINE         "1"
  303                              78 I1  _CMPILE_NO      .DEFINE         "0"
  304                              79 I1  
  305                              80 I1  _Debug_YES      .DEFINE         "1"     ;"_Debug_NO"
  306                              81 I1  _Debug_NO       .DEFINE         "0"     ;yes then abs //no then inc "_Debug_NO"
  307                              82 I1  
  308                              83 I1  
  309                              84 I1  ;       ***************************************************
  310                              85 I1  ;       ***                                             ***
  311                              86 I1  ;       ***              ﬁ∞ºﬁÆ›UPäÆóπ¡™Ø∏√ﬁ∞¿           ***
  312                              87 I1  ;       ***                                             ***
  313                              88 I1  ;       ***************************************************
  314          11AB3739            89 I1  _VUPCHECK_EQU           .EQU    D'0296433465
  315                              90 I1  
  316                              91 I1  ;/*     ***********************************     */
  317                              92 I1  ;/*     ***                             ***     */
  318                              93 I1  ;/*     ***     ROM SUM_CODE            ***     */
  319                              94 I1  ;/*     ***                             ***     */
  320                              95 I1  ;/*     ***********************************     */
  321          5AA53CC3            96 I1  _DUMMY_SUM_CODE         .EQU    H'5AA53CC3
  322                              97 I1  
  323                              98 I1  
  324                              99 I1  
  325                             100 I1  ;       *******************************************
  326                             101 I1  ;       ***     2003-07-01 C/B BAKUP            ***
  327                             102 I1  ;       *******************************************
  328          5AA51234           103 I1  _CB_BAK_SUM_COD1        .EQU    H'5AA51234
  329          A55A4321           104 I1  _CB_BAK_SUM_COD2        .EQU    H'A55A4321
  330          00005678           105 I1  _CB_BAKUP_CMD1          .EQU    H'5678  ;BAKUP
  331          00001234           106 I1  _CB_BAKUP_CMD2          .EQU    H'1234  ;1BLK MOVE
  332                             107 I1  
  333          00000040           108 I1  _CB_STS_BUF_1BLK        .EQU    64                                      ;1BLK=64byte
  334          00000008           109 I1  _CB_STS_BUF_BLKMAX      .EQU    8                                       ;8BLK
  335          00000200           110 I1  _CB_STS_BUF_MAX         .EQU    _CB_STS_BUF_1BLK*_CB_STS_BUF_BLKMAX     ;512byte 64*8
  336                             111 I1  
  337                             112 I1  
  338                             113 I1  ;;_CB_TRD_DT_LNG                .EQU    4               ;DATA LENGTH
  339          00000004           114 I1  _CB_TRD_DP_CH                   .EQU    4               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     7
PROGRAM NAME =

  340                             115 I1  
  341                             116 I1  
  342          00000080           117 I1  _CB_TRD_SMP_CNT         .EQU    128             ;å¬êî
  343          00000060           118 I1  _CB_TRD_BEFORE          .EQU    96              ;96ì_Ç™ëO
  344          00000800           119 I1  _CB_TRD_BUF_MAX         .EQU    4*4*128         ;2048byte 4byte*4ch*128å¬
  345                             120 I1  
  346          00000008           121 I1  _CB_TRD_DP_1CNT         .EQU    8               ;8å¬ 128/16
  347          00000080           122 I1  _CB_TRD_BUF_DP_MAX      .EQU    4*4*8           ;128byte 4byte*4CH*8å¬
  348                             123 I1  
  349                             124 I1  ;       === 2003-07-14 ===
  350                             125 I1  ;;;_TRD_WORK_1CH_BUF    .EQU    _CB_TRD_BUF_MAX ;1CH Ç≈2048 ﬁ≤ƒÇ‹Ç≈ämï€
  351                             126 I1  
  352                             127 I1  ;       ==== 2004-01-27 ===
  353          00000040           128 I1  _CB_ERR_INFO_MEM        .EQU    64              ;64byte
  354                             129 I1  
  355                             130 I1  ;       ***************************
  356                             131 I1  ;       ***     2004-02-19      ***
  357                             132 I1  ;       ***************************
  358                             133 I1  ;       êªïièoâ◊éûÇÕYESÇ…Ç∑ÇÈÇ±Ç∆
  359                             134 I1  ;       ïsãÔçáçƒåªééå±ópÇ…NOÇ…Ç∑ÇÈ
  360                             135 I1  ;
  361                             136 I1  ;;;;_PLSI_WR_WT_CHG             .DEFINE         "0"     ;YES:WR WAIT 4CLK(NO 3CLK)
  362                             137 I1  
  363                             138 I1  ;       ===== èoâ◊YES =====
  364                             139 I1  _PLSI_WR_WT_CHG         .DEFINE         "1"     ;YES:WR WAIT 4CLK(NO 3CLK)
  365                             140 I1  _PLSI_WRITE_WORD        .DEFINE         "1"     ;YES:LSI WORD(NO LONG)
  366                             141 I1  _PLSI_ERR_CHK1          .DEFINE         "1"     ;YES:à íuåàÇﬂLSIàŸèÌåüímóLå¯
  367                             142 I1  _PLSI_ERR_CHK2          .DEFINE         "1"     ;YES:à íuåàÇﬂââéZàŸèÌåüímóLå¯
  368                             143 I1  _PLSI_ERR_STOP1         .DEFINE         "1"     ;YES:êVãKàŸèÌåüímóLå¯(OVER RUN)
  369                             144 I1  
  370                             145 I1  
  371                             146 I1  ;       ====    èoâ◊éûYES 2004-03-29====
  372                             147 I1  _REST_PLS_MODFY         .DEFINE         "1"     ;YES:CPUAÇ…éc ﬂŸΩÇÇ†ÇÌÇπÇÈ,àŸèÌ
  373                             148 I1  ;;;;;_MOTION_ERR_CPU_B  .DEFINE         "1"     ;YES:CPU-BÇÃ”∞ºÆ›àŸèÌä÷òA(1ëŒ1Ç…Ç∑ÇÈ)
  374                             149 I1  
  375                             150 I1  
  376                             151 I1  
  377                             152 I1  ;       ====    èoâ◊éûïKÇ∏ÅEê‚ëŒ "NO" 2004-04-14(ê‚ëŒNOÇ≈èoâ◊)====
  378                             153 I1  _CPU_A_ERR_STOP         .DEFINE         "0"     ;YES:CPU-AàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBBÇÃ√ﬁ ﬁØ∏óp
  379                             154 I1  ;;;;;0          .DEFINE         "1"     ;YES:CPU-AàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBBÇÃ√ﬁ ﬁØ∏óp
  380                             155 I1  
  381                             156 I1  
  382                             157 I1  ;       ====    èoâ◊éûïKÇ∏ÅEê‚ëŒ "NO" 2004-12-20(ê‚ëŒNOÇ≈èoâ◊)====
  383                             158 I1  _CPU_B_ERR_STOP         .DEFINE         "0"     ;YES:CPU-BàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBAÇÃ√ﬁ ﬁØ∏óp
  384                             159 I1  _CPU_B_CTRL_STOP        .DEFINE         "0"     ;YES:CPU-Bêßå‰ÇÇ‚ÇﬂÇÈÅBAÇÃ√ﬁ ﬁØ∏óp
  385                             160 I1  
  386                             161 I1  ;       ==== Ç«Ç§ÇµÇƒÇ‡âÒîÇ≈Ç´Ç»Ç¢àŸèÌ====
  387                             162 I1  _CPUAB_ERR_STOP_CNT     .DEFINE         "1"     ;
  388                             163 I1  
  389                             164 I1  ;       ***************************
  390                             165 I1  ;       ***                     ***
  391                             166 I1  ;       ***     2006-09-19      ***
  392                             167 I1  ;       ***                     ***
  393                             168 I1  ;       ***************************
  394                             169 I1  _LSI_SOFT_CAL_ENB       .DEFINE         "1"
  395                             170 I1  ;;1     .DEFINE         "0"
  396                             171 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     8
PROGRAM NAME =

  397                             172 I1  
  398                             173 I1  
  399                             174 I1  ;       ***************************
  400                             175 I1  ;       ***                     ***
  401                             176 I1  ;       ***     2008-09-16      ***
  402                             177 I1  ;       ***                     ***
  403                             178 I1  ;       ***************************
  404                             179 I1  _EMG_MINI               .DEFINE         "1"     ;YES:EMGèàóùÇÃä»ó™âª
  405                             180 I1  
  406                             181 I1  
  407                             182 I1  ;       ***************************
  408                             183 I1  ;       ***                     ***
  409                             184 I1  ;       ***                     ***
  410                             185 I1  ;       ***                     ***
  411                             186 I1  ;       ***************************
  412                             187 I1  _CPUB_TBLCURV           .DEFINE         "1"     ;YES:ã»ê¸√∞ÃﬁŸ(CPUAÇ∆ìØÇ∂) NO:íºê¸É^ÉCÉv
  413                             188 I1  ;;1             .DEFINE         "0"     ;YES:ã»ê¸√∞ÃﬁŸ(CPUAÇ∆ìØÇ∂) NO:íºê¸É^ÉCÉv
  414                             189 I1  
  415                             190 I1  
  416                             191 I1  
  417                             192 I1  
  418                             193 I1  ;       ***************************
  419                             194 I1  ;       ***                     ***
  420                             195 I1  ;       ***     2013-12-05      ***
  421                             196 I1  ;       ***                     ***
  422                             197 I1  ;       ***************************
  423                             198 I1  _MC_FUNC1_NO            .DEFINE         "0"     ;NO!:àŸèÌìôÇÃã@î\ÇÇÕÇ∏Ç∑
  424                             199 I1  
  425                             200 I1  
  426          00009876           201 I1  _START_REQ_COD          .EQU    H'9876  ;CPUD=>CPUA
  427          00004321           202 I1  _START_ACK_COD          .EQU    H'4321  ;
  428                             203 I1  
  429                             204 I1  
  430                             205 I1  
  431                             206 I1  
  432                             207 I1  ;       ***************************
  433                             208 I1  ;       ***                     ***
  434                             209 I1  ;       ***     2014-03-20      ***
  435                             210 I1  ;       ***                     ***
  436                             211 I1  ;       ***************************
  437                             212 I1  _KJYU_CLS               .DEFINE         "1"     ;YES:îΩì]”∞ƒﬁÇ≈â◊èdÇ≈ÇÃ∏€∞ΩﬁÇçsÇ§
  438                             213 I1  
  439                             214 I1  
  440                             215 I1  ;//     ***************************
  441                             216 I1  ;//     ***     2015-07-08      ***
  442                             217 I1  ;//     ***************************
  443                             218 I1  _DEBUG_SERVO_PLS_OFF    .DEFINE         "0"     ;èoâ◊éûÇÕïKÇ∏NO!
  444                             219 I1  ;;0     .DEFINE         "1"     ;èoâ◊éûÇÕïKÇ∏NO!
  445                              13             .INCLUDE        "shn_cmd1.MAC"          ;
  446                               1 I1  ;       ***********************************
  447                               2 I1  ;       ***     ñΩóﬂíuä∑É}ÉNÉç sh2/sh3  ***
  448                               3 I1  ;       ***********************************
  449                               4 I1  
  450                               5 I1  ;       ***********************************
  451                               6 I1  ;       ***     ñ≥èåèºÆ∞ƒJUMP          ***
  452                               7 I1  ;       ***********************************
  453                               8 I1          .MACRO  M_BRA   JMP_LABEL
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE     9
PROGRAM NAME =

  454                               9 I1          BRA     \JMP_LABEL
  455                              10 I1          NOP
  456                              11 I1          .ENDM
  457                              12 I1  
  458                              13 I1  ;       ***********************************
  459                              14 I1  ;       ***     ñ≥èåèºÆ∞ƒJUMP          ***
  460                              15 I1  ;       ***********************************
  461                              16 I1          .MACRO  X_BRA   JMP_LABEL
  462                              17 I1          BRA     \JMP_LABEL
  463                              18 I1          .ENDM
  464                              19 I1  
  465                              20 I1  ;       ***********************************
  466                              21 I1  ;       ***     LONG JUMP               ***
  467                              22 I1  ;       ***********************************
  468                              23 I1          .MACRO  M_JMP   JMP_LABEL,WKREG
  469                              24 I1          MOV.L   \JMP_LABEL,\WKREG
  470                              25 I1          JMP     @\WKREG
  471                              26 I1          NOP
  472                              27 I1          .ENDM
  473                              28 I1  
  474                              29 I1          .MACRO  REG_JMP WKREG
  475                              30 I1          JMP     @\WKREG
  476                              31 I1          NOP
  477                              32 I1          .ENDM
  478                              33 I1  
  479                              34 I1  
  480                              35 I1  
  481                              36 I1  ;       ***************************
  482                              37 I1  ;       ***     JMP COMMAND     ***
  483                              38 I1  ;       ***************************
  484                              39 I1          .MACRO  JMP_LMEM MEM_ADR,WKREG1
  485                              40 I1          MOV.L   \MEM_ADR,\WKREG1                        ;
  486                              41 I1          JMP     @\WKREG1
  487                              42 I1          NOP
  488                              43 I1          .ENDM
  489                              44 I1  
  490                              45 I1  
  491                              46 I1  ;       ***************************
  492                              47 I1  ;       ***     PUSH REG        ***
  493                              48 I1  ;       ***************************
  494                              49 I1  ;       REG --->(R15)[STACK]
  495                              50 I1  ;                R15=R15+4
  496                              51 I1  
  497                              52 I1          .MACRO  PUSH_REG1       WKREG1
  498                              53 I1          MOV.L   \WKREG1,@-R15           ;PUSH=SP-4
  499                              54 I1                                          ;REG=>[SP]
  500                              55 I1                                          ;"-4" FF,FF,FF,FC
  501                              56 I1          .ENDM
  502                              57 I1  ;       ***************************
  503                              58 I1  ;       ***     POP REG         ***
  504                              59 I1  ;       ***************************
  505                              60 I1          .MACRO  POP_REG1        WKREG1
  506                              61 I1                                  ; RE"+4" 00,00,00,04
  507                              62 I1          MOV.L   @R15+,\WKREG1        ;
  508                              63 I1          .ENDM
  509                              64 I1  
  510                              65 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    10
PROGRAM NAME =

  511                              66 I1  ;       ======= SYSTEM REGISTER :PR,MACL,MACH =====
  512                              67 I1  ;       ***************************
  513                              68 I1  ;       ***     PR-->STACK      ***
  514                              69 I1  ;       ***************************
  515                              70 I1          .MACRO  PUSH_PR
  516                              71 I1          STS.L   PR,@-R15
  517                              72 I1          .ENDM
  518                              73 I1  
  519                              74 I1  ;       ***************************
  520                              75 I1  ;       ***     PR<--STACK      ***
  521                              76 I1  ;       ***************************
  522                              77 I1          .MACRO  POP_PR
  523                              78 I1          LDS.L   @R15+,PR
  524                              79 I1          .ENDM
  525                              80 I1  
  526                              81 I1  ;       ***************************
  527                              82 I1  ;       ***     PR-->STACK      ***
  528                              83 I1  ;       ***************************
  529                              84 I1          .MACRO  INT_PUSH_PR
  530                              85 I1          STS.L   PR,@-R15
  531                              86 I1          .ENDM
  532                              87 I1  
  533                              88 I1  ;       ***************************
  534                              89 I1  ;       ***     PR<--STACK      ***
  535                              90 I1  ;       ***************************
  536                              91 I1          .MACRO  INT_POP_PR
  537                              92 I1          LDS.L   @R15+,PR
  538                              93 I1          .ENDM
  539                              94 I1  
  540                              95 I1  ;       ***************************
  541                              96 I1  ;       ***     MACHL-->STACK   ***
  542                              97 I1  ;       ***************************
  543                              98 I1          .MACRO  PUSH_MACHL
  544                              99 I1          STS.L   MACH,@-R15
  545                             100 I1          STS.L   MACL,@-R15
  546                             101 I1          .ENDM
  547                             102 I1  
  548                             103 I1  ;       ***************************
  549                             104 I1  ;       ***     MACHL<--STACK   ***
  550                             105 I1  ;       ***************************
  551                             106 I1          .MACRO  POP_MACHL
  552                             107 I1          LDS.L   @R15+,MACL
  553                             108 I1          LDS.L   @R15+,MACH
  554                             109 I1          .ENDM
  555                             110 I1  
  556                             111 I1  
  557                             112 I1  ;       *******************************************
  558                             113 I1  ;       ***     PUSH,POP SYSTEM CTRL REG        ***
  559                             114 I1  ;       *******************************************
  560                             115 I1          .MACRO  PUSH_SYS_REG    WKREG
  561                             116 I1          STC.L   \WKREG,@-R15
  562                             117 I1          .ENDM
  563                             118 I1  
  564                             119 I1          .MACRO  POP_SYS_REG     WKREG
  565                             120 I1          LDC.L   @R15+,\WKREG
  566                             121 I1          .ENDM
  567                             122 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    11
PROGRAM NAME =

  568                             123 I1  ;       ***********************************
  569                             124 I1  ;       ***     ªÃﬁŸ∞¡›Ω¿∞ƒ             ***
  570                             125 I1  ;       ***********************************
  571                             126 I1          .MACRO  SUB_START
  572                             127 I1          STS.L   PR,@-R15                ;[ïKóv]
  573                             128 I1  ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
  574                             129 I1          .ENDM
  575                             130 I1  
  576                             131 I1  ;       ***********************************
  577                             132 I1  ;       ***     ªÃﬁŸ∞¡›END              ***
  578                             133 I1  ;       ***********************************
  579                             134 I1          .MACRO  SUB_END                 ;
  580                             135 I1  ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
  581                             136 I1          LDS.L   @R15+,PR                ;[ïKóv]
  582                             137 I1          .ENDM
  583                             138 I1  
  584                             139 I1  ;       ***********************************
  585                             140 I1  ;       ***     RET                     ***
  586                             141 I1  ;       ***********************************
  587                             142 I1          .MACRO  M_RTS
  588                             143 I1          RTS                             ;RTSÇÃå„ÇÎÇÃ
  589                             144 I1          NOP                             ;@R15+,PRÇÕ¿ﬁ“
  590                             145 I1          .ENDM
  591                             146 I1  
  592                             147 I1  ;       *******************************************
  593                             148 I1  ;       ***     FAR CALL ASM-->C COMMAND        ***
  594                             149 I1  ;       *******************************************
  595                             150 I1          .MACRO  FAR_JSR MEM_ADR,WKREG1
  596                             151 I1          MOV.L   \MEM_ADR,\WKREG1                ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
  597                             152 I1          JSR     @\WKREG1                        ;
  598                             153 I1          NOP                                     ;
  599                             154 I1          .ENDM
  600                             155 I1  
  601                             156 I1          .MACRO  JSR_REG WKREG1
  602                             157 I1          JSR     @\WKREG1                        ;
  603                             158 I1          NOP                                     ;
  604                             159 I1          .ENDM
  605                             160 I1  
  606                             161 I1  ;       ***********************************
  607                             162 I1  ;       ***     NEAR CALL COMMAND       ***
  608                             163 I1  ;       ***********************************
  609                             164 I1          .MACRO  NEAR_BSR        CALL_LABEL              ;
  610                             165 I1          BSR     \CALL_LABEL                             ;
  611                             166 I1          NOP
  612                             167 I1          .ENDM
  613                             168 I1  
  614                             169 I1  ;       ***********************************
  615                             170 I1  ;       ***     äÑçûRETUNR              ***
  616                             171 I1  ;       ***********************************
  617                             172 I1          .MACRO  M_RTE
  618                             173 I1          RTE
  619                             174 I1          NOP
  620                             175 I1          .ENDM
  621                             176 I1  
  622                             177 I1  
  623                             178 I1  
  624                             179 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    12
PROGRAM NAME =

  625                             180 I1  ;       ***************************
  626                             181 I1  ;       ***     DI              ***
  627                             182 I1  ;       ***************************
  628                             183 I1  ;;;;égópã÷é~    .MACRO  DI_PUSH_SR      WK_REG
  629                             184 I1  ;;;;            MOV     #B'11110000,\WK_REG             ;
  630                             185 I1  ;;;;            EXTU.B  \WK_REG,\WK_REG                 ;0 CLR BIT15~BIT8
  631                             186 I1  ;;;;            STC.L   SR,@-R15                        ;PUSH SR
  632                             187 I1  ;;;;            LDC     \WK_REG,SR                      ;äÑçûã÷é~Åi15Åj
  633                             188 I1  ;;;;            .ENDM
  634                             189 I1  
  635                             190 I1  ;       ***************************
  636                             191 I1  ;       ***     EI              ***
  637                             192 I1  ;       ***************************
  638                             193 I1  ;;;;égópã÷é~    .MACRO  EI_POP_SR                       ;
  639                             194 I1  ;;;;            LDC.L   @R15+,SR                        ;POP SR
  640                             195 I1  ;;;;            .ENDM
  641                             196 I1  
  642                             197 I1  
  643                             198 I1  
  644                             199 I1  ;       *******************************************
  645                             200 I1  ;       ***     TSTñΩóﬂéûÇÃBT,BFÇÃíuÇ´ä∑Ç¶      ***
  646                             201 I1  ;       ******************************************
  647                             202 I1          .MACRO  TST_BIT_ON      JMP_LABEL
  648                             203 I1          BF      \JMP_LABEL
  649                             204 I1          .ENDM
  650                             205 I1  
  651                             206 I1          .MACRO  TST_BIT_OF      JMP_LABEL
  652                             207 I1          BT      \JMP_LABEL
  653                             208 I1          .ENDM
  654                             209 I1  
  655                             210 I1  ;       *******************************************
  656                             211 I1  ;       ***     TSTñΩóﬂéûÇÃBT,BFÇÃíuÇ´ä∑Ç¶      ***
  657                             212 I1  ;       *******************************************
  658                             213 I1          .MACRO  TST_BITON_DLY   JMP_LABEL
  659                             214 I1          BF/S    \JMP_LABEL
  660                             215 I1          .ENDM
  661                             216 I1  
  662                             217 I1          .MACRO  TST_BITOF_DLY   JMP_LABEL
  663                             218 I1          BT/S    \JMP_LABEL
  664                             219 I1          .ENDM
  665                             220 I1  
  666                             221 I1  ;       ***********************************
  667                             222 I1  ;       ***                             ***
  668                             223 I1  ;       ***     ïÇìÆè¨êîì_push/pop      ***
  669                             224 I1  ;       ***                             ***
  670                             225 I1  ;       ***                             ***
  671                             226 I1  ;       ***********************************
  672                             227 I1          .MACRO  PUSH_SYS_FPU
  673                             228 I1          STS.L   FPUL,@-R15
  674                             229 I1          STS.L   FPSCR,@-R15
  675                             230 I1          .ENDM
  676                             231 I1  
  677                             232 I1          .MACRO  POP_SYS_FPU
  678                             233 I1          LDS.L   @R15+,FPSCR
  679                             234 I1          LDS.L   @R15+,FPUL
  680                             235 I1          .ENDM
  681                             236 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    13
PROGRAM NAME =

  682                             237 I1  
  683                             238 I1          .MACRO  PUSH_FPU_REG1 WKREG
  684                             239 I1          FMOV.S  \WKREG,@-R15
  685                             240 I1          .ENDM
  686                             241 I1  
  687                             242 I1          .MACRO  POP_FPU_REG1 WKREG
  688                             243 I1          FMOV.S  @R15+,\WKREG
  689                             244 I1          .ENDM
  690                             245 I1  
  691                             246 I1          .MACRO  PUSH_FPU_ALL
  692                             247 I1                  PUSH_SYS_FPU            ;2001-07-08 koma add
  693                             248 I1                  PUSH_FPU_REG1 FR0       ;
  694                             249 I1                  PUSH_FPU_REG1 FR1       ;
  695                             250 I1                  PUSH_FPU_REG1 FR2       ;
  696                             251 I1                  PUSH_FPU_REG1 FR3       ;
  697                             252 I1                  PUSH_FPU_REG1 FR4       ;
  698                             253 I1          .ENDM
  699                             254 I1  
  700                             255 I1          .MACRO  POP_FPU_ALL
  701                             256 I1                  POP_FPU_REG1 FR4        ;2001-07-08 koma add
  702                             257 I1                  POP_FPU_REG1 FR3        ;
  703                             258 I1                  POP_FPU_REG1 FR2        ;
  704                             259 I1                  POP_FPU_REG1 FR1        ;
  705                             260 I1                  POP_FPU_REG1 FR0        ;
  706                             261 I1                  POP_SYS_FPU             ;
  707                             262 I1          .ENDM
  708                             263 I1  
  709                             264 I1  
  710                             265 I1  
  711                             266 I1  ;       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  712                             267 I1  ;       ~~~     êÍópœ∏€         ~~~
  713                             268 I1  ;       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  714                             269 I1          .MACRO  PUSH_ALL
  715                             270 I1          PUSH_REG1       R0      ;
  716                             271 I1          PUSH_REG1       R1      ;
  717                             272 I1          PUSH_REG1       R2      ;
  718                             273 I1          PUSH_REG1       R3      ;
  719                             274 I1          PUSH_REG1       R4      ;
  720                             275 I1          PUSH_REG1       R5      ;
  721                             276 I1          PUSH_REG1       R6      ;
  722                             277 I1          PUSH_REG1       R7      ;
  723                             278 I1          PUSH_REG1       R8      ;
  724                             279 I1          PUSH_REG1       R9      ;
  725                             280 I1          PUSH_REG1       R10     ;
  726                             281 I1          PUSH_REG1       R11     ;
  727                             282 I1          PUSH_REG1       R12     ;
  728                             283 I1          PUSH_REG1       R13     ;
  729                             284 I1          PUSH_REG1       R14     ;
  730                             285 I1          PUSH_MACHL              ;
  731                             286 I1          PUSH_SYS_REG    GBR     ;
  732                             287 I1          .AIF    _SIT_CPU_SEL EQ _SIT4_CPUB
  733                             288 I1          .AELSE
  734                             289 I1          PUSH_FPU_ALL            ;2001-07-08
  735                             290 I1          .AENDI
  736                             291 I1          .ENDM
  737                             292 I1  
  738                             293 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    14
PROGRAM NAME =

  739                             294 I1          .MACRO  POP_ALL         ;
  740                             295 I1          .AIF    _SIT_CPU_SEL EQ _SIT4_CPUB
  741                             296 I1          .AELSE
  742                             297 I1          POP_FPU_ALL             ;2001-07-08
  743                             298 I1          .AENDI
  744                             299 I1          POP_SYS_REG     GBR     ;
  745                             300 I1          POP_MACHL               ;
  746                             301 I1          POP_REG1        R14     ;
  747                             302 I1          POP_REG1        R13     ;
  748                             303 I1          POP_REG1        R12     ;
  749                             304 I1          POP_REG1        R11     ;
  750                             305 I1          POP_REG1        R10     ;
  751                             306 I1          POP_REG1        R9      ;
  752                             307 I1          POP_REG1        R8      ;
  753                             308 I1          POP_REG1        R7      ;
  754                             309 I1          POP_REG1        R6      ;
  755                             310 I1          POP_REG1        R5      ;
  756                             311 I1          POP_REG1        R4      ;
  757                             312 I1          POP_REG1        R3      ;
  758                             313 I1          POP_REG1        R2      ;
  759                             314 I1          POP_REG1        R1      ;
  760                             315 I1          POP_REG1        R0      ;
  761                             316 I1          .ENDM
  762                             317 I1  
  763                             318 I1  ;       *******************************************
  764                             319 I1  ;       ***                                     ***
  765                             320 I1  ;       ***                                     ***
  766                             321 I1  ;       ***             SH3êÍópœ∏€              ***
  767                             322 I1  ;       ***                                     ***
  768                             323 I1  ;       *******************************************
  769                             324 I1  ;       ***************************
  770                             325 I1  ;       ***     SSR-->STACK     ***
  771                             326 I1  ;       ***************************
  772                             327 I1  ;       sr-->ssr
  773                             328 I1          .MACRO  PUSH_SSR
  774                             329 I1          STS.L   SSR,@-R15
  775                             330 I1          .ENDM
  776                             331 I1  
  777                             332 I1  ;       ***************************
  778                             333 I1  ;       ***     SSR<--STACK     ***
  779                             334 I1  ;       ***************************
  780                             335 I1          .MACRO  POP_SSR
  781                             336 I1          LDS.L   @R15+,SSR
  782                             337 I1          .ENDM
  783                             338 I1  
  784                             339 I1  
  785                             340 I1  ;       ***************************
  786                             341 I1  ;       ***     SSR-->STACK     ***
  787                             342 I1  ;       ***************************
  788                             343 I1  ;       sr-->SSR
  789                             344 I1          .MACRO  PUSH_SPC
  790                             345 I1          STS.L   SPC,@-R15
  791                             346 I1          .ENDM
  792                             347 I1  
  793                             348 I1  ;       ***************************
  794                             349 I1  ;       ***     SSR<--STACK     ***
  795                             350 I1  ;       ***************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    15
PROGRAM NAME =

  796                             351 I1          .MACRO  POP_SPC
  797                             352 I1          LDS.L   @R15+,SPC
  798                             353 I1          .ENDM
  799                             354 I1  
  800                             355 I1  
  801                             356 I1  ;;;égópã÷é~     .MACRO  PUSH_ALL_SH3
  802                             357 I1  ;;;     PUSH_REG1       R0      ;
  803                             358 I1  ;;;     PUSH_REG1       R1      ;
  804                             359 I1  ;;;     PUSH_REG1       R2      ;
  805                             360 I1  ;;;     PUSH_REG1       R3      ;
  806                             361 I1  ;;;     PUSH_REG1       R4      ;
  807                             362 I1  ;;;     PUSH_REG1       R5      ;
  808                             363 I1  ;;;     PUSH_REG1       R6      ;
  809                             364 I1  ;;;     PUSH_REG1       R7      ;
  810                             365 I1  ;;;     PUSH_REG1       R8      ;
  811                             366 I1  ;;;     PUSH_REG1       R9      ;
  812                             367 I1  ;;;     PUSH_REG1       R10     ;
  813                             368 I1  ;;;     PUSH_REG1       R11     ;
  814                             369 I1  ;;;     PUSH_REG1       R12     ;
  815                             370 I1  ;;;     PUSH_REG1       R13     ;
  816                             371 I1  ;;;     PUSH_REG1       R14     ;
  817                             372 I1  ;;;     PUSH_MACHL              ;
  818                             373 I1  ;;;     PUSH_SYS_REG    GBR     ;
  819                             374 I1  ;;;     .ENDM
  820                             375 I1  
  821                             376 I1  
  822                             377 I1  ;;;égópã÷é~     .MACRO  POP_ALL_SH3
  823                             378 I1  ;;;     POP_SYS_REG     GBR     ;
  824                             379 I1  ;;;     POP_MACHL               ;
  825                             380 I1  ;;;     POP_REG1        R14     ;
  826                             381 I1  ;;;     POP_REG1        R13     ;
  827                             382 I1  ;;;     POP_REG1        R12     ;
  828                             383 I1  ;;;     POP_REG1        R11     ;
  829                             384 I1  ;;;     POP_REG1        R10     ;
  830                             385 I1  ;;;     POP_REG1        R9      ;
  831                             386 I1  ;;;     POP_REG1        R8      ;
  832                             387 I1  ;;;     POP_REG1        R7      ;
  833                             388 I1  ;;;     POP_REG1        R6      ;
  834                             389 I1  ;;;     POP_REG1        R5      ;
  835                             390 I1  ;;;     POP_REG1        R4      ;
  836                             391 I1  ;;;     POP_REG1        R3      ;
  837                             392 I1  ;;;     POP_REG1        R2      ;
  838                             393 I1  ;;;     POP_REG1        R1      ;
  839                             394 I1  ;;;     POP_REG1        R0      ;
  840                             395 I1  ;;;     .ENDM
  841                             396 I1  
  842                             397 I1  
  843                             398 I1          .MACRO  PUSH_INT_SYSREG                 ;
  844                             399 I1          PUSH_SPC                                ;PC->SPC->STACK
  845                             400 I1          PUSH_SSR                                ;SR->ssr->STACK
  846                             401 I1          PUSH_PR                                 ;RET _ADRESS ->PR->STACK
  847                             402 I1          .ENDM                                   ;
  848                             403 I1  
  849                             404 I1          .MACRO  POP_INT_SYSREG                  ;
  850                             405 I1          POP_PR                                  ;PR
  851                             406 I1          POP_SSR                                 ;ssr
  852                             407 I1          POP_SPC                                 ;SPC
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    16
PROGRAM NAME =

  853                             408 I1          .ENDM                                   ;
  854                             409 I1  
  855                             410 I1  
  856                             411 I1  
  857                             412 I1  
  858                             413 I1  
  859                             414 I1  ;       ***************************
  860                             415 I1  ;       ***     DI              ***
  861                             416 I1  ;       ***************************
  862                             417 I1          .MACRO  DI_PUSH_SR_SH3  WK_REG1,WK_REG2
  863                             418 I1          STC     SR,\WK_REG1                     ;
  864                             419 I1          MOV.W   #H'000000F0,\WK_REG2            ;
  865                             420 I1          OR      \WK_REG2,\WK_REG1               ;INT15
  866                             421 I1          STC.L   SR,@-R15                        ;PUSH SR
  867                             422 I1          LDC     \WK_REG1,SR                     ;äÑçûã÷é~Åi15Åj
  868                             423 I1          .ENDM
  869                             424 I1  
  870                             425 I1  ;       ***************************
  871                             426 I1  ;       ***     EI              ***
  872                             427 I1  ;       ***************************
  873                             428 I1          .MACRO  EI_POP_SR_SH3                   ;
  874                             429 I1          LDC.L   @R15+,SR                        ;POP SR
  875                             430 I1          .ENDM
  876                             431 I1  
  877                             432 I1  
  878                             433 I1  
  879                             434 I1  
  880                             435 I1  
  881                             436 I1  ;       *******************************************
  882                             437 I1  ;       ***                                     ***
  883                             438 I1  ;       ***                                     ***
  884                             439 I1  ;       ***                                     ***
  885                             440 I1  ;       ***                                     ***
  886                             441 I1  ;       ***                                     ***
  887                             442 I1  ;       ***                                     ***
  888                             443 I1  ;       ***                                     ***
  889                             444 I1  ;       ***                                     ***
  890                             445 I1  ;       *******************************************
  891                             446 I1  ;       ***************************************************
  892                             447 I1  ;       ****    64BIT DATA ÇÃïÑçÜîΩì] WORKïKóv          ***
  893                             448 I1  ;       ***************************************************
  894                             449 I1          .MACRO  NEG1_64 H_REG,L_REG,WKREG
  895                             450 I1          NOT     \L_REG,\L_REG                           ;
  896                             451 I1          NOT     \H_REG,\H_REG                           ;
  897                             452 I1          XOR     \WKREG,\WKREG                           ;
  898                             453 I1          SETT
  899                             454 I1          ADDC    \WKREG,\L_REG                           ;0+1+R2
  900                             455 I1          ADDC    \WKREG,\H_REG                           ;
  901                             456 I1          .ENDM
  902                             457 I1  
  903                             458 I1  ;       ***********************************
  904                             459 I1  ;       ***     DWORD +MAX~ -MIN CHK    ***
  905                             460 I1  ;       ***********************************
  906                             461 I1  ;       åãâ ÇÕÿ–Øƒ√ﬁ∞¿ÇÃîΩì]Çï‘Ç∑
  907                             462 I1          .MACRO  REG_PMAX_MMIN   DATA_REG,MAX_MIN_REG
  908                             463 I1          CMP/GE  \DATA_REG,\MAX_MIN_REG          ;
  909                             464 I1          BT      JMP01\@                         ;DATA =< MAX
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    17
PROGRAM NAME =

  910                             465 I1          MOV     \MAX_MIN_REG,\DATA_REG          ;MAX LIMIT
  911                             466 I1  JMP01\@:                                        ;
  912                             467 I1          NEG     \MAX_MIN_REG,\MAX_MIN_REG       ;
  913                             468 I1          CMP/GE  \MAX_MIN_REG,\DATA_REG          ;
  914                             469 I1          BT      JMP02\@                         ;MIN =< DATA
  915                             470 I1          MOV     \MAX_MIN_REG,\DATA_REG          ;MIN LIMIT
  916                             471 I1  JMP02\@:                                        ;
  917                             472 I1          NEG     \MAX_MIN_REG,\MAX_MIN_REG       ;
  918                             473 I1          .ENDM                                   ;
  919                             474 I1  
  920                             475 I1  ;       ***********************************
  921                             476 I1  ;       ***     DWORD +MAX~0 CHK        ***
  922                             477 I1  ;       ***********************************
  923                             478 I1          .MACRO  REG_PMAX_0_LMT  DATA_REG,MAX_REG
  924                             479 I1          CMP/PZ  \DATA_REG                       ;
  925                             480 I1          BT      JMP01\@                         ; data >=
  926                             481 I1          XOR     \DATA_REG,\DATA_REG             ;
  927                             482 I1  JMP01\@:                                        ;
  928                             483 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
  929                             484 I1          BT      JMP02\@                         ;DATA =< MAX
  930                             485 I1          MOV     \MAX_REG,\DATA_REG              ;
  931                             486 I1  JMP02\@:                                        ;
  932                             487 I1          .ENDM
  933                             488 I1  
  934                             489 I1  ;       ***********************************
  935                             490 I1  ;       ***     DWORD îÕàÕ¡™Ø∏ LMT      ***
  936                             491 I1  ;       ***********************************
  937                             492 I1  ;
  938                             493 I1          .MACRO  REG_PMAX_MMIN_LMT       DATA_REG,MAX_REG,MIN_REG
  939                             494 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
  940                             495 I1          BT      JMP01\@                         ;DATA =< MAX
  941                             496 I1          MOV     \MAX_REG,\DATA_REG              ;"+" MAX
  942                             497 I1          M_BRA   JMP02\@                         ;
  943                             498 I1  
  944                             499 I1  JMP01\@:                                        ;
  945                             500 I1          CMP/GE  \MIN_REG,\DATA_REG              ;
  946                             501 I1          BT      JMP02\@                         ;MIN =< DATA
  947                             502 I1          MOV     \MIN_REG,\DATA_REG              ;"-" MAX
  948                             503 I1  JMP02\@:                                        ;
  949                             504 I1          .ENDM
  950                             505 I1  
  951                             506 I1  ;       ***********************************
  952                             507 I1  ;       ***     DWORD îÕàÕ¡™Ø∏ CHK      ***
  953                             508 I1  ;       ***********************************
  954                             509 I1  ;
  955                             510 I1  ;
  956                             511 I1          .MACRO  REG_PMAX_MMIN_CHK       ANS_REG,DATA_REG,MAX_REG,MIN_REG
  957                             512 I1          XOR     \ANS_REG,\ANS_REG               ;
  958                             513 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
  959                             514 I1          BT      JMP01\@                         ;DATA =< MAX
  960                             515 I1          MOV     #BIT0,\ANS_REG                  ;"+" MAX
  961                             516 I1          M_BRA   JMP02\@                         ;
  962                             517 I1  
  963                             518 I1  JMP01\@:                                        ;
  964                             519 I1          CMP/GE  \MIN_REG,\DATA_REG              ;
  965                             520 I1          BT      JMP02\@                         ;MIN =< DATA
  966                             521 I1          MOV     #BIT1,\ANS_REG                  ;"-"
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    18
PROGRAM NAME =

  967                             522 I1  JMP02\@:                                        ;
  968                             523 I1          .ENDM
  969                             524 I1  ;       ***********************************
  970                             525 I1  ;       ***     IF "-" THEN 0           ***
  971                             526 I1  ;       ***********************************
  972                             527 I1          .MACRO  IF_REG_MINS_THEN_0 DATA_REG
  973                             528 I1          CMP/PL  \DATA_REG                       ;
  974                             529 I1          BT      JMP01\@                         ;
  975                             530 I1          XOR     \DATA_REG,\DATA_REG             ;
  976                             531 I1  JMP01\@:                                        ;
  977                             532 I1          .ENDM
  978                             533 I1  
  979                             534 I1  
  980                             535 I1  ;       *******************************************
  981                             536 I1  ;       ***     IF  REG >= MAX THEN MAX LIMIT   ***
  982                             537 I1  ;       *******************************************
  983                             538 I1  ;       IF R0 >= R1 THEN LIMIT R0<--R1  //REG1_CMP_REG2_LMT R0,GE,R1,R1,TO,R0   ;
  984                             539 I1  ;       IF R0 =< R1 THEN LIMIT R0<--R1  //REG1_CMP_REG2_LMT R1,GE,R0,R1,TO,R0   ;
  985                             540 I1          .MACRO  REG1_CMP_REG2_LMT REG1,CF,REG2,LMTREG,MEMO,ANSREG
  986                             541 I1                                          ;MEMO
  987                             542 I1          CMP/\CF \REG2,\REG1             ;REG1 >= REG2
  988                             543 I1          BF      JMP01\@                 ;
  989                             544 I1          MOV     \LMTREG,\ANSREG         ;
  990                             545 I1  JMP01\@:                                ;
  991                             546 I1                                          ;
  992                             547 I1          .ENDM
  993                             548 I1  
  994                             549 I1  
  995                             550 I1  ;       ***************************************************
  996                             551 I1  ;       ***                                             ***
  997                             552 I1  ;       ***                                             ***
  998                             553 I1  ;       ***                                             ***
  999                             554 I1  ;       ***             î‰är ⁄ºﬁΩ¿⁄ÕﬁŸ                  ***
 1000                             555 I1  ;       ***                                             ***
 1001                             556 I1  ;       ***                                             ***
 1002                             557 I1  ;       ***                                             ***
 1003                             558 I1  ;       ***************************************************
 1004                             559 I1  ;       *******************************************
 1005                             560 I1  ;       ***             à íu,à≥óÕî‰är           ***
 1006                             561 I1  ;       *******************************************
 1007                             562 I1          .MACRO  REG1_CMP_REG2_ROTL REG1,CF,REG2,ANS_REG         ;
 1008                             563 I1          CMP/\CF \REG2,\REG1                                     ;REG1 >= REG2
 1009                             564 I1          ROTCL   \ANS_REG                                        ;IF "0" ç∂
 1010                             565 I1          .ENDM                                                   ;
 1011                             566 I1  
 1012                             567 I1  ;       *******************************************
 1013                             568 I1  ;       ***             à íu,à≥óÕî‰är           ***
 1014                             569 I1  ;       *******************************************
 1015                             570 I1  ;       ANS."Tbit"
 1016                             571 I1          .MACRO  R1_AREA_R2_PV_ROTL  UP_REG,DN_REG,PV_REG                        ;
 1017                             572 I1          CMP/GE  \DN_REG,\PV_REG                                                 ;PV >= MIN
 1018                             573 I1          BF      JMPED\@                                                         ;"T=0"
 1019                             574 I1          CMP/GE  \PV_REG,\UP_REG                                                 ;
 1020                             575 I1          BF      JMPED\@                                                         ;"T=0"
 1021                             576 I1  JMPED\@:                                                                        ;
 1022                             577 I1          .ENDM                                                                   ;ANS."T"
 1023                             578 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    19
PROGRAM NAME =

 1024                             579 I1  
 1025                             580 I1  ;       ***************************************************
 1026                             581 I1  ;       ***     ÀΩ√ÿºΩïtÇ´î‰är                          ***
 1027                             582 I1  ;       ***************************************************
 1028                             583 I1  ;       å∏è≠ï˚å¸Ç…ÀΩ√ÿºΩÇì¸ÇÍÇÈ[å^äJäÆóπ,ëùà≥äÆóπ]
 1029                             584 I1  ;       data1  å≥ê›íË
 1030                             585 I1  ;       data2  [data1-HIS] data
 1031                             586 I1  ;       IF data1 < PV THEN "1"
 1032                             587 I1  ;       IF data2 > PV THEN "0"
 1033                             588 I1  ;       else Keep
 1034                             589 I1          .MACRO  UP1_HIS_DN_PV_ROTL  UP_REG,DN_REG,PV_REG,CF,OLDSQ,OLDBIT,CHKWKREG       ;G
                                          E or GT
 1035                             590 I1          CMP/\CF \UP_REG,\PV_REG                                                         ;P
                                          V >= UP THEN 1
 1036                             591 I1          BT      JMPED\@                                                                 ;"
                                          T=1"
 1037                             592 I1                                                                                          ;
 1038                             593 I1          CMP/\CF \DN_REG,\PV_REG                                                 ;PV >= DN
                                          NO THEN "0"
 1039                             594 I1          BF      JMPED\@                                                         ;PV < DN
 1040                             595 I1  
 1041                             596 I1  ;       --------- KEEP [REG BIT-->TÀﬁØƒ]---------
 1042                             597 I1          MOV.L   #\OLDBIT,\CHKWKREG                                              ;
 1043                             598 I1          TST     \CHKWKREG,\OLDSQ                                                ;"1" THEN
                                          T=0
 1044                             599 I1          MOVT    \CHKWKREG                                                       ;T-->reg
                                          [îΩì]]
 1045                             600 I1          TST     \CHKWKREG,\CHKWKREG                                             ;REG=0 THE
                                          N T=1   [îΩì]]
 1046                             601 I1  JMPED\@:                                                                        ;
 1047                             602 I1          .ENDM                                                                   ;ANS."T"
 1048                             603 I1  
 1049                             604 I1  
 1050                             605 I1  
 1051                             606 I1  ;       ëùâ¡ï˚å¸Ç…ÀΩ√ÿºΩÇì¸ÇÍÇÈ[à≥î≤äÆóπ]
 1052                             607 I1  ;       data1  å≥ê›íË
 1053                             608 I1  ;       data2  [data1+HIS] data
 1054                             609 I1  ;       IF data1 > PV THEN "1"
 1055                             610 I1  ;       IF data2 < PV THEN "0"
 1056                             611 I1  ;       else Keep
 1057                             612 I1  
 1058                             613 I1          .MACRO  DN1_HIS_UP_PV_ROTL  UP_REG,DN_REG,PV_REG,CF,OLDSQ,OLDBIT,CHKWKREG       ;G
                                          E or GT
 1059                             614 I1          CMP/\CF \UP_REG,\PV_REG                                                 ;PV >= UP
                                          THEN 1
 1060                             615 I1          BT      JMP1\@                                                          ;"T=1" ---
                                          -> neg "0"
 1061                             616 I1  
 1062                             617 I1          CMP/\CF \PV_REG,\DN_REG                                         ;DN >= PV  PV < DN
 1063                             618 I1          BT      JMPED\@                                                 ;NO "T=0"  "T=1"
 1064                             619 I1  
 1065                             620 I1  ;       --------- KEEP ---------
 1066                             621 I1          MOV.L   #\OLDBIT,\CHKWKREG                                      ;
 1067                             622 I1          TST     \CHKWKREG,\OLDSQ                                        ;"1" THEN T=0
 1068                             623 I1  JMP1\@:                                                                 ;
 1069                             624 I1  ;       --------- [TÀﬁØƒÇÃîΩì]]---------
 1070                             625 I1          MOVT    \CHKWKREG                                               ;T-->reg        [
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    20
PROGRAM NAME =

                                          îΩì]]
 1071                             626 I1          TST     \CHKWKREG,\CHKWKREG                                     ;REG=0 THEN T=1 [
                                          îΩì]]
 1072                             627 I1  JMPED\@:                                                                ;NO "T=0"  "T=1"
 1073                             628 I1  
 1074                             629 I1          .ENDM                                                                   ;ANS."T"
 1075                             630 I1  
 1076                             631 I1  
 1077                             632 I1  
 1078                             633 I1  
 1079                             634 I1  
 1080                             635 I1  
 1081                             636 I1  
 1082                             637 I1  ;       ***************************************************
 1083                             638 I1  ;       ***                                             ***
 1084                             639 I1  ;       ***             î‰är“”ÿ⁄ÕﬁŸ                     ***
 1085                             640 I1  ;       ***                                             ***
 1086                             641 I1  ;       ***************************************************
 1087                             642 I1  
 1088                             643 I1  
 1089                             644 I1  ;       ***************************************************
 1090                             645 I1  ;       ***                                             ***
 1091                             646 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1092                             647 I1  ;       ***                                             ***
 1093                             648 I1  ;       ***************************************************
 1094                             649 I1          .MACRO  MEM_CMP_REG_ROTL1 MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF,REG2,ANS_REG
 1095                             650 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1096                             651 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
 1097                             652 I1          .AIF    \CHG EQ 1                               ;
 1098                             653 I1          EXTU.W  \REGX,\REGX                             ;
 1099                             654 I1          .AENDI                                          ;
 1100                             655 I1          REG1_CMP_REG2_ROTL \REG1,\CF,\REG2,\ANS_REG     ;
 1101                             656 I1          .ENDM                                           ;
 1102                             657 I1  
 1103                             658 I1  ;       ***************************************************
 1104                             659 I1  ;       ***                                             ***
 1105                             660 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1106                             661 I1  ;       ***             ê›íËÅ{ADD√ﬁ∞¿                   ***
 1107                             662 I1  ;       ***                                             ***
 1108                             663 I1  ;       ***************************************************
 1109                             664 I1          .MACRO  MEM_CMP_REG_RL1AD MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF,REG2,ANS_REG,ADD_DT
 1110                             665 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1111                             666 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
 1112                             667 I1          .AIF    \CHG EQ 1                               ;
 1113                             668 I1          EXTU.W  \REGX,\REGX                             ;
 1114                             669 I1          .AENDI                                          ;
 1115                             670 I1          ADD     \ADD_DT,\REGX                           ;
 1116                             671 I1          REG1_CMP_REG2_ROTL \REG1,\CF,\REG2,\ANS_REG     ;
 1117                             672 I1          .ENDM                                           ;
 1118                             673 I1  
 1119                             674 I1  ;       ***************************************************
 1120                             675 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1121                             676 I1  ;       ***************************************************
 1122                             677 I1  ;
 1123                             678 I1  ;       R0:î‰ärï˚ñ@êÿë÷
 1124                             679 I1  ;
 1125                             680 I1          .MACRO  MEM_CMP_REG_ROTL2 MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF1,REG2,ANS_REG,CHGBIT
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    21
PROGRAM NAME =

 1126                             681 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1127                             682 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
 1128                             683 I1          .AIF    \CHG EQ 1                               ;
 1129                             684 I1          EXTU.W  \REGX,\REGX                             ;
 1130                             685 I1          .AENDI                                          ;
 1131                             686 I1          TST     #\CHGBIT,R0                             ;
 1132                             687 I1          TST_BIT_ON JMP1\@                               ;
 1133                             688 I1          REG1_CMP_REG2_ROTL \REG1,\CF1,\REG2,\ANS_REG    ;
 1134                             689 I1          M_BRA   JMP2\@                                  ;
 1135                             690 I1  
 1136                             691 I1  JMP1\@:
 1137                             692 I1          REG1_CMP_REG2_ROTL \REG2,\CF1,\REG1,\ANS_REG    ;
 1138                             693 I1  JMP2\@:                                                 ;
 1139                             694 I1          .ENDM                                           ;
 1140                             695 I1  
 1141                             696 I1  
 1142                             697 I1  
 1143                             698 I1  
 1144                             699 I1  
 1145                             700 I1  
 1146                             701 I1  
 1147                             702 I1  ;       ***********************************************************
 1148                             703 I1  ;       ***     SX 2WORD DATA -->LOAD + ON/OFF EDGE ,MAKE       ***
 1149                             704 I1  ;       ***********************************************************
 1150                             705 I1  ;       PLC 16+16-->16BIT DATAï¿Ç—ë÷Ç¶óLÇË
 1151                             706 I1  ;       R0~R3 USED
 1152                             707 I1  
 1153                             708 I1          .MACRO  WD_WD_LOAD_EDGE_MK      IN_SX_ADR,SQ_ADR,ON_ADR,OF_ADR
 1154                             709 I1          MOV.L   #\IN_SX_ADR,R0          ;
 1155                             710 I1          MOV.W   @R0,R2                  ;NEW LOAD
 1156                             711 I1          MOV.L   #\SQ_ADR,R3             ;
 1157                             712 I1          MOV.W   @R3,R1                  ;OLD LOAD
 1158                             713 I1          MOV.W   R2,@R3                  ;REFLASH R2:NEW R1:OLD
 1159                             714 I1  
 1160                             715 I1          MOV     R2,R3                   ;
 1161                             716 I1          XOR     R1,R2                   ;R2:EDGE
 1162                             717 I1  
 1163                             718 I1          MOV.L   #\ON_ADR,R0             ;
 1164                             719 I1          AND     R2,R3                   ;ON EDGE
 1165                             720 I1          MOV.W   R3,@R0                  ;ON EDGE SAVE
 1166                             721 I1          AND     R2,R1                   ;
 1167                             722 I1          MOV.L   #\OF_ADR,R0             ;
 1168                             723 I1          MOV.W   R1,@R0                  ;OFF EDGE SAVE
 1169                             724 I1          .ENDM
 1170                             725 I1  
 1171                             726 I1  
 1172                             727 I1  ;       ======= INPUT R2:NOW SEQ=======
 1173                             728 I1          .MACRO  WD_WD_LOAD_EDGE_MKREG   SQ_ADR,ON_ADR,OF_ADR
 1174                             729 I1          MOV.L   #\SQ_ADR,R3             ;
 1175                             730 I1          MOV.W   @R3,R1                  ;OLD LOAD
 1176                             731 I1          MOV.W   R2,@R3                  ;REFLASH R2:NEW R1:OLD
 1177                             732 I1  
 1178                             733 I1          MOV     R2,R3                   ;
 1179                             734 I1          XOR     R1,R2                   ;R2:EDGE
 1180                             735 I1  
 1181                             736 I1          MOV.L   #\ON_ADR,R0             ;
 1182                             737 I1          AND     R2,R3                   ;ON EDGE
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    22
PROGRAM NAME =

 1183                             738 I1          MOV.W   R3,@R0                  ;ON EDGE SAVE
 1184                             739 I1          AND     R2,R1                   ;
 1185                             740 I1          MOV.L   #\OF_ADR,R0             ;
 1186                             741 I1          MOV.W   R1,@R0                  ;OFF EDGE SAVE
 1187                             742 I1          .ENDM
 1188                             743 I1  
 1189                             744 I1  
 1190                             745 I1  
 1191                             746 I1  
 1192                             747 I1  
 1193                             748 I1  ;       ***********************************
 1194                             749 I1  ;       ***     R32/R16-->R16           ***
 1195                             750 I1  ;       ***     R2/R1-->R1              ***
 1196                             751 I1  ;       ***     REG2/REG1-->REG1        ***
 1197                             752 I1  ;       ***     0CHKóLÇË                ***
 1198                             753 I1  ;       ***     OVER FLOWóLÇË           ***
 1199                             754 I1  ;       ***********************************
 1200                             755 I1          .MACRO  MAC_DIVU_32REG2_16REG1_16REG2 REG1,REG2
 1201                             756 I1          SHLL16  \REG1                   ;BIT0~15-->BIT16~31
 1202                             757 I1          TST     \REG1,\REG1             ;
 1203                             758 I1          BT      DIVU1_ZERO_DIV\@        ;ZERO DIV        ANS.MAX
 1204                             759 I1          CMP/HS  \REG1,\REG2             ;UNSHIN R2[Rn] >= R1[Rm] ANS.0...R1
 1205                             760 I1          BT      DIVU1_ZERO_DIV\@        ;OVER FLOW
 1206                             761 I1  ;       ============================================
 1207                             762 I1          DIV0U                           ;FLAG M=Q=T=0
 1208                             763 I1  
 1209                             764 I1          .arepeat        16              ;åJï‘ìWäJ
 1210                             765 I1          DIV1    \REG1,\REG2             ;SHIFT 1 R1-R2 -->Q
 1211                             766 I1          .aendr                          ;
 1212                             767 I1  
 1213                             768 I1          ROTCL   \REG2                   ;T<--R2<--T
 1214                             769 I1  
 1215                             770 I1          EXTU.W  \REG2,\REG2             ;BIT31~BIT16 0 CLR
 1216                             771 I1          M_BRA   DIVU1_EXT\@             ;
 1217                             772 I1  
 1218                             773 I1  ;       ============================================
 1219                             774 I1  DIVU1_ZERO_DIV\@:
 1220                             775 I1          MOV.L   #H'0000FFFF,\REG2       ;MAX SET
 1221                             776 I1  DIVU1_EXT\@:                            ;
 1222                             777 I1          .ENDM
 1223                             778 I1  
 1224                             779 I1  
 1225                             780 I1  
 1226                             781 I1  
 1227                             782 I1  ;       ***********************************
 1228                             783 I1  ;       ***     R32/R16-->R16           ***
 1229                             784 I1  ;       ***     R2/R1-->R1              ***
 1230                             785 I1  ;       ***     REG2/REG1-->REG1        ***
 1231                             786 I1  ;       ***     0CHKóLÇË                ***
 1232                             787 I1  ;       ***     OVER FLOWóLÇË           ***
 1233                             788 I1  ;       ***********************************
 1234                             789 I1  ;       REG2/REG1-->REG2
 1235                             790 I1  ;       ***************************************************
 1236                             791 I1  ;       ***     REG2/REG1-->REG1                        ***
 1237                             792 I1  ;       ***************************************************
 1238                             793 I1  ;       REG1ï€éù
 1239                             794 I1  ;       WKREG1:îjâÛ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    23
PROGRAM NAME =

 1240                             795 I1  ;       WKREG2:îjâÛ
 1241                             796 I1  ;       REG2:ANS
 1242                             797 I1  
 1243                             798 I1          .MACRO  MAC_DIVS_32REG2_32REG1_32REG2 REG1,REG2,WKREG1,WKREG2
 1244                             799 I1          TST     \REG1,\REG1             ;
 1245                             800 I1          TST_BIT_OF DIVS21_ZERO\@        ;
 1246                             801 I1  
 1247                             802 I1          MOV     \REG2,\WKREG1           ;
 1248                             803 I1          ROTCL   \WKREG1                 ;
 1249                             804 I1          SUBC    \WKREG2,\WKREG2         ;ïÑçÜägí£64ÀﬁØƒ R4,R2
 1250                             805 I1          XOR     \WKREG1,\WKREG1         ;R3=0
 1251                             806 I1          SUBC    \WKREG1,\REG2           ;
 1252                             807 I1          DIV0S   \REG1,\WKREG2           ;
 1253                             808 I1          .arepeat        32              ;åJï‘ìWäJ
 1254                             809 I1          ROTCL   \REG2
 1255                             810 I1          DIV1    \REG1,\WKREG2           ;SHIFT 1 R1-R2 -->Q
 1256                             811 I1          .aendr                          ;
 1257                             812 I1          ROTCL   \REG2                   ;
 1258                             813 I1          ADDC    \WKREG1,\REG2           ;
 1259                             814 I1          M_BRA   DIVS21_EXT\@            ;
 1260                             815 I1  
 1261                             816 I1  DIVS21_ZERO\@:                          ;R3/R1-->R2 IF R1=0 THEN R2=7FFF FFFF // 8000 0000
                                          Ç™ñ{óàÇ©?
 1262                             817 I1          XOR     \REG2,\REG2             ;
 1263                             818 I1  DIVS21_EXT\@:                           ;
 1264                             819 I1          .ENDM
 1265                             820 I1  
 1266                             821 I1  ;       ***********************************************************
 1267                             822 I1  ;       ***                                                     ***
 1268                             823 I1  ;       ***             REG2[32]/REG1[16]-->REG2[16]            ***
 1269                             824 I1  ;       ***                                                     ***
 1270                             825 I1  ;       ***********************************************************
 1271                             826 I1  ;       REG1:KEEP
 1272                             827 I1  ;       REG2:ANS
 1273                             828 I1  ;       ========== REG1 KEEP =====
 1274                             829 I1          .MACRO  MAC_DIVS_32REG2_16REG1_16REG2 REG1,REG2
 1275                             830 I1          PUSH_REG1       \REG1                   ;
 1276                             831 I1          PUSH_REG1       \REG2                   ;
 1277                             832 I1          EXTS.W  \REG1,\REG1                     ;
 1278                             833 I1          CMP/PZ  \REG1                           ;
 1279                             834 I1          BT      DIVS1_020\@                     ;
 1280                             835 I1          NEG     \REG1,\REG1                     ;
 1281                             836 I1  DIVS1_020\@:
 1282                             837 I1          CMP/PZ  \REG2                           ;
 1283                             838 I1          BT      DIVS1_040\@                     ;
 1284                             839 I1          NEG     \REG2,\REG2                     ;
 1285                             840 I1  DIVS1_040\@:
 1286                             841 I1  
 1287                             842 I1          MAC_DIVU_32REG2_16REG1_16REG2 \REG1,\REG2
 1288                             843 I1  
 1289                             844 I1  
 1290                             845 I1          MOV.W   #H'7FFF,\REG1                   ;
 1291                             846 I1          CMP/HS  \REG2,\REG1                     ;7FFF >= data
 1292                             847 I1          BT      DIVS1_060\@                     ;
 1293                             848 I1          MOV     \REG1,\REG2                     ;7FFF >= data
 1294                             849 I1  DIVS1_060\@:                                    ;
 1295                             850 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    24
PROGRAM NAME =

 1296                             851 I1          POP_REG1 \REG1                          ;
 1297                             852 I1          CMP/PZ  \REG1                           ;
 1298                             853 I1          BT      DIVS1_080\@                     ;
 1299                             854 I1          NEG     \REG2,\REG2                     ;
 1300                             855 I1  DIVS1_080\@:                                    ;
 1301                             856 I1          POP_REG1 \REG1                          ;
 1302                             857 I1          CMP/PZ  \REG1                           ;
 1303                             858 I1          BT      DIVS1_100\@                     ;
 1304                             859 I1          NEG     \REG2,\REG2                     ;
 1305                             860 I1  DIVS1_100\@:                                    ;
 1306                             861 I1  
 1307                             862 I1          .ENDM
 1308                             863 I1  
 1309                             864 I1  
 1310                             865 I1  ;       *******************************************
 1311                             866 I1  ;       ***                                     ***
 1312                             867 I1  ;       ***             Ãﬁ€Ø∏ì]ëó               ***
 1313                             868 I1  ;       ***                                     ***
 1314                             869 I1  ;       *******************************************
 1315                             870 I1          .MACRO  BLOCK_MOV1      LG,AD_DT,SRC_REG,DST_REG,DATA_REG,CNT_REG
 1316                             871 I1  JMP0\@:                                 ;
 1317                             872 I1          TST     \CNT_REG,\CNT_REG       ;
 1318                             873 I1          TST_BIT_OF JMP1\@               ;
 1319                             874 I1          MOV.\LG @\SRC_REG+,\DATA_REG    ;
 1320                             875 I1          MOV.\LG \DATA_REG,@\DST_REG     ;
 1321                             876 I1          ADD     #\AD_DT,\DST_REG        ;
 1322                             877 I1          ADD     #H'FF,\CNT_REG          ;
 1323                             878 I1          M_BRA   JMP0\@                  ;
 1324                             879 I1  JMP1\@:                                 ;
 1325                             880 I1          .ENDM
 1326                             881 I1  
 1327                             882 I1  
 1328                             883 I1  ;       ***************************************************
 1329                             884 I1  ;       ***             ÉfÅ[É^ïœä∑      2001-07-08      ***
 1330                             885 I1  ;       ***************************************************
 1331                             886 I1          .MACRO  INTEL_WORD REG1,REG2
 1332                             887 I1          SWAP.B  \REG1,\REG2
 1333                             888 I1          .ENDM
 1334                             889 I1  
 1335                             890 I1  
 1336                             891 I1  ;       ***************************************************
 1337                             892 I1  ;       ***             4byte read      2001-07-08      ***
 1338                             893 I1  ;       ***************************************************
 1339                             894 I1          .MACRO  plc_2w_rd ADR_REG1,ANSREG,WKREG1
 1340                             895 I1          MOV.W   @\ADR_REG1+,\ANSREG             ;ML(56).LL(78) R2
 1341                             896 I1          MOV.W   @\ADR_REG1+,\WKREG1             ;HH(12).MH(34) R3
 1342                             897 I1          SWAP.W  \ANSREG,\ANSREG                 ;
 1343                             898 I1          XTRCT   \WKREG1,\ANSREG                 ;
 1344                             899 I1          .ENDM
 1345                             900 I1  
 1346                             901 I1  ;       ***************************************************
 1347                             902 I1  ;       ***             2byte read      2001-07-08      ***
 1348                             903 I1  ;       ***************************************************
 1349                             904 I1          .MACRO  plc_1w_rd ADR_REG1,ANSREG
 1350                             905 I1          MOV.W   @\ADR_REG1+,\ANSREG             ;
 1351                             906 I1  ;;;;;;; SWAP.B  \ANSREG,\ANSREG                 ;ML.LL
 1352                             907 I1  ;;;;;;; EXTS.W  \ANSREG,\ANSREG                 ;ïÑçÜägí£
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    25
PROGRAM NAME =

 1353                             908 I1          .ENDM
 1354                             909 I1  
 1355                             910 I1  
 1356                             911 I1  
 1357                             912 I1  ;       ***************************************************
 1358                             913 I1  ;       ***             4byte write     2001-07-08      ***
 1359                             914 I1  ;       ***************************************************
 1360                             915 I1  ;       ansreg:-->adr_reg
 1361                             916 I1          .MACRO  plc_2w_wr ADR_REG1,ANSREG,WKREG1        ;HH,MH,ML,LL
 1362                             917 I1          MOV.W   \ANSREG,@\ADR_REG1                      ;
 1363                             918 I1          SWAP.W  \ANSREG,\WKREG1                         ;
 1364                             919 I1          ADD     #2,\ADR_REG1                            ;
 1365                             920 I1          MOV.W   \WKREG1,@\ADR_REG1                      ;
 1366                             921 I1          ADD     #2,\ADR_REG1                            ;
 1367                             922 I1          .ENDM
 1368                             923 I1  
 1369                             924 I1  ;       ***************************************************
 1370                             925 I1  ;       ***             2byte write     2001-07-08      ***
 1371                             926 I1  ;       ***************************************************
 1372                             927 I1  ;       ansreg:-->adr_reg
 1373                             928 I1          .MACRO  plc_1w_wr ADR_REG1,ANSREG               ;
 1374                             929 I1  ;;;;;;  SWAP.B  \ANSREG,\ANSREG                 ;
 1375                             930 I1          MOV.W   \ANSREG,@\ADR_REG1              ;
 1376                             931 I1          ADD     #2,\ADR_REG1                    ;
 1377                             932 I1          .ENDM
 1378                             933 I1  
 1379                             934 I1  
 1380                             935 I1  ;       *******************************************
 1381                             936 I1  ;       ***                                     ***
 1382                             937 I1  ;       ***     ⁄ºﬁΩ¿->“”ÿ√ﬁÃ´ŸƒæØƒ             ***
 1383                             938 I1  ;       ***                                     ***
 1384                             939 I1  ;       *******************************************
 1385                             940 I1          .MACRO  BLOCK_SET1      LG,AD_DT,DST_REG,DATA_REG,CNT_REG
 1386                             941 I1  JMP0\@:                                 ;
 1387                             942 I1          TST     \CNT_REG,\CNT_REG       ;
 1388                             943 I1          TST_BIT_OF JMP1\@               ;
 1389                             944 I1          MOV.\LG \DATA_REG,@\DST_REG     ;
 1390                             945 I1          ADD     #\AD_DT,\DST_REG        ;
 1391                             946 I1          ADD     #H'FF,\CNT_REG          ;
 1392                             947 I1          M_BRA   JMP0\@                  ;
 1393                             948 I1  JMP1\@:                                 ;
 1394                             949 I1          .ENDM
 1395                             950 I1  
 1396                             951 I1  ;       *******************************************
 1397                             952 I1  ;       ***                                     ***
 1398                             953 I1  ;       ***             MEM BLOCK               ***
 1399                             954 I1  ;       ***                                     ***
 1400                             955 I1  ;       *******************************************
 1401                             956 I1          .MACRO  MEM_WORD_BLOCK_MOV1     SRC_ADR,DST_ADR,CNT_DAT,DT_REG,CNT_REG
 1402                             957 I1          MOV.L   #\SRC_ADR,R10                   ;
 1403                             958 I1          MOV.L   #\DST_ADR,R11                   ;
 1404                             959 I1          MOV.W   #\CNT_DAT,\CNT_REG              ;
 1405                             960 I1          BLOCK_MOV1      W,2,R10,R11,\DT_REG,\CNT_REG
 1406                             961 I1          .ENDM
 1407                             962 I1  
 1408                             963 I1  
 1409                             964 I1          .MACRO  MEM_LONG_BLOCK_MOV1     SRC_ADR,DST_ADR,CNT_DAT,DT_REG,CNT_REG
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    26
PROGRAM NAME =

 1410                             965 I1          MOV.L   #\SRC_ADR,R10                   ;
 1411                             966 I1          MOV.L   #\DST_ADR,R11                   ;
 1412                             967 I1          MOV.W   #\CNT_DAT,\CNT_REG              ;
 1413                             968 I1          BLOCK_MOV1      L,4,R10,R11,\DT_REG,\CNT_REG
 1414                             969 I1          .ENDM
 1415                             970 I1  
 1416                             971 I1  ;       ***********************************
 1417                             972 I1  ;       ***     MEM => MEM MOV          ***
 1418                             973 I1  ;       ***********************************
 1419                             974 I1          .MACRO  MEM_MOV_TO_MEM  SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3
 1420                             975 I1          MOV.L   #\SRC_ADR,\WKREG1
 1421                             976 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1422                             977 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1423                             978 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1424                             979 I1          .ENDM
 1425                             980 I1  
 1426                             981 I1  
 1427                             982 I1  ;       ***********************************
 1428                             983 I1  ;       ***     REG => MEM MOV          ***
 1429                             984 I1  ;       ***********************************
 1430                             985 I1          .MACRO  REG_MOV_TO_MEM  DST_ADR,L1,DT_REG,WKREG1
 1431                             986 I1          MOV.L   #\DST_ADR,\WKREG1       ;DST_ADR
 1432                             987 I1          MOV.\L1 \DT_REG,@\WKREG1        ;DST_ADR
 1433                             988 I1          .ENDM
 1434                             989 I1  
 1435                             990 I1  
 1436                             991 I1  ;       ***********************************
 1437                             992 I1  ;       ***     MEM => MEM MOV          ***
 1438                             993 I1  ;       ***********************************
 1439                             994 I1          .MACRO  MEM_MOV_TO_MEM_ALMT     SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3,ANDLMT
 1440                             995 I1          MOV.L   #\SRC_ADR,\WKREG1
 1441                             996 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1442                             997 I1          MOV.L   #\ANDLMT,\WKREG1        ;
 1443                             998 I1          AND     \WKREG1,\WKREG2         ;
 1444                             999 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1445                            1000 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1446                            1001 I1          .ENDM
 1447                            1002 I1  
 1448                            1003 I1  ;       ***********************************
 1449                            1004 I1  ;       ***     MEM => CALL=>MEM MOV    ***
 1450                            1005 I1  ;       ***     2008-10-15              ***
 1451                            1006 I1  ;       ***********************************
 1452                            1007 I1          .MACRO  MEM_MOV_TO_MEM_CALL     SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3,CALL
 1453                            1008 I1          MOV.L   #\SRC_ADR,\WKREG1
 1454                            1009 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1455                            1010 I1          FAR_JSR #\CALL,\WKREG3
 1456                            1011 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1457                            1012 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1458                            1013 I1          .ENDM
 1459                            1014 I1  
 1460                            1015 I1  ;       ***********************************
 1461                            1016 I1  ;       ***                             ***
 1462                            1017 I1  ;       ***     DOWN TIMER              ***
 1463                            1018 I1  ;       ***     TIME USED MACRO         ***
 1464                            1019 I1  ;       ***                             ***
 1465                            1020 I1  ;       ***********************************
 1466                            1021 I1          .MACRO  DN_TIME LG,MEM_ADR,WKREG1,WKREG2
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    27
PROGRAM NAME =

 1467                            1022 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1468                            1023 I1          MOV.\LG @\WKREG1,\WKREG2                ;
 1469                            1024 I1          TST     \WKREG2,\WKREG2                 ;
 1470                            1025 I1          BT      JMP_01\@                        ;ZERO THEN JUMP
 1471                            1026 I1          DT      \WKREG2                         ;
 1472                            1027 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1473                            1028 I1  JMP_01\@:
 1474                            1029 I1          .ENDM
 1475                            1030 I1  
 1476                            1031 I1  ;       ***********************************
 1477                            1032 I1  ;       ***                             ***
 1478                            1033 I1  ;       ***     UP TIME USED MACRO      ***
 1479                            1034 I1  ;       ***     0~FFFF(0~FFFFFFFF)      ***
 1480                            1035 I1  ;       ***********************************
 1481                            1036 I1          .MACRO  UP_TIME LG,MEM_ADR,WKREG1,WKREG2
 1482                            1037 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1483                            1038 I1          MOV.\LG @\WKREG1,\WKREG2                ;
 1484                            1039 I1          ADD     #1,\WKREG2                      ;
 1485                            1040 I1          TST     \WKREG2,\WKREG2                 ;
 1486                            1041 I1          TST_BIT_OF JMP_01\@                     ;ZERO THEN JUMP
 1487                            1042 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1488                            1043 I1  JMP_01\@:                                       ;
 1489                            1044 I1          .ENDM                                   ;
 1490                            1045 I1  
 1491                            1046 I1          .MACRO  SCAN_TIM_REF_4B SCAN_TIM1,OLDCNT,CNTDLT
 1492                            1047 I1          MOV.L   #\SCAN_TIM1,R10                 ;
 1493                            1048 I1          MOV.L   #\OLDCNT,R11                    ;
 1494                            1049 I1          MOV.L   @R10,R0                         ;R2,R0 NEW
 1495                            1050 I1          MOV     R0,R2                           ;
 1496                            1051 I1          MOV.L   @R11,R1                         ;R1:OLD
 1497                            1052 I1          MOV.L   #\CNTDLT,R10                    ;
 1498                            1053 I1          MOV.L   R0,@R11                         ;REFLASH
 1499                            1054 I1          SUB     R1,R2                           ;
 1500                            1055 I1          MOV.L   R2,@R10                         ;
 1501                            1056 I1          .ENDM
 1502                            1057 I1  
 1503                            1058 I1  ;       ***********************************
 1504                            1059 I1  ;       ***                             ***
 1505                            1060 I1  ;       ***     ÿ›∏ﬁ¿ﬁ≥›CNT             ***
 1506                            1061 I1  ;       ***     DEBUG USED              ***
 1507                            1062 I1  ;       ***                             ***
 1508                            1063 I1  ;       ***********************************
 1509                            1064 I1  ;       ***********************************
 1510                            1065 I1  ;       ***                             ***
 1511                            1066 I1  ;       ***     ÿ›∏ﬁUP-CNT              ***
 1512                            1067 I1  ;       ***     DEBUG USED              ***
 1513                            1068 I1  ;       ***                             ***
 1514                            1069 I1  ;       ***********************************
 1515                            1070 I1  ;       LATE=1~127,-1~-128
 1516                            1071 I1          .MACRO  UP_DN_LATE_CNT LG,MEM_ADR,WKREG1,WKREG2,LATE
 1517                            1072 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1518                            1073 I1          MOV.\LG @\WKREG1,\WKREG2                ;
 1519                            1074 I1          ADD     #\LATE,\WKREG2                  ;
 1520                            1075 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1521                            1076 I1          .ENDM                                   ;
 1522                            1077 I1  
 1523                            1078 I1  ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    28
PROGRAM NAME =

 1524                            1079 I1  ;       ***     DWORD --> CHG1 CHANGE   ***
 1525                            1080 I1  ;       ***********************************
 1526                            1081 I1  ;       0~31
 1527                            1082 I1  ;       DT_REG KEEP
 1528                            1083 I1  ;
 1529                            1084 I1          .MACRO  DWORD_TBL_CHG1  DT_REG,WKREG,TBL_ADR
 1530                            1085 I1          MOV.L   #\TBL_ADR,\WKREG                ;*4
 1531                            1086 I1          SHLL2   \DT_REG                         ;
 1532                            1087 I1          ADD     \DT_REG,\WKREG                  ;
 1533                            1088 I1          SHLR2   \DT_REG                         ;
 1534                            1089 I1          .ENDM
 1535                            1090 I1  
 1536                            1091 I1  ;       ***********************************
 1537                            1092 I1  ;       ***     TABLE CALL              ***
 1538                            1093 I1  ;       ***     Input NO. REG           ***
 1539                            1094 I1  ;       ***********************************
 1540                            1095 I1  ;;      .MACRO TABLE_JUMP_MEM   NUMBER_REG,TABLE_MEM,WKREG1
 1541                            1096 I1  ;;      SHLL2   \NUMBER_REG             ;*2
 1542                            1097 I1  ;;      MOV.L   #\TABLE_MEM,\WKREG1     ;
 1543                            1098 I1  ;;      ADD     \WKREG1,\NUMBER_REG     ;
 1544                            1099 I1  ;;      MOV.L   @\NUMBER_REG,\WKREG1    ;
 1545                            1100 I1  ;;      JSR_REG \WKREG1                 ;
 1546                            1101 I1  ;;      .ENDM
 1547                            1102 I1  
 1548                            1103 I1          .MACRO TABLE_CALL_MEM   NUMBER_REG,TABLE_MEM,WKREG1
 1549                            1104 I1          SHLL2   \NUMBER_REG             ;*2
 1550                            1105 I1          MOV.L   #\TABLE_MEM,\WKREG1     ;
 1551                            1106 I1          ADD     \WKREG1,\NUMBER_REG     ;
 1552                            1107 I1          MOV.L   @\NUMBER_REG,\WKREG1    ;
 1553                            1108 I1          JSR_REG \WKREG1                 ;
 1554                            1109 I1          .ENDM
 1555                            1110 I1  
 1556                            1111 I1  
 1557                            1112 I1  
 1558                            1113 I1  ;       ***************************************************
 1559                            1114 I1  ;       ***             í èÌêßå‰Å{ÉpÅ[ÉWêßå‰            ***
 1560                            1115 I1  ;       ***************************************************
 1561                            1116 I1  ;       R0,R4,R10,R11
 1562                            1117 I1  ;       ACTFLG=1WORD íAÇµ BIT7~BIT0Ç‹Ç≈ÇµÇ©égópïsâ¬:í èÌBIT0
 1563                            1118 I1  
 1564                            1119 I1          .MACRO  PAT_LEVEL_CTL1 STRSB,DATSB,ACTSB,ENDSB,ELSESB,ACTFLG,SEQ_DT,FLGTBT,SQBIT,F
                                          LGSBT
 1565                            1120 I1          MOV.L   #\ACTFLG,R10                    ;
 1566                            1121 I1          MOV.L   #\SEQ_DT,R11                    ;
 1567                            1122 I1          MOV.W   @R10,R0                         ;FLAG LOAD
 1568                            1123 I1          TST     #\FLGTBT,R0                     ;ENABLE?
 1569                            1124 I1          TST_BIT_ON JMP_ACT01\@                  ;ON THEN FLAG ACTIVE JUMP
 1570                            1125 I1  
 1571                            1126 I1  ;       ------- FLAG OFF ---------
 1572                            1127 I1          MOV.W   @R11,R0                         ;SEQ
 1573                            1128 I1          MOV.W   #\SQBIT,R4                      ;
 1574                            1129 I1          TST     R4,R0                           ;
 1575                            1130 I1          TST_BIT_OF JMP_EXIT\@                   ;
 1576                            1131 I1  
 1577                            1132 I1  ;       ------- SEQ ON START -----
 1578                            1133 I1          MOV.W   @R10,R0                         ;
 1579                            1134 I1          OR      #\FLGSBT,R0                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    29
PROGRAM NAME =

 1580                            1135 I1          MOV.W   R0,@R10                         ;FLAG BIT SET
 1581                            1136 I1  
 1582                            1137 I1          FAR_JSR #\STRSB,R10                     ;ANS.REG_CTL_FLG1
 1583                            1138 I1  
 1584                            1139 I1          M_BRA   JMP_ACT02\@                     ;
 1585                            1140 I1  
 1586                            1141 I1  ;       -----------------------------
 1587                            1142 I1  ;       ---------- ACTIVE -----------
 1588                            1143 I1  ;       -----------------------------
 1589                            1144 I1          .ALIGN  4                               ;
 1590                            1145 I1  
 1591                            1146 I1  JMP_ACT01\@:                                    ;
 1592                            1147 I1  
 1593                            1148 I1          MOV.W   @R11,R0                         ;SEQ
 1594                            1149 I1          MOV.W   #\SQBIT,R4
 1595                            1150 I1          TST     R4,R0                           ;
 1596                            1151 I1          TST_BIT_ON JMP_ACT02\@                  ;ACITIVE CONTINUE
 1597                            1152 I1  
 1598                            1153 I1          MOV.L   #\ACTFLG,R10                    ;
 1599                            1154 I1          MOV.W   @R10,R0                         ;
 1600                            1155 I1          AND     #LOW ~\FLGSBT,R0                ;
 1601                            1156 I1          MOV.W   R0,@R10                         ;FLAG CLR
 1602                            1157 I1  
 1603                            1158 I1          FAR_JSR #\ELSESB,R10                    ;êœï™STOPìôÇÃELSEªÃﬁŸ∞¡›
 1604                            1159 I1          FAR_JSR #\ENDSB,R10                     ;
 1605                            1160 I1          M_BRA   JMP_EXIT\@                      ;
 1606                            1161 I1  
 1607                            1162 I1  JMP_ACT02\@:                                    ;
 1608                            1163 I1  
 1609                            1164 I1          FAR_JSR #\DATSB,R10                     ;data æ⁄∏ƒ
 1610                            1165 I1          FAR_JSR #\ACTSB,R10                     ;
 1611                            1166 I1  JMP_EXIT\@:                                     ;
 1612                            1167 I1          .ENDM
 1613                            1168 I1  
 1614                            1169 I1  
 1615                            1170 I1  
 1616                            1171 I1  ;       ***********************************
 1617                            1172 I1  ;       ***                             ***
 1618                            1173 I1  ;       ***                             ***
 1619                            1174 I1  ;       ***                             ***
 1620                            1175 I1  ;       ***********************************
 1621                            1176 I1          .MACRO  INT_CTRL_ALL_STOP1 MAIN_CMD,INT_STS_FLG
 1622                            1177 I1          XOR     R0,R0
 1623                            1178 I1          MOV.L   #\MAIN_CMD,R1                                   ;
 1624                            1179 I1          MOV.W   R0,@R1                                          ;
 1625                            1180 I1          MOV.L   #\INT_STS_FLG,R1                                ;
 1626                            1181 I1          MOV.W   R0,@R1                                          ;
 1627                            1182 I1          .ENDM
 1628                            1183 I1  
 1629                            1184 I1  
 1630                            1185 I1  
 1631                            1186 I1  ;       ===================================
 1632                            1187 I1  ;       ===     äƒéã√ﬁ∞¿∏ÿ±+SAVE        ===
 1633                            1188 I1  ;       ===================================
 1634                            1189 I1  ;       R8,R9ÇÕâÛÇ≥Ç»Ç¢éñÇï€èÿÇ∑ÇÈ
 1635                            1190 I1          .MACRO KS_UP_DN_CLR1 SQ_UP,SQ_DN,CLR_REG
 1636                            1191 I1          MOV.L   #\SQ_UP,R13             ;ADR LOAD
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    30
PROGRAM NAME =

 1637                            1192 I1          MOV.W   @R13,R0                 ;DATA LOAD
 1638                            1193 I1          AND     \CLR_REG,R0             ;CLR
 1639                            1194 I1          MOV.W   R0,@R13                 ;
 1640                            1195 I1  
 1641                            1196 I1          MOV.L   #\SQ_DN,R14             ;ADR LOAD
 1642                            1197 I1          MOV.W   @R14,R0                 ;
 1643                            1198 I1          AND     \CLR_REG,R0             ;CLR
 1644                            1199 I1          MOV.W   R0,@R14                 ;
 1645                            1200 I1          .ENDM
 1646                            1201 I1  
 1647                            1202 I1  ;       ===================================
 1648                            1203 I1  ;       ===     äƒéã                    ===
 1649                            1204 I1  ;       ===================================
 1650                            1205 I1  
 1651                            1206 I1  ;       ***********************************
 1652                            1207 I1  ;       ***     äƒéãW/Lã§í œ∏€          ***
 1653                            1208 I1  ;       ***********************************
 1654                            1209 I1  ;       äƒéã√ﬁ∞¿ "R1=é¿ë™"
 1655                            1210 I1  ;       R0,R11~R14,R4,R5,R6 USED
 1656                            1211 I1  ;
 1657                            1212 I1  ;       "R7,R8,R9ÇÕâÛÇ≥Ç»Ç¢éñÇï€èÿÇ∑ÇÈ"
 1658                            1213 I1  ;
 1659                            1214 I1  ;       LGW_U=1 WORD æﬁ€ägí£
 1660                            1215 I1  ;
 1661                            1216 I1  
 1662                            1217 I1          .MACRO  KS_UP_DN_CHK1   SQ_UP,SQ_DN,SET_BIT,SV_UP,SV_DN,LG,LGW_U
 1663                            1218 I1          MOV.L   \SQ_UP,R13                              ;221 UP "*"
 1664                            1219 I1          MOV.L   \SQ_DN,R14                              ;223 DN "*"R0,R13,R14
 1665                            1220 I1          MOV.L   \SV_UP,R11                              ;
 1666                            1221 I1          MOV.L   \SV_DN,R12                              ;
 1667                            1222 I1  
 1668                            1223 I1          .AIF    \LGW_U  EQ      0                       ;‹∞ƒﬁÇÃ0ägí£
 1669                            1224 I1          MOV.\LG @R11,R4                                 ;
 1670                            1225 I1          EXTU.W  R4,R4                                   ;
 1671                            1226 I1          MOV.\LG @R12,R5                                 ;
 1672                            1227 I1          EXTU.W  R5,R5                                   ;
 1673                            1228 I1          .AELSE                                          ;
 1674                            1229 I1          MOV.\LG @R11,R4                                 ;
 1675                            1230 I1          MOV.\LG @R12,R5                                 ;
 1676                            1231 I1          .AENDI                                          ;
 1677                            1232 I1  
 1678                            1233 I1          CMP/GE  R1,R4                           ;R1[PV] =< R5[SV] UP THEN NOMAL
 1679                            1234 I1          BT      KANSHI_020\@                    ;
 1680                            1235 I1          MOV.W   #\SET_BIT,R6                    ;
 1681                            1236 I1          MOV.W   @R13,R0                         ;R0 WORK
 1682                            1237 I1          OR      R6,R0                           ;PV > SV UP BIT
 1683                            1238 I1          MOV.W   R0,@R13                         ;
 1684                            1239 I1  
 1685                            1240 I1          NOT     R6,R6                           ;
 1686                            1241 I1          MOV.W   @R14,R0                         ;R0 WORK
 1687                            1242 I1          AND     R6,R0                           ;
 1688                            1243 I1          MOV.W   R0,@R14                         ;
 1689                            1244 I1          M_BRA   KANSHI_EXT\@                    ;
 1690                            1245 I1  
 1691                            1246 I1  KANSHI_020\@:
 1692                            1247 I1          CMP/GE  R5,R1                   ;LIMIT =< PV
 1693                            1248 I1          BT      KANSHI_040\@            ;NOMAL
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    31
PROGRAM NAME =

 1694                            1249 I1  
 1695                            1250 I1          MOV.W   #\SET_BIT,R6            ;
 1696                            1251 I1          MOV.W   @R14,R0                 ;R0 WORK
 1697                            1252 I1          OR      R6,R0                   ;
 1698                            1253 I1          MOV.W   R0,@R14                 ;
 1699                            1254 I1  
 1700                            1255 I1          NOT     R6,R6                   ;
 1701                            1256 I1          MOV.W   @R13,R0                 ;R0 WORK
 1702                            1257 I1          AND     R6,R0                   ;
 1703                            1258 I1          MOV.W   R0,@R13                 ;
 1704                            1259 I1          M_BRA   KANSHI_EXT\@            ;
 1705                            1260 I1  
 1706                            1261 I1  ;       ------ NOMAL -----
 1707                            1262 I1  KANSHI_040\@:                           ;
 1708                            1263 I1          MOV.W   #\SET_BIT,R6            ;
 1709                            1264 I1          NOT     R6,R6                   ;
 1710                            1265 I1  
 1711                            1266 I1          MOV.W   @R13,R0                 ;R0 WORK
 1712                            1267 I1          AND     R6,R0   ;
 1713                            1268 I1          MOV.W   R0,@R13                 ;
 1714                            1269 I1  
 1715                            1270 I1          MOV.W   @R14,R0                 ;R0 WORK
 1716                            1271 I1          AND     R6,R0           ;
 1717                            1272 I1          MOV.W   R0,@R14                 ;
 1718                            1273 I1  
 1719                            1274 I1  KANSHI_EXT\@:
 1720                            1275 I1          .ENDM                                           ;
 1721                            1276 I1  
 1722                            1277 I1  ;       ***********************************************************
 1723                            1278 I1  ;       ***                                                     ***
 1724                            1279 I1  ;       ***     10000-->30000 *SH_CALC_LATE/H8_CALC_LATE        ***
 1725                            1280 I1  ;       ***     Ç≈ÇÕÇ»Ç≠ÅA10000*3Ç…ïœçX                         ***
 1726                            1281 I1  ;       ***                                                     ***
 1727                            1282 I1  ;       ***********************************************************
 1728                            1283 I1  ;       IN_OUT_REGÇ∆WKREGÇÕàŸÇ»ÇÈéñ
 1729                            1284 I1          .MACRO  CHG_H8LATE_TO_SHLATE IN_OUT_REG,WKREG
 1730                            1285 I1          MOV     \IN_OUT_REG,\WKREG              ;
 1731                            1286 I1          ADD     \WKREG,\WKREG                   ;*2
 1732                            1287 I1          ADD     \WKREG,\IN_OUT_REG              ;+1
 1733                            1288 I1          .ENDM
 1734                            1289 I1  
 1735                            1290 I1  
 1736                            1291 I1  
 1737                            1292 I1  
 1738                            1293 I1  
 1739                            1294 I1  ;       ***********************************
 1740                            1295 I1  ;       ***                             ***
 1741                            1296 I1  ;       ***     “”ÿ0∏ÿ±K                ***
 1742                            1297 I1  ;       ***     2014-05-30              ***
 1743                            1298 I1  ;       ***********************************
 1744                            1299 I1          .MACRO  MEM_0CLR_R0_R1  MEM,LG
 1745                            1300 I1          XOR     R0,R0           ;
 1746                            1301 I1          MOV.L   #\MEM,R1        ;
 1747                            1302 I1          MOV.\LG R0,@R1          ;
 1748                            1303 I1          .ENDM
 1749                            1304 I1  
 1750                            1305 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    32
PROGRAM NAME =

 1751                            1306 I1  
 1752                            1307 I1  
 1753                            1308 I1  
 1754                            1309 I1  
 1755                            1310 I1  
 1756                            1311 I1  
 1757                            1312 I1  
 1758                            1313 I1  
 1759                              14             .INCLUDE        "CPU_REG.ext"           ;
 1760                               1 I1  ;       ***************************************************
 1761                               2 I1  ;       ***             SH7727 ⁄ºﬁΩ¿                    ***
 1762                               3 I1  ;       ***************************************************
 1763                               4 I1          .INCLUDE        "SH7727RG.EXT"
 1764                               1 I2  ;       ***************************************************
 1765                               2 I2  ;       ***             SH7727 ⁄ºﬁΩ¿                    ***
 1766                               3 I2  ;       ***************************************************
 1767                               4 I2  
 1768                               5 I2          .GLOBAL         _INTEVT2        ; .SRES 4                       ; A4000000
 1769                               6 I2          .GLOBAL         _IRR0           ; .SRES 2                       ; A4000004
 1770                               7 I2          .GLOBAL         _IRR1           ; .SRES 2                       ; A4000006
 1771                               8 I2          .GLOBAL         _IRR2           ; .SRES 2                       ; A4000008
 1772                               9 I2          .GLOBAL         _ICR1           ; .SRES 2                       ; A4000010
 1773                              10 I2          .GLOBAL         _ICR2           ; .SRES 2                       ; A4000012
 1774                              11 I2          .GLOBAL         _PINTER         ; .SRES 2                       ; A4000014
 1775                              12 I2          .GLOBAL         _IPRC           ; .SRES 2                       ; A4000016
 1776                              13 I2          .GLOBAL         _IPRD           ; .SRES 2                       ; A4000018
 1777                              14 I2          .GLOBAL         _IPRE           ; .SRES 2                       ; A400001A
 1778                              15 I2          .GLOBAL         _SAR0           ; .SRES 4                       ; A4000020
 1779                              16 I2          .GLOBAL         _DAR0           ; .SRES 4                       ; A4000024
 1780                              17 I2          .GLOBAL         _DMATCR0        ; .SRES 4                       ; A4000028
 1781                              18 I2          .GLOBAL         _CHCR0          ; .SRES 4                       ; A400002C
 1782                              19 I2          .GLOBAL         _SAR1           ; .SRES 4                       ; A4000030
 1783                              20 I2          .GLOBAL         _DAR1           ; .SRES 4                       ; A4000034
 1784                              21 I2          .GLOBAL         _DMATCR1        ; .SRES 4                       ; A4000038
 1785                              22 I2          .GLOBAL         _CHCR1          ; .SRES 4                       ; A400003C
 1786                              23 I2          .GLOBAL         _SAR2           ; .SRES 4                       ; A4000040
 1787                              24 I2          .GLOBAL         _DAR2           ; .SRES 4                       ; A4000044
 1788                              25 I2          .GLOBAL         _DMATCR2        ; .SRES 4                       ; A4000048
 1789                              26 I2          .GLOBAL         _CHCR2          ; .SRES 4                       ; A400004C
 1790                              27 I2          .GLOBAL         _SAR3           ; .SRES 4                       ; A4000050
 1791                              28 I2          .GLOBAL         _DAR3           ; .SRES 4                       ; A4000054
 1792                              29 I2          .GLOBAL         _DMATCR3        ; .SRES 4                       ; A4000058
 1793                              30 I2          .GLOBAL         _CHCR3          ; .SRES 4                       ; A400005C
 1794                              31 I2          .GLOBAL         _DMAOR          ; .SRES 2                       ; A4000060
 1795                              32 I2          .GLOBAL         _CMSTR          ; .SRES 2                       ; A4000070
 1796                              33 I2          .GLOBAL         _CMCSR          ; .SRES 2                       ; A4000072
 1797                              34 I2          .GLOBAL         _CMCNT          ; .SRES 2                       ; A4000074
 1798                              35 I2          .GLOBAL         _CMCOR          ; .SRES 2                       ; A4000076
 1799                              36 I2          .GLOBAL         _ADDRAH         ; .SRES 1                       ; A4000080
 1800                              37 I2          .GLOBAL         _ADDRAL         ; .SRES 1                       ; A4000082
 1801                              38 I2          .GLOBAL         _ADDRBH         ; .SRES 1                       ; A4000084
 1802                              39 I2          .GLOBAL         _ADDRBL         ; .SRES 1                       ; A4000086
 1803                              40 I2          .GLOBAL         _ADDRCH         ; .SRES 1                       ; A4000088
 1804                              41 I2          .GLOBAL         _ADDRCL         ; .SRES 1                       ; A400008A
 1805                              42 I2          .GLOBAL         _ADDRDH         ; .SRES 1                       ; A400008C
 1806                              43 I2          .GLOBAL         _ADDRDL         ; .SRES 1                       ; A400008E
 1807                              44 I2          .GLOBAL         _ADCSR          ; .SRES 1                       ; A4000090
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    33
PROGRAM NAME =

 1808                              45 I2          .GLOBAL         _ADCR           ; .SRES 1                       ; A4000092
 1809                              46 I2          .GLOBAL         _DADR0          ; .SRES 1                       ; A40000A0
 1810                              47 I2          .GLOBAL         _DADR1          ; .SRES 1                       ; A40000A2
 1811                              48 I2          .GLOBAL         _DACR1          ; .SRES 1                       ; A40000A4
 1812                              49 I2          .GLOBAL         _CCR2           ; .SRES 4                       ; A40000B0
 1813                              50 I2          .GLOBAL         _SIMDR          ; .SRES 2                       ; A40000C0
 1814                              51 I2          .GLOBAL         _SISCR          ; .SRES 2                       ; A40000C2
 1815                              52 I2          .GLOBAL         _SITDAR         ; .SRES 2                       ; A40000C4
 1816                              53 I2          .GLOBAL         _SIRDAR         ; .SRES 2                       ; A40000C6
 1817                              54 I2          .GLOBAL         _SICDAR         ; .SRES 2                       ; A40000C8
 1818                              55 I2          .GLOBAL         _SICTR          ; .SRES 2                       ; A40000CC
 1819                              56 I2          .GLOBAL         _SIFCTR         ; .SRES 2                       ; A40000D0
 1820                              57 I2          .GLOBAL         _SISTR          ; .SRES 2                       ; A40000D4
 1821                              58 I2          .GLOBAL         _SIIER          ; .SRES 2                       ; A40000D6
 1822                              59 I2          .GLOBAL         _SITDR          ; .SRES 4                       ; A40000E0
 1823                              60 I2          .GLOBAL         _SIRDR          ; .SRES 4                       ; A40000E4
 1824                              61 I2          .GLOBAL         _SITCR          ; .SRES 4                       ; A40000E8
 1825                              62 I2          .GLOBAL         _SIRCR          ; .SRES 4                       ; A40000EC
 1826                              63 I2          .GLOBAL         _SITMR          ; .SRES 2                       ; A40000FC
 1827                              64 I2          .GLOBAL         _SIFPR          ; .SRES 2                       ; A40000FE
 1828                              65 I2          .GLOBAL         _PACR           ; .SRES 2                       ; A4000100
 1829                              66 I2          .GLOBAL         _PBCR           ; .SRES 2                       ; A4000102
 1830                              67 I2          .GLOBAL         _PCCR           ; .SRES 2                       ; A4000104
 1831                              68 I2          .GLOBAL         _PDCR           ; .SRES 2                       ; A4000106
 1832                              69 I2          .GLOBAL         _PECR           ; .SRES 2                       ; A4000108
 1833                              70 I2          .GLOBAL         _PFCR           ; .SRES 2                       ; A400010A
 1834                              71 I2          .GLOBAL         _PGCR           ; .SRES 2                       ; A400010C
 1835                              72 I2          .GLOBAL         _PHCR           ; .SRES 2                       ; A400010E
 1836                              73 I2          .GLOBAL         _PJCR           ; .SRES 2                       ; A4000110
 1837                              74 I2          .GLOBAL         _PKCR           ; .SRES 2                       ; A4000112
 1838                              75 I2          .GLOBAL         _PLCR           ; .SRES 2                       ; A4000114
 1839                              76 I2          .GLOBAL         _SCPCR          ; .SRES 2                       ; A4000116
 1840                              77 I2          .GLOBAL         _PMCR           ; .SRES 2                       ; A4000118
 1841                              78 I2          .GLOBAL         _PADR           ; .SRES 1                       ; A4000120
 1842                              79 I2          .GLOBAL         _PBDR           ; .SRES 1                       ; A4000122
 1843                              80 I2          .GLOBAL         _PCDR           ; .SRES 1                       ; A4000124
 1844                              81 I2          .GLOBAL         _PDDR           ; .SRES 1                       ; A4000126
 1845                              82 I2          .GLOBAL         _PEDR           ; .SRES 1                       ; A4000128
 1846                              83 I2          .GLOBAL         _PFDR           ; .SRES 1                       ; A400012A
 1847                              84 I2          .GLOBAL         _PGDR           ; .SRES 1                       ; A400012C
 1848                              85 I2          .GLOBAL         _PHDR           ; .SRES 1                       ; A400012E
 1849                              86 I2          .GLOBAL         _PJDR           ; .SRES 1                       ; A4000130
 1850                              87 I2          .GLOBAL         _PKDR           ; .SRES 1                       ; A4000132
 1851                              88 I2          .GLOBAL         _PLDR           ; .SRES 1                       ; A4000134
 1852                              89 I2          .GLOBAL         _SCPDR          ; .SRES 1                       ; A4000136
 1853                              90 I2          .GLOBAL         _PMDR           ; .SRES 1                       ; A4000138
 1854                              91 I2          .GLOBAL         _SCSMR2         ; .SRES 1                       ; A4000150
 1855                              92 I2          .GLOBAL         _SCBRR2         ; .SRES 1                       ; A4000152
 1856                              93 I2          .GLOBAL         _SCSCR2         ; .SRES 1                       ; A4000154
 1857                              94 I2          .GLOBAL         _SCFTDR2        ; .SRES 1                       ; A4000156
 1858                              95 I2          .GLOBAL         _SCSSR2         ; .SRES 2                       ; A4000158
 1859                              96 I2          .GLOBAL         _SCFRDR2        ; .SRES 1                       ; A400015A
 1860                              97 I2          .GLOBAL         _SCFCR2         ; .SRES 1                       ; A400015C
 1861                              98 I2          .GLOBAL         _SCFDR2         ; .SRES 2                       ; A400015E
 1862                              99 I2          .GLOBAL         _PCC0ISR        ; .SRES 1                       ; A4000160
 1863                             100 I2          .GLOBAL         _PCC0GCR        ; .SRES 1                       ; A4000162
 1864                             101 I2          .GLOBAL         _PCC0CSCR       ; .SRES 1                       ; A4000164
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    34
PROGRAM NAME =

 1865                             102 I2          .GLOBAL         _PCC0CSCIER     ; .SRES 1                       ; A4000166
 1866                             103 I2          .GLOBAL         _ACTR1          ; .SRES 2                       ; A4000180
 1867                             104 I2          .GLOBAL         _ACTR2          ; .SRES 2                       ; A4000182
 1868                             105 I2          .GLOBAL         _ASTR1          ; .SRES 2                       ; A4000184
 1869                             106 I2          .GLOBAL         _ASTR2          ; .SRES 2                       ; A4000186
 1870                             107 I2          .GLOBAL         _MRCR           ; .SRES 2                       ; A4000188
 1871                             108 I2          .GLOBAL         _MPCR           ; .SRES 2                       ; A400018A
 1872                             109 I2          .GLOBAL         _DPNQ           ; .SRES 2                       ; A400018C
 1873                             110 I2          .GLOBAL         _RCNT           ; .SRES 2                       ; A400018E
 1874                             111 I2          .GLOBAL         _ACDR           ; .SRES 2                       ; A4000190
 1875                             112 I2          .GLOBAL         _ASDR           ; .SRES 2                       ; A4000192
 1876                             113 I2          .GLOBAL         _TDFP           ; .SRES 2                       ; A4000194
 1877                             114 I2          .GLOBAL         _RDFP           ; .SRES 2                       ; A4000198
 1878                             115 I2          .GLOBAL         _SDIR           ; .SRES 2                       ; A4000200
 1879                             116 I2          .GLOBAL         _SDDR_SDDRH     ; .SRES 4                       ; A4000208
 1880                             117 I2          .GLOBAL         _SDDRL          ; .SRES 2                       ; A400020A
 1881                             118 I2          .GLOBAL         _IPRF           ; .SRES 2                       ; A4000220
 1882                             119 I2          .GLOBAL         _IPRG           ; .SRES 2                       ; A4000222
 1883                             120 I2          .GLOBAL         _IPR3           ; .SRES 2                       ; A4000224
 1884                             121 I2          .GLOBAL         _IPR4           ; .SRES 2                       ; A4000226
 1885                             122 I2          .GLOBAL         _ICR3           ; .SRES 2                       ; A4000228
 1886                             123 I2          .GLOBAL         _CHRAR          ; .SRES 2                       ; A400022A
 1887                             124 I2          .GLOBAL         _STBCR3         ; .SRES 1                       ; A4000230
 1888                             125 I2          .GLOBAL         _SRSTR          ; .SRES 1                       ; A4000232
 1889                             126 I2          .GLOBAL         _EXPFC          ; .SRES 2                       ; A4000234
 1890                             127 I2          .GLOBAL         _EXCPGCR        ; .SRES 1                       ; A4000236
 1891                             128 I2          .GLOBAL         _CKIO2CR        ; .SRES 1                       ; A400023A
 1892                             129 I2          .GLOBAL         _USBIFR0        ; .SRES 1                       ; A4000240
 1893                             130 I2          .GLOBAL         _USBIFR1        ; .SRES 1                       ; A4000241
 1894                             131 I2          .GLOBAL         _USBEPDR0I      ; .SRES 1                       ; A4000242
 1895                             132 I2          .GLOBAL         _USBEPDR0O      ; .SRES 1                       ; A4000243
 1896                             133 I2          .GLOBAL         _USBTFG         ; .SRES 1                       ; A4000244
 1897                             134 I2          .GLOBAL         _USBFCLR        ; .SRES 1                       ; A4000245
 1898                             135 I2          .GLOBAL         _USBEPSZ0O      ; .SRES 1                       ; A4000246
 1899                             136 I2          .GLOBAL         _USBEPDR0S      ; .SRES 1                       ; A4000247
 1900                             137 I2          .GLOBAL         _USBDASTS       ; .SRES 1                       ; A4000248
 1901                             138 I2          .GLOBAL         _USBEPDR2       ; .SRES 1                       ; A4000249
 1902                             139 I2          .GLOBAL         _USBISR0        ; .SRES 1                       ; A400024A
 1903                             140 I2          .GLOBAL         _USBEPSTL       ; .SRES 1                       ; A400024B
 1904                             141 I2          .GLOBAL         _USBIER0        ; .SRES 1                       ; A400024C
 1905                             142 I2          .GLOBAL         _USBIER1        ; .SRES 1                       ; A400024D
 1906                             143 I2          .GLOBAL         _USBEPDR1       ; .SRES 1                       ; A400024E
 1907                             144 I2          .GLOBAL         _USBEPSZ1       ; .SRES 1                       ; A400024F
 1908                             145 I2          .GLOBAL         _USBISR1        ; .SRES 1                       ; A4000250
 1909                             146 I2          .GLOBAL         _USBDMA         ; .SRES 1                       ; A4000251
 1910                             147 I2          .GLOBAL         _USBEPDR3       ; .SRES 1                       ; A4000252
 1911                             148 I2          .GLOBAL         _USBHR          ; .SRES 4                       ; A4000400
 1912                             149 I2          .GLOBAL         _USBHC          ; .SRES 4                       ; A4000404
 1913                             150 I2          .GLOBAL         _USBHCS         ; .SRES 4                       ; A4000408
 1914                             151 I2          .GLOBAL         _USBHIS         ; .SRES 4                       ; A400040C
 1915                             152 I2          .GLOBAL         _USBHIE         ; .SRES 4                       ; A4000410
 1916                             153 I2          .GLOBAL         _USBHID         ; .SRES 4                       ; A4000414
 1917                             154 I2          .GLOBAL         _USBHHCCA       ; .SRES 4                       ; A4000418
 1918                             155 I2          .GLOBAL         _USBHPCED       ; .SRES 4                       ; A400041C
 1919                             156 I2          .GLOBAL         _USBHCHED       ; .SRES 4                       ; A4000420
 1920                             157 I2          .GLOBAL         _USBHCCED       ; .SRES 4                       ; A4000424
 1921                             158 I2          .GLOBAL         _USBHBHED       ; .SRES 4                       ; A4000428
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    35
PROGRAM NAME =

 1922                             159 I2          .GLOBAL         _USBHBCED       ; .SRES 4                       ; A400042C
 1923                             160 I2          .GLOBAL         _USBHDHED       ; .SRES 4                       ; A4000430
 1924                             161 I2          .GLOBAL         _USBHFI         ; .SRES 4                       ; A4000434
 1925                             162 I2          .GLOBAL         _USBHFR         ; .SRES 4                       ; A4000438
 1926                             163 I2          .GLOBAL         _USBHFN         ; .SRES 4                       ; A400043C
 1927                             164 I2          .GLOBAL         _USBHPS         ; .SRES 4                       ; A4000440
 1928                             165 I2          .GLOBAL         _USBHLST        ; .SRES 4                       ; A4000444
 1929                             166 I2          .GLOBAL         _USBHRDA        ; .SRES 4                       ; A4000448
 1930                             167 I2          .GLOBAL         _USBHRDB        ; .SRES 4                       ; A400044C
 1931                             168 I2          .GLOBAL         _USBHRS         ; .SRES 4                       ; A4000450
 1932                             169 I2          .GLOBAL         _USBHRPS1       ; .SRES 4                       ; A4000454
 1933                             170 I2          .GLOBAL         _USBHRPS2       ; .SRES 4                       ; A4000458
 1934                             171 I2          .GLOBAL         _LDPR00         ; .SRES 4                       ; A4000800
 1935                             172 I2          .GLOBAL         _LDICKR         ; .SRES 2                       ; A4000C00
 1936                             173 I2          .GLOBAL         _LDMTR          ; .SRES 2                       ; A4000C02
 1937                             174 I2          .GLOBAL         _LDDFR          ; .SRES 2                       ; A4000C04
 1938                             175 I2          .GLOBAL         _LDSMR          ; .SRES 2                       ; A4000C06
 1939                             176 I2          .GLOBAL         _LDSARU         ; .SRES 4                       ; A4000C08
 1940                             177 I2          .GLOBAL         _LDSARL         ; .SRES 4                       ; A4000C0C
 1941                             178 I2          .GLOBAL         _LDLAOR         ; .SRES 2                       ; A4000C10
 1942                             179 I2          .GLOBAL         _LDPALCR        ; .SRES 2                       ; A4000C12
 1943                             180 I2          .GLOBAL         _LDHCNR         ; .SRES 2                       ; A4000C14
 1944                             181 I2          .GLOBAL         _LDHSYNR        ; .SRES 2                       ; A4000C16
 1945                             182 I2          .GLOBAL         _LDVDLNR        ; .SRES 2                       ; A4000C18
 1946                             183 I2          .GLOBAL         _LDVTLNR        ; .SRES 2                       ; A4000C1A
 1947                             184 I2          .GLOBAL         _LDVSYNR        ; .SRES 2                       ; A4000C1C
 1948                             185 I2          .GLOBAL         _LDACLNR        ; .SRES 2                       ; A4000C1E
 1949                             186 I2          .GLOBAL         _LDINTR         ; .SRES 2                       ; A4000C20
 1950                             187 I2          .GLOBAL         _LDPMMR         ; .SRES 2                       ; A4000C24
 1951                             188 I2          .GLOBAL         _LDPSPR         ; .SRES 2                       ; A4000C26
 1952                             189 I2          .GLOBAL         _LDCNTR         ; .SRES 2                       ; A4000C28
 1953                             190 I2          .GLOBAL         _SMR0           ; .SRES 1                       ; FFFFFE80
 1954                             191 I2          .GLOBAL         _BRR0           ; .SRES 1                       ; FFFFFE82
 1955                             192 I2          .GLOBAL         _SCR0           ; .SRES 1                       ; FFFFFE84
 1956                             193 I2          .GLOBAL         _TDR0           ; .SRES 1                       ; FFFFFE86
 1957                             194 I2          .GLOBAL         _SSR0           ; .SRES 1                       ; FFFFFE88
 1958                             195 I2          .GLOBAL         _RDR0           ; .SRES 1                       ; FFFFFE8A
 1959                             196 I2          .GLOBAL         _SCSCMR         ; .SRES 1                       ; FFFFFE8C
 1960                             197 I2          .GLOBAL         _TSTR           ; .SRES 1                       ; FFFFFE92
 1961                             198 I2          .GLOBAL         _TCOR0          ; .SRES 4                       ; FFFFFE94
 1962                             199 I2          .GLOBAL         _TCNT0          ; .SRES 4                       ; FFFFFE98
 1963                             200 I2          .GLOBAL         _TCR0           ; .SRES 2                       ; FFFFFE9C
 1964                             201 I2          .GLOBAL         _TCOR1          ; .SRES 4                       ; FFFFFEA0
 1965                             202 I2          .GLOBAL         _TCNT1          ; .SRES 4                       ; FFFFFEA4
 1966                             203 I2          .GLOBAL         _TCR1           ; .SRES 2                       ; FFFFFEA8
 1967                             204 I2          .GLOBAL         _TCOR2          ; .SRES 4                       ; FFFFFEAC
 1968                             205 I2          .GLOBAL         _TCNT2          ; .SRES 4                       ; FFFFFEB0
 1969                             206 I2          .GLOBAL         _TCR2           ; .SRES 2                       ; FFFFFEB4
 1970                             207 I2          .GLOBAL         _R64CNT         ; .SRES 1                       ; FFFFFEC0
 1971                             208 I2          .GLOBAL         _RSECCNT        ; .SRES 1                       ; FFFFFEC2
 1972                             209 I2          .GLOBAL         _RMINCNT        ; .SRES 1                       ; FFFFFEC4
 1973                             210 I2          .GLOBAL         _RHRCNT         ; .SRES 1                       ; FFFFFEC6
 1974                             211 I2          .GLOBAL         _RWKCNT         ; .SRES 1                       ; FFFFFEC8
 1975                             212 I2          .GLOBAL         _RDAYCNT        ; .SRES 1                       ; FFFFFECA
 1976                             213 I2          .GLOBAL         _RMONCNT        ; .SRES 1                       ; FFFFFECC
 1977                             214 I2          .GLOBAL         _RYRCNT         ; .SRES 1                       ; FFFFFECE
 1978                             215 I2          .GLOBAL         _RSECAR         ; .SRES 1                       ; FFFFFED0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    36
PROGRAM NAME =

 1979                             216 I2          .GLOBAL         _RMINAR         ; .SRES 1                       ; FFFFFED2
 1980                             217 I2          .GLOBAL         _RHRAR          ; .SRES 1                       ; FFFFFED4
 1981                             218 I2          .GLOBAL         _RWKAR          ; .SRES 1                       ; FFFFFED6
 1982                             219 I2          .GLOBAL         _RDAYAR         ; .SRES 1                       ; FFFFFED8
 1983                             220 I2          .GLOBAL         _RMONAR         ; .SRES 1                       ; FFFFFEDA
 1984                             221 I2          .GLOBAL         _RCR1           ; .SRES 1                       ; FFFFFEDC
 1985                             222 I2          .GLOBAL         _RCR2           ; .SRES 1                       ; FFFFFEDE
 1986                             223 I2          .GLOBAL         _ICR0           ; .SRES 2                       ; FFFFFEE0
 1987                             224 I2          .GLOBAL         _IPRA           ; .SRES 2                       ; FFFFFEE2
 1988                             225 I2          .GLOBAL         _IPRB           ; .SRES 2                       ; FFFFFEE4
 1989                             226 I2          .GLOBAL         _BCR1           ; .SRES 2                       ; FFFFFF60
 1990                             227 I2          .GLOBAL         _BCR2           ; .SRES 2                       ; FFFFFF62
 1991                             228 I2          .GLOBAL         _WCR1           ; .SRES 2                       ; FFFFFF64
 1992                             229 I2          .GLOBAL         _WCR2           ; .SRES 2                       ; FFFFFF66
 1993                             230 I2          .GLOBAL         _MCR            ; .SRES 2                       ; FFFFFF68
 1994                             231 I2          .GLOBAL         _PCR            ; .SRES 2                       ; FFFFFF6C
 1995                             232 I2          .GLOBAL         _RTCSR          ; .SRES 2                       ; FFFFFF6E
 1996                             233 I2          .GLOBAL         _RTCNT          ; .SRES 2                       ; FFFFFF70
 1997                             234 I2          .GLOBAL         _RTCOR          ; .SRES 2                       ; FFFFFF72
 1998                             235 I2          .GLOBAL         _RFCR           ; .SRES 2                       ; FFFFFF74
 1999                             236 I2          .GLOBAL         _FRQCR          ; .SRES 2                       ; FFFFFF80
 2000                             237 I2          .GLOBAL         _STBCR          ; .SRES 1                       ; FFFFFF82
 2001                             238 I2          .GLOBAL         _WTCNT          ; .SRES 1                       ; FFFFFF84
 2002                             239 I2          .GLOBAL         _WTCSR          ; .SRES 1                       ; FFFFFF86
 2003                             240 I2          .GLOBAL         _STBCR2         ; .SRES 1                       ; FFFFFF88
 2004                             241 I2          .GLOBAL         _BDRB           ; .SRES 4                       ; FFFFFF90
 2005                             242 I2          .GLOBAL         _BDMRB          ; .SRES 4                       ; FFFFFF94
 2006                             243 I2          .GLOBAL         _BRCR           ; .SRES 4                       ; FFFFFF98
 2007                             244 I2          .GLOBAL         _BETR           ; .SRES 2                       ; FFFFFF9C
 2008                             245 I2          .GLOBAL         _BARB           ; .SRES 4                       ; FFFFFFA0
 2009                             246 I2          .GLOBAL         _BAMRB          ; .SRES 4                       ; FFFFFFA4
 2010                             247 I2          .GLOBAL         _BBRB           ; .SRES 2                       ; FFFFFFA8
 2011                             248 I2          .GLOBAL         _BRSR           ; .SRES 4                       ; FFFFFFAC
 2012                             249 I2          .GLOBAL         _BARA           ; .SRES 4                       ; FFFFFFB0
 2013                             250 I2          .GLOBAL         _BAMRA          ; .SRES 4                       ; FFFFFFB4
 2014                             251 I2          .GLOBAL         _BBRA           ; .SRES 2                       ; FFFFFFB8
 2015                             252 I2          .GLOBAL         _BRDR           ; .SRES 4                       ; FFFFFFBC
 2016                             253 I2          .GLOBAL         _TRA            ; .SRES 4                       ; FFFFFFD0
 2017                             254 I2          .GLOBAL         _EXPEVT         ; .SRES 4                       ; FFFFFFD4
 2018                             255 I2          .GLOBAL         _INTEVT         ; .SRES 4                       ; FFFFFFD8
 2019                             256 I2          .GLOBAL         _MMUCR          ; .SRES 4                       ; FFFFFFE0
 2020                             257 I2          .GLOBAL         _BASRA          ; .SRES 1                       ; FFFFFFE4
 2021                             258 I2          .GLOBAL         _BASRB          ; .SRES 1                       ; FFFFFFE8
 2022                             259 I2          .GLOBAL         _CCR            ; .SRES 4                       ; FFFFFFEC
 2023                             260 I2          .GLOBAL         _PTEH           ; .SRES 4                       ; FFFFFFF0
 2024                             261 I2          .GLOBAL         _PTEL           ; .SRES 4                       ; FFFFFFF4
 2025                             262 I2          .GLOBAL         _TTB            ; .SRES 4                       ; FFFFFFF8
 2026                             263 I2          .GLOBAL         _TEA            ; .SRES 4                       ; FFFFFFFC
 2027                               5 I1  
 2028                              15             .include        "ssa_ver1.equ"
 2029                               1 I1  ;       ***********************************
 2030                               2 I1  ;       ***                             ***
 2031                               3 I1  ;       ***     SIT3/4ÇÃ ∞ƒﬁä÷åWø∞Ωêÿï™ ***
 2032                               4 I1  ;       ***                             ***
 2033                               5 I1  ;       ***********************************
 2034                               6 I1  _TYPE_SIT3      .DEFINE         "0"             ;
 2035                               7 I1  _TYPE_SIT4      .DEFINE         "1"             ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    37
PROGRAM NAME =

 2036                               8 I1  ;;_SIT_TYPE_SEL .DEFINE         "0"     ;
 2037                               9 I1  _SIT_TYPE_SEL   .DEFINE         "1"     ;
 2038                              10 I1  
 2039                              11 I1  ;       ***********************************
 2040                              12 I1  ;       ***                             ***
 2041                              13 I1  ;       ***     C/BÇÃ ∞ƒﬁä÷åWø∞Ωêÿï™    ***
 2042                              14 I1  ;       ***                             ***
 2043                              15 I1  ;       ***********************************
 2044                              16 I1  _CB_CPUA        .DEFINE         "0"             ;
 2045                              17 I1  _CB_CPUB        .DEFINE         "1"             ;
 2046                              18 I1  ;;_CB_CPU_SEL   .DEFINE         "0"     ;
 2047                              19 I1  _CB_CPU_SEL     .DEFINE         "1"     ;CPUB=CPUDÇÃà”ñ°
 2048                              20 I1          .AIF    1 EQ    0
 2049                              21     ;       === CPUA ===
 2050                              22             .AELSE
 2051                              23 C   ;       === CPUB ===
 2052                              24 I1          .AENDI
 2053                              25 I1  
 2054                              26 I1  _SIT3_CPUA      .DEFINE         "0"             ;
 2055                              27 I1  _SIT3_CPUB      .DEFINE         "1"             ;
 2056                              28 I1  _SIT4_CPUA      .DEFINE         "2"             ;
 2057                              29 I1  _SIT4_CPUB      .DEFINE         "3"             ;
 2058                              30 I1  
 2059                              31 I1          .AIF    1 EQ 0
 2060                              32     
 2061                              33                     .AIF    1 EQ    0
 2062                              34     
 2063                              35     _SIT_CPU_SEL    .DEFINE         "0"     ;
 2064                              36     
 2065                              37                     .AELSE
 2066                              38     
 2067                              39     _SIT_CPU_SEL    .DEFINE         "1"     ;
 2068                              40     
 2069                              41                     .AENDI
 2070                              42             .AELSE
 2071                              43 C                   .AIF    1 EQ    0
 2072                              44     
 2073                              45     _SIT_CPU_SEL    .DEFINE         "2"     ;
 2074                              46     
 2075                              47                     .AELSE
 2076                              48 C   
 2077                              49 C   _SIT_CPU_SEL    .DEFINE         "3"     ;
 2078                              50 C   
 2079                              51 C                   .AENDI
 2080                              52 I1          .AENDI
 2081                              16             .include        "ssa_com1.mac"
 2082                               1 I1  
 2083                               2 I1  ;       ====================================
 2084                               3 I1  ;       -------------- WDT CLR -------------
 2085                               4 I1  ;       ====================================
 2086                               5 I1          .MACRO  _WDT_CLR
 2087                               6 I1          PUSH_REG1 R0
 2088                               7 I1          PUSH_REG1 R10
 2089                               8 I1          PUSH_REG1 R14
 2090                               9 I1  
 2091                              10 I1          MOV.L   #_PJDR,R10                              ;
 2092                              11 I1          MOV.B   @R10,R0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    38
PROGRAM NAME =

 2093                              12 I1          OR      #BIT4,R0
 2094                              13 I1          MOV.B   R0,@R10
 2095                              14 I1          AND     #NBIT4,R0
 2096                              15 I1          MOV.B   R0,@R10
 2097                              16 I1  
 2098                              17 I1          ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2099                              18 I1          MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2100                              19 I1          MOV.W   @R10,R0                                 ;
 2101                              20 I1          MOV.W   #BIT0,R14                               ;
 2102                              21 I1          OR      R14,R0                                  ;
 2103                              22 I1          MOV.W   R0,@R10                                 ; WORK
 2104                              23 I1  
 2105                              24 I1  ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2106                              25 I1  ;;      MOV.W   @R10,R0                                 ;
 2107                              26 I1          MOV.W   #_IO2B_P5EX,R14                         ;
 2108                              27 I1          XOR     R14,R0                                  ;
 2109                              28 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2110                              29 I1          MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2111                              30 I1  
 2112                              31 I1          MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2113                              32 I1          MOV.W   @R10,R0                                 ;
 2114                              33 I1          MOV.W   #NBIT0,R14                              ;
 2115                              34 I1          AND     R14,R0                                  ;
 2116                              35 I1          MOV.W   R0,@R10                                 ; WORK
 2117                              36 I1  
 2118                              37 I1  ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2119                              38 I1  ;;      MOV.W   @R10,R0                                 ;
 2120                              39 I1          MOV.W   #_IO2B_P5EX,R14                         ;
 2121                              40 I1          XOR     R14,R0                                  ;
 2122                              41 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2123                              42 I1          MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2124                              43 I1  
 2125                              44 I1          M_BRA   AAA\@
 2126                              45 I1  AAA\@:
 2127                              46 I1          POP_REG1 R14
 2128                              47 I1          POP_REG1 R10
 2129                              48 I1          POP_REG1 R0
 2130                              49 I1          .ENDM
 2131                              50 I1  
 2132                              51 I1  
 2133                              52 I1  ;       ====================================
 2134                              53 I1  ;       -------------- WDT CLR -------------
 2135                              54 I1  ;       ====================================
 2136                              55 I1          .MACRO  _WDT_CLR_MEMCHK
 2137                              56 I1          MOV.L   #_PJDR,R10                              ;
 2138                              57 I1          MOV.B   @R10,R0
 2139                              58 I1          XOR     #BIT4,R0
 2140                              59 I1          MOV.B   R0,@R10
 2141                              60 I1  
 2142                              61 I1          ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2143                              62 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2144                              63 I1          MOV.W   @R10,R0                                 ;
 2145                              64 I1          XOR     #BIT0,R0                                ;
 2146                              65 I1          MOV.W   R0,@R10                                 ; WORK
 2147                              66 I1          .ENDM
 2148                              67 I1  
 2149                              68 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    39
PROGRAM NAME =

 2150                              17             .include        "ssa_had1.equ"
 2151                               1 I1  ;/*     ***********************************     */
 2152                               2 I1  ;/*     ***                             ***     */
 2153                               3 I1  ;/*     ***     íËé¸ä˙äÑçûÇ›äÓñ{TIME    ***     */
 2154                               4 I1  ;/*     ***                             ***     */
 2155                               5 I1  ;/*     ***********************************     */
 2156          000007D0             6 I1  _TIM100US       .EQU    2000                            ;PÉ”/1ÇÃèÍçá
 2157          000009C4             7 I1  _TIM1MS         .EQU    2500                            ;PÉ”/8ÇÃèÍçá
 2158                               8 I1  
 2159                               9 I1  
 2160                              10 I1  ;/*     ***********************************     */
 2161                              11 I1  ;/*     ***                             ***     */
 2162                              12 I1  ;/*     ***     äeÉÅÉÇÉä                ***     */
 2163                              13 I1  ;/*     ***                             ***     */
 2164                              14 I1  ;/*     ***********************************     */
 2165          AC000000            15 I1  _SRAM_TOP       .EQU    H'AC000000
 2166          001FFFFF            16 I1  _SRAM_SIZE      .EQU    H'001FFFFF              ; SIT4-MC
 2167          FFFF6000            17 I1  _IRAM_TOP       .EQU    H'FFFF6000              ;
 2168          00007FFF            18 I1  _IRAM_SIZE      .EQU    H'00007FFF
 2169          00003FFF            19 I1  _DPRAM_SIZE     .EQU    H'00003FFF
 2170                              20 I1  
 2171                              21 I1  
 2172                              22 I1  ;/*     ***********************************     */
 2173                              23 I1  ;/*     ***                             ***     */
 2174                              24 I1  ;/*     ***             IOGA            ***     */
 2175                              25 I1  ;/*     ***                             ***     */
 2176                              26 I1  ;/*     ***********************************     */
 2177          00000000            27 I1  _IOGAi_PA               .equ    0*2     ;//
 2178          00000002            28 I1  _IOGAi_PB               .equ    1*2     ;//
 2179          00000004            29 I1  _IOGAi_PC               .equ    2*2     ;//
 2180          00000006            30 I1  _IOGAi_PD               .equ    3*2     ;//
 2181          00000008            31 I1  _IOGAo_PE               .equ    4*2     ;//
 2182          0000000A            32 I1  _IOGAo_PF               .equ    5*2     ;//
 2183          0000000C            33 I1  _IOGAo_PG               .equ    6*2     ;//
 2184          0000000E            34 I1  _IOGAo_PH               .equ    7*2     ;//
 2185                              35 I1  
 2186          00000000            36 I1  _IOGA_P0                .equ    0*2     ;//
 2187          00000002            37 I1  _IOGA_P1                .equ    1*2     ;//
 2188          00000004            38 I1  _IOGA_P2                .equ    2*2     ;//
 2189          00000006            39 I1  _IOGA_P3                .equ    3*2     ;//
 2190          00000008            40 I1  _IOGA_P4                .equ    4*2     ;//
 2191          0000000A            41 I1  _IOGA_P5                .equ    5*2     ;//
 2192          0000000C            42 I1  _IOGA_P6                .equ    6*2     ;//
 2193          0000000E            43 I1  _IOGA_P7                .equ    7*2     ;//
 2194                              44 I1  
 2195                              45 I1  ;/*     ***********************************     */
 2196                              46 I1  ;/*     ***                             ***     */
 2197                              47 I1  ;/*     ***     óßâ‘IOGA(SIT-4)         ***     */
 2198                              48 I1  ;/*     ***                             ***     */
 2199                              49 I1  ;/*     ***********************************     */
 2200                              50 I1  ;       √ﬁ∞¿⁄ºﬁΩ¿
 2201          00000000            51 I1  _IOGA_PDR0              .equ    0*2*2           ;//
 2202          00000004            52 I1  _IOGA_PDR1              .equ    1*2*2           ;//
 2203          00000008            53 I1  _IOGA_PDR2              .equ    2*2*2           ;//
 2204          0000000C            54 I1  _IOGA_PDR3              .equ    3*2*2           ;//
 2205          00000010            55 I1  _IOGA_PDR4              .equ    4*2*2           ;//
 2206          00000014            56 I1  _IOGA_PDR5              .equ    5*2*2           ;//
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    40
PROGRAM NAME =

 2207          00000018            57 I1  _IOGA_PDR6              .equ    6*2*2           ;//
 2208          0000001C            58 I1  _IOGA_PDR7              .equ    7*2*2           ;// BIT0~3
 2209                              59 I1  
 2210                              60 I1  ;       ï˚å¸⁄ºﬁΩ¿
 2211          00000002            61 I1  _IOGA_PDIR0             .equ    0*2*2+2         ;//
 2212          00000006            62 I1  _IOGA_PDIR1             .equ    1*2*2+2         ;//
 2213          0000000A            63 I1  _IOGA_PDIR2             .equ    2*2*2+2         ;//
 2214          0000000E            64 I1  _IOGA_PDIR3             .equ    3*2*2+2         ;//
 2215          00000012            65 I1  _IOGA_PDIR4             .equ    4*2*2+2         ;//
 2216          00000016            66 I1  _IOGA_PDIR5             .equ    5*2*2+2         ;//
 2217          0000001A            67 I1  _IOGA_PDIR6             .equ    6*2*2+2         ;//
 2218          0000001C            68 I1  _IOGA_PDIR7             .equ    7*2*2           ;// BIT4~7
 2219                              69 I1  
 2220                              70 I1  
 2221                              71 I1  ;/*     ***********************************     */
 2222                              72 I1  ;/*     ***                             ***     */
 2223                              73 I1  ;/*     ***     óßâ‘IOGA(SIT-4)         ***     */
 2224                              74 I1  ;/*     ***                             ***     */
 2225                              75 I1  ;/*     ***********************************     */
 2226                              76 I1  ;       IC7
 2227          00000000            77 I1  _IO1A_P4EX              .EQU    H'00            ;//
 2228          0000007B            78 I1  _IO1A_P5EX              .EQU    H'7B            ;//
 2229          00000000            79 I1  _IO1A_P6EX              .EQU    H'00            ;//
 2230          00000000            80 I1  _IO1A_P7EX              .EQU    H'00            ;//
 2231                              81 I1  ;       IC8
 2232          0000002F            82 I1  _IO2A_P5EX              .EQU    H'2F            ;//
 2233          0000009C            83 I1  _IO2A_P6EX              .EQU    H'9C            ;//FCYCL/RCYCLÇÕê≥ò_óù 2006-08-05
 2234          00000000            84 I1  _IO2A_P7EX              .EQU    H'00            ;//
 2235                              85 I1  
 2236                              86 I1  ;       IC21
 2237          000000FF            87 I1  _IO1B_P4EX              .EQU    H'FF            ;//
 2238          00000070            88 I1  _IO1B_P5EX              .EQU    H'70            ;//
 2239          00000000            89 I1  _IO1B_P6EX              .EQU    H'00            ;//
 2240          00000000            90 I1  _IO1B_P7EX              .EQU    H'00            ;//
 2241                              91 I1  ;       IC22
 2242                              92 I1  ;;_IO2B_P5EX            .EQU    H'2F            ;//
 2243          00000000            93 I1  _IO2B_P5EX              .EQU    H'0             ;//2006-10-19 SAITO
 2244          0000009C            94 I1  _IO2B_P6EX              .EQU    H'9C            ;//FCYCL/RCYCLÇÕê≥ò_óù 2006-08-05
 2245          00000000            95 I1  _IO2B_P7EX              .EQU    H'00            ;//
 2246                              96 I1  
 2247                              97 I1  
 2248                              98 I1  ;/*     ***********************************     */
 2249                              99 I1  ;/*     ***                             ***     */
 2250                             100 I1  ;/*     ***     à íuåàÇﬂLSI             ***     */
 2251                             101 I1  ;/*     ***                             ***     */
 2252                             102 I1  ;/*     ***********************************     */
 2253          00000000           103 I1  _PLSiCH1                .equ    0
 2254          00000030           104 I1  _PLSiCH2                .equ    h'30
 2255                             105 I1  
 2256          00000000           106 I1  _PL_BitComdL            .equ    h'0
 2257          00000002           107 I1  _PL_BitComdH            .equ    h'2
 2258          00000004           108 I1  _PL_BitInfoL            .equ    h'4
 2259          00000006           109 I1  _PL_BitInfoH            .equ    h'6
 2260          00000024           110 I1  _PL_NowPos1L            .equ    h'24
 2261          00000026           111 I1  _PL_NowPos1H            .equ    h'26
 2262          00000028           112 I1  _PL_NowPos2             .equ    h'28
 2263          0000002A           113 I1  _PL_CtrlReg             .equ    h'2A
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    41
PROGRAM NAME =

 2264                             114 I1  
 2265                             115 I1  
 2266                             116 I1  _DEBUG_DIS              .DEFINE         "0"
 2267                             117 I1  _DEBUG_ENB              .DEFINE         "1"
 2268                             118 I1  ;;_SCAN_DEBUG_ENB               .DEFINE         "1"
 2269                             119 I1  _SCAN_DEBUG_ENB         .DEFINE         "0"
 2270                              18             .include        "ssa_wrmy.ext"
 2271                               1 I1  ;       ***********************************
 2272                               2 I1  ;       ***                             ***
 2273                               3 I1  ;       ***             ramíËã`         ***
 2274                               4 I1  ;       ***                             ***
 2275                               5 I1  ;       ***********************************
 2276                               6 I1  ;       Ç≈Ç´ÇÈå¿ÇËssc_wrm*.c/ssc_wrm*.hë§Ç…íËã`Ç∑ÇÈéñ
 2277                               7 I1  ;       ssc_wrm*.h ÇÃexternï∂ÇÉAÉZÉìÉuÉâÇ≈éQè∆Ç∑ÇÈèÍçáÇÕÇ±Ç±Ç…ì¸ÇÍÇÈ
 2278                               8 I1  ;       ===========================================
 2279                               9 I1  ;       ===     ssa_wrmy.src ÇÃexternï∂         ===
 2280                              10 I1  ;       ===========================================
 2281                              11 I1          .GLOBAL _SAITO_ASM_RAM_TOP      ;
 2282                              12 I1  
 2283                              13 I1  ;//     ***********************************
 2284                              14 I1  ;//     ***     éÛêMàŸèÌ                ***
 2285                              15 I1  ;//     ***********************************
 2286                              16 I1          .global _rcv2_err_hard_INTflg1; //  ∞ƒﬁàŸèÌ
 2287                              17 I1          .global _rcv2_err_hard_INTflg2; //  ∞ƒﬁàŸèÌ
 2288                              18 I1          .global _rcv2_err_hard_INTflg3; //  ∞ƒﬁàŸèÌ
 2289                              19 I1          .global _rcv2_err_data_flg1;    // √ﬁ∞¿àŸèÌ(ñ¢égóp)
 2290                              20 I1          .global _rcv2_err_hard_sts1;    // è⁄ç◊ àŸèÌì‡óe
 2291                              21 I1          .global _rcv2_err_hard_sts2;    // è⁄ç◊ àŸèÌì‡óe
 2292                              22 I1          .global _rcv2_err_hard_sts3;    //
 2293                              23 I1          .global _rcv2_err_data_sts1;    //(ñ¢égóp)
 2294                              24 I1          .global _rcv2_err_OverRunCnt;   //
 2295                              25 I1          .global _rcv2_err_FRPRErrCnt;   //Ã⁄∞—ÅE ﬂÿ√®
 2296                              26 I1          .global _rcv2_err_elseErrCnt;   //Ã⁄∞—ÅE ﬂÿ√®
 2297                              27 I1  
 2298                              28 I1  ;//     ***********************************
 2299                              29 I1  ;//     ***     ê≥èÌéÛêM                ***
 2300                              30 I1  ;//     ***********************************
 2301                              31 I1          .global _rcv2_data_INcnt;//éÛêM√ﬁ∞¿êî éÛêM ﬁÃßÅ®å¬êî
 2302                              32 I1          .global _rcv2_data_cnt;//èàóùÇ∑Ç◊Ç´∂≥›¿êîÿ–ØƒÇÇ©ÇØÇΩÇ‡ÇÒÇo
 2303                              33 I1          .global _rcv2_data_buf;[32];
 2304                              34 I1  
 2305                              35 I1  ;//     ***********************************
 2306                              36 I1  ;//     ***     ëóêM                    ***
 2307                              37 I1  ;//     ***********************************
 2308                              38 I1          .global _send2_data_buf;[32];
 2309                              39 I1  ;//     ***********************************
 2310                              40 I1  ;//     ***     ëóéÛêMä«óù              ***
 2311                              41 I1  ;//     ***********************************
 2312                              42 I1          .global _rcv2_event_flg;        //main-->bit0=1  2ms:bit1(èàóùäJén),bit7(äÆóπ)
 2313                              43 I1          .global _send2_event_flg;//main-->bit0=1  2ms:bit1(èàóùäJén),bit7(äÆóπ)
 2314                              44 I1  
 2315                              45 I1          .global _PV1_SCRW_POS;                  //;@égópsh->H8 ->ï\é¶   [âÒëóóLÇË1CH ÇÃÇ›]
 2316                              46 I1  
 2317                              47 I1          .global _PV0_SCRW_POS;                  //;@égópsh->H8 ->ï\é¶   [âÒëóóLÇË1CH ÇÃÇ›]
 2318                              48 I1  
 2319                              49 I1  
 2320                              50 I1  ;//     *******************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    42
PROGRAM NAME =

 2321                              51 I1  ;//     ***     àŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl          ***
 2322                              52 I1  ;//     *******************************************
 2323                              53 I1  
 2324                              54 I1          .global _ERR_CHK_OK_FLG                 ;//àŸèÌèàóùäJénÃ◊∏ﬁ
 2325                              55 I1  
 2326                              56 I1          .global _ER_SQRAM_WK1                   ;//
 2327                              57 I1          .global _ER_SQRAM_WK2                   ;//
 2328                              58 I1          .global _SH4_SQERRAM                    ;// SH4 -> SH2
 2329                              59 I1          .global _DBG_ERRCHK_NASI                ;// ¡™Ø∏Ç»Çµ
 2330                              60 I1  
 2331                              61 I1          .global _ER_SFTSW_CHG_OLD               ;//
 2332                              62 I1  
 2333                              63 I1          .global _FROM_SUMCHK_CODE               ;// FROM SUM CODE
 2334                              64 I1  
 2335                              65 I1          .global _SFTSW_ERR_TM                   ;//
 2336                              66 I1          .global _BTNER_ERR_TM                   ;//
 2337                              67 I1          .global _NCHSW_ERR_TM1                  ;//
 2338                              68 I1          .global _NCHSW_ERR_TM2                  ;//
 2339                              69 I1          .global _VLVER11_ERR_TM                 ;//
 2340                              70 I1          .global _VLVER12_ERR_TM                 ;//
 2341                              71 I1          .global _VLVER21_ERR_TM                 ;//
 2342                              72 I1          .global _VLVER22_ERR_TM                 ;//
 2343                              73 I1          .global _VLVER31_ERR_TM                 ;//
 2344                              74 I1          .global _VLVER32_ERR_TM                 ;//
 2345                              75 I1          .global _CMP2_ERR_TM2                   ;//
 2346                              76 I1          .global _FSFT_TRERR_TM                  ;//
 2347                              77 I1          .global _RSFT_TRERR_TM                  ;//
 2348                              78 I1  
 2349                              79 I1  
 2350                              80 I1          .global _WPAR1_SFTSWER_TM               ;//
 2351                              81 I1          .global _WPAR1_BTNER_TM                 ;//
 2352                              82 I1          .global _WPAR1_MODSER_TM1               ;//
 2353                              83 I1          .global _WPAR1_MODSER_TM2               ;//
 2354                              84 I1          .global _WPAR1_VLVER11_TM1              ;//
 2355                              85 I1          .global _WPAR1_VLVER12_TM1              ;//
 2356                              86 I1          .global _WPAR1_VLVER21_TM1              ;//
 2357                              87 I1          .global _WPAR1_VLVER22_TM1              ;//
 2358                              88 I1          .global _WPAR1_VLVER31_TM1              ;//
 2359                              89 I1          .global _WPAR1_VLVER32_TM1              ;//
 2360                              90 I1          .global _WPAR1_CMPER2_TM                ;//
 2361                              91 I1          .global _WPAR1_FSFTTRER_TM              ;//
 2362                              92 I1          .global _WPAR1_RSFTTRER_TM              ;//
 2363                              93 I1  
 2364                              94 I1  
 2365                              95 I1          .global _REMOTE_ERR_CHKTM               ;//
 2366                              96 I1  
 2367                              97 I1          .global _ROM_SYSPAR_ERRADR              ;//
 2368                              98 I1  
 2369                              99 I1  
 2370                             100 I1  
 2371                             101 I1  ;//     ***************************************************
 2372                             102 I1  ;//     ***     ÉZÉãÉtÉ`ÉFÉbÉNä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl        ***
 2373                             103 I1  ;//     ***************************************************
 2374                             104 I1          .global _SELF_CHK_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2375                             105 I1          .global _SELF_ACT_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2376                             106 I1  
 2377                             107 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    43
PROGRAM NAME =

 2378                             108 I1          .global _SELF_HAND_FLG1                 ; é©ï™ÇÃèÛë‘Ã◊∏ﬁ SRAM
 2379                             109 I1          .global _SELF_HAND_FLG2                 ; ëäéËÇÃèÛë‘Ã◊∏ﬁ SRAM
 2380                             110 I1  
 2381                             111 I1          .global _SELF_FSTY_USE                  ;//;ëOà¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2382                             112 I1          .global _SELF_RSTY_USE                  ;//;å„à¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2383                             113 I1  
 2384                             114 I1          .global _SELF_CHK_TIMER                 ;//;ÉZÉãÉtÉ`ÉFÉbÉNÉ^ÉCÉ}
 2385                             115 I1  
 2386                             116 I1  ;       *** AD CONVERTER WORK RAM ***
 2387                             117 I1          .global _AD_CNV_DT0                     ; 8BIT A/D
 2388                             118 I1  
 2389                             119 I1          .global _AD_BUFCNT                      ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2390                             120 I1          .global _AD_AVG_BUF                     ;// ïΩãœBAFTOP
 2391                             121 I1          .global _AD_AVG_TOTAL                   ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2392                             122 I1          .global _PV_AD_DATA                     ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩå„ÇÃAD DATA
 2393                             123 I1  
 2394                             124 I1  ;       -----------------2014-02-14 -----------
 2395                             125 I1          .global _AD2_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2396                             126 I1          .global _AD2_AVG_BUF                    ;// ïΩãœBAFTOP
 2397                             127 I1          .global _AD2_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2398                             128 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD2_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2399                             129 I1          .global _AD2CNV_IN_DATA                 ;
 2400                             130 I1  
 2401                             131 I1          .global _AD3_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2402                             132 I1          .global _AD3_AVG_BUF                    ;// ïΩãœBAFTOP
 2403                             133 I1          .global _AD3_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2404                             134 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD3_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2405                             135 I1          .global _AD3CNV_IN_DATA                 ;
 2406                             136 I1  
 2407                             137 I1          .global _AD4_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2408                             138 I1          .global _AD4_AVG_BUF                    ;// ïΩãœBAFTOP
 2409                             139 I1          .global _AD4_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2410                             140 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD4_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2411                             141 I1          .global _AD4CNV_IN_DATA                 ;
 2412                             142 I1  
 2413                             143 I1          .global _ADCNV_SEL                      ;
 2414                             144 I1  
 2415                             145 I1  
 2416                             146 I1  
 2417                             147 I1  ;//     ***************************************
 2418                             148 I1  ;//     ***     ìÒèdâÒòHàŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl  ***
 2419                             149 I1  ;//     ***************************************
 2420                             150 I1          .global _CPUN_2CMP_DATA                 ;// ëäéËÇbÇoÇtÇÃî‰ärÉfÅ[É^
 2421                             151 I1          .global _CMP2_ERR_FIRST                 ;// èâÇﬂÇƒìÒèdâÒòHàŸèÌî≠ê∂
 2422                             152 I1  
 2423                             153 I1          .global _CPUN_2CMP_LATCH2               ;// ëäéËìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2424                             154 I1          .global _CPUN_2CMP_LATCH1               ;// é©ï™ìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2425                             155 I1  
 2426                             156 I1  
 2427                             157 I1  ;//     *** à¿ëSëïíuä÷åW ***
 2428                             158 I1  
 2429                             159 I1          .global _FACT_IN_DATA                   ;//
 2430                             160 I1          .global _RACT_IN_DATA                   ;//
 2431                             161 I1          .global _FDEV_IN_DATA                   ;//
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    44
PROGRAM NAME =

 2432                             162 I1          .global _RDEV_IN_DATA                   ;//
 2433                             163 I1  
 2434                             164 I1  
 2435                             165 I1  ;       ===========================================
 2436                             166 I1  ;       ===     ssc_wrmy.c ÇÃexternï∂           ===
 2437                             167 I1  ;       ===========================================
 2438                             168 I1  
 2439                             169 I1          .GLOBAL         _TINT3_10MS_CNT                 ;
 2440                             170 I1  
 2441                             171 I1  
 2442                             172 I1  ;//     í êMä÷òA 2004-04-14
 2443                             173 I1          .global _WK_RCV_SCLSR2;//2004-04-12
 2444                             174 I1          .global _WK_RCV_SCFSR2;//2004-04-12
 2445                             175 I1          .global _WK_RCV_SCFDR2  ;//2004-04-12
 2446                             176 I1  
 2447                             177 I1  ;//     ===================
 2448                             178 I1  ;//     ===             ===
 2449                             179 I1  ;//     ===================
 2450                             180 I1  ;//     === 2004-04-14 ====
 2451                             181 I1          .global _IN_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA
                                          -FORM),,
 2452                             182 I1          .global _IN_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2453                             183 I1          .global _RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA-FO
                                          RM),,
 2454                             184 I1          .global _RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2455                             185 I1          .global _LT_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA
                                          -FORM),,
 2456                             186 I1          .global _LT_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2457                             187 I1  
 2458                             188 I1          .global _RNA_CMD_VERIFY_CNT;//00,01à»äOÇ™î≠ê∂
 2459                             189 I1          .global _RNA_CMD_VERIFY_DAT;//àŸèÌéûÇÃç≈êV√ﬁ∞¿
 2460                             190 I1          .global _RNA_STS_SYSERR_CNT;//BIT0=1
 2461                             191 I1          .global _RNA_STS_REQERR_CNT;//BIT2=1
 2462                             192 I1          .global _RNA_STS_ERR_DAT;//àŸèÌéûÇÃç≈êV√ﬁ∞¿
 2463                             193 I1          .global _RNA_ALM_BIT0_CNT;//
 2464                             194 I1          .global _RNA_ALM_BIT1_CNT;//
 2465                             195 I1          .global _RNA_ALM_BIT2_CNT;//
 2466                             196 I1          .global _RNA_ALM_BIT3_CNT;//
 2467                             197 I1          .global _RNA_ALM_BIT4_CNT;//
 2468                             198 I1          .global _RNA_ALM_BIT5_CNT;//
 2469                             199 I1          .global _RNA_ALM_BIT6_CNT;//
 2470                             200 I1          .global _RNA_ALM_BIT7_CNT;//
 2471                             201 I1          .global _RNA_ALM_CNT;//
 2472                             202 I1          .global _RNA_ALM_DAT;//
 2473                             203 I1          .global _RNA_REF1_CNT;//èàóùÇ™ê≥èÌÇ…ìÆçÏÇµÇƒÇ¢ÇÈÇ©
 2474                             204 I1          .global _RNA_REF2_CNT;//èàóùÇ™ê≥èÌÇ…ìÆçÏÇµÇƒÇ¢ÇÈÇ©
 2475                             205 I1  
 2476                             206 I1          .global _DSET_SW_FLG;
 2477                             207 I1  
 2478                             208 I1  
 2479                             209 I1  
 2480                             210 I1  
 2481                             211 I1  
 2482                             212 I1  
 2483                             213 I1  
 2484                             214 I1  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ;;;;;;;;;;;;;;;;;;;;;;;;;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    45
PROGRAM NAME =

 2485                             215 I1  
 2486                             216 I1  
 2487                             217 I1  
 2488                             218 I1  
 2489                             219 I1  ;       ***********************************
 2490                             220 I1  ;       ***                             ***
 2491                             221 I1  ;       ***             ramíËã`         ***
 2492                             222 I1  ;       ***                             ***
 2493                             223 I1  ;       ***********************************
 2494                             224 I1  ;       Ç≈Ç´ÇÈå¿ÇËssc_wrm*.c/ssc_wrm*.hë§Ç…íËã`Ç∑ÇÈéñ
 2495                             225 I1  ;       ssc_wrm*.h ÇÃexternï∂ÇÉAÉZÉìÉuÉâÇ≈éQè∆Ç∑ÇÈèÍçáÇÕÇ±Ç±Ç…ì¸ÇÍÇÈ
 2496                             226 I1  ;       ===========================================
 2497                             227 I1  ;       ===     ssa_wrmy.src ÇÃexternï∂         ===
 2498                             228 I1  ;       ===========================================
 2499                             229 I1  ;20060725 SAITO .GLOBAL _SAITO_ASM_RAM_TOP      ;
 2500                             230 I1  
 2501                             231 I1          .global         _SQ_CBWK_TOP            ;//
 2502                             232 I1          .global         _CPUA_EMG_IN_FLG        ;//
 2503                             233 I1  
 2504                             234 I1  
 2505                             235 I1  ;//     *** INP1 PORT ***
 2506                             236 I1          .global         _REAL_INP1_DATA                 ; ç°âÒíl
 2507                             237 I1          .global         _REAL_INP1_DT_OLD1              ; 1âÒëO
 2508                             238 I1          .global         _REAL_INP1_DT_OLD2              ; 2âÒëO
 2509                             239 I1  
 2510                             240 I1  ;//     *** PB PORT ***
 2511                             241 I1          .global         _PB_PORT_CTL_DATA               ; ç°âÒíl
 2512                             242 I1          .global         _PB_INDT_OLD1                   ; 1âÒëO
 2513                             243 I1          .global         _PB_INDT_OLD2                   ; 2âÒëO
 2514                             244 I1  
 2515                             245 I1  ;//;    *** PJ PORT ***
 2516                             246 I1          .global         _PJ_PORT_CTL_DATA               ; ç°âÒíl
 2517                             247 I1          .global         _PJ_INDT_OLD1                   ; 1âÒëO
 2518                             248 I1          .global         _PJ_INDT_OLD2                   ; 2âÒëO
 2519                             249 I1  
 2520                             250 I1  ;//     *** PK PORT ***
 2521                             251 I1          .global         _PK_PORT_CTL_DATA               ; ç°âÒíl
 2522                             252 I1          .global         _PK_INDT_OLD1                   ; 1âÒëO
 2523                             253 I1          .global         _PK_INDT_OLD2                   ; 2âÒëO
 2524                             254 I1  
 2525                             255 I1  ;//     *** PL PORT ***
 2526                             256 I1          .global         _PL_PORT_CTL_DATA               ; ç°âÒíl
 2527                             257 I1          .global         _PL_INDT_OLD1                   ; 1âÒëO
 2528                             258 I1          .global         _PL_INDT_OLD2                   ; 2âÒëO
 2529                             259 I1  
 2530                             260 I1  ;//     *******************************************
 2531                             261 I1  ;//     ***     àŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl          ***
 2532                             262 I1  ;//     *******************************************
 2533                             263 I1  
 2534                             264 I1  ;20060725 SAITO .global _ERR_CHK_OK_FLG                 ;//àŸèÌèàóùäJénÃ◊∏ﬁ
 2535                             265 I1  
 2536                             266 I1  ;20060725 SAITO .global _ER_SQRAM_WK1                   ;//
 2537                             267 I1  ;20060725 SAITO .global _ER_SQRAM_WK2                   ;//
 2538                             268 I1  ;20060725 SAITO .global _SH4_SQERRAM                    ;// SH4 -> SH2
 2539                             269 I1  ;20060725 SAITO .global _DBG_ERRCHK_NASI                ;// ¡™Ø∏Ç»Çµ
 2540                             270 I1  
 2541                             271 I1  ;20060725 SAITO .global _ER_SFTSW_CHG_OLD               ;//
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    46
PROGRAM NAME =

 2542                             272 I1  
 2543                             273 I1  ;20060725 SAITO .global _SFTSW_ERR_TM                   ;//
 2544                             274 I1  ;20060725 SAITO .global _BTNER_ERR_TM                   ;//
 2545                             275 I1  ;20060725 SAITO .global _NCHSW_ERR_TM1                  ;//
 2546                             276 I1  ;20060725 SAITO .global _NCHSW_ERR_TM2                  ;//
 2547                             277 I1  ;20060725 SAITO .global _VLVER11_ERR_TM                 ;//
 2548                             278 I1  ;20060725 SAITO .global _VLVER12_ERR_TM                 ;//
 2549                             279 I1  ;20060725 SAITO .global _VLVER21_ERR_TM                 ;//
 2550                             280 I1  ;20060725 SAITO .global _VLVER22_ERR_TM                 ;//
 2551                             281 I1  ;20060725 SAITO .global _VLVER31_ERR_TM                 ;//
 2552                             282 I1  ;20060725 SAITO .global _VLVER32_ERR_TM                 ;//
 2553                             283 I1  ;20060725 SAITO .global _CMP2_ERR_TM2                   ;//
 2554                             284 I1  ;20060725 SAITO .global _FSFT_TRERR_TM                  ;//
 2555                             285 I1  ;20060725 SAITO .global _RSFT_TRERR_TM                  ;//
 2556                             286 I1  
 2557                             287 I1  ;20060725 SAITO .global _WPAR1_SFTSWER_TM               ;//
 2558                             288 I1  ;20060725 SAITO .global _WPAR1_BTNER_TM                 ;//
 2559                             289 I1  ;20060725 SAITO .global _WPAR1_MODSER_TM1               ;//
 2560                             290 I1  ;20060725 SAITO .global _WPAR1_MODSER_TM2               ;//
 2561                             291 I1  ;20060725 SAITO .global _WPAR1_VLVER11_TM1              ;//
 2562                             292 I1  ;20060725 SAITO .global _WPAR1_VLVER12_TM1              ;//
 2563                             293 I1  ;20060725 SAITO .global _WPAR1_VLVER21_TM1              ;//
 2564                             294 I1  ;20060725 SAITO .global _WPAR1_VLVER22_TM1              ;//
 2565                             295 I1  ;20060725 SAITO .global _WPAR1_VLVER31_TM1              ;//
 2566                             296 I1  ;20060725 SAITO .global _WPAR1_VLVER32_TM1              ;//
 2567                             297 I1  ;20060725 SAITO .global _WPAR1_CMPER2_TM                ;//
 2568                             298 I1  ;20060725 SAITO .global _WPAR1_FSFTTRER_TM              ;//
 2569                             299 I1  ;20060725 SAITO .global _WPAR1_RSFTTRER_TM              ;//
 2570                             300 I1  
 2571                             301 I1  
 2572                             302 I1          .global _KEEPRY_BKUP_ERR                ;//
 2573                             303 I1  
 2574                             304 I1  
 2575                             305 I1  ;//     ***************************************************
 2576                             306 I1  ;//     ***     ÉZÉãÉtÉ`ÉFÉbÉNä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl        ***
 2577                             307 I1  ;//     ***************************************************
 2578                             308 I1  ;20060725 SAITO .global _SELF_CHK_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2579                             309 I1  ;20060725 SAITO .global _SELF_ACT_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2580                             310 I1  
 2581                             311 I1  ;20060725 SAITO .global _SELF_HAND_FLG1                 ; é©ï™ÇÃèÛë‘Ã◊∏ﬁ SRAM
 2582                             312 I1  ;20060725 SAITO .global _SELF_HAND_FLG2                 ; ëäéËÇÃèÛë‘Ã◊∏ﬁ SRAM
 2583                             313 I1  
 2584                             314 I1  ;20060725 SAITO .global _SELF_FSTY_USE                  ;//;ëOà¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2585                             315 I1  ;20060725 SAITO .global _SELF_RSTY_USE                  ;//;å„à¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2586                             316 I1  
 2587                             317 I1  ;20060725 SAITO .global _SELF_CHK_TIMER                 ;//;ÉZÉãÉtÉ`ÉFÉbÉNÉ^ÉCÉ}
 2588                             318 I1  
 2589                             319 I1  ;//     *** AD CONVERTER WORK RAM ***
 2590                             320 I1  ;20060725 SAITO .global _AD_CNV_DT0                     ; 8BIT A/D
 2591                             321 I1  
 2592                             322 I1  ;20060725 SAITO .global _AD_BUFCNT                      ; à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2593                             323 I1  ;20060725 SAITO .global _AD_AVG_BUF                     ; ïΩãœBAFTOP
 2594                             324 I1  ;20060725 SAITO .global _AD_AVG_TOTAL                   ; ÇWâÒï™ÇÃ√ﬁ∞¿
 2595                             325 I1  ;20060725 SAITO .global _PV_AD_DATA                     ; à⁄ìÆïΩãœÇ∆Ç¡ÇΩå„ÇÃAD DATA
 2596                             326 I1  
 2597                             327 I1  
 2598                             328 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    47
PROGRAM NAME =

 2599                             329 I1  
 2600                             330 I1  ;//     ***************************************
 2601                             331 I1  ;//     ***     ìÒèdâÒòHàŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl  ***
 2602                             332 I1  ;//     ***************************************
 2603                             333 I1  ;20060725 SAITO .global _CPUN_2CMP_DATA                 ;// ëäéËÇbÇoÇtÇÃî‰ärÉfÅ[É^
 2604                             334 I1  ;20060725 SAITO .global _CMP2_ERR_FIRST                 ;// èâÇﬂÇƒìÒèdâÒòHàŸèÌî≠ê∂
 2605                             335 I1  
 2606                             336 I1  ;20060725 SAITO .global _CPUN_2CMP_LATCH2               ;// ëäéËìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2607                             337 I1  ;20060725 SAITO .global _CPUN_2CMP_LATCH1               ;// é©ï™ìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2608                             338 I1  
 2609                             339 I1  
 2610                             340 I1  
 2611                             341 I1  ;//     *** à¿ëSëïíuä÷åW ***
 2612                             342 I1  
 2613                             343 I1  ;20060725 SAITO .global _FACT_IN_DATA                   ;//
 2614                             344 I1  ;20060725 SAITO .global _RACT_IN_DATA                   ;//
 2615                             345 I1  ;20060725 SAITO .global _FDEV_IN_DATA                   ;//
 2616                             346 I1  ;20060725 SAITO .global _RDEV_IN_DATA                   ;//
 2617                             347 I1  
 2618                             348 I1  
 2619                             349 I1  
 2620                             350 I1  ;//     IOGA    ä÷åWÅ@ÇrÇhÇsÅ|ÇSóp 2006-07-16
 2621                             351 I1  
 2622                             352 I1  ;//;    *** IO-GA WORK ***
 2623                             353 I1          .global _IOGA1_CTRL_DAT1                ;       //.SRES 2*8             ; GA-PA,PB
                                          ,PC,PD,PE ì¸óÕPORT
 2624                             354 I1                                                  ;//;    PF,PG,PH èoóÕPORT
 2625                             355 I1          .global _IOGA2_CTRL_DAT1                ;       //.SRES 2*8             ; GA-PA,PB
                                          ,PC,PD,PE ì¸óÕPORT
 2626                             356 I1                                                  ;//;    PF,PG,PH èoóÕPORT
 2627                             357 I1  ;//;    *** IOGA INPUT WORK RAM ***
 2628                             358 I1          .global _IOGA1_PA_DT_OLD1               ;       // 1âÒëO
 2629                             359 I1          .global _IOGA1_PB_DT_OLD1               ;       // 1âÒëO
 2630                             360 I1          .global _IOGA1_PC_DT_OLD1               ;       // 1âÒëO
 2631                             361 I1          .global _IOGA1_PD_DT_OLD1               ;       // 1âÒëO
 2632                             362 I1          .global _IOGA1_PE_DT_OLD1               ;       // 1âÒëO
 2633                             363 I1  
 2634                             364 I1          .global _IOGA1_PA_DT_OLD2               ;       // 2âÒëO
 2635                             365 I1          .global _IOGA1_PB_DT_OLD2               ;       // 2âÒëO
 2636                             366 I1          .global _IOGA1_PC_DT_OLD2               ;       // 2âÒëO
 2637                             367 I1          .global _IOGA1_PD_DT_OLD2               ;       // 2âÒëO
 2638                             368 I1          .global _IOGA1_PE_DT_OLD2               ;       // 2âÒëO
 2639                             369 I1  
 2640                             370 I1          .global _IOGA2_PA_DT_OLD1               ;       // 1âÒëO
 2641                             371 I1          .global _IOGA2_PB_DT_OLD1               ;       // 1âÒëO
 2642                             372 I1          .global _IOGA2_PC_DT_OLD1               ;       // 1âÒëO
 2643                             373 I1          .global _IOGA2_PD_DT_OLD1               ;       // 1âÒëO
 2644                             374 I1          .global _IOGA2_PE_DT_OLD1               ;       // 1âÒëO
 2645                             375 I1  
 2646                             376 I1          .global _IOGA2_PA_DT_OLD2               ;       // 2âÒëO
 2647                             377 I1          .global _IOGA2_PB_DT_OLD2               ;       // 2âÒëO
 2648                             378 I1          .global _IOGA2_PC_DT_OLD2               ;       // 2âÒëO
 2649                             379 I1          .global _IOGA2_PD_DT_OLD2               ;       // 2âÒëO
 2650                             380 I1          .global _IOGA2_PE_DT_OLD2               ;       // 2âÒëO
 2651                             381 I1  
 2652                             382 I1  
 2653                             383 I1  ;20060725 SAITO .global _DSET_SW_FLG;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    48
PROGRAM NAME =

 2654                             384 I1  
 2655                             385 I1  
 2656                             386 I1  
 2657                             387 I1  
 2658                             388 I1  
 2659                             389 I1  
 2660                             390 I1  
 2661                             391 I1  
 2662                             392 I1  
 2663                             393 I1  
 2664                             394 I1  
 2665                             395 I1  
 2666                             396 I1  
 2667                             397 I1  
 2668                             398 I1  
 2669                              19     
 2670                              20     
 2671                              21     ;;_ROM_SUM_SEL  .DEFINE         "1"             ; èoâ◊éû
 2672                              22     _ROM_SUM_SEL    .DEFINE         "0"             ; √ﬁ ﬁØ∏ﬁéû
 2673                              23     
 2674                              24     
 2675                              25             .import _PowerON_Reset_SP
 2676                              26             .import _INTHandlerPRG
 2677                              27             .import __INITSCT
 2678                              28             .import _main
 2679                              29     
 2680                              30     ;       .import __INIT_IOLIB            ; Remove the comment when you use SIM I/O
 2681                              31     ;       .import __CLOSEALL
 2682                              32     
 2683                              33     ;       .import __INIT_OTHERLIB         ; Remove the comment when you use rand(),strtok()
 2684                              34     
 2685                              35     ;       .import _HardwareSetup          ; Remove the comment when you use Hardware Setup
 2686                              36     
 2687                              37     ;       .import __call_init                     ; Remove the comment when you use __call_i
                                          nit
 2688                              38     ;       .import __call_end                      ; Remove the comment when you use __call_e
                                          nd
 2689                              39     
 2690                              40     
 2691                              41             .import         _HardwareSetup1;
 2692                              42             .import         _HardwareSetup2;
 2693                              43             .import         _IRAM_CLEAR;
 2694                              44             .import         _WORK_MEM_CHK2;
 2695                              45             .import         _DP_MEM_CHK                     ;cpud-aä‘
 2696                              46             .import         _DP2_MEM_CHK                    ;cpud-bä‘
 2697                              47     
 2698                              48             .import         _ROM_SUM_CHK;
 2699                              49             .import         _SCI_VUP_MAIN;
 2700                              50             .import         _SCI0_PRO_ROM_TO_RAM;
 2701                              51             .import         _INTHdlr_TO_RAM;
 2702                              52             .import         _init_LCD;
 2703                              53             .import         _init_DISP;
 2704                              54             .import         _vup_mesG_disp;
 2705                              55     
 2706                              56             .import         _VUPCHECK_DATA;
 2707                              57             .import         _CASH_ENB
 2708                              58             .import         _P_TO_PRAM_COPY                 ; P -> PRAM
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    49
PROGRAM NAME =

 2709                              59             .import         _PC_TO_PCRAM_COPY               ; Pcall -> PcallRAM
 2710                              60             .import         _PH_TO_PHRAM_COPY               ; Pcall -> PcallRAM
 2711                              61             .import         _INTDI_SCI_EXCEPT
 2712                              62     
 2713                              63             .import         _GAM_INF_TBL
 2714                              64             .import         _GAM_INF_TBL2                   ; V06
 2715                              65     
 2716                              66             .import         _dio_top1                       ; 2006-10-19 SAITO
 2717                              67             .import         _dio_top2                       ; 2006-10-19 SAITO
 2718                              68     
 2719                              69             .IMPORT         _KJ_CHK_CNT0
 2720                              70     
 2721                              71     
 2722 00000000                     72                     .section ResetPRG,code
 2723 00000000                     73     _PowerON_Reset:
 2724 00000000                     74     _Manual_Reset:
 2725 00000000 DF17                75                     mov.l   #_PowerON_Reset_SP, R15  ; Initialize SP
 2726 00000002 D018                76                     mov.l   #_INTHandlerPRG,r0
 2727 00000004 D118                77                     mov.l   #H'100,r1
 2728 00000006 3018                78                     sub.l   r1,r0
 2729 00000008 402E                79                     ldc             r0,vbr                  ; VBR addr set
 2730                              80     
 2731                              81     ;//             mov.l   #__INITSCT,r1
 2732                              82     ;//             jsr     @r1
 2733                              83     ;//             nop
 2734                              84     
 2735                              85     ;               mov.l   #__INIT_IOLIB,r1                ; Remove the comment when you use
                                          SIM I/O
 2736                              86     ;               jsr     @r1
 2737                              87     ;               nop
 2738                              88     
 2739                              89     ;               mov.l   #__INIT_OTHERLIB,r1             ; Remove the comment when you use
                                          rand(),strtok()
 2740                              90     ;               jsr     @r1
 2741                              91     ;               nop
 2742                              92     
 2743                              93     ;               mov.l   #_HardwareSetup,r1              ; Remove the comment when you use
                                          Hardware Setup
 2744                              94     ;               jsr     @r1
 2745                              95     ;               nop
 2746                              96     
 2747                              97     ;               mov.l   #__call_init,r1                 ; Remove the comment when you use
                                          global class object
 2748                              98     ;               jsr     @r1                                             ; See initsct.c an
                                          d dbsct.src
 2749                              99     ;               nop
 2750                             100     
 2751                             101     ;//             mov.l   #SR_Init,r0
 2752                             102     ;//             mov.l   #_main,r8
 2753                             103     ;//             ldc             r0,sr                                   ; SR set (User AP
                                          mode)
 2754                             104     ;//             jsr             @r8
 2755                             105     ;//             nop
 2756                             106     
 2757                             107     ;               mov.l   #__call_end,r1                  ; Remove the comment when you use
                                          global class object
 2758                             108     ;               jsr     @r1                                             ; See initsct.c an
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    50
PROGRAM NAME =

                                          d dbsct.src
 2759                             109     ;               nop
 2760                             110     
 2761                             111     ;               mov.l   #__CLOSEALL,r1                  ; Remove the comment when you use
                                          SIM I/O
 2762                             112     ;               jsr     @r1
 2763                             113     ;               nop
 2764                             114     
 2765                             115     
 2766 0000000A D118               116             mov.l   #_HardwareSetup1,r1     ; Use Hardware Setup
 2767 0000000C 410B               117             jsr     @r1
 2768 0000000E 0009               118             nop
 2769                             119     
 2770 00000010 D117               120             mov.l   #_IRAM_CLEAR,r1                         ; ì‡ëüRAM∏ÿ±    2006/12/26 V05
 2771 00000012 410B               121             jsr     @r1
 2772 00000014 0009               122             nop
 2773                             123     
 2774                             124     ;       =========== WDT CLEARÇÃÇΩÇﬂÇ…óßâ‘LSIÇÉCÉjÉVÉÉÉãÇ∑ÇÈ 2006-10-19 SAITO ============
 2775 00000016 D117               125             MOV.L   #_dio_top2+_IOGA_PDIR5,R1               ; IC7 IC21 PORT5
 2776 00000018 901D               126             MOV.W   #H'00FF,R0                              ;
 2777 0000001A 2101               127             MOV.W   R0,@R1                                  ; BIT0~7 OUTPUT
 2778                             128     ;       ==================================================================================
 2779                             129     
 2780                             130             _WDT_CLR
 2781                                 M           PUSH_REG1 R0
 2782 0000001C 2F06                   M           MOV.L   R0,@-R15                ;PUSH=SP-4
 2783                                 M                                           ;REG=>[SP]
 2784                                 M                                           ;"-4" FF,FF,FF,FC
 2785                                 M           PUSH_REG1 R10
 2786 0000001E 2FA6                   M           MOV.L   R10,@-R15               ;PUSH=SP-4
 2787                                 M                                           ;REG=>[SP]
 2788                                 M                                           ;"-4" FF,FF,FF,FC
 2789                                 M           PUSH_REG1 R14
 2790 00000020 2FE6                   M           MOV.L   R14,@-R15               ;PUSH=SP-4
 2791                                 M                                           ;REG=>[SP]
 2792                                 M                                           ;"-4" FF,FF,FF,FC
 2793                                 M   
 2794 00000022 DA15                   M           MOV.L   #_PJDR,R10                              ;
 2795 00000024 60A0                   M           MOV.B   @R10,R0
 2796 00000026 CB10                   M           OR      #BIT4,R0
 2797 00000028 2A00                   M           MOV.B   R0,@R10
 2798 0000002A C9EF                   M           AND     #NBIT4,R0
 2799 0000002C 2A00                   M           MOV.B   R0,@R10
 2800                                 M   
 2801                                 M           ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2802 0000002E DA13                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2803 00000030 60A1                   M           MOV.W   @R10,R0                                 ;
 2804 00000032 9E11                   M           MOV.W   #BIT0,R14                               ;
 2805 00000034 20EB                   M           OR      R14,R0                                  ;
 2806 00000036 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2807                                 M   
 2808                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2809                                 M   ;;      MOV.W   @R10,R0                                 ;
 2810 00000038 9E0F                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2811 0000003A 20EA                   M           XOR     R14,R0                                  ;
 2812 0000003C DA10                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2813 0000003E 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    51
PROGRAM NAME =

 2814                                 M   
 2815 00000040 DA0E                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2816 00000042 60A1                   M           MOV.W   @R10,R0                                 ;
 2817 00000044 9E0A                   M           MOV.W   #NBIT0,R14                              ;
 2818 00000046 20E9                   M           AND     R14,R0                                  ;
 2819 00000048 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2820                                 M   
 2821                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2822                                 M   ;;      MOV.W   @R10,R0                                 ;
 2823 0000004A 9E06                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2824 0000004C 20EA                   M           XOR     R14,R0                                  ;
 2825 0000004E DA0C                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2826 00000050 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2827                                 M   
 2828                                 M           M_BRA   AAA00000
 2829 00000052 A017                   M           BRA     AAA00000
 2830 00000054 0009                   M           NOP
 2831                                 M   ***** BEGIN-POOL *****
 2832 00000056 00FF                   M   DATA FOR SOURCE-LINE 126
 2833 00000058 0001                   M   DATA FOR SOURCE-LINE 130
 2834 0000005A 0000                   M   DATA FOR SOURCE-LINE 130,130
 2835 0000005C 00FE                   M   DATA FOR SOURCE-LINE 130
 2836 0000005E 0000                   M   ALIGNMENT CODE
 2837 00000060 00000000               M   DATA FOR SOURCE-LINE 75
 2838 00000064 00000000               M   DATA FOR SOURCE-LINE 76
 2839 00000068 00000100               M   DATA FOR SOURCE-LINE 77
 2840 0000006C 00000000               M   DATA FOR SOURCE-LINE 116
 2841 00000070 00000000               M   DATA FOR SOURCE-LINE 120
 2842 00000074 00000000               M   DATA FOR SOURCE-LINE 125
 2843 00000078 00000000               M   DATA FOR SOURCE-LINE 130
 2844 0000007C 00000000               M   DATA FOR SOURCE-LINE 130,130
 2845 00000080 00000000               M   DATA FOR SOURCE-LINE 130,130
 2846                                 M   ***** END-POOL *****
 2847 00000084                        M   AAA00000:
 2848                                 M           POP_REG1 R14
 2849                                 M                                   ; RE"+4" 00,00,00,04
 2850 00000084 6EF6                   M           MOV.L   @R15+,R14        ;
 2851                                 M           POP_REG1 R10
 2852                                 M                                   ; RE"+4" 00,00,00,04
 2853 00000086 6AF6                   M           MOV.L   @R15+,R10        ;
 2854                                 M           POP_REG1 R0
 2855                                 M                                   ; RE"+4" 00,00,00,04
 2856 00000088 60F6                   M           MOV.L   @R15+,R0        ;
 2857                             131     
 2858 0000008A D113               132             mov.l   #_init_LCD,r1                           ; ÇkÇbÇcÉVÉXÉeÉÄÉVÉjÉVÉÉÉâÉCÉY
 2859 0000008C 410B               133             jsr     @r1
 2860 0000008E 0009               134             nop
 2861                             135     
 2862 00000090 D112               136             mov.l   #_init_DISP,r1                          ; ≤∆º¨ŸíÜâÊñ ï\é¶
 2863 00000092 410B               137             jsr     @r1
 2864 00000094 0009               138             nop
 2865                             139     
 2866                             140             _WDT_CLR
 2867                                 M           PUSH_REG1 R0
 2868 00000096 2F06                   M           MOV.L   R0,@-R15                ;PUSH=SP-4
 2869                                 M                                           ;REG=>[SP]
 2870                                 M                                           ;"-4" FF,FF,FF,FC
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    52
PROGRAM NAME =

 2871                                 M           PUSH_REG1 R10
 2872 00000098 2FA6                   M           MOV.L   R10,@-R15               ;PUSH=SP-4
 2873                                 M                                           ;REG=>[SP]
 2874                                 M                                           ;"-4" FF,FF,FF,FC
 2875                                 M           PUSH_REG1 R14
 2876 0000009A 2FE6                   M           MOV.L   R14,@-R15               ;PUSH=SP-4
 2877                                 M                                           ;REG=>[SP]
 2878                                 M                                           ;"-4" FF,FF,FF,FC
 2879                                 M   
 2880 0000009C DA10                   M           MOV.L   #_PJDR,R10                              ;
 2881 0000009E 60A0                   M           MOV.B   @R10,R0
 2882 000000A0 CB10                   M           OR      #BIT4,R0
 2883 000000A2 2A00                   M           MOV.B   R0,@R10
 2884 000000A4 C9EF                   M           AND     #NBIT4,R0
 2885 000000A6 2A00                   M           MOV.B   R0,@R10
 2886                                 M   
 2887                                 M           ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2888 000000A8 DA0E                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2889 000000AA 60A1                   M           MOV.W   @R10,R0                                 ;
 2890 000000AC 9E10                   M           MOV.W   #BIT0,R14                               ;
 2891 000000AE 20EB                   M           OR      R14,R0                                  ;
 2892 000000B0 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2893                                 M   
 2894                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2895                                 M   ;;      MOV.W   @R10,R0                                 ;
 2896 000000B2 9E0E                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2897 000000B4 20EA                   M           XOR     R14,R0                                  ;
 2898 000000B6 DA0C                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2899 000000B8 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2900                                 M   
 2901 000000BA DA0A                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2902 000000BC 60A1                   M           MOV.W   @R10,R0                                 ;
 2903 000000BE 9E09                   M           MOV.W   #NBIT0,R14                              ;
 2904 000000C0 20E9                   M           AND     R14,R0                                  ;
 2905 000000C2 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2906                                 M   
 2907                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2908                                 M   ;;      MOV.W   @R10,R0                                 ;
 2909 000000C4 9E05                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2910 000000C6 20EA                   M           XOR     R14,R0                                  ;
 2911 000000C8 DA07                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2912 000000CA 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2913                                 M   
 2914                                 M           M_BRA   AAA00001
 2915 000000CC A00E                   M           BRA     AAA00001
 2916 000000CE 0009                   M           NOP
 2917                                 M   ***** BEGIN-POOL *****
 2918 000000D0 0001                   M   DATA FOR SOURCE-LINE 140
 2919 000000D2 0000                   M   DATA FOR SOURCE-LINE 140,140
 2920 000000D4 00FE                   M   DATA FOR SOURCE-LINE 140
 2921 000000D6 0000                   M   ALIGNMENT CODE
 2922 000000D8 00000000               M   DATA FOR SOURCE-LINE 132
 2923 000000DC 00000000               M   DATA FOR SOURCE-LINE 136
 2924 000000E0 00000000               M   DATA FOR SOURCE-LINE 140
 2925 000000E4 00000000               M   DATA FOR SOURCE-LINE 140,140
 2926 000000E8 00000000               M   DATA FOR SOURCE-LINE 140,140
 2927                                 M   ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    53
PROGRAM NAME =

 2928 000000EC                        M   AAA00001:
 2929                                 M           POP_REG1 R14
 2930                                 M                                   ; RE"+4" 00,00,00,04
 2931 000000EC 6EF6                   M           MOV.L   @R15+,R14        ;
 2932                                 M           POP_REG1 R10
 2933                                 M                                   ; RE"+4" 00,00,00,04
 2934 000000EE 6AF6                   M           MOV.L   @R15+,R10        ;
 2935                                 M           POP_REG1 R0
 2936                                 M                                   ; RE"+4" 00,00,00,04
 2937 000000F0 60F6                   M           MOV.L   @R15+,R0        ;
 2938                             141     
 2939 000000F2 D110               142             mov.l   #_WORK_MEM_CHK2,r1                      ; SRAM∏ÿ±
 2940 000000F4 410B               143             jsr     @r1
 2941 000000F6 0009               144             nop
 2942                             145     
 2943 000000F8 D10F               146             mov.l   #_DP_MEM_CHK,r1                         ;cpud-aä‘
 2944 000000FA 410B               147             jsr     @r1
 2945 000000FC 0009               148             nop
 2946                             149     
 2947 000000FE D10F               150             mov.l   #_DP2_MEM_CHK,r1                        ;cpud-bä‘
 2948 00000100 410B               151             jsr     @r1
 2949 00000102 0009               152             nop
 2950                             153     
 2951                             154     
 2952                             155     
 2953                             156             .AIF    0 EQ 1
 2954                             157             mov.l   #_ROM_SUM_CHK,r1                        ; ROM SUM CHECK         2006/12/26
                                           V05
 2955                             158             jsr     @r1
 2956                             159             nop
 2957                             160             .AENDI
 2958                             161     
 2959 00000104 D10E               162             mov.l   #_INTHdlr_TO_RAM,r1             ;
 2960 00000106 410B               163             jsr     @r1
 2961 00000108 0009               164             nop
 2962                             165     
 2963 0000010A D10E               166             mov.l   #_SCI0_PRO_ROM_TO_RAM,r1                ;
 2964 0000010C 410B               167             jsr     @r1
 2965 0000010E 0009               168             nop
 2966                             169     
 2967                             170     
 2968                             171     
 2969                             172     ;//     *********************************************************************
 2970                             173     ;//     *****   ç≈èIæ∏ºÆ›Ç…å≈íË√ﬁ∞¿Ç™ì¸Ç¡ÇƒÇ¢ÇÈÇ©Ç«Ç§Ç©ämîF             *****
 2971                             174     ;//     *****   ì¸Ç¡ÇƒÇ¢Ç»ÇØÇÍÇŒ ﬁ∞ºﬁÆ›UPë“ÇøèÛë‘Ç…Ç∑ÇÈÅB               *****
 2972                             175     ;//     *****    ﬁ∞ºﬁÆ›UPÇ∑ÇÈéûÇÕÅAïKÇ∏ç≈èâÇ…ç≈èIæ∏ºÆ›Çè¡ãé            *****
 2973                             176     ;//     *********************************************************************
 2974                             177     ;//SIT4-MC  2014/04/17
 2975 00000110 DA0D               178             MOV.L   #_PFDR,R10
 2976 00000112 60A0               179             MOV.B   @R10,R0
 2977 00000114 6007               180             NOT     R0,R0
 2978 00000116 D20D               181             MOV.L   #H'0F,R2
 2979 00000118 2029               182             AND     R2,R0
 2980 0000011A DA0D               183             MOV.L   #_PMDR,R10
 2981 0000011C 61A0               184             MOV.B   @R10,R1
 2982 0000011E 6117               185             NOT     R1,R1
 2983 00000120 D20C               186             MOV.L   #H'0F0,R2
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    54
PROGRAM NAME =

 2984 00000122 2129               187             AND     R2,R1
 2985 00000124 201B               188             OR      R1,R0
 2986                             189     
 2987 00000126 600C               190             EXTU.B  R0,R0
 2988 00000128 E281               191             MOV.B   #H'81,R2
 2989 0000012A 622C               192             EXTU.B  R2,R2
 2990 0000012C 3020               193             CMP/EQ  R2,R0
 2991 0000012E 8B13               194             BF      _PONR_000                               ;
 2992                             195             M_BRA   _PONR_030                               ; SW-1,8ÇæÇØONÇ»ÇÁ ﬁ∞ºﬁÆ›UPÇ÷
 2993 00000130 A066                   M           BRA     _PONR_030
 2994 00000132 0009                   M           NOP
 2995                             196     
 2996                                     ***** BEGIN-POOL *****
 2997 00000134 00000000                   DATA FOR SOURCE-LINE 142
 2998 00000138 00000000                   DATA FOR SOURCE-LINE 146
 2999 0000013C 00000000                   DATA FOR SOURCE-LINE 150
 3000 00000140 00000000                   DATA FOR SOURCE-LINE 162
 3001 00000144 00000000                   DATA FOR SOURCE-LINE 166
 3002 00000148 00000000                   DATA FOR SOURCE-LINE 178
 3003 0000014C 0000000F                   DATA FOR SOURCE-LINE 181
 3004 00000150 00000000                   DATA FOR SOURCE-LINE 183
 3005 00000154 000000F0                   DATA FOR SOURCE-LINE 186
 3006                                     ***** END-POOL *****
 3007 00000158                    197     _PONR_000:
 3008 00000158 D103               198             MOV.L   #_VUPCHECK_DATA,R1
 3009 0000015A 6012               199             MOV.L   @R1,R0
 3010 0000015C D103               200             MOV.L   #_VUPCHECK_EQU,R1
 3011 0000015E 3010               201             CMP/EQ  R1,R0                                   ; ëOâÒÇÃÃﬂ€∏ﬁ◊— ﬁ∞ºﬁÆ›UPÇÕê≥èÌÅH
 3012 00000160 8906               202             BT      _PONR_002
 3013                             203             M_BRA   _PONR_030                               ; Ç¢Ç¢Ç¶         ﬁ∞ºﬁÆ›UPÇ÷
 3014 00000162 A04D                   M           BRA     _PONR_030
 3015 00000164 0009                   M           NOP
 3016                             204     
 3017                                     ***** BEGIN-POOL *****
 3018 00000166 0000                       ALIGNMENT CODE
 3019 00000168 00000000                   DATA FOR SOURCE-LINE 198
 3020 0000016C 11AB3739                   DATA FOR SOURCE-LINE 200
 3021                                     ***** END-POOL *****
 3022 00000170                    205     _PONR_002:
 3023                             206     
 3024                             207     ;       ================================================================ V06 âÊñ ÉfÅ[É^êV
                                          óÃàÊëŒâû
 3025 00000170 D105               208             MOV.L   #_GAM_INF_TBL2+512,R1                   ; V06
 3026 00000172 6011               209             MOV.W   @R1,R0
 3027 00000174 D205               210             MOV.L   #H'0FF00,R2
 3028 00000176 2029               211             AND     R2,R0
 3029 00000178 D205               212             MOV.L   #H'05A00,R2
 3030 0000017A 3020               213             CMP/EQ  R2,R0
 3031 0000017C 890C               214             BT      _PONR_004                               ; âÊñ √ﬁ∞¿ÇÃç≈å„Ç…5AÇ™ì¸Ç¡ÇƒÇ¢ÇÍÇŒ
                                          OK
 3032                             215     ;//V06m M_BRA   _PONR_008
 3033                             216             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3034 0000017E D105                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3035 00000180 410B                   M           JSR     @R1                     ;
 3036 00000182 0009                   M           NOP                                     ;
 3037                             217             M_BRA   _PONR_030
 3038 00000184 A03C                   M           BRA     _PONR_030
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    55
PROGRAM NAME =

 3039 00000186 0009                   M           NOP
 3040                             218     
 3041                                     ***** BEGIN-POOL *****
 3042 00000188 00000000                   DATA FOR SOURCE-LINE 208
 3043 0000018C 0000FF00                   DATA FOR SOURCE-LINE 210
 3044 00000190 00005A00                   DATA FOR SOURCE-LINE 212
 3045 00000194 00000000                   DATA FOR SOURCE-LINE 216
 3046                                     ***** END-POOL *****
 3047 00000198                    219     _PONR_004:
 3048 00000198 D104               220             MOV.L   #_GAM_INF_TBL2+(3-1)*4,R1               ;
 3049 0000019A 6012               221             MOV.L   @R1,R0
 3050 0000019C 8800               222             CMP/EQ  #0,R0                                   ; âÊñ No.3Ç…√ﬁ∞¿Ç†ÇÈÅH  Ç†ÇÈÇ»ÇÁª∞
                                          ŒﬁópÇÃâÊñ √ﬁ∞¿ÅI
 3051 0000019E 8B09               223             BF      _PONR_006                               ; Ç†ÇÈ
 3052                             224             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3053 000001A0 D103                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3054 000001A2 410B                   M           JSR     @R1                     ;
 3055 000001A4 0009                   M           NOP                                     ;
 3056                             225             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3057 000001A6 A02B                   M           BRA     _PONR_030
 3058 000001A8 0009                   M           NOP
 3059                             226     
 3060                                     ***** BEGIN-POOL *****
 3061 000001AA 0000                       ALIGNMENT CODE
 3062 000001AC 00000000                   DATA FOR SOURCE-LINE 220
 3063 000001B0 00000000                   DATA FOR SOURCE-LINE 224
 3064                                     ***** END-POOL *****
 3065 000001B4                    227     _PONR_006:
 3066                             228             M_BRA   _PONR_020
 3067 000001B4 A022                   M           BRA     _PONR_020
 3068 000001B6 0009                   M           NOP
 3069                             229     ;       ==================================================================
 3070                             230     
 3071                             231     
 3072 000001B8                    232     _PONR_008:
 3073 000001B8 D105               233             MOV.L   #_GAM_INF_TBL+512,R1
 3074 000001BA 6011               234             MOV.W   @R1,R0
 3075 000001BC D205               235             MOV.L   #H'0FF00,R2
 3076 000001BE 2029               236             AND     R2,R0
 3077 000001C0 D205               237             MOV.L   #H'05A00,R2
 3078 000001C2 3020               238             CMP/EQ  R2,R0
 3079 000001C4 890C               239             BT      _PONR_010                               ; âÊñ √ﬁ∞¿ÇÃç≈å„Ç…5AÇ™ì¸Ç¡ÇƒÇ¢ÇÍÇŒ
                                          OK
 3080                             240             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3081 000001C6 D105                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3082 000001C8 410B                   M           JSR     @R1                     ;
 3083 000001CA 0009                   M           NOP                                     ;
 3084                             241             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3085 000001CC A018                   M           BRA     _PONR_030
 3086 000001CE 0009                   M           NOP
 3087                             242     
 3088                                     ***** BEGIN-POOL *****
 3089 000001D0 00000000                   DATA FOR SOURCE-LINE 233
 3090 000001D4 0000FF00                   DATA FOR SOURCE-LINE 235
 3091 000001D8 00005A00                   DATA FOR SOURCE-LINE 237
 3092 000001DC 00000000                   DATA FOR SOURCE-LINE 240
 3093                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    56
PROGRAM NAME =

 3094 000001E0                    243     _PONR_010:
 3095 000001E0 D104               244             MOV.L   #_GAM_INF_TBL+(3-1)*4,R1                ; V05i
 3096 000001E2 6012               245             MOV.L   @R1,R0
 3097 000001E4 8800               246             CMP/EQ  #0,R0                                   ; âÊñ No.3Ç…√ﬁ∞¿Ç†ÇÈÅH  Ç†ÇÈÇ»ÇÁª∞
                                          ŒﬁópÇÃâÊñ √ﬁ∞¿ÅI
 3098 000001E6 8B09               247             BF      _PONR_020                               ; Ç†ÇÈ
 3099                             248             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3100 000001E8 D103                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3101 000001EA 410B                   M           JSR     @R1                     ;
 3102 000001EC 0009                   M           NOP                                     ;
 3103                             249             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3104 000001EE A007                   M           BRA     _PONR_030
 3105 000001F0 0009                   M           NOP
 3106                             250     
 3107                                     ***** BEGIN-POOL *****
 3108 000001F2 0000                       ALIGNMENT CODE
 3109 000001F4 00000000                   DATA FOR SOURCE-LINE 244
 3110 000001F8 00000000                   DATA FOR SOURCE-LINE 248
 3111                                     ***** END-POOL *****
 3112 000001FC                    251     _PONR_020:
 3113                             252             M_BRA   _PONR_100
 3114 000001FC A00C                   M           BRA     _PONR_100
 3115 000001FE 0009                   M           NOP
 3116                             253     
 3117                             254     
 3118                             255     
 3119 00000200                    256     _PONR_030:
 3120 00000200 D003               257             mov.l   #SR_Init_SCIEI,r0
 3121 00000202 400E               258             ldc     r0,sr                                   ; SR set (SCIäÑçûÇ›(E)ÇæÇØãñâ¬)
 3122 00000204 0009               259             NOP
 3123                             260     
 3124 00000206                    261     _PONR_050:
 3125                             262             FAR_JSR #_SCI_VUP_MAIN,R0
 3126 00000206 D003                   M           MOV.L   #_SCI_VUP_MAIN,R0               ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3127 00000208 400B                   M           JSR     @R0                     ;
 3128 0000020A 0009                   M           NOP                                     ;
 3129                             263             M_BRA   _PONR_050
 3130 0000020C AFFB                   M           BRA     _PONR_050
 3131 0000020E 0009                   M           NOP
 3132                             264     
 3133                             265     
 3134                             266     
 3135                                     ***** BEGIN-POOL *****
 3136 00000210 400000D0                   DATA FOR SOURCE-LINE 257
 3137 00000214 00000000                   DATA FOR SOURCE-LINE 262
 3138                                     ***** END-POOL *****
 3139 00000218                    267     _PONR_100:
 3140 00000218 D103               268             MOV.L   #_PRG_start,R1
 3141 0000021A 410B               269             JSR     @R1
 3142 0000021C 0009               270             NOP
 3143                             271     
 3144                             272     
 3145 0000021E 001B               273                     sleep
 3146 00000220 0009               274                     nop
 3147                             275                     .pool
 3148                                     ***** BEGIN-POOL *****
 3149 00000222 A003                       BRA TO END-POOL
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    57
PROGRAM NAME =

 3150 00000224 0009                       NOP
 3151 00000226 0000                       ALIGNMENT CODE
 3152 00000228 00000000                   DATA FOR SOURCE-LINE 268
 3153                                     ***** END-POOL *****
 3154                             276     
 3155                             277     
 3156 00000000                    278             .section        Pstart,code
 3157 00000000                    279     _PRG_start:
 3158                             280             SUB_START
 3159 00000000 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3160                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3161                             281     
 3162 00000002 D10B               282             mov.l   #__INITSCT,r1
 3163 00000004 410B               283             jsr     @r1
 3164 00000006 0009               284             nop
 3165                             285     
 3166                             286     ;//debug060716  mov.l   #_HardwareSetup2,r1                     ; Use Hardware Setup
 3167                             287     ;//debug060716  jsr     @r1
 3168                             288     ;//debug060716  nop
 3169                             289     
 3170                             290     ;//SHIMA        mov.l   #__INIT_IOLIB,r1        ; Use SIM I/O
 3171                             291     ;//SHIMA        jsr     @r1
 3172                             292     ;//SHIMA        nop
 3173                             293     
 3174                             294     
 3175 00000008 D10A               295             MOV.L   #_CASH_ENB,R1                   ;
 3176 0000000A 410B               296             jsr     @r1
 3177 0000000C 0009               297             nop
 3178                             298     
 3179 0000000E D10A               299             mov.l   #_P_TO_PRAM_COPY,r1             ; P -> PRAM
 3180 00000010 410B               300             jsr     @r1
 3181 00000012 0009               301             nop
 3182                             302     
 3183 00000014 D109               303             mov.l   #_PC_TO_PCRAM_COPY,r1           ; Pcall -> PcallRAM
 3184 00000016 410B               304             jsr     @r1
 3185 00000018 0009               305             nop
 3186                             306     
 3187 0000001A D109               307             mov.l   #_PH_TO_PHRAM_COPY,r1           ; PHiROM -> PHiRAM      V06b
 3188 0000001C 410B               308             jsr     @r1
 3189 0000001E 0009               309             nop
 3190                             310     
 3191                             311     ;       mov.l   #__call_init,r1         ; Remove the comment when you use global class obj
                                          ect
 3192                             312     ;       jsr     @r1                                     ; See initsct.c and dbsct.src
 3193                             313     ;       nop
 3194                             314     
 3195 00000020                    315     _start000:
 3196 00000020 D808               316             mov.l   #_main,r8
 3197 00000022 480B               317             jsr     @r8
 3198 00000024 0009               318             nop
 3199                             319     
 3200                             320     ;       mov.l   #__call_end,r1          ; Remove the comment when you use global class obj
                                          ect
 3201                             321     ;       jsr     @r1                                     ; See initsct.c and dbsct.src
 3202                             322     ;       nop
 3203                             323     
 3204                             324     ;//SHIMA        mov.l   #__CLOSEALL,r1          ; Use SIM I/O
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    58
PROGRAM NAME =

 3205                             325     ;//SHIMA        jsr     @r1
 3206                             326     ;//SHIMA        nop
 3207                             327     
 3208 00000026 001B               328             sleep
 3209 00000028 0009               329             nop
 3210                             330             .pool
 3211                                     ***** BEGIN-POOL *****
 3212 0000002A A00D                       BRA TO END-POOL
 3213 0000002C 0009                       NOP
 3214 0000002E 0000                       ALIGNMENT CODE
 3215 00000030 00000000                   DATA FOR SOURCE-LINE 282
 3216 00000034 00000000                   DATA FOR SOURCE-LINE 295
 3217 00000038 00000000                   DATA FOR SOURCE-LINE 299
 3218 0000003C 00000000                   DATA FOR SOURCE-LINE 303
 3219 00000040 00000000                   DATA FOR SOURCE-LINE 307
 3220 00000044 00000000                   DATA FOR SOURCE-LINE 316
 3221                                     ***** END-POOL *****
 3222                             331     
 3223                             332     
 3224 00000048                    333     VUP_TEST:
 3225 00000048 1234567887654321   334             .DATA.L         H'12345678, H'87654321, H'5A5AA5A5, H'A5A55A5A
      00000050 5A5AA5A5A5A55A5A
 3226 00000058 00000000FFFFFFFF   335             .DATA.L         H'00000000, H'FFFFFFFF, H'55555555, H'AAAAAAAA
      00000060 55555555AAAAAAAA
 3227 00000068 1234567887654321   336             .DATA.L         H'12345678, H'87654321, H'5A5AA5A5, H'A5A55A5A
      00000070 5A5AA5A5A5A55A5A
 3228                             337     
 3229                             338                     .end
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    59

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

AAA00000                         ResetPRG      00000084   2829  2847*
AAA00001                         ResetPRG      000000EC   2915  2928*
BIT0                                      EQU  00000001    231* 2804  2890 
BIT1                                      EQU  00000002    232*
BIT10                                     EQU  00000400    241*
BIT11                                     EQU  00000800    242*
BIT12                                     EQU  00001000    243*
BIT13                                     EQU  00002000    244*
BIT14                                     EQU  00004000    245*
BIT15                                     EQU  00008000    246*
BIT16                                     EQU  00010000    247*
BIT17                                     EQU  00020000    248*
BIT18                                     EQU  00040000    249*
BIT19                                     EQU  00080000    250*
BIT2                                      EQU  00000004    233*
BIT20                                     EQU  00100000    251*
BIT21                                     EQU  00200000    252*
BIT22                                     EQU  00400000    253*
BIT23                                     EQU  00800000    254*
BIT24                                     EQU  01000000    255*
BIT25                                     EQU  02000000    256*
BIT26                                     EQU  04000000    257*
BIT27                                     EQU  08000000    258*
BIT28                                     EQU  10000000    259*
BIT29                                     EQU  20000000    260*
BIT3                                      EQU  00000008    234*
BIT30                                     EQU  40000000    261*
BIT31                                     EQU  80000000    262*
BIT4                                      EQU  00000010    235* 2796  2882 
BIT5                                      EQU  00000020    236*
BIT6                                      EQU  00000040    237*
BIT7                                      EQU  00000080    238*
BIT8                                      EQU  00000100    239*
BIT9                                      EQU  00000200    240*
H_BYTE                                    EQU  00000000    298*
L_BYTE                                    EQU  00000001    297*
NBIT0                                     EQU  000000FE    265* 2817  2903 
NBIT1                                     EQU  000000FD    266*
NBIT10                                    EQU  0000FBFF    276*
NBIT11                                    EQU  0000F7FF    277*
NBIT12                                    EQU  0000EFFF    278*
NBIT13                                    EQU  0000DFFF    279*
NBIT14                                    EQU  0000BFFF    280*
NBIT15                                    EQU  00007FFF    281*
NBIT2                                     EQU  000000FB    267*
NBIT3                                     EQU  000000F7    268*
NBIT4                                     EQU  000000EF    269* 2798  2884 
NBIT5                                     EQU  000000DF    270*
NBIT6                                     EQU  000000BF    271*
NBIT7                                     EQU  0000007F    272*
NBIT8                                     EQU  0000FEFF    274*
NBIT9                                     EQU  0000FDFF    275*
Pstart                           Pstart   SCT  00000000   3156*
ResetPRG                         ResetPRG SCT  00000000   2722*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    60

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

SR_Init                                   EQU  40000010     25*
SR_Init_DI                                EQU  400000F0     26*
SR_Init_SCIEI                             EQU  400000D0     27* 3120 
VUP_TEST                         Pstart        00000048   3224*
XBIT0                                     EQU  00000000    284*
XBIT1                                     EQU  00000001    285*
XBIT2                                     EQU  00000002    286*
XBIT3                                     EQU  00000003    287*
XBIT4                                     EQU  00000004    288*
XBIT5                                     EQU  00000005    289*
XBIT6                                     EQU  00000006    290*
XBIT7                                     EQU  00000007    291*
_ACDR                                     IMPT 00000000   1874 
_ACTR1                                    IMPT 00000000   1866 
_ACTR2                                    IMPT 00000000   1867 
_AD2CNV_IN_DATA                           IMPT 00000000   2399 
_AD2_AVG_BUF                              IMPT 00000000   2396 
_AD2_AVG_TOTAL                            IMPT 00000000   2397 
_AD2_BUFCNT                               IMPT 00000000   2395 
_AD3CNV_IN_DATA                           IMPT 00000000   2405 
_AD3_AVG_BUF                              IMPT 00000000   2402 
_AD3_AVG_TOTAL                            IMPT 00000000   2403 
_AD3_BUFCNT                               IMPT 00000000   2401 
_AD4CNV_IN_DATA                           IMPT 00000000   2411 
_AD4_AVG_BUF                              IMPT 00000000   2408 
_AD4_AVG_TOTAL                            IMPT 00000000   2409 
_AD4_BUFCNT                               IMPT 00000000   2407 
_ADCNV_SEL                                IMPT 00000000   2413 
_ADCR                                     IMPT 00000000   1808 
_ADCSR                                    IMPT 00000000   1807 
_ADDRAH                                   IMPT 00000000   1799 
_ADDRAL                                   IMPT 00000000   1800 
_ADDRBH                                   IMPT 00000000   1801 
_ADDRBL                                   IMPT 00000000   1802 
_ADDRCH                                   IMPT 00000000   1803 
_ADDRCL                                   IMPT 00000000   1804 
_ADDRDH                                   IMPT 00000000   1805 
_ADDRDL                                   IMPT 00000000   1806 
_AD_AVG_BUF                               IMPT 00000000   2390 
_AD_AVG_TOTAL                             IMPT 00000000   2391 
_AD_BUFCNT                                IMPT 00000000   2389 
_AD_CNV_DT0                               IMPT 00000000   2387 
_ASDR                                     IMPT 00000000   1875 
_ASTR1                                    IMPT 00000000   1868 
_ASTR2                                    IMPT 00000000   1869 
_BAMRA                                    IMPT 00000000   2013 
_BAMRB                                    IMPT 00000000   2009 
_BARA                                     IMPT 00000000   2012 
_BARB                                     IMPT 00000000   2008 
_BASRA                                    IMPT 00000000   2020 
_BASRB                                    IMPT 00000000   2021 
_BBRA                                     IMPT 00000000   2014 
_BBRB                                     IMPT 00000000   2010 
_BCR1                                     IMPT 00000000   1989 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    61

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_BCR2                                     IMPT 00000000   1990 
_BDMRB                                    IMPT 00000000   2005 
_BDRB                                     IMPT 00000000   2004 
_BETR                                     IMPT 00000000   2007 
_BRCR                                     IMPT 00000000   2006 
_BRDR                                     IMPT 00000000   2015 
_BRR0                                     IMPT 00000000   1954 
_BRSR                                     IMPT 00000000   2011 
_BTNER_ERR_TM                             IMPT 00000000   2336 
_CASH_ENB                                 IMPT 00000000   2707  3175 
_CB_BAKUP_CMD1                            EQU  00005678    330*
_CB_BAKUP_CMD2                            EQU  00001234    331*
_CB_BAK_SUM_COD1                          EQU  5AA51234    328*
_CB_BAK_SUM_COD2                          EQU  A55A4321    329*
_CB_ERR_INFO_MEM                          EQU  00000040    353*
_CB_STS_BUF_1BLK                          EQU  00000040    333*  335 
_CB_STS_BUF_BLKMAX                        EQU  00000008    334*  335 
_CB_STS_BUF_MAX                           EQU  00000200    335*
_CB_TRD_BEFORE                            EQU  00000060    343*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    347*
_CB_TRD_BUF_MAX                           EQU  00000800    344*
_CB_TRD_DP_1CNT                           EQU  00000008    346*
_CB_TRD_DP_CH                             EQU  00000004    339*
_CB_TRD_SMP_CNT                           EQU  00000080    342*
_CCR                                      IMPT 00000000   2022 
_CCR2                                     IMPT 00000000   1812 
_CHCR0                                    IMPT 00000000   1781 
_CHCR1                                    IMPT 00000000   1785 
_CHCR2                                    IMPT 00000000   1789 
_CHCR3                                    IMPT 00000000   1793 
_CHRAR                                    IMPT 00000000   1886 
_CKIO2CR                                  IMPT 00000000   1891 
_CMCNT                                    IMPT 00000000   1797 
_CMCOR                                    IMPT 00000000   1798 
_CMCSR                                    IMPT 00000000   1796 
_CMP2_ERR_FIRST                           IMPT 00000000   2421 
_CMP2_ERR_TM2                             IMPT 00000000   2345 
_CMSTR                                    IMPT 00000000   1795 
_CPUA_EMG_IN_FLG                          IMPT 00000000   2502 
_CPUN_2CMP_DATA                           IMPT 00000000   2420 
_CPUN_2CMP_LATCH1                         IMPT 00000000   2424 
_CPUN_2CMP_LATCH2                         IMPT 00000000   2423 
_DACR1                                    IMPT 00000000   1811 
_DADR0                                    IMPT 00000000   1809 
_DADR1                                    IMPT 00000000   1810 
_DAR0                                     IMPT 00000000   1779 
_DAR1                                     IMPT 00000000   1783 
_DAR2                                     IMPT 00000000   1787 
_DAR3                                     IMPT 00000000   1791 
_DBG_ERRCHK_NASI                          IMPT 00000000   2329 
_DMAOR                                    IMPT 00000000   1794 
_DMATCR0                                  IMPT 00000000   1780 
_DMATCR1                                  IMPT 00000000   1784 
_DMATCR2                                  IMPT 00000000   1788 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    62

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_DMATCR3                                  IMPT 00000000   1792 
_DP2_MEM_CHK                              IMPT 00000000   2696  2947 
_DPNQ                                     IMPT 00000000   1872 
_DPRAM_SIZE                               EQU  00003FFF   2169*
_DP_MEM_CHK                               IMPT 00000000   2695  2943 
_DSET_SW_FLG                              IMPT 00000000   2476 
_DUMMY                                    IMPT 00000000    223 
_DUMMY_SUM_CODE                           EQU  5AA53CC3    321*
_ERR_CHK_OK_FLG                           IMPT 00000000   2324 
_ER_SFTSW_CHG_OLD                         IMPT 00000000   2331 
_ER_SQRAM_WK1                             IMPT 00000000   2326 
_ER_SQRAM_WK2                             IMPT 00000000   2327 
_EXCPGCR                                  IMPT 00000000   1890 
_EXPEVT                                   IMPT 00000000   2017 
_EXPFC                                    IMPT 00000000   1889 
_FACT_IN_DATA                             IMPT 00000000   2429 
_FDEV_IN_DATA                             IMPT 00000000   2431 
_FROM_SUMCHK_CODE                         IMPT 00000000   2333 
_FRQCR                                    IMPT 00000000   1999 
_FSFT_TRERR_TM                            IMPT 00000000   2346 
_GAM_INF_TBL                              IMPT 00000000   2713  3073  3095 
_GAM_INF_TBL2                             IMPT 00000000   2714  3025  3048 
_HardwareSetup1                           IMPT 00000000   2691  2766 
_HardwareSetup2                           IMPT 00000000   2692 
_ICR0                                     IMPT 00000000   1986 
_ICR1                                     IMPT 00000000   1772 
_ICR2                                     IMPT 00000000   1773 
_ICR3                                     IMPT 00000000   1885 
_INTDI_SCI_EXCEPT                         IMPT 00000000   2711 
_INTEVT                                   IMPT 00000000   2018 
_INTEVT2                                  IMPT 00000000   1768 
_INTHandlerPRG                            IMPT 00000000   2676  2726 
_INTHdlr_TO_RAM                           IMPT 00000000   2701  2959 
_INT_ADC_ADI                              IMPT 00000000    191 
_INT_AFEIF_AFEIFI                         IMPT 00000000    205 
_INT_Address_load                         IMPT 00000000     53 
_INT_Address_store                        IMPT 00000000     55 
_INT_BSC_RCMI                             IMPT 00000000    127 
_INT_BSC_ROVI                             IMPT 00000000    129 
_INT_CPG_ITI                              IMPT 00000000    125 
_INT_DMAC_DEI0                            IMPT 00000000    167 
_INT_DMAC_DEI1                            IMPT 00000000    169 
_INT_DMAC_DEI2                            IMPT 00000000    171 
_INT_DMAC_DEI3                            IMPT 00000000    173 
_INT_Extern_0000                          IMPT 00000000     71 
_INT_Extern_0001                          IMPT 00000000     73 
_INT_Extern_0010                          IMPT 00000000     75 
_INT_Extern_0011                          IMPT 00000000     77 
_INT_Extern_0100                          IMPT 00000000     79 
_INT_Extern_0101                          IMPT 00000000     81 
_INT_Extern_0110                          IMPT 00000000     83 
_INT_Extern_0111                          IMPT 00000000     85 
_INT_Extern_1000                          IMPT 00000000     87 
_INT_Extern_1001                          IMPT 00000000     89 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    63

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_Extern_1010                          IMPT 00000000     91 
_INT_Extern_1011                          IMPT 00000000     93 
_INT_Extern_1100                          IMPT 00000000     95 
_INT_Extern_1101                          IMPT 00000000     97 
_INT_Extern_1110                          IMPT 00000000     99 
_INT_H_UDI                                IMPT 00000000    133 
_INT_IRQ0                                 IMPT 00000000    135 
_INT_IRQ1                                 IMPT 00000000    137 
_INT_IRQ2                                 IMPT 00000000    139 
_INT_IRQ3                                 IMPT 00000000    141 
_INT_IRQ4                                 IMPT 00000000    143 
_INT_IRQ5                                 IMPT 00000000    145 
_INT_Illegal_code                         IMPT 00000000     63 
_INT_Illegal_slot                         IMPT 00000000     65 
_INT_LCDC_LCDCI                           IMPT 00000000    193 
_INT_NMI                                  IMPT 00000000     67 
_INT_PCC0                                 IMPT 00000000    195 
_INT_PINT0_7                              IMPT 00000000    151 
_INT_PINT8_15                             IMPT 00000000    153 
_INT_RTC_ATI                              IMPT 00000000    111 
_INT_RTC_CUI                              IMPT 00000000    115 
_INT_RTC_PRI                              IMPT 00000000    113 
_INT_Reserved1                            IMPT 00000000     57 
_INT_Reserved2                            IMPT 00000000     59 
_INT_Reserved3E0                          IMPT 00000000    101 
_INT_Reserved5C0                          IMPT 00000000    131 
_INT_Reserved6C0                          IMPT 00000000    147 
_INT_Reserved6E0                          IMPT 00000000    149 
_INT_Reserved740                          IMPT 00000000    155 
_INT_Reserved760                          IMPT 00000000    157 
_INT_Reserved780                          IMPT 00000000    159 
_INT_Reserved7A0                          IMPT 00000000    161 
_INT_Reserved7C0                          IMPT 00000000    163 
_INT_Reserved7E0                          IMPT 00000000    165 
_INT_Reserved880                          IMPT 00000000    175 
_INT_Reserved8A0                          IMPT 00000000    177 
_INT_Reserved8C0                          IMPT 00000000    179 
_INT_Reserved8E0                          IMPT 00000000    181 
_INT_Reserved9E0                          IMPT 00000000    197 
_INT_ReservedA80                          IMPT 00000000    207 
_INT_ReservedAA0                          IMPT 00000000    209 
_INT_ReservedAC0                          IMPT 00000000    211 
_INT_ReservedAE0                          IMPT 00000000    213 
_INT_SCIF_BRI2                            IMPT 00000000    187 
_INT_SCIF_ERI2                            IMPT 00000000    183 
_INT_SCIF_RXI2                            IMPT 00000000    185 
_INT_SCIF_TXI2                            IMPT 00000000    189 
_INT_SCI_ERI                              IMPT 00000000    117 
_INT_SCI_RXI                              IMPT 00000000    119 
_INT_SCI_TEI                              IMPT 00000000    123 
_INT_SCI_TXI                              IMPT 00000000    121 
_INT_SIOF_SIFCCI                          IMPT 00000000    221 
_INT_SIOF_SIFERI                          IMPT 00000000    215 
_INT_SIOF_SIFRXI                          IMPT 00000000    219 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    64

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_SIOF_SIFTXI                          IMPT 00000000    217 
_INT_TLBCPU_ADERR                         IMPT 00000000     43 
_INT_TLBInitial_Page                      IMPT 00000000     45 
_INT_TLBMiss_Load                         IMPT 00000000     39 
_INT_TLBMiss_Store                        IMPT 00000000     41 
_INT_TLBProtect_Load                      IMPT 00000000     47 
_INT_TLBProtect_Loop                      IMPT 00000000     51 
_INT_TLBProtect_Store                     IMPT 00000000     49 
_INT_TMU_TICPI2                           IMPT 00000000    109 
_INT_TMU_TUNI0                            IMPT 00000000    103 
_INT_TMU_TUNI1                            IMPT 00000000    105 
_INT_TMU_TUNI2                            IMPT 00000000    107 
_INT_TRAPA                                IMPT 00000000     61 
_INT_USBF_USBFI0                          IMPT 00000000    201 
_INT_USBF_USBFI1                          IMPT 00000000    203 
_INT_USBH_USBHI                           IMPT 00000000    199 
_INT_User_Break                           IMPT 00000000     69 
_IN_RNA_REF_ERR_FLG1                      IMPT 00000000   2451 
_IN_RNA_REF_ERR_FLG2                      IMPT 00000000   2452 
_IO1A_P4EX                                EQU  00000000   2227*
_IO1A_P5EX                                EQU  0000007B   2228*
_IO1A_P6EX                                EQU  00000000   2229*
_IO1A_P7EX                                EQU  00000000   2230*
_IO1B_P4EX                                EQU  000000FF   2237*
_IO1B_P5EX                                EQU  00000070   2238*
_IO1B_P6EX                                EQU  00000000   2239*
_IO1B_P7EX                                EQU  00000000   2240*
_IO2A_P5EX                                EQU  0000002F   2232*
_IO2A_P6EX                                EQU  0000009C   2233*
_IO2A_P7EX                                EQU  00000000   2234*
_IO2B_P5EX                                EQU  00000000   2243* 2810  2823  2896  2909 
_IO2B_P6EX                                EQU  0000009C   2244*
_IO2B_P7EX                                EQU  00000000   2245*
_IOGA1_CTRL_DAT1                          IMPT 00000000   2623 
_IOGA1_PA_DT_OLD1                         IMPT 00000000   2628 
_IOGA1_PA_DT_OLD2                         IMPT 00000000   2634 
_IOGA1_PB_DT_OLD1                         IMPT 00000000   2629 
_IOGA1_PB_DT_OLD2                         IMPT 00000000   2635 
_IOGA1_PC_DT_OLD1                         IMPT 00000000   2630 
_IOGA1_PC_DT_OLD2                         IMPT 00000000   2636 
_IOGA1_PD_DT_OLD1                         IMPT 00000000   2631 
_IOGA1_PD_DT_OLD2                         IMPT 00000000   2637 
_IOGA1_PE_DT_OLD1                         IMPT 00000000   2632 
_IOGA1_PE_DT_OLD2                         IMPT 00000000   2638 
_IOGA2_CTRL_DAT1                          IMPT 00000000   2625  2802  2815  2888  2901 
_IOGA2_PA_DT_OLD1                         IMPT 00000000   2640 
_IOGA2_PA_DT_OLD2                         IMPT 00000000   2646 
_IOGA2_PB_DT_OLD1                         IMPT 00000000   2641 
_IOGA2_PB_DT_OLD2                         IMPT 00000000   2647 
_IOGA2_PC_DT_OLD1                         IMPT 00000000   2642 
_IOGA2_PC_DT_OLD2                         IMPT 00000000   2648 
_IOGA2_PD_DT_OLD1                         IMPT 00000000   2643 
_IOGA2_PD_DT_OLD2                         IMPT 00000000   2649 
_IOGA2_PE_DT_OLD1                         IMPT 00000000   2644 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    65

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_IOGA2_PE_DT_OLD2                         IMPT 00000000   2650 
_IOGA_P0                                  EQU  00000000   2186*
_IOGA_P1                                  EQU  00000002   2187*
_IOGA_P2                                  EQU  00000004   2188*
_IOGA_P3                                  EQU  00000006   2189*
_IOGA_P4                                  EQU  00000008   2190*
_IOGA_P5                                  EQU  0000000A   2191* 2802  2815  2888  2901 
_IOGA_P6                                  EQU  0000000C   2192*
_IOGA_P7                                  EQU  0000000E   2193*
_IOGA_PDIR0                               EQU  00000002   2211*
_IOGA_PDIR1                               EQU  00000006   2212*
_IOGA_PDIR2                               EQU  0000000A   2213*
_IOGA_PDIR3                               EQU  0000000E   2214*
_IOGA_PDIR4                               EQU  00000012   2215*
_IOGA_PDIR5                               EQU  00000016   2216* 2775 
_IOGA_PDIR6                               EQU  0000001A   2217*
_IOGA_PDIR7                               EQU  0000001C   2218*
_IOGA_PDR0                                EQU  00000000   2201*
_IOGA_PDR1                                EQU  00000004   2202*
_IOGA_PDR2                                EQU  00000008   2203*
_IOGA_PDR3                                EQU  0000000C   2204*
_IOGA_PDR4                                EQU  00000010   2205*
_IOGA_PDR5                                EQU  00000014   2206* 2812  2825  2898  2911 
_IOGA_PDR6                                EQU  00000018   2207*
_IOGA_PDR7                                EQU  0000001C   2208*
_IOGAi_PA                                 EQU  00000000   2177*
_IOGAi_PB                                 EQU  00000002   2178*
_IOGAi_PC                                 EQU  00000004   2179*
_IOGAi_PD                                 EQU  00000006   2180*
_IOGAo_PE                                 EQU  00000008   2181*
_IOGAo_PF                                 EQU  0000000A   2182*
_IOGAo_PG                                 EQU  0000000C   2183*
_IOGAo_PH                                 EQU  0000000E   2184*
_IPR3                                     IMPT 00000000   1883 
_IPR4                                     IMPT 00000000   1884 
_IPRA                                     IMPT 00000000   1987 
_IPRB                                     IMPT 00000000   1988 
_IPRC                                     IMPT 00000000   1775 
_IPRD                                     IMPT 00000000   1776 
_IPRE                                     IMPT 00000000   1777 
_IPRF                                     IMPT 00000000   1881 
_IPRG                                     IMPT 00000000   1882 
_IRAM_CLEAR                               IMPT 00000000   2693  2770 
_IRAM_SIZE                                EQU  00007FFF   2168*
_IRAM_TOP                                 EQU  FFFF6000   2167*
_IRR0                                     IMPT 00000000   1769 
_IRR1                                     IMPT 00000000   1770 
_IRR2                                     IMPT 00000000   1771 
_KEEPRY_BKUP_ERR                          IMPT 00000000   2572 
_KJ_CHK_CNT0                              IMPT 00000000   2719 
_LDACLNR                                  IMPT 00000000   1948 
_LDCNTR                                   IMPT 00000000   1952 
_LDDFR                                    IMPT 00000000   1937 
_LDHCNR                                   IMPT 00000000   1943 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    66

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_LDHSYNR                                  IMPT 00000000   1944 
_LDICKR                                   IMPT 00000000   1935 
_LDINTR                                   IMPT 00000000   1949 
_LDLAOR                                   IMPT 00000000   1941 
_LDMTR                                    IMPT 00000000   1936 
_LDPALCR                                  IMPT 00000000   1942 
_LDPMMR                                   IMPT 00000000   1950 
_LDPR00                                   IMPT 00000000   1934 
_LDPSPR                                   IMPT 00000000   1951 
_LDSARL                                   IMPT 00000000   1940 
_LDSARU                                   IMPT 00000000   1939 
_LDSMR                                    IMPT 00000000   1938 
_LDVDLNR                                  IMPT 00000000   1945 
_LDVSYNR                                  IMPT 00000000   1947 
_LDVTLNR                                  IMPT 00000000   1946 
_LT_RNA_REF_ERR_FLG1                      IMPT 00000000   2455 
_LT_RNA_REF_ERR_FLG2                      IMPT 00000000   2456 
_MCR                                      IMPT 00000000   1993 
_MMUCR                                    IMPT 00000000   2019 
_MPCR                                     IMPT 00000000   1871 
_MRCR                                     IMPT 00000000   1870 
_Manual_Reset                    ResetPRG EXPT 00000000     36  2724*
_NCHSW_ERR_TM1                            IMPT 00000000   2337 
_NCHSW_ERR_TM2                            IMPT 00000000   2338 
_PACR                                     IMPT 00000000   1828 
_PADR                                     IMPT 00000000   1841 
_PBCR                                     IMPT 00000000   1829 
_PBDR                                     IMPT 00000000   1842 
_PB_INDT_OLD1                             IMPT 00000000   2512 
_PB_INDT_OLD2                             IMPT 00000000   2513 
_PB_PORT_CTL_DATA                         IMPT 00000000   2511 
_PCC0CSCIER                               IMPT 00000000   1865 
_PCC0CSCR                                 IMPT 00000000   1864 
_PCC0GCR                                  IMPT 00000000   1863 
_PCC0ISR                                  IMPT 00000000   1862 
_PCCR                                     IMPT 00000000   1830 
_PCDR                                     IMPT 00000000   1843 
_PCR                                      IMPT 00000000   1994 
_PC_TO_PCRAM_COPY                         IMPT 00000000   2709  3183 
_PDCR                                     IMPT 00000000   1831 
_PDDR                                     IMPT 00000000   1844 
_PECR                                     IMPT 00000000   1832 
_PEDR                                     IMPT 00000000   1845 
_PFCR                                     IMPT 00000000   1833 
_PFDR                                     IMPT 00000000   1846  2975 
_PGCR                                     IMPT 00000000   1834 
_PGDR                                     IMPT 00000000   1847 
_PHCR                                     IMPT 00000000   1835 
_PHDR                                     IMPT 00000000   1848 
_PH_TO_PHRAM_COPY                         IMPT 00000000   2710  3187 
_PINTER                                   IMPT 00000000   1774 
_PJCR                                     IMPT 00000000   1836 
_PJDR                                     IMPT 00000000   1849  2794  2880 
_PJ_INDT_OLD1                             IMPT 00000000   2517 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    67

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_PJ_INDT_OLD2                             IMPT 00000000   2518 
_PJ_PORT_CTL_DATA                         IMPT 00000000   2516 
_PKCR                                     IMPT 00000000   1837 
_PKDR                                     IMPT 00000000   1850 
_PK_INDT_OLD1                             IMPT 00000000   2522 
_PK_INDT_OLD2                             IMPT 00000000   2523 
_PK_PORT_CTL_DATA                         IMPT 00000000   2521 
_PLCR                                     IMPT 00000000   1838 
_PLDR                                     IMPT 00000000   1851 
_PLSiCH1                                  EQU  00000000   2253*
_PLSiCH2                                  EQU  00000030   2254*
_PL_BitComdH                              EQU  00000002   2257*
_PL_BitComdL                              EQU  00000000   2256*
_PL_BitInfoH                              EQU  00000006   2259*
_PL_BitInfoL                              EQU  00000004   2258*
_PL_CtrlReg                               EQU  0000002A   2263*
_PL_INDT_OLD1                             IMPT 00000000   2527 
_PL_INDT_OLD2                             IMPT 00000000   2528 
_PL_NowPos1H                              EQU  00000026   2261*
_PL_NowPos1L                              EQU  00000024   2260*
_PL_NowPos2                               EQU  00000028   2262*
_PL_PORT_CTL_DATA                         IMPT 00000000   2526 
_PMCR                                     IMPT 00000000   1840 
_PMDR                                     IMPT 00000000   1853  2980 
_PONR_000                        ResetPRG      00000158   2991  3007*
_PONR_002                        ResetPRG      00000170   3012  3022*
_PONR_004                        ResetPRG      00000198   3031  3047*
_PONR_006                        ResetPRG      000001B4   3051  3065*
_PONR_008                        ResetPRG      000001B8   3072*
_PONR_010                        ResetPRG      000001E0   3079  3094*
_PONR_020                        ResetPRG      000001FC   3067  3098  3112*
_PONR_030                        ResetPRG      00000200   2993  3014  3038  3057  3085  3104  3119*
_PONR_050                        ResetPRG      00000206   3124* 3130 
_PONR_100                        ResetPRG      00000218   3114  3139*
_PRG_start                       Pstart        00000000   3140  3157*
_PTEH                                     IMPT 00000000   2023 
_PTEL                                     IMPT 00000000   2024 
_PV0_SCRW_POS                             IMPT 00000000   2317 
_PV1_SCRW_POS                             IMPT 00000000   2315 
_PV_AD_DATA                               IMPT 00000000   2392 
_P_TO_PRAM_COPY                           IMPT 00000000   2708  3179 
_PowerON_Reset                   ResetPRG EXPT 00000000     32  2723*
_PowerON_Reset_SP                         IMPT 00000000   2675  2725 
_R64CNT                                   IMPT 00000000   1970 
_RACT_IN_DATA                             IMPT 00000000   2430 
_RCNT                                     IMPT 00000000   1873 
_RCR1                                     IMPT 00000000   1984 
_RCR2                                     IMPT 00000000   1985 
_RDAYAR                                   IMPT 00000000   1982 
_RDAYCNT                                  IMPT 00000000   1975 
_RDEV_IN_DATA                             IMPT 00000000   2432 
_RDFP                                     IMPT 00000000   1877 
_RDR0                                     IMPT 00000000   1958 
_REAL_INP1_DATA                           IMPT 00000000   2506 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    68

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_REAL_INP1_DT_OLD1                        IMPT 00000000   2507 
_REAL_INP1_DT_OLD2                        IMPT 00000000   2508 
_REMOTE_ERR_CHKTM                         IMPT 00000000   2365 
_RFCR                                     IMPT 00000000   1998 
_RHRAR                                    IMPT 00000000   1980 
_RHRCNT                                   IMPT 00000000   1973 
_RMINAR                                   IMPT 00000000   1979 
_RMINCNT                                  IMPT 00000000   1972 
_RMONAR                                   IMPT 00000000   1983 
_RMONCNT                                  IMPT 00000000   1976 
_RNA_ALM_BIT0_CNT                         IMPT 00000000   2463 
_RNA_ALM_BIT1_CNT                         IMPT 00000000   2464 
_RNA_ALM_BIT2_CNT                         IMPT 00000000   2465 
_RNA_ALM_BIT3_CNT                         IMPT 00000000   2466 
_RNA_ALM_BIT4_CNT                         IMPT 00000000   2467 
_RNA_ALM_BIT5_CNT                         IMPT 00000000   2468 
_RNA_ALM_BIT6_CNT                         IMPT 00000000   2469 
_RNA_ALM_BIT7_CNT                         IMPT 00000000   2470 
_RNA_ALM_CNT                              IMPT 00000000   2471 
_RNA_ALM_DAT                              IMPT 00000000   2472 
_RNA_CMD_VERIFY_CNT                       IMPT 00000000   2458 
_RNA_CMD_VERIFY_DAT                       IMPT 00000000   2459 
_RNA_REF1_CNT                             IMPT 00000000   2473 
_RNA_REF2_CNT                             IMPT 00000000   2474 
_RNA_REF_ERR_FLG1                         IMPT 00000000   2453 
_RNA_REF_ERR_FLG2                         IMPT 00000000   2454 
_RNA_STS_ERR_DAT                          IMPT 00000000   2462 
_RNA_STS_REQERR_CNT                       IMPT 00000000   2461 
_RNA_STS_SYSERR_CNT                       IMPT 00000000   2460 
_ROM_SUM_CHK                              IMPT 00000000   2698 
_ROM_SYSPAR_ERRADR                        IMPT 00000000   2367 
_RSECAR                                   IMPT 00000000   1978 
_RSECCNT                                  IMPT 00000000   1971 
_RSFT_TRERR_TM                            IMPT 00000000   2347 
_RTCNT                                    IMPT 00000000   1996 
_RTCOR                                    IMPT 00000000   1997 
_RTCSR                                    IMPT 00000000   1995 
_RWKAR                                    IMPT 00000000   1981 
_RWKCNT                                   IMPT 00000000   1974 
_RYRCNT                                   IMPT 00000000   1977 
_SAITO_ASM_RAM_TOP                        IMPT 00000000   2281 
_SAR0                                     IMPT 00000000   1778 
_SAR1                                     IMPT 00000000   1782 
_SAR2                                     IMPT 00000000   1786 
_SAR3                                     IMPT 00000000   1790 
_SCBRR2                                   IMPT 00000000   1855 
_SCFCR2                                   IMPT 00000000   1860 
_SCFDR2                                   IMPT 00000000   1861 
_SCFRDR2                                  IMPT 00000000   1859 
_SCFTDR2                                  IMPT 00000000   1857 
_SCI0_PRO_ROM_TO_RAM                      IMPT 00000000   2700  2963 
_SCI_VUP_MAIN                             IMPT 00000000   2699  3126 
_SCPCR                                    IMPT 00000000   1839 
_SCPDR                                    IMPT 00000000   1852 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    69

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SCR0                                     IMPT 00000000   1955 
_SCSCMR                                   IMPT 00000000   1959 
_SCSCR2                                   IMPT 00000000   1856 
_SCSMR2                                   IMPT 00000000   1854 
_SCSSR2                                   IMPT 00000000   1858 
_SDDRL                                    IMPT 00000000   1880 
_SDDR_SDDRH                               IMPT 00000000   1879 
_SDIR                                     IMPT 00000000   1878 
_SELF_ACT_FLG                             IMPT 00000000   2375 
_SELF_CHK_FLG                             IMPT 00000000   2374 
_SELF_CHK_TIMER                           IMPT 00000000   2384 
_SELF_FSTY_USE                            IMPT 00000000   2381 
_SELF_HAND_FLG1                           IMPT 00000000   2378 
_SELF_HAND_FLG2                           IMPT 00000000   2379 
_SELF_RSTY_USE                            IMPT 00000000   2382 
_SFTSW_ERR_TM                             IMPT 00000000   2335 
_SH4_SQERRAM                              IMPT 00000000   2328 
_SICDAR                                   IMPT 00000000   1817 
_SICTR                                    IMPT 00000000   1818 
_SIFCTR                                   IMPT 00000000   1819 
_SIFPR                                    IMPT 00000000   1827 
_SIIER                                    IMPT 00000000   1821 
_SIMDR                                    IMPT 00000000   1813 
_SIRCR                                    IMPT 00000000   1825 
_SIRDAR                                   IMPT 00000000   1816 
_SIRDR                                    IMPT 00000000   1823 
_SISCR                                    IMPT 00000000   1814 
_SISTR                                    IMPT 00000000   1820 
_SITCR                                    IMPT 00000000   1824 
_SITDAR                                   IMPT 00000000   1815 
_SITDR                                    IMPT 00000000   1822 
_SITMR                                    IMPT 00000000   1826 
_SMR0                                     IMPT 00000000   1953 
_SQ_CBWK_TOP                              IMPT 00000000   2501 
_SRAM_SIZE                                EQU  001FFFFF   2166*
_SRAM_TOP                                 EQU  AC000000   2165*
_SRSTR                                    IMPT 00000000   1888 
_SSR0                                     IMPT 00000000   1957 
_START_ACK_COD                            EQU  00004321    427*
_START_REQ_COD                            EQU  00009876    426*
_STBCR                                    IMPT 00000000   2000 
_STBCR2                                   IMPT 00000000   2003 
_STBCR3                                   IMPT 00000000   1887 
_TCNT0                                    IMPT 00000000   1962 
_TCNT1                                    IMPT 00000000   1965 
_TCNT2                                    IMPT 00000000   1968 
_TCOR0                                    IMPT 00000000   1961 
_TCOR1                                    IMPT 00000000   1964 
_TCOR2                                    IMPT 00000000   1967 
_TCR0                                     IMPT 00000000   1963 
_TCR1                                     IMPT 00000000   1966 
_TCR2                                     IMPT 00000000   1969 
_TDFP                                     IMPT 00000000   1876 
_TDR0                                     IMPT 00000000   1956 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    70

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_TEA                                      IMPT 00000000   2026 
_TIM100US                                 EQU  000007D0   2156*
_TIM1MS                                   EQU  000009C4   2157*
_TINT3_10MS_CNT                           IMPT 00000000   2439 
_TRA                                      IMPT 00000000   2016 
_TSTR                                     IMPT 00000000   1960 
_TTB                                      IMPT 00000000   2025 
_USBDASTS                                 IMPT 00000000   1900 
_USBDMA                                   IMPT 00000000   1909 
_USBEPDR0I                                IMPT 00000000   1894 
_USBEPDR0O                                IMPT 00000000   1895 
_USBEPDR0S                                IMPT 00000000   1899 
_USBEPDR1                                 IMPT 00000000   1906 
_USBEPDR2                                 IMPT 00000000   1901 
_USBEPDR3                                 IMPT 00000000   1910 
_USBEPSTL                                 IMPT 00000000   1903 
_USBEPSZ0O                                IMPT 00000000   1898 
_USBEPSZ1                                 IMPT 00000000   1907 
_USBFCLR                                  IMPT 00000000   1897 
_USBHBCED                                 IMPT 00000000   1922 
_USBHBHED                                 IMPT 00000000   1921 
_USBHC                                    IMPT 00000000   1912 
_USBHCCED                                 IMPT 00000000   1920 
_USBHCHED                                 IMPT 00000000   1919 
_USBHCS                                   IMPT 00000000   1913 
_USBHDHED                                 IMPT 00000000   1923 
_USBHFI                                   IMPT 00000000   1924 
_USBHFN                                   IMPT 00000000   1926 
_USBHFR                                   IMPT 00000000   1925 
_USBHHCCA                                 IMPT 00000000   1917 
_USBHID                                   IMPT 00000000   1916 
_USBHIE                                   IMPT 00000000   1915 
_USBHIS                                   IMPT 00000000   1914 
_USBHLST                                  IMPT 00000000   1928 
_USBHPCED                                 IMPT 00000000   1918 
_USBHPS                                   IMPT 00000000   1927 
_USBHR                                    IMPT 00000000   1911 
_USBHRDA                                  IMPT 00000000   1929 
_USBHRDB                                  IMPT 00000000   1930 
_USBHRPS1                                 IMPT 00000000   1932 
_USBHRPS2                                 IMPT 00000000   1933 
_USBHRS                                   IMPT 00000000   1931 
_USBIER0                                  IMPT 00000000   1904 
_USBIER1                                  IMPT 00000000   1905 
_USBIFR0                                  IMPT 00000000   1892 
_USBIFR1                                  IMPT 00000000   1893 
_USBISR0                                  IMPT 00000000   1902 
_USBISR1                                  IMPT 00000000   1908 
_USBTFG                                   IMPT 00000000   1896 
_VLVER11_ERR_TM                           IMPT 00000000   2339 
_VLVER12_ERR_TM                           IMPT 00000000   2340 
_VLVER21_ERR_TM                           IMPT 00000000   2341 
_VLVER22_ERR_TM                           IMPT 00000000   2342 
_VLVER31_ERR_TM                           IMPT 00000000   2343 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    71

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_VLVER32_ERR_TM                           IMPT 00000000   2344 
_VUPCHECK_DATA                            IMPT 00000000   2706  3008 
_VUPCHECK_EQU                             EQU  11AB3739    314* 3010 
_WCR1                                     IMPT 00000000   1991 
_WCR2                                     IMPT 00000000   1992 
_WK_RCV_SCFDR2                            IMPT 00000000   2445 
_WK_RCV_SCFSR2                            IMPT 00000000   2444 
_WK_RCV_SCLSR2                            IMPT 00000000   2443 
_WORK_MEM_CHK2                            IMPT 00000000   2694  2939 
_WPAR1_BTNER_TM                           IMPT 00000000   2351 
_WPAR1_CMPER2_TM                          IMPT 00000000   2360 
_WPAR1_FSFTTRER_TM                        IMPT 00000000   2361 
_WPAR1_MODSER_TM1                         IMPT 00000000   2352 
_WPAR1_MODSER_TM2                         IMPT 00000000   2353 
_WPAR1_RSFTTRER_TM                        IMPT 00000000   2362 
_WPAR1_SFTSWER_TM                         IMPT 00000000   2350 
_WPAR1_VLVER11_TM1                        IMPT 00000000   2354 
_WPAR1_VLVER12_TM1                        IMPT 00000000   2355 
_WPAR1_VLVER21_TM1                        IMPT 00000000   2356 
_WPAR1_VLVER22_TM1                        IMPT 00000000   2357 
_WPAR1_VLVER31_TM1                        IMPT 00000000   2358 
_WPAR1_VLVER32_TM1                        IMPT 00000000   2359 
_WTCNT                                    IMPT 00000000   2001 
_WTCSR                                    IMPT 00000000   2002 
__INITSCT                                 IMPT 00000000   2677  3162 
_dio_top1                                 IMPT 00000000   2716 
_dio_top2                                 IMPT 00000000   2717  2775  2812  2825  2898  2911 
_init_DISP                                IMPT 00000000   2703  2862 
_init_LCD                                 IMPT 00000000   2702  2858 
_main                                     IMPT 00000000   2678  3196 
_rcv2_data_INcnt                          IMPT 00000000   2301 
_rcv2_data_buf                            IMPT 00000000   2303 
_rcv2_data_cnt                            IMPT 00000000   2302 
_rcv2_err_FRPRErrCnt                      IMPT 00000000   2295 
_rcv2_err_OverRunCnt                      IMPT 00000000   2294 
_rcv2_err_data_flg1                       IMPT 00000000   2289 
_rcv2_err_data_sts1                       IMPT 00000000   2293 
_rcv2_err_elseErrCnt                      IMPT 00000000   2296 
_rcv2_err_hard_INTflg1                    IMPT 00000000   2286 
_rcv2_err_hard_INTflg2                    IMPT 00000000   2287 
_rcv2_err_hard_INTflg3                    IMPT 00000000   2288 
_rcv2_err_hard_sts1                       IMPT 00000000   2290 
_rcv2_err_hard_sts2                       IMPT 00000000   2291 
_rcv2_err_hard_sts3                       IMPT 00000000   2292 
_rcv2_event_flg                           IMPT 00000000   2312 
_send2_data_buf                           IMPT 00000000   2308 
_send2_event_flg                          IMPT 00000000   2313 
_start000                        Pstart        00000020   3195*
_vup_mesG_disp                            IMPT 00000000   2704  3034  3053  3081  3100 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:30                                                  PAGE    72

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

ResetPRG                         REL-CODE    00000022C        
Pstart                           REL-CODE    000000078        
