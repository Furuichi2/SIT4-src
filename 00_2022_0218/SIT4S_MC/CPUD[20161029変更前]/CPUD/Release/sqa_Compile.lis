*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;****************************************************************************************
    2                               2     ;* File Name    : ssa_Compile.src
    3                               3     ;* Function     : シーケンス コンパイル処理
    4                               4     ;* Author       : Designed by T.Akiba, Coded by T.Akiba
    5                               5     ;* Date         : 2009-11-20 Akiba
    6                               6     ;* Update       : 2010-08-11 Y.Kobayashi(コード整理)
    7                               7     ;****************************************************************************************
    8                               8     
    9                               9     ;********************************************************************
   10                              10     ;* INCLUDE
   11                              11     ;********************************************************************
 2237                              19     
 2238 00000000                     20             .SECTION        P,CODE
 2239                              21     
 2240                              22     ;********************************************************************
 2241                              23     ;* EXTERN 宣言 MEMORY,HARD
 2242                              24     ;********************************************************************
 2243                              25             .IMPORT _SEQ_COM1_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2244                              26             .IMPORT _SEQ_COM2_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2245                              27             .IMPORT _SEQ_COM3_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2246                              28     
 2247                              29             .EXPORT _SEQ_RUN_CHG1_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2248                              30             .EXPORT _SEQ_RUN_CHG2_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2249                              31             .EXPORT _SEQ_RUN_CHG3_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2250                              32     
 2251                              33     
 2252 00000000                     34     _SEQ_START_CODE:
 2253                              35             SUB_START
 2254 00000000 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2255                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2256 00000002 0009                36             NOP
 2257                              37     
 2258 00000004                     38     _SEQ_END_CODE:
 2259                              39             SUB_END
 2260                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2261 00000004 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2262                              40             M_RTS
 2263 00000006 000B                   M           RTS                             ;RTSの後ろの
 2264 00000008 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2265                              41     
 2266                              42     
 2267                              43     ;********************************************************************
 2268                              44     ;* FUNCTION     : シーケンスコマンド変換 1
 2269                              45     ;* DATE         : 09/11/20 Akiba
 2270                              46     ;* UPDATE       :
 2271                              47     ;********************************************************************
 2272                              48             .IMPORT _PVP_SQ_COM_ADR                 ;word
 2273                              49             .IMPORT _PVP_SQ_COM_ERR                 ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2274                              50     
 2275                              51     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2276                              52     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2277                              53     
 2278 0000000C                     54             .ALIGN  4
 2279 0000000C                     55     _SEQ_RUN_CHG1_MAIN:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     2
PROGRAM NAME =

 2280                              56             SUB_START
 2281 0000000C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2282                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2283                              57     
 2284                              58     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2285 0000000E DD17                59             MOV.L   #_SEQ_RUN1_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2286 00000010 DC17                60             MOV.L   #_SEQ_START_CODE,R12            ;
 2287 00000012 60C1                61             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2288 00000014 2D01                62             MOV.W   R0,@R13                         ;
 2289 00000016 D017                63             MOV.L   #2,R0                           ;
 2290 00000018 3D0C                64             ADD     R0,R13                          ; ADDRESS INC
 2291 0000001A 3C0C                65             ADD     R0,R12                          ; ADDRESS INC
 2292 0000001C 60C1                66             MOV.W   @R12,R0                         ;
 2293 0000001E 2D01                67             MOV.W   R0,@R13                         ; NOP CODE SET
 2294                              68     
 2295                              69             FAR_JSR #_SEQ_RUN_CHG1,R1               ;
 2296 00000020 D115                   M           MOV.L   #_SEQ_RUN_CHG1,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2297 00000022 410B                   M           JSR     @R1                     ;
 2298 00000024 0009                   M           NOP                                     ;
 2299                              70     
 2300 00000026 D115                71             MOV.L   #_SEQ_CMP_ERR_ADR1,R1           ;
 2301 00000028 2172                72             MOV.L   R7,@R1                          ; compile error adr set
 2302                              73     
 2303                              74     ;       ===========================
 2304 0000002A D115                75             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2305 0000002C 2171                76             MOV.W   R7,@R1                          ;
 2306 0000002E D115                77             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2307 00000030 2101                78             MOV.W   R0,@R1                          ;
 2308                              79     ;       ============================
 2309                              80     
 2310 00000032 D115                81             MOV.L   #_SEQ_CMP_ERR1,R1               ;
 2311 00000034 2101                82             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2312                              83     
 2313 00000036 2008                84             TST     R0,R0                           ;
 2314 00000038 890C                85             BT      _SEQ_RUN_CHG_MAIN020            ;
 2315                              86     
 2316                              87     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2317 0000003A DC14                88             MOV.L   #_SEQ_END_CODE,R12              ;
 2318 0000003C 60C1                89             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2319 0000003E 2D01                90             MOV.W   R0,@R13                         ;
 2320 00000040 D00C                91             MOV.L   #2,R0                           ;
 2321 00000042 3D0C                92             ADD     R0,R13                          ; ADDRESS INC
 2322 00000044 3C0C                93             ADD     R0,R12                          ; ADDRESS INC
 2323 00000046 60C1                94             MOV.W   @R12,R0                         ;
 2324 00000048 2D01                95             MOV.W   R0,@R13                         ; M_RTS SET
 2325 0000004A D00A                96             MOV.L   #2,R0                           ;
 2326 0000004C 3D0C                97             ADD     R0,R13                          ; ADDRESS INC
 2327 0000004E 3C0C                98             ADD     R0,R12                          ; ADDRESS INC
 2328 00000050 60C1                99             MOV.W   @R12,R0                         ;
 2329 00000052 2D01               100             MOV.W   R0,@R13                         ; M_RTS SET
 2330                             101     
 2331 00000054                    102     _SEQ_RUN_CHG_MAIN020:
 2332                             103     
 2333 00000054 222A               104             XOR     R2,R2                           ;
 2334                             105     
 2335 00000056 D10E               106             MOV.L   #_SEQ_ARG1_DATA,R1              ; ARG clear
 2336 00000058 2121               107             MOV.W   R2,@R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     3
PROGRAM NAME =

 2337 0000005A D10E               108             MOV.L   #_SEQ_MRG1_DATA,R1              ; MRG clear
 2338 0000005C 2121               109             MOV.W   R2,@R1                          ;
 2339 0000005E 9204               110             MOV.W   #H'01,R2                        ; NRG 1 set
 2340 00000060 D10D               111             MOV.L   #_SEQ_NRG1_DATA,R1              ;
 2341 00000062 2121               112             MOV.W   R2,@R1                          ;
 2342                             113     
 2343                             114             SUB_END
 2344                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2345 00000064 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2346                             115             M_RTS
 2347 00000066 000B                   M           RTS                             ;RTSの後ろの
 2348 00000068 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2349                             116     
 2350                             117     ;********************************************************************
 2351                             118     ;* FUNCTION     : シーケンスコマンド変換 2
 2352                             119     ;* DATE         : 09/11/20 Akiba
 2353                             120     ;* UPDATE       :
 2354                             121     ;********************************************************************
 2355                             122     
 2356                             123     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2357                             124     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2358                             125     
 2359                                     ***** BEGIN-POOL *****
 2360 0000006A 0001                       DATA FOR SOURCE-LINE 110
 2361 0000006C 00000000                   DATA FOR SOURCE-LINE 59
 2362 00000070 00000000                   DATA FOR SOURCE-LINE 60
 2363 00000074 00000002                   DATA FOR SOURCE-LINE 63,91,96
 2364 00000078 00000000                   DATA FOR SOURCE-LINE 69
 2365 0000007C 00000000                   DATA FOR SOURCE-LINE 71
 2366 00000080 00000000                   DATA FOR SOURCE-LINE 75
 2367 00000084 00000000                   DATA FOR SOURCE-LINE 77
 2368 00000088 00000000                   DATA FOR SOURCE-LINE 81
 2369 0000008C 00000000                   DATA FOR SOURCE-LINE 88
 2370 00000090 00000000                   DATA FOR SOURCE-LINE 106
 2371 00000094 00000000                   DATA FOR SOURCE-LINE 108
 2372 00000098 00000000                   DATA FOR SOURCE-LINE 111
 2373                                     ***** END-POOL *****
 2374 0000009C                    126             .ALIGN  4
 2375 0000009C                    127     _SEQ_RUN_CHG2_MAIN:
 2376                             128             SUB_START
 2377 0000009C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2378                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2379                             129     
 2380                             130     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2381 0000009E DD17               131             MOV.L   #_SEQ_RUN2_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2382 000000A0 DC17               132             MOV.L   #_SEQ_START_CODE,R12            ;
 2383 000000A2 60C1               133             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2384 000000A4 2D01               134             MOV.W   R0,@R13                         ;
 2385 000000A6 D017               135             MOV.L   #2,R0                           ;
 2386 000000A8 3D0C               136             ADD     R0,R13                          ; ADDRESS INC
 2387 000000AA 3C0C               137             ADD     R0,R12                          ; ADDRESS INC
 2388 000000AC 60C1               138             MOV.W   @R12,R0                         ;
 2389 000000AE 2D01               139             MOV.W   R0,@R13                         ; NOP CODE SET
 2390                             140     
 2391                             141             FAR_JSR #_SEQ_RUN_CHG2,R1               ;
 2392 000000B0 D115                   M           MOV.L   #_SEQ_RUN_CHG2,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2393 000000B2 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     4
PROGRAM NAME =

 2394 000000B4 0009                   M           NOP                                     ;
 2395                             142     
 2396 000000B6 D115               143             MOV.L   #_SEQ_CMP_ERR_ADR2,R1           ;
 2397 000000B8 2172               144             MOV.L   R7,@R1                          ; compile error adr set
 2398                             145     
 2399                             146     ;       ===========================
 2400 000000BA D115               147             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2401 000000BC 2171               148             MOV.W   R7,@R1                          ;
 2402 000000BE D115               149             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2403 000000C0 2101               150             MOV.W   R0,@R1                          ;
 2404                             151     ;       ============================
 2405                             152     
 2406 000000C2 D115               153             MOV.L   #_SEQ_CMP_ERR2,R1               ;
 2407 000000C4 2101               154             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2408                             155     
 2409 000000C6 2008               156             TST     R0,R0                           ;
 2410 000000C8 890C               157             BT      _SEQ_RUN_CHG2_MAIN020           ;
 2411                             158     
 2412                             159     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2413 000000CA DC14               160             MOV.L   #_SEQ_END_CODE,R12              ;
 2414 000000CC 60C1               161             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2415 000000CE 2D01               162             MOV.W   R0,@R13                         ;
 2416 000000D0 D00C               163             MOV.L   #2,R0                           ;
 2417 000000D2 3D0C               164             ADD     R0,R13                          ; ADDRESS INC
 2418 000000D4 3C0C               165             ADD     R0,R12                          ; ADDRESS INC
 2419 000000D6 60C1               166             MOV.W   @R12,R0                         ;
 2420 000000D8 2D01               167             MOV.W   R0,@R13                         ; M_RTS SET
 2421 000000DA D00A               168             MOV.L   #2,R0                           ;
 2422 000000DC 3D0C               169             ADD     R0,R13                          ; ADDRESS INC
 2423 000000DE 3C0C               170             ADD     R0,R12                          ; ADDRESS INC
 2424 000000E0 60C1               171             MOV.W   @R12,R0                         ;
 2425 000000E2 2D01               172             MOV.W   R0,@R13                         ; M_RTS SET
 2426                             173     
 2427 000000E4                    174     _SEQ_RUN_CHG2_MAIN020:
 2428                             175     
 2429 000000E4 222A               176             XOR     R2,R2                           ;
 2430                             177     
 2431 000000E6 D10E               178             MOV.L   #_SEQ_ARG2_DATA,R1              ; ARG clear
 2432 000000E8 2121               179             MOV.W   R2,@R1                          ;
 2433 000000EA D10E               180             MOV.L   #_SEQ_MRG2_DATA,R1              ; MRG clear
 2434 000000EC 2121               181             MOV.W   R2,@R1                          ;
 2435 000000EE 9204               182             MOV.W   #H'01,R2                        ; NRG 1 set
 2436 000000F0 D10D               183             MOV.L   #_SEQ_NRG2_DATA,R1              ;
 2437 000000F2 2121               184             MOV.W   R2,@R1                          ;
 2438                             185     
 2439                             186             SUB_END
 2440                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2441 000000F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2442                             187             M_RTS
 2443 000000F6 000B                   M           RTS                             ;RTSの後ろの
 2444 000000F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2445                             188     
 2446                             189     ;********************************************************************
 2447                             190     ;* FUNCTION     : シーケンスコマンド変換 3
 2448                             191     ;* DATE         : 09/11/20 Akiba
 2449                             192     ;* UPDATE       :
 2450                             193     ;********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     5
PROGRAM NAME =

 2451                             194     
 2452                             195     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2453                             196     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2454                             197     
 2455                                     ***** BEGIN-POOL *****
 2456 000000FA 0001                       DATA FOR SOURCE-LINE 182
 2457 000000FC 00000000                   DATA FOR SOURCE-LINE 131
 2458 00000100 00000000                   DATA FOR SOURCE-LINE 132
 2459 00000104 00000002                   DATA FOR SOURCE-LINE 135,163,168
 2460 00000108 00000000                   DATA FOR SOURCE-LINE 141
 2461 0000010C 00000000                   DATA FOR SOURCE-LINE 143
 2462 00000110 00000000                   DATA FOR SOURCE-LINE 147
 2463 00000114 00000000                   DATA FOR SOURCE-LINE 149
 2464 00000118 00000000                   DATA FOR SOURCE-LINE 153
 2465 0000011C 00000000                   DATA FOR SOURCE-LINE 160
 2466 00000120 00000000                   DATA FOR SOURCE-LINE 178
 2467 00000124 00000000                   DATA FOR SOURCE-LINE 180
 2468 00000128 00000000                   DATA FOR SOURCE-LINE 183
 2469                                     ***** END-POOL *****
 2470 0000012C                    198             .ALIGN  4
 2471 0000012C                    199     _SEQ_RUN_CHG3_MAIN:
 2472                             200             SUB_START
 2473 0000012C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2474                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2475                             201     
 2476                             202     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2477 0000012E DD17               203             MOV.L   #_SEQ_RUN3_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2478 00000130 DC17               204             MOV.L   #_SEQ_START_CODE,R12            ;
 2479 00000132 60C1               205             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2480 00000134 2D01               206             MOV.W   R0,@R13                         ;
 2481 00000136 D017               207             MOV.L   #2,R0                           ;
 2482 00000138 3D0C               208             ADD     R0,R13                          ; ADDRESS INC
 2483 0000013A 3C0C               209             ADD     R0,R12                          ; ADDRESS INC
 2484 0000013C 60C1               210             MOV.W   @R12,R0                         ;
 2485 0000013E 2D01               211             MOV.W   R0,@R13                         ; NOP CODE SET
 2486                             212     
 2487                             213             FAR_JSR #_SEQ_RUN_CHG3,R1               ;
 2488 00000140 D115                   M           MOV.L   #_SEQ_RUN_CHG3,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2489 00000142 410B                   M           JSR     @R1                     ;
 2490 00000144 0009                   M           NOP                                     ;
 2491                             214     
 2492 00000146 D115               215             MOV.L   #_SEQ_CMP_ERR_ADR3,R1           ;
 2493 00000148 2172               216             MOV.L   R7,@R1                          ; compile error adr set
 2494                             217     
 2495                             218     ;       ===========================
 2496 0000014A D115               219             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2497 0000014C 2171               220             MOV.W   R7,@R1                          ;
 2498 0000014E D115               221             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2499 00000150 2101               222             MOV.W   R0,@R1                          ;
 2500                             223     ;       ============================
 2501                             224     
 2502 00000152 D115               225             MOV.L   #_SEQ_CMP_ERR3,R1               ;
 2503 00000154 2101               226             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2504                             227     
 2505 00000156 2008               228             TST     R0,R0                           ;
 2506 00000158 890C               229             BT      _SEQ_RUN_CHG3_MAIN020           ;
 2507                             230     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     6
PROGRAM NAME =

 2508                             231     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2509 0000015A DC14               232             MOV.L   #_SEQ_END_CODE,R12              ;
 2510 0000015C 60C1               233             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2511 0000015E 2D01               234             MOV.W   R0,@R13                         ;
 2512 00000160 D00C               235             MOV.L   #2,R0                           ;
 2513 00000162 3D0C               236             ADD     R0,R13                          ; ADDRESS INC
 2514 00000164 3C0C               237             ADD     R0,R12                          ; ADDRESS INC
 2515 00000166 60C1               238             MOV.W   @R12,R0                         ;
 2516 00000168 2D01               239             MOV.W   R0,@R13                         ; M_RTS SET
 2517 0000016A D00A               240             MOV.L   #2,R0                           ;
 2518 0000016C 3D0C               241             ADD     R0,R13                          ; ADDRESS INC
 2519 0000016E 3C0C               242             ADD     R0,R12                          ; ADDRESS INC
 2520 00000170 60C1               243             MOV.W   @R12,R0                         ;
 2521 00000172 2D01               244             MOV.W   R0,@R13                         ; M_RTS SET
 2522                             245     
 2523 00000174                    246     _SEQ_RUN_CHG3_MAIN020:
 2524                             247     
 2525 00000174 222A               248             XOR     R2,R2                           ;
 2526                             249     
 2527 00000176 D10E               250             MOV.L   #_SEQ_ARG3_DATA,R1              ; ARG clear
 2528 00000178 2121               251             MOV.W   R2,@R1                          ;
 2529 0000017A D10E               252             MOV.L   #_SEQ_MRG3_DATA,R1              ; MRG clear
 2530 0000017C 2121               253             MOV.W   R2,@R1                          ;
 2531 0000017E 9204               254             MOV.W   #H'01,R2                        ; NRG 1 set
 2532 00000180 D10D               255             MOV.L   #_SEQ_NRG3_DATA,R1              ;
 2533 00000182 2121               256             MOV.W   R2,@R1                          ;
 2534                             257     
 2535                             258             SUB_END
 2536                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2537 00000184 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2538                             259             M_RTS
 2539 00000186 000B                   M           RTS                             ;RTSの後ろの
 2540 00000188 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2541                             260     
 2542                             261     ;********************************************************************
 2543                             262     ;* FUNCTION     : コンパイルサブルーチン 1
 2544                             263     ;* DATE         : 09/11/20 Akiba
 2545                             264     ;* UPDATE       :
 2546                             265     ;********************************************************************
 2547                                     ***** BEGIN-POOL *****
 2548 0000018A 0001                       DATA FOR SOURCE-LINE 254
 2549 0000018C 00000000                   DATA FOR SOURCE-LINE 203
 2550 00000190 00000000                   DATA FOR SOURCE-LINE 204
 2551 00000194 00000002                   DATA FOR SOURCE-LINE 207,235,240
 2552 00000198 00000000                   DATA FOR SOURCE-LINE 213
 2553 0000019C 00000000                   DATA FOR SOURCE-LINE 215
 2554 000001A0 00000000                   DATA FOR SOURCE-LINE 219
 2555 000001A4 00000000                   DATA FOR SOURCE-LINE 221
 2556 000001A8 00000000                   DATA FOR SOURCE-LINE 225
 2557 000001AC 00000000                   DATA FOR SOURCE-LINE 232
 2558 000001B0 00000000                   DATA FOR SOURCE-LINE 250
 2559 000001B4 00000000                   DATA FOR SOURCE-LINE 252
 2560 000001B8 00000000                   DATA FOR SOURCE-LINE 255
 2561                                     ***** END-POOL *****
 2562 000001BC                    266             .ALIGN  4
 2563 000001BC                    267     _SEQ_RUN_CHG1:
 2564                             268             SUB_START
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     7
PROGRAM NAME =

 2565 000001BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2566                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2567                             269     
 2568 000001BE DC10               270             MOV.L   #_SEQ_COM1_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2569 000001C0 DD10               271             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2570 000001C2 3CDC               272             ADD.L   R13,R12                         ;
 2571 000001C4 DD10               273             MOV.L   #_SEQ_RUN1,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2572 000001C6 DE11               274             MOV.L   #_SEQ_RUN1_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2573                             275     
 2574 000001C8 D011               276             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2575 000001CA 3E08               277             SUB     R0,R14                          ; 最大命令数28BYTE
 2576 000001CC 277A               278             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2577                             279     
 2578 000001CE                    280     _SEQ_RUN_CHG1_100:
 2579                             281     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2580                             282                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2581                             283                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2582                             284                                                     ; R13:SEQ-展開命令-WORK
 2583                             285                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2584 000001CE 3DE3               286             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2585                             287     
 2586 000001D0 D610               288             MOV.L   #H'0C1DFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2587                             289     
 2588 000001D2 3C63               290             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2589 000001D4 893C               291             BT      _SEQ_RUN_CHG1_ERR_END           ; R12>=R6 JUMP
 2590                             292     
 2591 000001D6 6AC5               293             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2592 000001D8 68C5               294             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2593                             295     
 2594 000001DA 69A8               296             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2595 000001DC 699C               297             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2596 000001DE 900E               298             MOV.W   #H'00FF,R0                      ;
 2597 000001E0 2909               299             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2598                             300     
 2599 000001E2 6BA3               301             MOV.L   R10,R11                         ;
 2600 000001E4 4B09               302             SHLR2   R11                             ; MKIND 抽出
 2601 000001E6 4B09               303             SHLR2   R11                             ; MKIND 抽出
 2602 000001E8 D00B               304             MOV.L   #H'000F,R0                      ;
 2603 000001EA 2B09               305             AND     R0,R11                          ; MKIND 抽出
 2604 000001EC 2A09               306             AND     R0,R10                          ; BIT DATA 抽出
 2605                             307     
 2606 000001EE                    308     _SEQ_RUN_CHG1_300:
 2607                             309     ;                                               ; SEQUENCE COMMAND
 2608 000001EE 4908               310             SHLL2   R9                              ; OP CODE × 4
 2609 000001F0 D10A               311             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2610 000001F2 319C               312             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2611                             313     
 2612 000001F4 D50A               314             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2613 000001F6 3950               315             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2614 000001F8 8914               316             BT      _SEQ_RUN_CHG1_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2615                             317             M_BRA   _SEQ_RUN_CHG1_4BYTE             ;
 2616 000001FA A017                   M           BRA     _SEQ_RUN_CHG1_4BYTE
 2617 000001FC 0009                   M           NOP
 2618                             318     
 2619                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     8
PROGRAM NAME =

 2620 000001FE 00FF                       DATA FOR SOURCE-LINE 298
 2621 00000200 00000000                   DATA FOR SOURCE-LINE 270
 2622 00000204 00000018                   DATA FOR SOURCE-LINE 271
 2623 00000208 00000000                   DATA FOR SOURCE-LINE 273
 2624 0000020C 00000000                   DATA FOR SOURCE-LINE 274
 2625 00000210 0000001E                   DATA FOR SOURCE-LINE 276
 2626 00000214 0C1DFFFF                   DATA FOR SOURCE-LINE 288
 2627 00000218 0000000F                   DATA FOR SOURCE-LINE 304
 2628 0000021C 00000000                   DATA FOR SOURCE-LINE 311
 2629 00000220 0000026C                   DATA FOR SOURCE-LINE 314
 2630                                     ***** END-POOL *****
 2631 00000224                    319     _SEQ_RUN_CHG1_DSETLI:
 2632 00000224 900B               320             MOV.W   #1,R0                           ;
 2633 00000226 370C               321             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2634 00000228 68C5               322             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2635 0000022A 69C5               323             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2636                             324     
 2637 0000022C                    325     _SEQ_RUN_CHG1_4BYTE:
 2638                             326     
 2639 0000022C 6112               327             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2640 0000022E 410B               328             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2641 00000230 0009               329             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2642                             330                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2643                             331                                                     ; IF END THEN R0=0000H ELSE "0"
 2644                             332     
 2645 00000232 8800               333             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2646 00000234 8904               334             BT      _SEQ_RUN_CHG1_800               ; NO ERR THEN JUMP
 2647                             335     
 2648 00000236 8855               336             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2649 00000238 8907               337             BT      _SEQ_RUN_CHG1_END               ; NORMAL END
 2650                             338             M_BRA   _SEQ_RUN_CHG1_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2651 0000023A A009                   M           BRA     _SEQ_RUN_CHG1_ERR_END
 2652 0000023C 0009                   M           NOP
 2653                             339                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2654                             340     
 2655                                     ***** BEGIN-POOL *****
 2656 0000023E 0001                       DATA FOR SOURCE-LINE 320
 2657                                     ***** END-POOL *****
 2658 00000240                    341     _SEQ_RUN_CHG1_800:                              ; CODE SET END
 2659                             342     
 2660 00000240 9102               343             MOV.W   #1,R1                           ;
 2661 00000242 371C               344             ADD     R1,R7                           ; STEP COUNTER + 1
 2662                             345             M_BRA   _SEQ_RUN_CHG1_100               ; LOOP
 2663 00000244 AFC3                   M           BRA     _SEQ_RUN_CHG1_100
 2664 00000246 0009                   M           NOP
 2665                             346     
 2666                                     ***** BEGIN-POOL *****
 2667 00000248 0001                       DATA FOR SOURCE-LINE 343
 2668                                     ***** END-POOL *****
 2669 0000024A                    347     _SEQ_RUN_CHG1_END:
 2670 0000024A 200A               348             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2671                             349                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2672                             350             M_BRA   _SEQ_RUN_CHG1_EXIT              ;
 2673 0000024C A001                   M           BRA     _SEQ_RUN_CHG1_EXIT
 2674 0000024E 0009                   M           NOP
 2675                             351     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE     9
PROGRAM NAME =

 2676 00000250                    352     _SEQ_RUN_CHG1_ERR_END:
 2677 00000250 9002               353             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2678                             354                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2679 00000252                    355     _SEQ_RUN_CHG1_EXIT:
 2680                             356             SUB_END
 2681                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2682 00000252 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2683                             357             M_RTS
 2684 00000254 000B                   M           RTS                             ;RTSの後ろの
 2685 00000256 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2686                             358     
 2687                             359     ;********************************************************************
 2688                             360     ;* FUNCTION     : コンパイルサブルーチン 2
 2689                             361     ;* DATE         : 09/11/20 Akiba
 2690                             362     ;* UPDATE       :
 2691                             363     ;********************************************************************
 2692                                     ***** BEGIN-POOL *****
 2693 00000258 FF00                       DATA FOR SOURCE-LINE 353
 2694                                     ***** END-POOL *****
 2695 0000025C                    364             .ALIGN  4
 2696 0000025C                    365     _SEQ_RUN_CHG2:
 2697                             366             SUB_START
 2698 0000025C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2699                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2700                             367     
 2701 0000025E DC10               368             MOV.L   #_SEQ_COM2_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2702 00000260 DD10               369             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2703 00000262 3CDC               370             ADD.L   R13,R12                         ;
 2704 00000264 DD10               371             MOV.L   #_SEQ_RUN2,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2705 00000266 DE11               372             MOV.L   #_SEQ_RUN2_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2706                             373     
 2707 00000268 D011               374             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2708 0000026A 3E08               375             SUB     R0,R14                          ; 最大命令数28BYTE
 2709 0000026C 277A               376             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2710                             377     
 2711 0000026E                    378     _SEQ_RUN_CHG2_100:
 2712                             379     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2713                             380                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2714                             381                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2715                             382                                                     ; R13:SEQ-展開命令-WORK
 2716                             383                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2717 0000026E 3DE3               384             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2718                             385     
 2719 00000270 D610               386             MOV.L   #H'0C1EFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2720                             387     
 2721 00000272 3C63               388             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2722 00000274 893C               389             BT      _SEQ_RUN_CHG2_ERR_END           ; R12>=R6 JUMP
 2723                             390     
 2724 00000276 6AC5               391             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2725 00000278 68C5               392             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2726                             393     
 2727 0000027A 69A8               394             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2728 0000027C 699C               395             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2729 0000027E 900E               396             MOV.W   #H'00FF,R0                      ;
 2730 00000280 2909               397             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    10
PROGRAM NAME =

 2731                             398     
 2732 00000282 6BA3               399             MOV.L   R10,R11                         ;
 2733 00000284 4B09               400             SHLR2   R11                             ; MKIND 抽出
 2734 00000286 4B09               401             SHLR2   R11                             ; MKIND 抽出
 2735 00000288 D00B               402             MOV.L   #H'000F,R0                      ;
 2736 0000028A 2B09               403             AND     R0,R11                          ; MKIND 抽出
 2737 0000028C 2A09               404             AND     R0,R10                          ; BIT DATA 抽出
 2738                             405     
 2739 0000028E                    406     _SEQ_RUN_CHG2_300:
 2740                             407     ;                                               ; SEQUENCE COMMAND
 2741 0000028E 4908               408             SHLL2   R9                              ; OP CODE × 4
 2742 00000290 D10A               409             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2743 00000292 319C               410             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2744                             411     
 2745 00000294 D50A               412             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2746 00000296 3950               413             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2747 00000298 8914               414             BT      _SEQ_RUN_CHG2_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2748                             415             M_BRA   _SEQ_RUN_CHG2_4BYTE             ;
 2749 0000029A A017                   M           BRA     _SEQ_RUN_CHG2_4BYTE
 2750 0000029C 0009                   M           NOP
 2751                             416     
 2752                                     ***** BEGIN-POOL *****
 2753 0000029E 00FF                       DATA FOR SOURCE-LINE 396
 2754 000002A0 00000000                   DATA FOR SOURCE-LINE 368
 2755 000002A4 00000018                   DATA FOR SOURCE-LINE 369
 2756 000002A8 00000000                   DATA FOR SOURCE-LINE 371
 2757 000002AC 00000000                   DATA FOR SOURCE-LINE 372
 2758 000002B0 0000001E                   DATA FOR SOURCE-LINE 374
 2759 000002B4 0C1EFFFF                   DATA FOR SOURCE-LINE 386
 2760 000002B8 0000000F                   DATA FOR SOURCE-LINE 402
 2761 000002BC 00000000                   DATA FOR SOURCE-LINE 409
 2762 000002C0 0000026C                   DATA FOR SOURCE-LINE 412
 2763                                     ***** END-POOL *****
 2764 000002C4                    417     _SEQ_RUN_CHG2_DSETLI:
 2765 000002C4 900B               418             MOV.W   #1,R0                           ;
 2766 000002C6 370C               419             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2767 000002C8 68C5               420             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2768 000002CA 69C5               421             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2769                             422     
 2770 000002CC                    423     _SEQ_RUN_CHG2_4BYTE:
 2771                             424     
 2772 000002CC 6112               425             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2773 000002CE 410B               426             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2774 000002D0 0009               427             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2775                             428                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2776                             429                                                     ; IF END THEN R0=0000H ELSE "0"
 2777                             430     
 2778 000002D2 8800               431             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2779 000002D4 8904               432             BT      _SEQ_RUN_CHG2_800               ; NO ERR THEN JUMP
 2780                             433     
 2781 000002D6 8855               434             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2782 000002D8 8907               435             BT      _SEQ_RUN_CHG2_END               ; NORMAL END
 2783                             436             M_BRA   _SEQ_RUN_CHG2_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2784 000002DA A009                   M           BRA     _SEQ_RUN_CHG2_ERR_END
 2785 000002DC 0009                   M           NOP
 2786                             437                                                     ;    [ENDなし異常=内部RAMに収まらない]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    11
PROGRAM NAME =

 2787                                     ***** BEGIN-POOL *****
 2788 000002DE 0001                       DATA FOR SOURCE-LINE 418
 2789                                     ***** END-POOL *****
 2790 000002E0                    438     _SEQ_RUN_CHG2_800:                              ; CODE SET END
 2791 000002E0 9102               439             MOV.W   #1,R1                           ;
 2792 000002E2 371C               440             ADD     R1,R7                           ; STEP COUNTER + 1
 2793                             441             M_BRA   _SEQ_RUN_CHG2_100               ; LOOP
 2794 000002E4 AFC3                   M           BRA     _SEQ_RUN_CHG2_100
 2795 000002E6 0009                   M           NOP
 2796                             442     
 2797                                     ***** BEGIN-POOL *****
 2798 000002E8 0001                       DATA FOR SOURCE-LINE 439
 2799                                     ***** END-POOL *****
 2800 000002EA                    443     _SEQ_RUN_CHG2_END:
 2801 000002EA 200A               444             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2802                             445                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2803                             446             M_BRA   _SEQ_RUN_CHG2_EXIT              ;
 2804 000002EC A001                   M           BRA     _SEQ_RUN_CHG2_EXIT
 2805 000002EE 0009                   M           NOP
 2806                             447     
 2807 000002F0                    448     _SEQ_RUN_CHG2_ERR_END:
 2808 000002F0 9002               449             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2809                             450                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2810 000002F2                    451     _SEQ_RUN_CHG2_EXIT:
 2811                             452             SUB_END
 2812                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2813 000002F2 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2814                             453             M_RTS
 2815 000002F4 000B                   M           RTS                             ;RTSの後ろの
 2816 000002F6 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2817                             454     
 2818                             455     ;********************************************************************
 2819                             456     ;* FUNCTION     : コンパイルサブルーチン 3
 2820                             457     ;* DATE         : 09/11/20 Akiba
 2821                             458     ;* UPDATE       :
 2822                             459     ;********************************************************************
 2823                                     ***** BEGIN-POOL *****
 2824 000002F8 FF00                       DATA FOR SOURCE-LINE 449
 2825                                     ***** END-POOL *****
 2826 000002FC                    460             .ALIGN  4
 2827 000002FC                    461     _SEQ_RUN_CHG3:
 2828                             462             SUB_START
 2829 000002FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2830                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2831                             463     
 2832 000002FE DC10               464             MOV.L   #_SEQ_COM3_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2833 00000300 DD10               465             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2834 00000302 3CDC               466             ADD.L   R13,R12                         ;
 2835 00000304 DD10               467             MOV.L   #_SEQ_RUN3,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2836 00000306 DE11               468             MOV.L   #_SEQ_RUN3_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2837                             469     
 2838 00000308 D011               470             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2839 0000030A 3E08               471             SUB     R0,R14                          ; 最大命令数28BYTE
 2840 0000030C 277A               472             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2841                             473     
 2842 0000030E                    474     _SEQ_RUN_CHG3_100:
 2843                             475     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    12
PROGRAM NAME =

 2844                             476                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2845                             477                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2846                             478                                                     ; R13:SEQ-展開命令-WORK
 2847                             479                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2848 0000030E 3DE3               480             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2849                             481     
 2850 00000310 D610               482             MOV.L   #H'0C1FFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2851                             483     
 2852 00000312 3C63               484             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2853 00000314 893C               485             BT      _SEQ_RUN_CHG3_ERR_END           ; R12>=R6 JUMP
 2854                             486     
 2855 00000316 6AC5               487             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2856 00000318 68C5               488             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2857                             489     
 2858 0000031A 69A8               490             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2859 0000031C 699C               491             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2860 0000031E 900E               492             MOV.W   #H'00FF,R0                      ;
 2861 00000320 2909               493             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2862                             494     
 2863 00000322 6BA3               495             MOV.L   R10,R11                         ;
 2864 00000324 4B09               496             SHLR2   R11                             ; MKIND 抽出
 2865 00000326 4B09               497             SHLR2   R11                             ; MKIND 抽出
 2866 00000328 D00B               498             MOV.L   #H'000F,R0                      ;
 2867 0000032A 2B09               499             AND     R0,R11                          ; MKIND 抽出
 2868 0000032C 2A09               500             AND     R0,R10                          ; BIT DATA 抽出
 2869                             501     
 2870 0000032E                    502     _SEQ_RUN_CHG3_300:
 2871                             503     ;                                               ; SEQUENCE COMMAND
 2872 0000032E 4908               504             SHLL2   R9                              ; OP CODE × 4
 2873 00000330 D10A               505             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2874 00000332 319C               506             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2875                             507     
 2876 00000334 D50A               508             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2877 00000336 3950               509             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2878 00000338 8914               510             BT      _SEQ_RUN_CHG3_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2879                             511             M_BRA   _SEQ_RUN_CHG3_4BYTE             ;
 2880 0000033A A017                   M           BRA     _SEQ_RUN_CHG3_4BYTE
 2881 0000033C 0009                   M           NOP
 2882                             512     
 2883                                     ***** BEGIN-POOL *****
 2884 0000033E 00FF                       DATA FOR SOURCE-LINE 492
 2885 00000340 00000000                   DATA FOR SOURCE-LINE 464
 2886 00000344 00000018                   DATA FOR SOURCE-LINE 465
 2887 00000348 00000000                   DATA FOR SOURCE-LINE 467
 2888 0000034C 00000000                   DATA FOR SOURCE-LINE 468
 2889 00000350 0000001E                   DATA FOR SOURCE-LINE 470
 2890 00000354 0C1FFFFF                   DATA FOR SOURCE-LINE 482
 2891 00000358 0000000F                   DATA FOR SOURCE-LINE 498
 2892 0000035C 00000000                   DATA FOR SOURCE-LINE 505
 2893 00000360 0000026C                   DATA FOR SOURCE-LINE 508
 2894                                     ***** END-POOL *****
 2895 00000364                    513     _SEQ_RUN_CHG3_DSETLI:
 2896 00000364 900B               514             MOV.W   #1,R0                           ;
 2897 00000366 370C               515             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    13
PROGRAM NAME =

 2898 00000368 68C5               516             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2899 0000036A 69C5               517             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2900                             518     
 2901 0000036C                    519     _SEQ_RUN_CHG3_4BYTE:
 2902                             520     
 2903 0000036C 6112               521             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2904 0000036E 410B               522             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2905 00000370 0009               523             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2906                             524                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2907                             525                                                     ; IF END THEN R0=0000H ELSE "0"
 2908                             526     
 2909 00000372 8800               527             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2910 00000374 8904               528             BT      _SEQ_RUN_CHG3_800               ; NO ERR THEN JUMP
 2911                             529     
 2912 00000376 8855               530             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2913 00000378 8907               531             BT      _SEQ_RUN_CHG3_END               ; NORMAL END
 2914                             532             M_BRA   _SEQ_RUN_CHG3_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2915 0000037A A009                   M           BRA     _SEQ_RUN_CHG3_ERR_END
 2916 0000037C 0009                   M           NOP
 2917                             533                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2918                                     ***** BEGIN-POOL *****
 2919 0000037E 0001                       DATA FOR SOURCE-LINE 514
 2920                                     ***** END-POOL *****
 2921 00000380                    534     _SEQ_RUN_CHG3_800:                              ; CODE SET END
 2922 00000380 9102               535             MOV.W   #1,R1                           ;
 2923 00000382 371C               536             ADD     R1,R7                           ; STEP COUNTER + 1
 2924                             537             M_BRA   _SEQ_RUN_CHG3_100               ; LOOP
 2925 00000384 AFC3                   M           BRA     _SEQ_RUN_CHG3_100
 2926 00000386 0009                   M           NOP
 2927                             538     
 2928                                     ***** BEGIN-POOL *****
 2929 00000388 0001                       DATA FOR SOURCE-LINE 535
 2930                                     ***** END-POOL *****
 2931 0000038A                    539     _SEQ_RUN_CHG3_END:
 2932 0000038A 200A               540             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2933                             541                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2934                             542             M_BRA   _SEQ_RUN_CHG3_EXIT              ;
 2935 0000038C A001                   M           BRA     _SEQ_RUN_CHG3_EXIT
 2936 0000038E 0009                   M           NOP
 2937                             543     
 2938 00000390                    544     _SEQ_RUN_CHG3_ERR_END:
 2939 00000390 9002               545             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2940                             546                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2941 00000392                    547     _SEQ_RUN_CHG3_EXIT:
 2942                             548             SUB_END
 2943                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2944 00000392 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2945                             549             M_RTS
 2946 00000394 000B                   M           RTS                             ;RTSの後ろの
 2947 00000396 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2948                             550     
 2949                             551     
 2950                             552     ;       /****************************************************
 2951                             553     ;       /*****    R11 ＝　ＯＰ　ＣＯＤＥ                *****
 2952                             554     ;       /*****    R10 ＝　ＢＩＴ　ＣＯＤＥ              *****
 2953                             555     ;       /*****    R9  ＝　ＯＦＦＳＥＴ　ＣＯＤＥ        *****
 2954                             556     ;       /*****    R8  ＝　ＡＤＲ　ＣＯＤＥ              *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    14
PROGRAM NAME =

 2955                             557     ;       /****************************************************
 2956                             558     ;
 2957                             559     ;       ***********************************
 2958                             560     ;       *****   NOP CODE CHANGE ROUTINE ***
 2959                             561     ;       ***********************************
 2960                                     ***** BEGIN-POOL *****
 2961 00000398 FF00                       DATA FOR SOURCE-LINE 545
 2962                                     ***** END-POOL *****
 2963 0000039C                    562             .ALIGN  4
 2964 0000039C                    563     _NOP_CHG:                                               ; 00000000B     00
 2965                             564             SUB_START
 2966 0000039C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2967                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2968                             565     
 2969 0000039E D004               566             MOV.L   #(_NOP_CODE_END - _NOP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 2970 000003A0 D304               567             MOV.L   #_NOP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 2971                             568     
 2972 000003A2 D105               569             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 2973 000003A4 410B               570             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 2974 000003A6 0009               571             NOP
 2975                             572     
 2976                             573             SUB_END
 2977                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2978 000003A8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2979                             574             M_RTS
 2980 000003AA 000B                   M           RTS                             ;RTSの後ろの
 2981 000003AC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2982                             575     
 2983                             576     ;       ************************************
 2984                             577     ;       *****   LDON CODE CHANGE ROUTINE ***
 2985                             578     ;       ************************************
 2986                                     ***** BEGIN-POOL *****
 2987 000003AE 0000                       ALIGNMENT CODE
 2988 000003B0 00000000                   DATA FOR SOURCE-LINE 566
 2989 000003B4 00000000                   DATA FOR SOURCE-LINE 567
 2990 000003B8 00000000                   DATA FOR SOURCE-LINE 569
 2991                                     ***** END-POOL *****
 2992 000003BC                    579             .ALIGN  4
 2993 000003BC                    580     _LDON_CHG:                                              ; 00000001B     01
 2994                             581             SUB_START
 2995 000003BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2996                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2997                             582     
 2998 000003BE D004               583             MOV.L   #(_LDON_CODE_END - _LDON_CODE),R0       ; 転送ﾊﾞｲﾄ長
 2999 000003C0 D304               584             MOV.L   #_LDON_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3000                             585     
 3001 000003C2 D105               586             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3002 000003C4 410B               587             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3003 000003C6 0009               588             NOP
 3004                             589     
 3005                             590             SUB_END
 3006                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3007 000003C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3008                             591             M_RTS
 3009 000003CA 000B                   M           RTS                             ;RTSの後ろの
 3010 000003CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3011                             592     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    15
PROGRAM NAME =

 3012                             593     ;       ***********************************
 3013                             594     ;       *****   AMRG CODE CHANGE ROUTINE ***
 3014                             595     ;       ***********************************
 3015                                     ***** BEGIN-POOL *****
 3016 000003CE 0000                       ALIGNMENT CODE
 3017 000003D0 00000000                   DATA FOR SOURCE-LINE 583
 3018 000003D4 00000000                   DATA FOR SOURCE-LINE 584
 3019 000003D8 00000000                   DATA FOR SOURCE-LINE 586
 3020                                     ***** END-POOL *****
 3021 000003DC                    596             .ALIGN  4
 3022 000003DC                    597     _AMRG_CHG:                                              ; 00100000B     20
 3023                             598             SUB_START
 3024 000003DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3025                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3026                             599     
 3027 000003DE D004               600             MOV.L   #(_AMRG_CODE_END - _AMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3028 000003E0 D304               601             MOV.L   #_AMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3029                             602     
 3030 000003E2 D105               603             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3031 000003E4 410B               604             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3032 000003E6 0009               605             NOP
 3033                             606     
 3034                             607             SUB_END
 3035                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3036 000003E8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3037                             608             M_RTS
 3038 000003EA 000B                   M           RTS                             ;RTSの後ろの
 3039 000003EC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3040                             609     
 3041                             610     ;       ***********************************
 3042                             611     ;       *****   OMRG CODE CHANGE ROUTINE ***
 3043                             612     ;       ***********************************
 3044                                     ***** BEGIN-POOL *****
 3045 000003EE 0000                       ALIGNMENT CODE
 3046 000003F0 00000000                   DATA FOR SOURCE-LINE 600
 3047 000003F4 00000000                   DATA FOR SOURCE-LINE 601
 3048 000003F8 00000000                   DATA FOR SOURCE-LINE 603
 3049                                     ***** END-POOL *****
 3050 000003FC                    613             .ALIGN  4
 3051 000003FC                    614     _OMRG_CHG:                                              ; 00100010B     22
 3052                             615             SUB_START
 3053 000003FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3054                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3055                             616     
 3056 000003FE D004               617             MOV.L   #(_OMRG_CODE_END - _OMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3057 00000400 D304               618             MOV.L   #_OMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3058                             619     
 3059 00000402 D105               620             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3060 00000404 410B               621             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3061 00000406 0009               622             NOP
 3062                             623     
 3063                             624             SUB_END
 3064                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3065 00000408 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3066                             625             M_RTS
 3067 0000040A 000B                   M           RTS                             ;RTSの後ろの
 3068 0000040C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    16
PROGRAM NAME =

 3069                             626     
 3070                             627     ;       ***********************************
 3071                             628     ;       *****   PUSH CODE CHANGE ROUTINE ***
 3072                             629     ;       ***********************************
 3073                                     ***** BEGIN-POOL *****
 3074 0000040E 0000                       ALIGNMENT CODE
 3075 00000410 00000000                   DATA FOR SOURCE-LINE 617
 3076 00000414 00000000                   DATA FOR SOURCE-LINE 618
 3077 00000418 00000000                   DATA FOR SOURCE-LINE 620
 3078                                     ***** END-POOL *****
 3079 0000041C                    630             .ALIGN  4
 3080 0000041C                    631     _PUSH_CHG:                                              ; 00100100B     24
 3081                             632             SUB_START
 3082 0000041C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3083                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3084                             633     
 3085 0000041E D004               634             MOV.L   #(_PUSH_CODE_END - _PUSH_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3086 00000420 D304               635             MOV.L   #_PUSH_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3087                             636     
 3088 00000422 D105               637             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3089 00000424 410B               638             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3090 00000426 0009               639             NOP
 3091                             640     
 3092                             641             SUB_END
 3093                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3094 00000428 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3095                             642             M_RTS
 3096 0000042A 000B                   M           RTS                             ;RTSの後ろの
 3097 0000042C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3098                             643     
 3099                             644     ;       ***********************************
 3100                             645     ;       *****   POP CODE CHANGE ROUTINE ***
 3101                             646     ;       ***********************************
 3102                                     ***** BEGIN-POOL *****
 3103 0000042E 0000                       ALIGNMENT CODE
 3104 00000430 00000000                   DATA FOR SOURCE-LINE 634
 3105 00000434 00000000                   DATA FOR SOURCE-LINE 635
 3106 00000438 00000000                   DATA FOR SOURCE-LINE 637
 3107                                     ***** END-POOL *****
 3108 0000043C                    647             .ALIGN  4
 3109 0000043C                    648     _POP_CHG:                                               ; 00100101B     25
 3110                             649             SUB_START
 3111 0000043C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3112                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3113                             650     
 3114 0000043E D004               651             MOV.L   #(_POP_CODE_END - _POP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3115 00000440 D304               652             MOV.L   #_POP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3116                             653     
 3117 00000442 D105               654             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3118 00000444 410B               655             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3119 00000446 0009               656             NOP
 3120                             657     
 3121                             658             SUB_END
 3122                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3123 00000448 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3124                             659             M_RTS
 3125 0000044A 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    17
PROGRAM NAME =

 3126 0000044C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3127                             660     
 3128                             661     ;       *************************************
 3129                             662     ;       *****   LDNRG CODE CHANGE ROUTINE ***
 3130                             663     ;       *************************************
 3131                                     ***** BEGIN-POOL *****
 3132 0000044E 0000                       ALIGNMENT CODE
 3133 00000450 00000000                   DATA FOR SOURCE-LINE 651
 3134 00000454 00000000                   DATA FOR SOURCE-LINE 652
 3135 00000458 00000000                   DATA FOR SOURCE-LINE 654
 3136                                     ***** END-POOL *****
 3137 0000045C                    664             .ALIGN  4
 3138 0000045C                    665     _LDNRG_CHG:                                             ; 00100110B     26
 3139                             666             SUB_START
 3140 0000045C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3141                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3142                             667     
 3143 0000045E D004               668             MOV.L   #(_LDNRG_CODE_END - _LDNRG_CODE),R0     ; 転送ﾊﾞｲﾄ長
 3144 00000460 D304               669             MOV.L   #_LDNRG_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3145                             670     
 3146 00000462 D105               671             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3147 00000464 410B               672             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3148 00000466 0009               673             NOP
 3149                             674     
 3150                             675             SUB_END
 3151                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3152 00000468 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3153                             676             M_RTS
 3154 0000046A 000B                   M           RTS                             ;RTSの後ろの
 3155 0000046C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3156                             677     
 3157                             678     ;       **************************************
 3158                             679     ;       *****   ENDNRG CODE CHANGE ROUTINE ***
 3159                             680     ;       **************************************
 3160                                     ***** BEGIN-POOL *****
 3161 0000046E 0000                       ALIGNMENT CODE
 3162 00000470 00000000                   DATA FOR SOURCE-LINE 668
 3163 00000474 00000000                   DATA FOR SOURCE-LINE 669
 3164 00000478 00000000                   DATA FOR SOURCE-LINE 671
 3165                                     ***** END-POOL *****
 3166 0000047C                    681             .ALIGN  4
 3167 0000047C                    682     _ENDNRG_CHG:                                            ; 00100111B     27
 3168                             683             SUB_START
 3169 0000047C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3170                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3171                             684     
 3172 0000047E D004               685             MOV.L   #(_ENDNRG_CODE_END - _ENDNRG_CODE),R0   ; 転送ﾊﾞｲﾄ長
 3173 00000480 D304               686             MOV.L   #_ENDNRG_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3174                             687     
 3175 00000482 D105               688             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3176 00000484 410B               689             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3177 00000486 0009               690             NOP
 3178                             691     
 3179                             692             SUB_END
 3180                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3181 00000488 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3182                             693             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    18
PROGRAM NAME =

 3183 0000048A 000B                   M           RTS                             ;RTSの後ろの
 3184 0000048C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3185                             694     
 3186                             695     ;       ***********************************
 3187                             696     ;       *****   END CODE CHANGE ROUTINE ***
 3188                             697     ;       **********************************
 3189                                     ***** BEGIN-POOL *****
 3190 0000048E 0000                       ALIGNMENT CODE
 3191 00000490 00000000                   DATA FOR SOURCE-LINE 685
 3192 00000494 00000000                   DATA FOR SOURCE-LINE 686
 3193 00000498 00000000                   DATA FOR SOURCE-LINE 688
 3194                                     ***** END-POOL *****
 3195 0000049C                    698             .ALIGN  4
 3196 0000049C                    699     _END_CHG:                                               ; 00101010B     2A
 3197                             700             SUB_START
 3198 0000049C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3199                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3200                             701     
 3201 0000049E D005               702             MOV.L   #(_END_CODE_END - _END_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3202 000004A0 D305               703             MOV.L   #_END_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3203                             704     
 3204 000004A2 D106               705             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3205 000004A4 410B               706             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3206 000004A6 0009               707             NOP
 3207                             708     
 3208 000004A8 9002               709             MOV.W   #_SQ_NML_END,R0                         ; END CODE SET
 3209                             710     
 3210                             711             SUB_END
 3211                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3212 000004AA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3213                             712             M_RTS
 3214 000004AC 000B                   M           RTS                             ;RTSの後ろの
 3215 000004AE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3216                             713     
 3217                             714     ;       ***************************************************
 3218                             715     ;       ***     SEQ DATA CHANGE0 ROUTINE                ***
 3219                             716     ;       ***************************************************
 3220                                     ***** BEGIN-POOL *****
 3221 000004B0 0055                       DATA FOR SOURCE-LINE 709
 3222 000004B2 0000                       ALIGNMENT CODE
 3223 000004B4 00000000                   DATA FOR SOURCE-LINE 702
 3224 000004B8 00000000                   DATA FOR SOURCE-LINE 703
 3225 000004BC 00000000                   DATA FOR SOURCE-LINE 705
 3226                                     ***** END-POOL *****
 3227 000004C0                    717             .ALIGN  4
 3228 000004C0                    718     _SEQ_DATA_CHG0:
 3229                             719             SUB_START
 3230 000004C0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3231                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3232                             720     
 3233 000004C2 64D3               721             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 3234                             722     
 3235                             723             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 3236 000004C4 D102                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 3237 000004C6 410B                   M           JSR     @R1                     ;
 3238 000004C8 0009                   M           NOP                                     ;
 3239                             724                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    19
PROGRAM NAME =

                                          入れ直す。
 3240                             725     
 3241 000004CA                    726     _SEQ_DATA_CHG0_EX:
 3242                             727             SUB_END
 3243                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3244 000004CA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3245                             728             M_RTS                                   ; NORMAL END
 3246 000004CC 000B                   M           RTS                             ;RTSの後ろの
 3247 000004CE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3248                             729     
 3249                             730     ;       ***********************************
 3250                             731     ;       *****   WSR CODE CHANGE ROUTINE ***
 3251                             732     ;       ***********************************
 3252                                     ***** BEGIN-POOL *****
 3253 000004D0 00000000                   DATA FOR SOURCE-LINE 723
 3254                                     ***** END-POOL *****
 3255 000004D4                    733             .ALIGN  4
 3256 000004D4                    734     _WSR_CHG:                                       ; 00010100B     14
 3257                             735             SUB_START
 3258 000004D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3259                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3260                             736     
 3261 000004D6 D005               737             MOV.L   #(_WSR_CODE_END - _WSR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3262 000004D8 D305               738             MOV.L   #_WSR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3263 000004DA D206               739             MOV.L   #(WSR_ADR - _WSR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3264 000004DC D506               740             MOV.L   #(WSR_OFS - WSR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3265                             741     
 3266 000004DE D107               742             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3267 000004E0 410B               743             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3268 000004E2 0009               744             NOP
 3269                             745     
 3270                             746             SUB_END
 3271                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3272 000004E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3273                             747             M_RTS
 3274 000004E6 000B                   M           RTS                             ;RTSの後ろの
 3275 000004E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3276                             748     
 3277                             749     ;       ***********************************
 3278                             750     ;       *****   CLR CODE CHANGE ROUTINE ***
 3279                             751     ;       ***********************************
 3280                                     ***** BEGIN-POOL *****
 3281 000004EA 0000                       ALIGNMENT CODE
 3282 000004EC 00000000                   DATA FOR SOURCE-LINE 737
 3283 000004F0 00000000                   DATA FOR SOURCE-LINE 738
 3284 000004F4 00000000                   DATA FOR SOURCE-LINE 739
 3285 000004F8 00000000                   DATA FOR SOURCE-LINE 740
 3286 000004FC 00000000                   DATA FOR SOURCE-LINE 742
 3287                                     ***** END-POOL *****
 3288 00000500                    752             .ALIGN  4
 3289 00000500                    753     _CLR_CHG:                                       ; 00010110B     16
 3290                             754             SUB_START
 3291 00000500 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3292                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3293                             755     
 3294 00000502 D005               756             MOV.L   #(_CLR_CODE_END - _CLR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3295 00000504 D305               757             MOV.L   #_CLR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    20
PROGRAM NAME =

 3296 00000506 D206               758             MOV.L   #(CLR_ADR - _CLR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3297 00000508 D506               759             MOV.L   #(CLR_OFS - CLR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3298                             760     
 3299 0000050A D107               761             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3300 0000050C 410B               762             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3301 0000050E 0009               763             NOP
 3302                             764     
 3303                             765             SUB_END
 3304                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3305 00000510 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3306                             766             M_RTS
 3307 00000512 000B                   M           RTS                             ;RTSの後ろの
 3308 00000514 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3309                             767     
 3310                             768     ;       ***********************************
 3311                             769     ;       *****   LDW CODE CHANGE ROUTINE ***
 3312                             770     ;       ***********************************
 3313                                     ***** BEGIN-POOL *****
 3314 00000516 0000                       ALIGNMENT CODE
 3315 00000518 00000000                   DATA FOR SOURCE-LINE 756
 3316 0000051C 00000000                   DATA FOR SOURCE-LINE 757
 3317 00000520 00000000                   DATA FOR SOURCE-LINE 758
 3318 00000524 00000000                   DATA FOR SOURCE-LINE 759
 3319 00000528 00000000                   DATA FOR SOURCE-LINE 761
 3320                                     ***** END-POOL *****
 3321 0000052C                    771             .ALIGN  4
 3322 0000052C                    772     _LDW_CHG:                                       ; 00110100B     34
 3323                             773             SUB_START
 3324 0000052C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3325                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3326                             774     
 3327 0000052E D005               775             MOV.L   #(_LDW_CODE_END - _LDW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3328 00000530 D305               776             MOV.L   #_LDW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3329 00000532 D206               777             MOV.L   #(LDW_ADR - _LDW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3330 00000534 D506               778             MOV.L   #(LDW_OFS - LDW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3331                             779     
 3332 00000536 D107               780             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3333 00000538 410B               781             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3334 0000053A 0009               782             NOP
 3335                             783     
 3336                             784             SUB_END
 3337                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3338 0000053C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3339                             785             M_RTS
 3340 0000053E 000B                   M           RTS                             ;RTSの後ろの
 3341 00000540 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3342                             786     
 3343                             787     ;       ***********************************
 3344                             788     ;       *****   LDL CODE CHANGE ROUTINE ***
 3345                             789     ;       ***********************************
 3346                                     ***** BEGIN-POOL *****
 3347 00000542 0000                       ALIGNMENT CODE
 3348 00000544 00000000                   DATA FOR SOURCE-LINE 775
 3349 00000548 00000000                   DATA FOR SOURCE-LINE 776
 3350 0000054C 00000000                   DATA FOR SOURCE-LINE 777
 3351 00000550 00000000                   DATA FOR SOURCE-LINE 778
 3352 00000554 00000000                   DATA FOR SOURCE-LINE 780
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    21
PROGRAM NAME =

 3353                                     ***** END-POOL *****
 3354 00000558                    790             .ALIGN  4
 3355 00000558                    791     _LDL_CHG:                                       ; 00110101B     35
 3356                             792             SUB_START
 3357 00000558 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3358                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3359                             793     
 3360 0000055A D005               794             MOV.L   #(_LDL_CODE_END - _LDL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3361 0000055C D305               795             MOV.L   #_LDL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3362 0000055E D206               796             MOV.L   #(LDL_ADR - _LDL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3363 00000560 D506               797             MOV.L   #(LDL_OFS - LDL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3364                             798     
 3365 00000562 D107               799             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3366 00000564 410B               800             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3367 00000566 0009               801             NOP
 3368                             802     
 3369                             803             SUB_END
 3370                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3371 00000568 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3372                             804             M_RTS
 3373 0000056A 000B                   M           RTS                             ;RTSの後ろの
 3374 0000056C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3375                             805     
 3376                             806     ;       ***********************************
 3377                             807     ;       *****   STW CODE CHANGE ROUTINE ***
 3378                             808     ;       ***********************************
 3379                                     ***** BEGIN-POOL *****
 3380 0000056E 0000                       ALIGNMENT CODE
 3381 00000570 00000000                   DATA FOR SOURCE-LINE 794
 3382 00000574 00000000                   DATA FOR SOURCE-LINE 795
 3383 00000578 00000000                   DATA FOR SOURCE-LINE 796
 3384 0000057C 00000000                   DATA FOR SOURCE-LINE 797
 3385 00000580 00000000                   DATA FOR SOURCE-LINE 799
 3386                                     ***** END-POOL *****
 3387 00000584                    809             .ALIGN  4
 3388 00000584                    810     _STW_CHG:                                       ; 00111100B     3C
 3389                             811             SUB_START
 3390 00000584 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3391                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3392                             812     
 3393 00000586 D005               813             MOV.L   #(_STW_CODE_END - _STW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3394 00000588 D305               814             MOV.L   #_STW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3395 0000058A D206               815             MOV.L   #(STW_ADR - _STW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3396 0000058C D506               816             MOV.L   #(STW_OFS - STW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3397                             817     
 3398 0000058E D107               818             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3399 00000590 410B               819             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3400 00000592 0009               820             NOP
 3401                             821     
 3402                             822             SUB_END
 3403                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3404 00000594 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3405                             823             M_RTS
 3406 00000596 000B                   M           RTS                             ;RTSの後ろの
 3407 00000598 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3408                             824     
 3409                             825     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    22
PROGRAM NAME =

 3410                             826     ;       *****   STL CODE CHANGE ROUTINE ***
 3411                             827     ;       ***********************************
 3412                                     ***** BEGIN-POOL *****
 3413 0000059A 0000                       ALIGNMENT CODE
 3414 0000059C 00000000                   DATA FOR SOURCE-LINE 813
 3415 000005A0 00000000                   DATA FOR SOURCE-LINE 814
 3416 000005A4 00000000                   DATA FOR SOURCE-LINE 815
 3417 000005A8 00000000                   DATA FOR SOURCE-LINE 816
 3418 000005AC 00000000                   DATA FOR SOURCE-LINE 818
 3419                                     ***** END-POOL *****
 3420 000005B0                    828             .ALIGN  4
 3421 000005B0                    829     _STL_CHG:                                       ; 00111101B     3D
 3422                             830             SUB_START
 3423 000005B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3424                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3425                             831     
 3426 000005B2 D005               832             MOV.L   #(_STL_CODE_END - _STL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3427 000005B4 D305               833             MOV.L   #_STL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3428 000005B6 D206               834             MOV.L   #(STL_ADR - _STL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3429 000005B8 D506               835             MOV.L   #(STL_OFS - STL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3430                             836     
 3431 000005BA D107               837             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3432 000005BC 410B               838             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3433 000005BE 0009               839             NOP
 3434                             840     
 3435                             841             SUB_END
 3436                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3437 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3438                             842             M_RTS
 3439 000005C2 000B                   M           RTS                             ;RTSの後ろの
 3440 000005C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3441                             843     
 3442                             844     ;       ***********************************
 3443                             845     ;       *****   EQW CODE CHANGE ROUTINE ***
 3444                             846     ;       ***********************************
 3445                                     ***** BEGIN-POOL *****
 3446 000005C6 0000                       ALIGNMENT CODE
 3447 000005C8 00000000                   DATA FOR SOURCE-LINE 832
 3448 000005CC 00000000                   DATA FOR SOURCE-LINE 833
 3449 000005D0 00000000                   DATA FOR SOURCE-LINE 834
 3450 000005D4 00000000                   DATA FOR SOURCE-LINE 835
 3451 000005D8 00000000                   DATA FOR SOURCE-LINE 837
 3452                                     ***** END-POOL *****
 3453 000005DC                    847             .ALIGN  4
 3454 000005DC                    848     _EQW_CHG:                                       ; 01000000B     40
 3455                             849             SUB_START
 3456 000005DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3457                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3458                             850     
 3459 000005DE D005               851             MOV.L   #(_EQW_CODE_END - _EQW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3460 000005E0 D305               852             MOV.L   #_EQW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3461 000005E2 D206               853             MOV.L   #(EQW_ADR - _EQW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3462 000005E4 D506               854             MOV.L   #(EQW_OFS - EQW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3463                             855     
 3464 000005E6 D107               856             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3465 000005E8 410B               857             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3466 000005EA 0009               858             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    23
PROGRAM NAME =

 3467                             859     
 3468                             860             SUB_END
 3469                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3470 000005EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3471                             861             M_RTS
 3472 000005EE 000B                   M           RTS                             ;RTSの後ろの
 3473 000005F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3474                             862     
 3475                             863     ;       *******************************************
 3476                             864     ;       *****   EQL CODE CHANGE ROUTINE         ***
 3477                             865     ;       *******************************************
 3478                                     ***** BEGIN-POOL *****
 3479 000005F2 0000                       ALIGNMENT CODE
 3480 000005F4 00000000                   DATA FOR SOURCE-LINE 851
 3481 000005F8 00000000                   DATA FOR SOURCE-LINE 852
 3482 000005FC 00000000                   DATA FOR SOURCE-LINE 853
 3483 00000600 00000000                   DATA FOR SOURCE-LINE 854
 3484 00000604 00000000                   DATA FOR SOURCE-LINE 856
 3485                                     ***** END-POOL *****
 3486 00000608                    866             .ALIGN  4
 3487 00000608                    867     _EQL_CHG:                                       ; 01000001B     41
 3488                             868             SUB_START
 3489 00000608 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3490                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3491                             869     
 3492 0000060A D005               870             MOV.L   #(_EQL_CODE_END - _EQL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3493 0000060C D305               871             MOV.L   #_EQL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3494 0000060E D206               872             MOV.L   #(EQL_ADR - _EQL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3495 00000610 D506               873             MOV.L   #(EQL_OFS - EQL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3496                             874     
 3497 00000612 D107               875             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3498 00000614 410B               876             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3499 00000616 0009               877             NOP
 3500                             878     
 3501                             879             SUB_END
 3502                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3503 00000618 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3504                             880             M_RTS
 3505 0000061A 000B                   M           RTS                             ;RTSの後ろの
 3506 0000061C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3507                             881     
 3508                             882     ;       ***********************************
 3509                             883     ;       *****   NEW CODE CHANGE ROUTINE ***
 3510                             884     ;       ***********************************
 3511                                     ***** BEGIN-POOL *****
 3512 0000061E 0000                       ALIGNMENT CODE
 3513 00000620 00000000                   DATA FOR SOURCE-LINE 870
 3514 00000624 00000000                   DATA FOR SOURCE-LINE 871
 3515 00000628 00000000                   DATA FOR SOURCE-LINE 872
 3516 0000062C 00000000                   DATA FOR SOURCE-LINE 873
 3517 00000630 00000000                   DATA FOR SOURCE-LINE 875
 3518                                     ***** END-POOL *****
 3519 00000634                    885             .ALIGN  4
 3520 00000634                    886     _NEW_CHG:                                       ; 01000100B     44
 3521                             887             SUB_START
 3522 00000634 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3523                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    24
PROGRAM NAME =

 3524                             888     
 3525 00000636 D005               889             MOV.L   #(_NEW_CODE_END - _NEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3526 00000638 D305               890             MOV.L   #_NEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3527 0000063A D206               891             MOV.L   #(NEW_ADR - _NEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3528 0000063C D506               892             MOV.L   #(NEW_OFS - NEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3529                             893     
 3530 0000063E D107               894             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3531 00000640 410B               895             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3532 00000642 0009               896             NOP
 3533                             897     
 3534                             898             SUB_END
 3535                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3536 00000644 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3537                             899             M_RTS
 3538 00000646 000B                   M           RTS                             ;RTSの後ろの
 3539 00000648 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3540                             900     
 3541                             901     ;       ***********************************
 3542                             902     ;       *****   NEL CODE CHANGE ROUTINE ***
 3543                             903     ;       ***********************************
 3544                                     ***** BEGIN-POOL *****
 3545 0000064A 0000                       ALIGNMENT CODE
 3546 0000064C 00000000                   DATA FOR SOURCE-LINE 889
 3547 00000650 00000000                   DATA FOR SOURCE-LINE 890
 3548 00000654 00000000                   DATA FOR SOURCE-LINE 891
 3549 00000658 00000000                   DATA FOR SOURCE-LINE 892
 3550 0000065C 00000000                   DATA FOR SOURCE-LINE 894
 3551                                     ***** END-POOL *****
 3552 00000660                    904             .ALIGN  4
 3553 00000660                    905     _NEL_CHG:                                       ; 01000101B     45
 3554                             906             SUB_START
 3555 00000660 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3556                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3557                             907     
 3558 00000662 D005               908             MOV.L   #(_NEL_CODE_END - _NEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3559 00000664 D305               909             MOV.L   #_NEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3560 00000666 D206               910             MOV.L   #(NEL_ADR - _NEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3561 00000668 D506               911             MOV.L   #(NEL_OFS - NEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3562                             912     
 3563 0000066A D107               913             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3564 0000066C 410B               914             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3565 0000066E 0009               915             NOP
 3566                             916     
 3567                             917             SUB_END
 3568                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3569 00000670 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3570                             918             M_RTS
 3571 00000672 000B                   M           RTS                             ;RTSの後ろの
 3572 00000674 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3573                             919     
 3574                             920     ;       ***********************************
 3575                             921     ;       *****   GTW CODE CHANGE ROUTINE ***
 3576                             922     ;       ***********************************
 3577                                     ***** BEGIN-POOL *****
 3578 00000676 0000                       ALIGNMENT CODE
 3579 00000678 00000000                   DATA FOR SOURCE-LINE 908
 3580 0000067C 00000000                   DATA FOR SOURCE-LINE 909
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    25
PROGRAM NAME =

 3581 00000680 00000000                   DATA FOR SOURCE-LINE 910
 3582 00000684 00000000                   DATA FOR SOURCE-LINE 911
 3583 00000688 00000000                   DATA FOR SOURCE-LINE 913
 3584                                     ***** END-POOL *****
 3585 0000068C                    923             .ALIGN  4
 3586 0000068C                    924     _GTW_CHG:                                       ; 01001000B     48
 3587                             925             SUB_START
 3588 0000068C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3589                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3590                             926     
 3591 0000068E D005               927             MOV.L   #(_GTW_CODE_END - _GTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3592 00000690 D305               928             MOV.L   #_GTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3593 00000692 D206               929             MOV.L   #(GTW_ADR - _GTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3594 00000694 D506               930             MOV.L   #(GTW_OFS - GTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3595                             931     
 3596 00000696 D107               932             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3597 00000698 410B               933             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3598 0000069A 0009               934             NOP
 3599                             935     
 3600                             936             SUB_END
 3601                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3602 0000069C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3603                             937             M_RTS
 3604 0000069E 000B                   M           RTS                             ;RTSの後ろの
 3605 000006A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3606                             938     
 3607                             939     ;       ***********************************
 3608                             940     ;       *****   GTL CODE CHANGE ROUTINE ***
 3609                             941     ;       ***********************************
 3610                                     ***** BEGIN-POOL *****
 3611 000006A2 0000                       ALIGNMENT CODE
 3612 000006A4 00000000                   DATA FOR SOURCE-LINE 927
 3613 000006A8 00000000                   DATA FOR SOURCE-LINE 928
 3614 000006AC 00000000                   DATA FOR SOURCE-LINE 929
 3615 000006B0 00000000                   DATA FOR SOURCE-LINE 930
 3616 000006B4 00000000                   DATA FOR SOURCE-LINE 932
 3617                                     ***** END-POOL *****
 3618 000006B8                    942             .ALIGN  4
 3619 000006B8                    943     _GTL_CHG:                                       ; 01001001B     49
 3620                             944             SUB_START
 3621 000006B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3622                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3623                             945     
 3624 000006BA D005               946             MOV.L   #(_GTL_CODE_END - _GTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3625 000006BC D305               947             MOV.L   #_GTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3626 000006BE D206               948             MOV.L   #(GTL_ADR - _GTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3627 000006C0 D506               949             MOV.L   #(GTL_OFS - GTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3628                             950     
 3629 000006C2 D107               951             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3630 000006C4 410B               952             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3631 000006C6 0009               953             NOP
 3632                             954     
 3633                             955             SUB_END
 3634                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3635 000006C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3636                             956             M_RTS
 3637 000006CA 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    26
PROGRAM NAME =

 3638 000006CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3639                             957     
 3640                             958     ;       ***********************************
 3641                             959     ;       *****   GEW CODE CHANGE ROUTINE ***
 3642                             960     ;       ***********************************
 3643                                     ***** BEGIN-POOL *****
 3644 000006CE 0000                       ALIGNMENT CODE
 3645 000006D0 00000000                   DATA FOR SOURCE-LINE 946
 3646 000006D4 00000000                   DATA FOR SOURCE-LINE 947
 3647 000006D8 00000000                   DATA FOR SOURCE-LINE 948
 3648 000006DC 00000000                   DATA FOR SOURCE-LINE 949
 3649 000006E0 00000000                   DATA FOR SOURCE-LINE 951
 3650                                     ***** END-POOL *****
 3651 000006E4                    961             .ALIGN  4
 3652 000006E4                    962     _GEW_CHG:                                       ; 01001100B     4C
 3653                             963             SUB_START
 3654 000006E4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3655                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3656                             964     
 3657 000006E6 D005               965             MOV.L   #(_GEW_CODE_END - _GEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3658 000006E8 D305               966             MOV.L   #_GEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3659 000006EA D206               967             MOV.L   #(GEW_ADR - _GEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3660 000006EC D506               968             MOV.L   #(GEW_OFS - GEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3661                             969     
 3662 000006EE D107               970             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3663 000006F0 410B               971             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3664 000006F2 0009               972             NOP
 3665                             973     
 3666                             974             SUB_END
 3667                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3668 000006F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3669                             975             M_RTS
 3670 000006F6 000B                   M           RTS                             ;RTSの後ろの
 3671 000006F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3672                             976     
 3673                             977     ;       ***********************************
 3674                             978     ;       *****   GEL CODE CHANGE ROUTINE ***
 3675                             979     ;       ***********************************
 3676                                     ***** BEGIN-POOL *****
 3677 000006FA 0000                       ALIGNMENT CODE
 3678 000006FC 00000000                   DATA FOR SOURCE-LINE 965
 3679 00000700 00000000                   DATA FOR SOURCE-LINE 966
 3680 00000704 00000000                   DATA FOR SOURCE-LINE 967
 3681 00000708 00000000                   DATA FOR SOURCE-LINE 968
 3682 0000070C 00000000                   DATA FOR SOURCE-LINE 970
 3683                                     ***** END-POOL *****
 3684 00000710                    980             .ALIGN  4
 3685 00000710                    981     _GEL_CHG:                                       ; 01001101B     4D
 3686                             982             SUB_START
 3687 00000710 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3688                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3689                             983     
 3690 00000712 D005               984             MOV.L   #(_GEL_CODE_END - _GEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3691 00000714 D305               985             MOV.L   #_GEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3692 00000716 D206               986             MOV.L   #(GEL_ADR - _GEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3693 00000718 D506               987             MOV.L   #(GEL_OFS - GEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3694                             988     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    27
PROGRAM NAME =

 3695 0000071A D107               989             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3696 0000071C 410B               990             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3697 0000071E 0009               991             NOP
 3698                             992     
 3699                             993             SUB_END
 3700                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3701 00000720 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3702                             994             M_RTS
 3703 00000722 000B                   M           RTS                             ;RTSの後ろの
 3704 00000724 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3705                             995     
 3706                             996     ;       ***********************************
 3707                             997     ;       *****   CALL RELEY ROUTINE ***
 3708                             998     ;       ***********************************
 3709                                     ***** BEGIN-POOL *****
 3710 00000726 0000                       ALIGNMENT CODE
 3711 00000728 00000000                   DATA FOR SOURCE-LINE 984
 3712 0000072C 00000000                   DATA FOR SOURCE-LINE 985
 3713 00000730 00000000                   DATA FOR SOURCE-LINE 986
 3714 00000734 00000000                   DATA FOR SOURCE-LINE 987
 3715 00000738 00000000                   DATA FOR SOURCE-LINE 989
 3716                                     ***** END-POOL *****
 3717 0000073C                    999             .ALIGN  4
 3718 0000073C                   1000     _SEQ_DATA_CHG1_1:
 3719                            1001             SUB_START
 3720 0000073C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3721                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3722                            1002     
 3723 0000073E D103              1003             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3724 00000740 410B              1004             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3725 00000742 0009              1005             NOP
 3726                            1006     
 3727                            1007             SUB_END
 3728                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3729 00000744 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3730                            1008             M_RTS                                   ; NORMAL END
 3731 00000746 000B                   M           RTS                             ;RTSの後ろの
 3732 00000748 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3733                            1009     
 3734                            1010     ;       ***********************************
 3735                            1011     ;       *****   LTW CODE CHANGE ROUTINE ***
 3736                            1012     ;       ***********************************
 3737                                     ***** BEGIN-POOL *****
 3738 0000074A 0000                       ALIGNMENT CODE
 3739 0000074C 00000000                   DATA FOR SOURCE-LINE 1003
 3740                                     ***** END-POOL *****
 3741 00000750                   1013             .ALIGN  4
 3742 00000750                   1014     _LTW_CHG:                                       ; 01010000B     50
 3743                            1015             SUB_START
 3744 00000750 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3745                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3746                            1016     
 3747 00000752 D005              1017             MOV.L   #(_LTW_CODE_END - _LTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3748 00000754 D305              1018             MOV.L   #_LTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3749 00000756 D206              1019             MOV.L   #(LTW_ADR - _LTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3750 00000758 D506              1020             MOV.L   #(LTW_OFS - LTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3751                            1021     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    28
PROGRAM NAME =

 3752 0000075A D107              1022             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3753 0000075C 410B              1023             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3754 0000075E 0009              1024             NOP
 3755                            1025     
 3756                            1026             SUB_END
 3757                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3758 00000760 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3759                            1027             M_RTS
 3760 00000762 000B                   M           RTS                             ;RTSの後ろの
 3761 00000764 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3762                            1028     
 3763                            1029     ;       ***********************************
 3764                            1030     ;       *****   LTL CODE CHANGE ROUTINE ***
 3765                            1031     ;       ***********************************
 3766                                     ***** BEGIN-POOL *****
 3767 00000766 0000                       ALIGNMENT CODE
 3768 00000768 00000000                   DATA FOR SOURCE-LINE 1017
 3769 0000076C 00000000                   DATA FOR SOURCE-LINE 1018
 3770 00000770 00000000                   DATA FOR SOURCE-LINE 1019
 3771 00000774 00000000                   DATA FOR SOURCE-LINE 1020
 3772 00000778 00000000                   DATA FOR SOURCE-LINE 1022
 3773                                     ***** END-POOL *****
 3774 0000077C                   1032             .ALIGN  4
 3775 0000077C                   1033     _LTL_CHG:                                       ; 01010001B     51
 3776                            1034             SUB_START
 3777 0000077C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3778                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3779                            1035     
 3780 0000077E D005              1036             MOV.L   #(_LTL_CODE_END - _LTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3781 00000780 D305              1037             MOV.L   #_LTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3782 00000782 D206              1038             MOV.L   #(LTL_ADR - _LTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3783 00000784 D506              1039             MOV.L   #(LTL_OFS - LTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3784                            1040     
 3785 00000786 D107              1041             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3786 00000788 410B              1042             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3787 0000078A 0009              1043             NOP
 3788                            1044     
 3789                            1045             SUB_END
 3790                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3791 0000078C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3792                            1046             M_RTS
 3793 0000078E 000B                   M           RTS                             ;RTSの後ろの
 3794 00000790 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3795                            1047     
 3796                            1048     ;       ***********************************
 3797                            1049     ;       *****   LEW CODE CHANGE ROUTINE ***
 3798                            1050     ;       ***********************************
 3799                                     ***** BEGIN-POOL *****
 3800 00000792 0000                       ALIGNMENT CODE
 3801 00000794 00000000                   DATA FOR SOURCE-LINE 1036
 3802 00000798 00000000                   DATA FOR SOURCE-LINE 1037
 3803 0000079C 00000000                   DATA FOR SOURCE-LINE 1038
 3804 000007A0 00000000                   DATA FOR SOURCE-LINE 1039
 3805 000007A4 00000000                   DATA FOR SOURCE-LINE 1041
 3806                                     ***** END-POOL *****
 3807 000007A8                   1051             .ALIGN  4
 3808 000007A8                   1052     _LEW_CHG:                                       ; 01010100B     54
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    29
PROGRAM NAME =

 3809                            1053             SUB_START
 3810 000007A8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3811                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3812                            1054     
 3813 000007AA D005              1055             MOV.L   #(_LEW_CODE_END - _LEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3814 000007AC D305              1056             MOV.L   #_LEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3815 000007AE D206              1057             MOV.L   #(LEW_ADR - _LEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3816 000007B0 D506              1058             MOV.L   #(LEW_OFS - LEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3817                            1059     
 3818 000007B2 D107              1060             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3819 000007B4 410B              1061             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3820 000007B6 0009              1062             NOP
 3821                            1063     
 3822                            1064             SUB_END
 3823                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3824 000007B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3825                            1065             M_RTS
 3826 000007BA 000B                   M           RTS                             ;RTSの後ろの
 3827 000007BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3828                            1066     
 3829                            1067     ;       ***********************************
 3830                            1068     ;       *****   LTL CODE CHANGE ROUTINE ***
 3831                            1069     ;       ***********************************
 3832                                     ***** BEGIN-POOL *****
 3833 000007BE 0000                       ALIGNMENT CODE
 3834 000007C0 00000000                   DATA FOR SOURCE-LINE 1055
 3835 000007C4 00000000                   DATA FOR SOURCE-LINE 1056
 3836 000007C8 00000000                   DATA FOR SOURCE-LINE 1057
 3837 000007CC 00000000                   DATA FOR SOURCE-LINE 1058
 3838 000007D0 00000000                   DATA FOR SOURCE-LINE 1060
 3839                                     ***** END-POOL *****
 3840 000007D4                   1070             .ALIGN  4
 3841 000007D4                   1071     _LEL_CHG:                                       ; 01010101B     55
 3842                            1072             SUB_START
 3843 000007D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3844                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3845                            1073     
 3846 000007D6 D005              1074             MOV.L   #(_LEL_CODE_END - _LEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3847 000007D8 D305              1075             MOV.L   #_LEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3848 000007DA D206              1076             MOV.L   #(LEL_ADR - _LEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3849 000007DC D506              1077             MOV.L   #(LEL_OFS - LEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3850                            1078     
 3851 000007DE D107              1079             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3852 000007E0 410B              1080             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3853 000007E2 0009              1081             NOP
 3854                            1082     
 3855                            1083             SUB_END
 3856                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3857 000007E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3858                            1084             M_RTS
 3859 000007E6 000B                   M           RTS                             ;RTSの後ろの
 3860 000007E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3861                            1085     
 3862                            1086     ;       ************************************
 3863                            1087     ;       *****   ADDW CODE CHANGE ROUTINE ***
 3864                            1088     ;       ************************************
 3865                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    30
PROGRAM NAME =

 3866 000007EA 0000                       ALIGNMENT CODE
 3867 000007EC 00000000                   DATA FOR SOURCE-LINE 1074
 3868 000007F0 00000000                   DATA FOR SOURCE-LINE 1075
 3869 000007F4 00000000                   DATA FOR SOURCE-LINE 1076
 3870 000007F8 00000000                   DATA FOR SOURCE-LINE 1077
 3871 000007FC 00000000                   DATA FOR SOURCE-LINE 1079
 3872                                     ***** END-POOL *****
 3873 00000800                   1089             .ALIGN  4
 3874 00000800                   1090     _ADDW_CHG:                                              ; 01011000B     58
 3875                            1091             SUB_START
 3876 00000800 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3877                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3878                            1092     
 3879 00000802 D005              1093             MOV.L   #(_ADDW_CODE_END - _ADDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3880 00000804 D305              1094             MOV.L   #_ADDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3881 00000806 D206              1095             MOV.L   #(ADDW_ADR - _ADDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3882 00000808 D506              1096             MOV.L   #(ADDW_OFS - ADDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3883                            1097     
 3884 0000080A D107              1098             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3885 0000080C 410B              1099             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3886 0000080E 0009              1100             NOP
 3887                            1101     
 3888                            1102             SUB_END
 3889                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3890 00000810 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3891                            1103             M_RTS
 3892 00000812 000B                   M           RTS                             ;RTSの後ろの
 3893 00000814 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3894                            1104     
 3895                            1105     ;       ************************************
 3896                            1106     ;       *****   ADDL CODE CHANGE ROUTINE ***
 3897                            1107     ;       ************************************
 3898                                     ***** BEGIN-POOL *****
 3899 00000816 0000                       ALIGNMENT CODE
 3900 00000818 00000000                   DATA FOR SOURCE-LINE 1093
 3901 0000081C 00000000                   DATA FOR SOURCE-LINE 1094
 3902 00000820 00000000                   DATA FOR SOURCE-LINE 1095
 3903 00000824 00000000                   DATA FOR SOURCE-LINE 1096
 3904 00000828 00000000                   DATA FOR SOURCE-LINE 1098
 3905                                     ***** END-POOL *****
 3906 0000082C                   1108             .ALIGN  4
 3907 0000082C                   1109     _ADDL_CHG:                                              ; 01011001B     59
 3908                            1110             SUB_START
 3909 0000082C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3910                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3911                            1111     
 3912 0000082E D005              1112             MOV.L   #(_ADDL_CODE_END - _ADDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3913 00000830 D305              1113             MOV.L   #_ADDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3914 00000832 D206              1114             MOV.L   #(ADDL_ADR - _ADDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3915 00000834 D506              1115             MOV.L   #(ADDL_OFS - ADDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3916                            1116     
 3917 00000836 D107              1117             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3918 00000838 410B              1118             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3919 0000083A 0009              1119             NOP
 3920                            1120     
 3921                            1121             SUB_END
 3922                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    31
PROGRAM NAME =

 3923 0000083C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3924                            1122             M_RTS
 3925 0000083E 000B                   M           RTS                             ;RTSの後ろの
 3926 00000840 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3927                            1123     
 3928                            1124     ;       ************************************
 3929                            1125     ;       *****   SUBW CODE CHANGE ROUTINE ***
 3930                            1126     ;       ************************************
 3931                                     ***** BEGIN-POOL *****
 3932 00000842 0000                       ALIGNMENT CODE
 3933 00000844 00000000                   DATA FOR SOURCE-LINE 1112
 3934 00000848 00000000                   DATA FOR SOURCE-LINE 1113
 3935 0000084C 00000000                   DATA FOR SOURCE-LINE 1114
 3936 00000850 00000000                   DATA FOR SOURCE-LINE 1115
 3937 00000854 00000000                   DATA FOR SOURCE-LINE 1117
 3938                                     ***** END-POOL *****
 3939 00000858                   1127             .ALIGN  4
 3940 00000858                   1128     _SUBW_CHG:                                              ; 01011100B     5C
 3941                            1129             SUB_START
 3942 00000858 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3943                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3944                            1130     
 3945 0000085A D005              1131             MOV.L   #(_SUBW_CODE_END - _SUBW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3946 0000085C D305              1132             MOV.L   #_SUBW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3947 0000085E D206              1133             MOV.L   #(SUBW_ADR - _SUBW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3948 00000860 D506              1134             MOV.L   #(SUBW_OFS - SUBW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3949                            1135     
 3950 00000862 D107              1136             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3951 00000864 410B              1137             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3952 00000866 0009              1138             NOP
 3953                            1139     
 3954                            1140             SUB_END
 3955                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3956 00000868 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3957                            1141             M_RTS
 3958 0000086A 000B                   M           RTS                             ;RTSの後ろの
 3959 0000086C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3960                            1142     
 3961                            1143     ;       ************************************
 3962                            1144     ;       *****   SUBL CODE CHANGE ROUTINE ***
 3963                            1145     ;       ************************************
 3964                                     ***** BEGIN-POOL *****
 3965 0000086E 0000                       ALIGNMENT CODE
 3966 00000870 00000000                   DATA FOR SOURCE-LINE 1131
 3967 00000874 00000000                   DATA FOR SOURCE-LINE 1132
 3968 00000878 00000000                   DATA FOR SOURCE-LINE 1133
 3969 0000087C 00000000                   DATA FOR SOURCE-LINE 1134
 3970 00000880 00000000                   DATA FOR SOURCE-LINE 1136
 3971                                     ***** END-POOL *****
 3972 00000884                   1146             .ALIGN  4
 3973 00000884                   1147     _SUBL_CHG:                                              ; 01011101B     5D
 3974                            1148             SUB_START
 3975 00000884 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3976                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3977                            1149     
 3978 00000886 D005              1150             MOV.L   #(_SUBL_CODE_END - _SUBL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3979 00000888 D305              1151             MOV.L   #_SUBL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    32
PROGRAM NAME =

 3980 0000088A D206              1152             MOV.L   #(SUBL_ADR - _SUBL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3981 0000088C D506              1153             MOV.L   #(SUBL_OFS - SUBL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3982                            1154     
 3983 0000088E D107              1155             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3984 00000890 410B              1156             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3985 00000892 0009              1157             NOP
 3986                            1158     
 3987                            1159             SUB_END
 3988                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3989 00000894 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3990                            1160             M_RTS
 3991 00000896 000B                   M           RTS                             ;RTSの後ろの
 3992 00000898 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3993                            1161     
 3994                            1162     ;       ************************************
 3995                            1163     ;       *****   ANDW CODE CHANGE ROUTINE ***
 3996                            1164     ;       ************************************
 3997                                     ***** BEGIN-POOL *****
 3998 0000089A 0000                       ALIGNMENT CODE
 3999 0000089C 00000000                   DATA FOR SOURCE-LINE 1150
 4000 000008A0 00000000                   DATA FOR SOURCE-LINE 1151
 4001 000008A4 00000000                   DATA FOR SOURCE-LINE 1152
 4002 000008A8 00000000                   DATA FOR SOURCE-LINE 1153
 4003 000008AC 00000000                   DATA FOR SOURCE-LINE 1155
 4004                                     ***** END-POOL *****
 4005 000008B0                   1165             .ALIGN  4
 4006 000008B0                   1166     _ANDW_CHG:                                              ; 01100000B     60
 4007                            1167             SUB_START
 4008 000008B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4009                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4010                            1168     
 4011 000008B2 D005              1169             MOV.L   #(_ANDW_CODE_END - _ANDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4012 000008B4 D305              1170             MOV.L   #_ANDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4013 000008B6 D206              1171             MOV.L   #(ANDW_ADR - _ANDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4014 000008B8 D506              1172             MOV.L   #(ANDW_OFS - ANDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4015                            1173     
 4016 000008BA D107              1174             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4017 000008BC 410B              1175             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4018 000008BE 0009              1176             NOP
 4019                            1177     
 4020                            1178             SUB_END
 4021                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4022 000008C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4023                            1179             M_RTS
 4024 000008C2 000B                   M           RTS                             ;RTSの後ろの
 4025 000008C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4026                            1180     
 4027                            1181     ;       ************************************
 4028                            1182     ;       *****   ANDL CODE CHANGE ROUTINE ***
 4029                            1183     ;       ************************************
 4030                                     ***** BEGIN-POOL *****
 4031 000008C6 0000                       ALIGNMENT CODE
 4032 000008C8 00000000                   DATA FOR SOURCE-LINE 1169
 4033 000008CC 00000000                   DATA FOR SOURCE-LINE 1170
 4034 000008D0 00000000                   DATA FOR SOURCE-LINE 1171
 4035 000008D4 00000000                   DATA FOR SOURCE-LINE 1172
 4036 000008D8 00000000                   DATA FOR SOURCE-LINE 1174
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    33
PROGRAM NAME =

 4037                                     ***** END-POOL *****
 4038 000008DC                   1184             .ALIGN  4
 4039 000008DC                   1185     _ANDL_CHG:                                              ; 01100000B     61
 4040                            1186             SUB_START
 4041 000008DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4042                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4043                            1187     
 4044 000008DE D005              1188             MOV.L   #(_ANDL_CODE_END - _ANDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4045 000008E0 D305              1189             MOV.L   #_ANDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4046 000008E2 D206              1190             MOV.L   #(ANDL_ADR - _ANDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4047 000008E4 D506              1191             MOV.L   #(ANDL_OFS - ANDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4048                            1192     
 4049 000008E6 D107              1193             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4050 000008E8 410B              1194             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4051 000008EA 0009              1195             NOP
 4052                            1196     
 4053                            1197             SUB_END
 4054                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4055 000008EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4056                            1198             M_RTS
 4057 000008EE 000B                   M           RTS                             ;RTSの後ろの
 4058 000008F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4059                            1199     
 4060                            1200     ;       ***********************************
 4061                            1201     ;       *****   ORW CODE CHANGE ROUTINE ***
 4062                            1202     ;       ***********************************
 4063                                     ***** BEGIN-POOL *****
 4064 000008F2 0000                       ALIGNMENT CODE
 4065 000008F4 00000000                   DATA FOR SOURCE-LINE 1188
 4066 000008F8 00000000                   DATA FOR SOURCE-LINE 1189
 4067 000008FC 00000000                   DATA FOR SOURCE-LINE 1190
 4068 00000900 00000000                   DATA FOR SOURCE-LINE 1191
 4069 00000904 00000000                   DATA FOR SOURCE-LINE 1193
 4070                                     ***** END-POOL *****
 4071 00000908                   1203             .ALIGN  4
 4072 00000908                   1204     _ORW_CHG:                                       ; 01100100B     64
 4073                            1205             SUB_START
 4074 00000908 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4075                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4076                            1206     
 4077 0000090A D005              1207             MOV.L   #(_ORW_CODE_END - _ORW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4078 0000090C D305              1208             MOV.L   #_ORW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4079 0000090E D206              1209             MOV.L   #(ORW_ADR - _ORW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4080 00000910 D506              1210             MOV.L   #(ORW_OFS - ORW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4081                            1211     
 4082 00000912 D107              1212             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4083 00000914 410B              1213             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4084 00000916 0009              1214             NOP
 4085                            1215     
 4086                            1216             SUB_END
 4087                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4088 00000918 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4089                            1217             M_RTS
 4090 0000091A 000B                   M           RTS                             ;RTSの後ろの
 4091 0000091C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4092                            1218     
 4093                            1219     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    34
PROGRAM NAME =

 4094                            1220     ;       *****   ORL CODE CHANGE ROUTINE ***
 4095                            1221     ;       ***********************************
 4096                                     ***** BEGIN-POOL *****
 4097 0000091E 0000                       ALIGNMENT CODE
 4098 00000920 00000000                   DATA FOR SOURCE-LINE 1207
 4099 00000924 00000000                   DATA FOR SOURCE-LINE 1208
 4100 00000928 00000000                   DATA FOR SOURCE-LINE 1209
 4101 0000092C 00000000                   DATA FOR SOURCE-LINE 1210
 4102 00000930 00000000                   DATA FOR SOURCE-LINE 1212
 4103                                     ***** END-POOL *****
 4104 00000934                   1222             .ALIGN  4
 4105 00000934                   1223     _ORL_CHG:                                       ; 01100101B     65
 4106                            1224             SUB_START
 4107 00000934 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4108                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4109                            1225     
 4110 00000936 D005              1226             MOV.L   #(_ORL_CODE_END - _ORL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4111 00000938 D305              1227             MOV.L   #_ORL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4112 0000093A D206              1228             MOV.L   #(ORL_ADR - _ORL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4113 0000093C D506              1229             MOV.L   #(ORL_OFS - ORL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4114                            1230     
 4115 0000093E D107              1231             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4116 00000940 410B              1232             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4117 00000942 0009              1233             NOP
 4118                            1234     
 4119                            1235             SUB_END
 4120                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4121 00000944 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4122                            1236             M_RTS
 4123 00000946 000B                   M           RTS                             ;RTSの後ろの
 4124 00000948 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4125                            1237     
 4126                            1238     ;       ************************************
 4127                            1239     ;       *****   XORW CODE CHANGE ROUTINE ***
 4128                            1240     ;       ************************************
 4129                                     ***** BEGIN-POOL *****
 4130 0000094A 0000                       ALIGNMENT CODE
 4131 0000094C 00000000                   DATA FOR SOURCE-LINE 1226
 4132 00000950 00000000                   DATA FOR SOURCE-LINE 1227
 4133 00000954 00000000                   DATA FOR SOURCE-LINE 1228
 4134 00000958 00000000                   DATA FOR SOURCE-LINE 1229
 4135 0000095C 00000000                   DATA FOR SOURCE-LINE 1231
 4136                                     ***** END-POOL *****
 4137 00000960                   1241             .ALIGN  4
 4138 00000960                   1242     _XORW_CHG:                                              ; 01101000B     68
 4139                            1243             SUB_START
 4140 00000960 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4141                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4142                            1244     
 4143 00000962 D005              1245             MOV.L   #(_XORW_CODE_END - _XORW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4144 00000964 D305              1246             MOV.L   #_XORW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4145 00000966 D206              1247             MOV.L   #(XORW_ADR - _XORW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4146 00000968 D506              1248             MOV.L   #(XORW_OFS - XORW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4147                            1249     
 4148 0000096A D107              1250             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4149 0000096C 410B              1251             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4150 0000096E 0009              1252             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    35
PROGRAM NAME =

 4151                            1253     
 4152                            1254             SUB_END
 4153                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4154 00000970 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4155                            1255             M_RTS
 4156 00000972 000B                   M           RTS                             ;RTSの後ろの
 4157 00000974 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4158                            1256     
 4159                            1257     ;       ************************************
 4160                            1258     ;       *****   XORL CODE CHANGE ROUTINE ***
 4161                            1259     ;       ************************************
 4162                                     ***** BEGIN-POOL *****
 4163 00000976 0000                       ALIGNMENT CODE
 4164 00000978 00000000                   DATA FOR SOURCE-LINE 1245
 4165 0000097C 00000000                   DATA FOR SOURCE-LINE 1246
 4166 00000980 00000000                   DATA FOR SOURCE-LINE 1247
 4167 00000984 00000000                   DATA FOR SOURCE-LINE 1248
 4168 00000988 00000000                   DATA FOR SOURCE-LINE 1250
 4169                                     ***** END-POOL *****
 4170 0000098C                   1260             .ALIGN  4
 4171 0000098C                   1261     _XORL_CHG:                                              ; 01101001B     69
 4172                            1262             SUB_START
 4173 0000098C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4174                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4175                            1263     
 4176 0000098E D005              1264             MOV.L   #(_XORL_CODE_END - _XORL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4177 00000990 D305              1265             MOV.L   #_XORL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4178 00000992 D206              1266             MOV.L   #(XORL_ADR - _XORL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4179 00000994 D506              1267             MOV.L   #(XORL_OFS - XORL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4180                            1268     
 4181 00000996 D107              1269             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4182 00000998 410B              1270             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4183 0000099A 0009              1271             NOP
 4184                            1272     
 4185                            1273             SUB_END
 4186                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4187 0000099C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4188                            1274             M_RTS
 4189 0000099E 000B                   M           RTS                             ;RTSの後ろの
 4190 000009A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4191                            1275     
 4192                            1276     ;       ***************************************************
 4193                            1277     ;       ***     SEQ DATA CHANGE1 ROUTINE                ***
 4194                            1278     ;       ***************************************************
 4195                                     ***** BEGIN-POOL *****
 4196 000009A2 0000                       ALIGNMENT CODE
 4197 000009A4 00000000                   DATA FOR SOURCE-LINE 1264
 4198 000009A8 00000000                   DATA FOR SOURCE-LINE 1265
 4199 000009AC 00000000                   DATA FOR SOURCE-LINE 1266
 4200 000009B0 00000000                   DATA FOR SOURCE-LINE 1267
 4201 000009B4 00000000                   DATA FOR SOURCE-LINE 1269
 4202                                     ***** END-POOL *****
 4203 000009B8                   1279             .ALIGN  4
 4204 000009B8                   1280     _SEQ_DATA_CHG1_2:
 4205                            1281             SUB_START
 4206 000009B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4207                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    36
PROGRAM NAME =

 4208                            1282     
 4209                            1283     ;       ************************
 4210                            1284     ;       *** MEM CODE処理追加 ***
 4211                            1285     ;       ************************
 4212 000009BA D113              1286             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 4213 000009BC 4B08              1287             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 4214 000009BE 31BC              1288             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4215 000009C0 6912              1289             MOV.L   @R1,R9                          ;
 4216 000009C2 4800              1290             SHLL    R8                              ; MEM ADR * 2
 4217 000009C4 389C              1291             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 4218                            1292     
 4219                            1293     ;       ****************************
 4220                            1294     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 4221                            1295     ;       ****************************
 4222 000009C6 D111              1296             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 4223 000009C8 31BC              1297             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4224 000009CA 6B12              1298             MOV.L   @R1,R11                         ;
 4225 000009CC 39BC              1299             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 4226 000009CE 3893              1300             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 4227 000009D0 8924              1301             BT      _CHG1_C80                       ; R8 >= R9 JUMP
 4228                            1302     
 4229 000009D2 6983              1303             MOV.L   R8,R9                           ;
 4230 000009D4 6888              1304             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4231 000009D6 688C              1305             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4232 000009D8 699C              1306             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4233                            1307     
 4234 000009DA D10D              1308             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4235 000009DC 3813              1309             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4236 000009DE 891D              1310             BT      _CHG1_C80                       ; IF ADR >= 127 THEN JUMP
 4237                            1311     
 4238 000009E0 64D3              1312             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4239                            1313     
 4240                            1314             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4241 000009E2 D10C                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4242 000009E4 410B                   M           JSR     @R1                     ;
 4243 000009E6 0009                   M           NOP                                     ;
 4244                            1315                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4245                            1316     ;       *** ADR SET ***
 4246 000009E8 342C              1317             ADD     R2,R4                           ;
 4247 000009EA 6141              1318             MOV.W   @R4,R1                          ;
 4248 000009EC D00A              1319             MOV.L   #H'FF00,R0                      ;
 4249 000009EE 2109              1320             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4250                            1321     ;       SHLL    R8                              ; ADR * 2
 4251 000009F0 218B              1322             OR      R8,R1                           ;
 4252 000009F2 2411              1323             MOV.W   R1,@R4                          ; RAM ADR SET
 4253                            1324     
 4254                            1325     ;       *** OFFSET SET ***
 4255 000009F4 345C              1326             ADD     R5,R4                           ;
 4256 000009F6 6141              1327             MOV.W   @R4,R1                          ;
 4257 000009F8 2109              1328             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4258                            1329     ;       SHLL    R9                              ; OFFSET * 2
 4259 000009FA 219B              1330             OR      R9,R1                           ;
 4260 000009FC 2411              1331             MOV.W   R1,@R4                          ; RAM ADR SET
 4261                            1332     
 4262 000009FE 9001              1333             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4263                            1334             M_BRA   _SEQ_DATA_CHG1_EX               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    37
PROGRAM NAME =

 4264 00000A00 A00D                   M           BRA     _SEQ_DATA_CHG1_EX
 4265 00000A02 0009                   M           NOP
 4266                            1335     ;
 4267                                     ***** BEGIN-POOL *****
 4268 00000A04 0000                       DATA FOR SOURCE-LINE 1333
 4269 00000A06 0000                       ALIGNMENT CODE
 4270 00000A08 00000000                   DATA FOR SOURCE-LINE 1286
 4271 00000A0C 00000000                   DATA FOR SOURCE-LINE 1296
 4272 00000A10 00000C00                   DATA FOR SOURCE-LINE 1308
 4273 00000A14 00000000                   DATA FOR SOURCE-LINE 1314
 4274 00000A18 0000FF00                   DATA FOR SOURCE-LINE 1319
 4275                                     ***** END-POOL *****
 4276 00000A1C                   1336     _CHG1_C80:
 4277 00000A1C 9002              1337             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4278                            1338     
 4279 00000A1E                   1339     _SEQ_DATA_CHG1_EX:
 4280                            1340             SUB_END
 4281                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4282 00000A1E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4283                            1341             M_RTS                           ; NORMAL END
 4284 00000A20 000B                   M           RTS                             ;RTSの後ろの
 4285 00000A22 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4286                            1342     
 4287                            1343     ;       ************************************
 4288                            1344     ;       *****   DSETWI CODE CHANGE ROUTINE ***
 4289                            1345     ;       ************************************
 4290                                     ***** BEGIN-POOL *****
 4291 00000A24 FF00                       DATA FOR SOURCE-LINE 1337
 4292                                     ***** END-POOL *****
 4293 00000A28                   1346             .ALIGN  4
 4294 00000A28                   1347     _DSETWI_CHG:                                            ; 00011010B     1A
 4295                            1348             SUB_START
 4296 00000A28 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4297                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4298                            1349     
 4299 00000A2A D005              1350             MOV.L   #(_DSETWI_CODE_END - _DSETWI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4300 00000A2C D305              1351             MOV.L   #_DSETWI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4301 00000A2E D206              1352             MOV.L   #(DSETWI_DT_LH - _DSETWI_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4302 00000A30 D506              1353             MOV.L   #(DSETWI_DT_LL - DSETWI_DT_LH),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4303                            1354     
 4304 00000A32 D107              1355             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4305 00000A34 410B              1356             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4306 00000A36 0009              1357             NOP
 4307                            1358     
 4308                            1359             SUB_END
 4309                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4310 00000A38 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4311                            1360             M_RTS
 4312 00000A3A 000B                   M           RTS                             ;RTSの後ろの
 4313 00000A3C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4314                            1361     
 4315                            1362     ;       ************************************
 4316                            1363     ;       *****   EQWI CODE CHANGE ROUTINE ***
 4317                            1364     ;       ************************************
 4318                                     ***** BEGIN-POOL *****
 4319 00000A3E 0000                       ALIGNMENT CODE
 4320 00000A40 00000000                   DATA FOR SOURCE-LINE 1350
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    38
PROGRAM NAME =

 4321 00000A44 00000000                   DATA FOR SOURCE-LINE 1351
 4322 00000A48 00000000                   DATA FOR SOURCE-LINE 1352
 4323 00000A4C 00000000                   DATA FOR SOURCE-LINE 1353
 4324 00000A50 00000000                   DATA FOR SOURCE-LINE 1355
 4325                                     ***** END-POOL *****
 4326 00000A54                   1365             .ALIGN  4
 4327 00000A54                   1366     _EQWI_CHG:                                              ; 01000010B     42
 4328                            1367             SUB_START
 4329 00000A54 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4330                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4331                            1368     
 4332 00000A56 D005              1369             MOV.L   #(_EQWI_CODE_END - _EQWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4333 00000A58 D305              1370             MOV.L   #_EQWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4334 00000A5A D206              1371             MOV.L   #(EQWI_DT_LH - _EQWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4335 00000A5C D506              1372             MOV.L   #(EQWI_DT_LL - EQWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4336                            1373     
 4337 00000A5E D107              1374             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4338 00000A60 410B              1375             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4339 00000A62 0009              1376             NOP
 4340                            1377     
 4341                            1378             SUB_END
 4342                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4343 00000A64 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4344                            1379             M_RTS
 4345 00000A66 000B                   M           RTS                             ;RTSの後ろの
 4346 00000A68 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4347                            1380     
 4348                            1381     ;       ************************************
 4349                            1382     ;       *****   NEWI CODE CHANGE ROUTINE ***
 4350                            1383     ;       ************************************
 4351                                     ***** BEGIN-POOL *****
 4352 00000A6A 0000                       ALIGNMENT CODE
 4353 00000A6C 00000000                   DATA FOR SOURCE-LINE 1369
 4354 00000A70 00000000                   DATA FOR SOURCE-LINE 1370
 4355 00000A74 00000000                   DATA FOR SOURCE-LINE 1371
 4356 00000A78 00000000                   DATA FOR SOURCE-LINE 1372
 4357 00000A7C 00000000                   DATA FOR SOURCE-LINE 1374
 4358                                     ***** END-POOL *****
 4359 00000A80                   1384             .ALIGN  4
 4360 00000A80                   1385     _NEWI_CHG:                                              ; 01000110B     46
 4361                            1386             SUB_START
 4362 00000A80 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4363                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4364                            1387     
 4365 00000A82 D005              1388             MOV.L   #(_NEWI_CODE_END - _NEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4366 00000A84 D305              1389             MOV.L   #_NEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4367 00000A86 D206              1390             MOV.L   #(NEWI_DT_LH - _NEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4368 00000A88 D506              1391             MOV.L   #(NEWI_DT_LL - NEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4369                            1392     
 4370 00000A8A D107              1393             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4371 00000A8C 410B              1394             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4372 00000A8E 0009              1395             NOP
 4373                            1396     
 4374                            1397             SUB_END
 4375                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4376 00000A90 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4377                            1398             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    39
PROGRAM NAME =

 4378 00000A92 000B                   M           RTS                             ;RTSの後ろの
 4379 00000A94 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4380                            1399     
 4381                            1400     ;       ************************************
 4382                            1401     ;       *****   GTWI CODE CHANGE ROUTINE ***
 4383                            1402     ;       ************************************
 4384                                     ***** BEGIN-POOL *****
 4385 00000A96 0000                       ALIGNMENT CODE
 4386 00000A98 00000000                   DATA FOR SOURCE-LINE 1388
 4387 00000A9C 00000000                   DATA FOR SOURCE-LINE 1389
 4388 00000AA0 00000000                   DATA FOR SOURCE-LINE 1390
 4389 00000AA4 00000000                   DATA FOR SOURCE-LINE 1391
 4390 00000AA8 00000000                   DATA FOR SOURCE-LINE 1393
 4391                                     ***** END-POOL *****
 4392 00000AAC                   1403             .ALIGN  4
 4393 00000AAC                   1404     _GTWI_CHG:                                              ; 01001010B     4A
 4394                            1405             SUB_START
 4395 00000AAC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4396                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4397                            1406     
 4398 00000AAE D005              1407             MOV.L   #(_GTWI_CODE_END - _GTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4399 00000AB0 D305              1408             MOV.L   #_GTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4400 00000AB2 D206              1409             MOV.L   #(GTWI_DT_LH - _GTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4401 00000AB4 D506              1410             MOV.L   #(GTWI_DT_LL - GTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4402                            1411     
 4403 00000AB6 D107              1412             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4404 00000AB8 410B              1413             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4405 00000ABA 0009              1414             NOP
 4406                            1415     
 4407                            1416             SUB_END
 4408                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4409 00000ABC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4410                            1417             M_RTS
 4411 00000ABE 000B                   M           RTS                             ;RTSの後ろの
 4412 00000AC0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4413                            1418     
 4414                            1419     ;       ************************************
 4415                            1420     ;       *****   GEWI CODE CHANGE ROUTINE ***
 4416                            1421     ;       ************************************
 4417                                     ***** BEGIN-POOL *****
 4418 00000AC2 0000                       ALIGNMENT CODE
 4419 00000AC4 00000000                   DATA FOR SOURCE-LINE 1407
 4420 00000AC8 00000000                   DATA FOR SOURCE-LINE 1408
 4421 00000ACC 00000000                   DATA FOR SOURCE-LINE 1409
 4422 00000AD0 00000000                   DATA FOR SOURCE-LINE 1410
 4423 00000AD4 00000000                   DATA FOR SOURCE-LINE 1412
 4424                                     ***** END-POOL *****
 4425 00000AD8                   1422             .ALIGN  4
 4426 00000AD8                   1423     _GEWI_CHG:                                              ; 01001110B     4E
 4427                            1424             SUB_START
 4428 00000AD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4429                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4430                            1425     
 4431 00000ADA D005              1426             MOV.L   #(_GEWI_CODE_END - _GEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4432 00000ADC D305              1427             MOV.L   #_GEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4433 00000ADE D206              1428             MOV.L   #(GEWI_DT_LH - _GEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4434 00000AE0 D506              1429             MOV.L   #(GEWI_DT_LL - GEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    40
PROGRAM NAME =

 4435                            1430     
 4436 00000AE2 D107              1431             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4437 00000AE4 410B              1432             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4438 00000AE6 0009              1433             NOP
 4439                            1434     
 4440                            1435             SUB_END
 4441                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4442 00000AE8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4443                            1436             M_RTS
 4444 00000AEA 000B                   M           RTS                             ;RTSの後ろの
 4445 00000AEC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4446                            1437     
 4447                            1438     ;       ************************************
 4448                            1439     ;       *****   LTWI CODE CHANGE ROUTINE ***
 4449                            1440     ;       ************************************
 4450                                     ***** BEGIN-POOL *****
 4451 00000AEE 0000                       ALIGNMENT CODE
 4452 00000AF0 00000000                   DATA FOR SOURCE-LINE 1426
 4453 00000AF4 00000000                   DATA FOR SOURCE-LINE 1427
 4454 00000AF8 00000000                   DATA FOR SOURCE-LINE 1428
 4455 00000AFC 00000000                   DATA FOR SOURCE-LINE 1429
 4456 00000B00 00000000                   DATA FOR SOURCE-LINE 1431
 4457                                     ***** END-POOL *****
 4458 00000B04                   1441             .ALIGN  4
 4459 00000B04                   1442     _LTWI_CHG:                                              ; 01010010B     52
 4460                            1443             SUB_START
 4461 00000B04 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4462                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4463                            1444     
 4464 00000B06 D005              1445             MOV.L   #(_LTWI_CODE_END - _LTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4465 00000B08 D305              1446             MOV.L   #_LTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4466 00000B0A D206              1447             MOV.L   #(LTWI_DT_LH - _LTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4467 00000B0C D506              1448             MOV.L   #(LTWI_DT_LL - LTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4468                            1449     
 4469 00000B0E D107              1450             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4470 00000B10 410B              1451             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4471 00000B12 0009              1452             NOP
 4472                            1453     
 4473                            1454             SUB_END
 4474                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4475 00000B14 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4476                            1455             M_RTS
 4477 00000B16 000B                   M           RTS                             ;RTSの後ろの
 4478 00000B18 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4479                            1456     
 4480                            1457     ;       ************************************
 4481                            1458     ;       *****   LEWI CODE CHANGE ROUTINE ***
 4482                            1459     ;       ************************************
 4483                                     ***** BEGIN-POOL *****
 4484 00000B1A 0000                       ALIGNMENT CODE
 4485 00000B1C 00000000                   DATA FOR SOURCE-LINE 1445
 4486 00000B20 00000000                   DATA FOR SOURCE-LINE 1446
 4487 00000B24 00000000                   DATA FOR SOURCE-LINE 1447
 4488 00000B28 00000000                   DATA FOR SOURCE-LINE 1448
 4489 00000B2C 00000000                   DATA FOR SOURCE-LINE 1450
 4490                                     ***** END-POOL *****
 4491 00000B30                   1460             .ALIGN  4
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    41
PROGRAM NAME =

 4492 00000B30                   1461     _LEWI_CHG:                                              ; 01010110B     56
 4493                            1462             SUB_START
 4494 00000B30 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4495                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4496                            1463     
 4497 00000B32 D005              1464             MOV.L   #(_LEWI_CODE_END - _LEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4498 00000B34 D305              1465             MOV.L   #_LEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4499 00000B36 D206              1466             MOV.L   #(LEWI_DT_LH - _LEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4500 00000B38 D506              1467             MOV.L   #(LEWI_DT_LL - LEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4501                            1468     
 4502 00000B3A D107              1469             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4503 00000B3C 410B              1470             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4504 00000B3E 0009              1471             NOP
 4505                            1472     
 4506                            1473             SUB_END
 4507                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4508 00000B40 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4509                            1474             M_RTS
 4510 00000B42 000B                   M           RTS                             ;RTSの後ろの
 4511 00000B44 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4512                            1475     
 4513                            1476     ;       ************************************
 4514                            1477     ;       *****   ADDWI CODE CHANGE ROUTINE ***
 4515                            1478     ;       ************************************
 4516                                     ***** BEGIN-POOL *****
 4517 00000B46 0000                       ALIGNMENT CODE
 4518 00000B48 00000000                   DATA FOR SOURCE-LINE 1464
 4519 00000B4C 00000000                   DATA FOR SOURCE-LINE 1465
 4520 00000B50 00000000                   DATA FOR SOURCE-LINE 1466
 4521 00000B54 00000000                   DATA FOR SOURCE-LINE 1467
 4522 00000B58 00000000                   DATA FOR SOURCE-LINE 1469
 4523                                     ***** END-POOL *****
 4524 00000B5C                   1479             .ALIGN  4
 4525 00000B5C                   1480     _ADDWI_CHG:                                             ; 01011010B     5A
 4526                            1481             SUB_START
 4527 00000B5C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4528                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4529                            1482     
 4530 00000B5E D005              1483             MOV.L   #(_ADDWI_CODE_END - _ADDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4531 00000B60 D305              1484             MOV.L   #_ADDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4532 00000B62 D206              1485             MOV.L   #(ADDWI_DT_LH - _ADDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4533 00000B64 D506              1486             MOV.L   #(ADDWI_DT_LL - ADDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4534                            1487     
 4535 00000B66 D107              1488             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4536 00000B68 410B              1489             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4537 00000B6A 0009              1490             NOP
 4538                            1491     
 4539                            1492             SUB_END
 4540                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4541 00000B6C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4542                            1493             M_RTS
 4543 00000B6E 000B                   M           RTS                             ;RTSの後ろの
 4544 00000B70 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4545                            1494     
 4546                            1495     ;       ************************************
 4547                            1496     ;       *****   SUBWI CODE CHANGE ROUTINE ***
 4548                            1497     ;       ************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    42
PROGRAM NAME =

 4549                                     ***** BEGIN-POOL *****
 4550 00000B72 0000                       ALIGNMENT CODE
 4551 00000B74 00000000                   DATA FOR SOURCE-LINE 1483
 4552 00000B78 00000000                   DATA FOR SOURCE-LINE 1484
 4553 00000B7C 00000000                   DATA FOR SOURCE-LINE 1485
 4554 00000B80 00000000                   DATA FOR SOURCE-LINE 1486
 4555 00000B84 00000000                   DATA FOR SOURCE-LINE 1488
 4556                                     ***** END-POOL *****
 4557 00000B88                   1498             .ALIGN  4
 4558 00000B88                   1499     _SUBWI_CHG:                                             ; 01011110B     5E
 4559                            1500             SUB_START
 4560 00000B88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4561                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4562                            1501     
 4563 00000B8A D005              1502             MOV.L   #(_SUBWI_CODE_END - _SUBWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4564 00000B8C D305              1503             MOV.L   #_SUBWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4565 00000B8E D206              1504             MOV.L   #(SUBWI_DT_LH - _SUBWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4566 00000B90 D506              1505             MOV.L   #(SUBWI_DT_LL - SUBWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4567                            1506     
 4568 00000B92 D107              1507             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4569 00000B94 410B              1508             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4570 00000B96 0009              1509             NOP
 4571                            1510     
 4572                            1511             SUB_END
 4573                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4574 00000B98 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4575                            1512             M_RTS
 4576 00000B9A 000B                   M           RTS                             ;RTSの後ろの
 4577 00000B9C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4578                            1513     
 4579                            1514     ;       ************************************
 4580                            1515     ;       *****   ANDWI CODE CHANGE ROUTINE ***
 4581                            1516     ;       ************************************
 4582                                     ***** BEGIN-POOL *****
 4583 00000B9E 0000                       ALIGNMENT CODE
 4584 00000BA0 00000000                   DATA FOR SOURCE-LINE 1502
 4585 00000BA4 00000000                   DATA FOR SOURCE-LINE 1503
 4586 00000BA8 00000000                   DATA FOR SOURCE-LINE 1504
 4587 00000BAC 00000000                   DATA FOR SOURCE-LINE 1505
 4588 00000BB0 00000000                   DATA FOR SOURCE-LINE 1507
 4589                                     ***** END-POOL *****
 4590 00000BB4                   1517             .ALIGN  4
 4591 00000BB4                   1518     _ANDWI_CHG:                                             ; 01100010B     62
 4592                            1519             SUB_START
 4593 00000BB4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4594                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4595                            1520     
 4596 00000BB6 D005              1521             MOV.L   #(_ANDWI_CODE_END - _ANDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4597 00000BB8 D305              1522             MOV.L   #_ANDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4598 00000BBA D206              1523             MOV.L   #(ANDWI_DT_LH - _ANDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4599 00000BBC D506              1524             MOV.L   #(ANDWI_DT_LL - ANDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4600                            1525     
 4601 00000BBE D107              1526             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4602 00000BC0 410B              1527             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4603 00000BC2 0009              1528             NOP
 4604                            1529     
 4605                            1530             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    43
PROGRAM NAME =

 4606                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4607 00000BC4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4608                            1531             M_RTS
 4609 00000BC6 000B                   M           RTS                             ;RTSの後ろの
 4610 00000BC8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4611                            1532     
 4612                            1533     ;       ************************************
 4613                            1534     ;       *****   ORWI CODE CHANGE ROUTINE ***
 4614                            1535     ;       ************************************
 4615                                     ***** BEGIN-POOL *****
 4616 00000BCA 0000                       ALIGNMENT CODE
 4617 00000BCC 00000000                   DATA FOR SOURCE-LINE 1521
 4618 00000BD0 00000000                   DATA FOR SOURCE-LINE 1522
 4619 00000BD4 00000000                   DATA FOR SOURCE-LINE 1523
 4620 00000BD8 00000000                   DATA FOR SOURCE-LINE 1524
 4621 00000BDC 00000000                   DATA FOR SOURCE-LINE 1526
 4622                                     ***** END-POOL *****
 4623 00000BE0                   1536             .ALIGN  4
 4624 00000BE0                   1537     _ORWI_CHG:                                              ; 01100110B     66
 4625                            1538             SUB_START
 4626 00000BE0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4627                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4628                            1539     
 4629 00000BE2 D005              1540             MOV.L   #(_ORWI_CODE_END - _ORWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4630 00000BE4 D305              1541             MOV.L   #_ORWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4631 00000BE6 D206              1542             MOV.L   #(ORWI_DT_LH - _ORWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4632 00000BE8 D506              1543             MOV.L   #(ORWI_DT_LL - ORWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4633                            1544     
 4634 00000BEA D107              1545             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4635 00000BEC 410B              1546             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4636 00000BEE 0009              1547             NOP
 4637                            1548     
 4638                            1549             SUB_END
 4639                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4640 00000BF0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4641                            1550             M_RTS
 4642 00000BF2 000B                   M           RTS                             ;RTSの後ろの
 4643 00000BF4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4644                            1551     
 4645                            1552     ;       ************************************
 4646                            1553     ;       *****   XORWI CODE CHANGE ROUTINE ***
 4647                            1554     ;       ************************************
 4648                                     ***** BEGIN-POOL *****
 4649 00000BF6 0000                       ALIGNMENT CODE
 4650 00000BF8 00000000                   DATA FOR SOURCE-LINE 1540
 4651 00000BFC 00000000                   DATA FOR SOURCE-LINE 1541
 4652 00000C00 00000000                   DATA FOR SOURCE-LINE 1542
 4653 00000C04 00000000                   DATA FOR SOURCE-LINE 1543
 4654 00000C08 00000000                   DATA FOR SOURCE-LINE 1545
 4655                                     ***** END-POOL *****
 4656 00000C0C                   1555             .ALIGN  4
 4657 00000C0C                   1556     _XORWI_CHG:                                             ; 01101010B     6A
 4658                            1557             SUB_START
 4659 00000C0C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4660                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4661                            1558     
 4662 00000C0E D005              1559             MOV.L   #(_XORWI_CODE_END - _XORWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    44
PROGRAM NAME =

 4663 00000C10 D305              1560             MOV.L   #_XORWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4664 00000C12 D206              1561             MOV.L   #(XORWI_DT_LH - _XORWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4665 00000C14 D506              1562             MOV.L   #(XORWI_DT_LL - XORWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4666                            1563     
 4667 00000C16 D107              1564             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4668 00000C18 410B              1565             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4669 00000C1A 0009              1566             NOP
 4670                            1567     
 4671                            1568             SUB_END
 4672                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4673 00000C1C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4674                            1569             M_RTS
 4675 00000C1E 000B                   M           RTS                             ;RTSの後ろの
 4676 00000C20 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4677                            1570     
 4678                            1571     ;       ***************************************************
 4679                            1572     ;       ***     SEQ DATA CHANGE2 ROUTINE                ***
 4680                            1573     ;       ***************************************************
 4681                                     ***** BEGIN-POOL *****
 4682 00000C22 0000                       ALIGNMENT CODE
 4683 00000C24 00000000                   DATA FOR SOURCE-LINE 1559
 4684 00000C28 00000000                   DATA FOR SOURCE-LINE 1560
 4685 00000C2C 00000000                   DATA FOR SOURCE-LINE 1561
 4686 00000C30 00000000                   DATA FOR SOURCE-LINE 1562
 4687 00000C34 00000000                   DATA FOR SOURCE-LINE 1564
 4688                                     ***** END-POOL *****
 4689 00000C38                   1574             .ALIGN  4
 4690 00000C38                   1575     _SEQ_DATA_CHG2:
 4691                            1576             SUB_START
 4692 00000C38 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4693                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4694                            1577     
 4695 00000C3A 6983              1578             MOV.L   R8,R9                           ;
 4696 00000C3C 6888              1579             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4697 00000C3E 688C              1580             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4698 00000C40 699C              1581             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4699                            1582     
 4700 00000C42 D10B              1583             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4701 00000C44 3813              1584             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4702 00000C46 8919              1585             BT      _CHG2_C80                       ; IF ADR >= 127 THEN JUMP
 4703                            1586     
 4704 00000C48 64D3              1587             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4705                            1588     
 4706                            1589             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4707 00000C4A D10A                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4708 00000C4C 410B                   M           JSR     @R1                     ;
 4709 00000C4E 0009                   M           NOP                                     ;
 4710                            1590                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4711                            1591     ;       *** ADR SET ***
 4712 00000C50 342C              1592             ADD     R2,R4                           ;
 4713 00000C52 6141              1593             MOV.W   @R4,R1                          ;
 4714 00000C54 D008              1594             MOV.L   #H'FF00,R0                      ;
 4715 00000C56 2109              1595             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4716                            1596     ;       SHLL    R8                              ; ADR * 2
 4717 00000C58 218B              1597             OR      R8,R1                           ;
 4718 00000C5A 2411              1598             MOV.W   R1,@R4                          ; RAM ADR SET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    45
PROGRAM NAME =

 4719                            1599     
 4720                            1600     ;       *** OFFSET SET ***
 4721 00000C5C 345C              1601             ADD     R5,R4                           ;
 4722 00000C5E 6141              1602             MOV.W   @R4,R1                          ;
 4723 00000C60 2109              1603             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4724                            1604     ;       SHLL    R9                              ; OFFSET * 2
 4725 00000C62 219B              1605             OR      R9,R1                           ;
 4726 00000C64 2411              1606             MOV.W   R1,@R4                          ; RAM ADR SET
 4727                            1607     
 4728 00000C66 9001              1608             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4729                            1609             M_BRA   _SEQ_CHG2_EX                    ;
 4730 00000C68 A009                   M           BRA     _SEQ_CHG2_EX
 4731 00000C6A 0009                   M           NOP
 4732                            1610     ;
 4733                                     ***** BEGIN-POOL *****
 4734 00000C6C 0000                       DATA FOR SOURCE-LINE 1608
 4735 00000C6E 0000                       ALIGNMENT CODE
 4736 00000C70 00000C00                   DATA FOR SOURCE-LINE 1583
 4737 00000C74 00000000                   DATA FOR SOURCE-LINE 1589
 4738 00000C78 0000FF00                   DATA FOR SOURCE-LINE 1594
 4739                                     ***** END-POOL *****
 4740 00000C7C                   1611     _CHG2_C80:
 4741 00000C7C 9002              1612             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4742                            1613     
 4743 00000C7E                   1614     _SEQ_CHG2_EX:
 4744                            1615             SUB_END
 4745                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4746 00000C7E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4747                            1616             M_RTS                                   ; NORMAL END
 4748 00000C80 000B                   M           RTS                             ;RTSの後ろの
 4749 00000C82 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4750                            1617     
 4751                            1618     ;       ************************************
 4752                            1619     ;       ***     Read CODE CHANGE ROUTINE ***
 4753                            1620     ;       ************************************
 4754                                     ***** BEGIN-POOL *****
 4755 00000C84 FF00                       DATA FOR SOURCE-LINE 1612
 4756                                     ***** END-POOL *****
 4757 00000C88                   1621             .ALIGN  4
 4758 00000C88                   1622     _LD_CHG:                                        ; 00000010B     2
 4759                            1623             SUB_START
 4760 00000C88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4761                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4762                            1624     
 4763 00000C8A D005              1625             MOV.L   #(_LD_CODE_END - _LD_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4764 00000C8C D305              1626             MOV.L   #_LD_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4765 00000C8E D206              1627             MOV.L   #(LD_ADR - _LD_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4766 00000C90 D506              1628             MOV.L   #(LD_OFS - LD_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4767 00000C92 D607              1629             MOV.L   #(LD_BIT - LD_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4768                            1630     
 4769 00000C94 D107              1631             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4770 00000C96 410B              1632             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4771 00000C98 0009              1633             NOP
 4772                            1634     
 4773                            1635             SUB_END
 4774                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4775 00000C9A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    46
PROGRAM NAME =

 4776                            1636             M_RTS
 4777 00000C9C 000B                   M           RTS                             ;RTSの後ろの
 4778 00000C9E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4779                            1637     
 4780                            1638     ;       **************************************
 4781                            1639     ;       ***   Read Not CODE CHANGE ROUTINE ***
 4782                            1640     ;       **************************************
 4783                                     ***** BEGIN-POOL *****
 4784 00000CA0 00000000                   DATA FOR SOURCE-LINE 1625
 4785 00000CA4 00000000                   DATA FOR SOURCE-LINE 1626
 4786 00000CA8 00000000                   DATA FOR SOURCE-LINE 1627
 4787 00000CAC 00000000                   DATA FOR SOURCE-LINE 1628
 4788 00000CB0 00000000                   DATA FOR SOURCE-LINE 1629
 4789 00000CB4 00000000                   DATA FOR SOURCE-LINE 1631
 4790                                     ***** END-POOL *****
 4791 00000CB8                   1641             .ALIGN  4
 4792 00000CB8                   1642     _LDN_CHG:                                       ; 00000011B     3
 4793                            1643             SUB_START
 4794 00000CB8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4795                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4796                            1644     
 4797 00000CBA D005              1645             MOV.L   #(_LDN_CODE_END - _LDN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4798 00000CBC D305              1646             MOV.L   #_LDN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4799 00000CBE D206              1647             MOV.L   #(LDN_ADR - _LDN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4800 00000CC0 D506              1648             MOV.L   #(LDN_OFS - LDN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4801 00000CC2 D607              1649             MOV.L   #(LDN_BIT - LDN_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4802                            1650     
 4803 00000CC4 D107              1651             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4804 00000CC6 410B              1652             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4805 00000CC8 0009              1653             NOP
 4806                            1654     
 4807                            1655             SUB_END
 4808                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4809 00000CCA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4810                            1656             M_RTS
 4811 00000CCC 000B                   M           RTS                             ;RTSの後ろの
 4812 00000CCE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4813                            1657     
 4814                            1658     ;       ***********************************
 4815                            1659     ;       *****   And CODE CHANGE ROUTINE ***
 4816                            1660     ;       ***********************************
 4817                                     ***** BEGIN-POOL *****
 4818 00000CD0 00000000                   DATA FOR SOURCE-LINE 1645
 4819 00000CD4 00000000                   DATA FOR SOURCE-LINE 1646
 4820 00000CD8 00000000                   DATA FOR SOURCE-LINE 1647
 4821 00000CDC 00000000                   DATA FOR SOURCE-LINE 1648
 4822 00000CE0 00000000                   DATA FOR SOURCE-LINE 1649
 4823 00000CE4 00000000                   DATA FOR SOURCE-LINE 1651
 4824                                     ***** END-POOL *****
 4825 00000CE8                   1661             .ALIGN  4
 4826 00000CE8                   1662     _AND_CHG:                                       ; 00000100B     4
 4827                            1663             SUB_START
 4828 00000CE8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4829                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4830                            1664     
 4831 00000CEA D005              1665             MOV.L   #(_AND_CODE_END - _AND_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4832 00000CEC D305              1666             MOV.L   #_AND_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    47
PROGRAM NAME =

 4833 00000CEE D206              1667             MOV.L   #(AND_ADR - _AND_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4834 00000CF0 D506              1668             MOV.L   #(AND_OFS - AND_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4835 00000CF2 D607              1669             MOV.L   #(AND_BIT - AND_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4836                            1670     
 4837 00000CF4 D107              1671             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4838 00000CF6 410B              1672             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4839 00000CF8 0009              1673             NOP
 4840                            1674     
 4841                            1675             SUB_END
 4842                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4843 00000CFA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4844                            1676             M_RTS
 4845 00000CFC 000B                   M           RTS                             ;RTSの後ろの
 4846 00000CFE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4847                            1677     
 4848                            1678     ;       ***************************************
 4849                            1679     ;       *****   And Not CODE CHANGE ROUTINE ***
 4850                            1680     ;       ***************************************
 4851                                     ***** BEGIN-POOL *****
 4852 00000D00 00000000                   DATA FOR SOURCE-LINE 1665
 4853 00000D04 00000000                   DATA FOR SOURCE-LINE 1666
 4854 00000D08 00000000                   DATA FOR SOURCE-LINE 1667
 4855 00000D0C 00000000                   DATA FOR SOURCE-LINE 1668
 4856 00000D10 00000000                   DATA FOR SOURCE-LINE 1669
 4857 00000D14 00000000                   DATA FOR SOURCE-LINE 1671
 4858                                     ***** END-POOL *****
 4859 00000D18                   1681             .ALIGN  4
 4860 00000D18                   1682     _ANDN_CHG:                                      ; 00000101B     5
 4861                            1683             SUB_START
 4862 00000D18 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4863                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4864                            1684     
 4865 00000D1A D005              1685             MOV.L   #(_ANDN_CODE_END - _ANDN_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4866 00000D1C D305              1686             MOV.L   #_ANDN_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4867 00000D1E D206              1687             MOV.L   #(ANDN_ADR - _ANDN_CODE),R2     ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4868 00000D20 D506              1688             MOV.L   #(ANDN_OFS - ANDN_ADR),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4869 00000D22 D607              1689             MOV.L   #(ANDN_BIT - ANDN_OFS),R6       ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4870                            1690     
 4871 00000D24 D107              1691             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4872 00000D26 410B              1692             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4873 00000D28 0009              1693             NOP
 4874                            1694     
 4875                            1695             SUB_END
 4876                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4877 00000D2A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4878                            1696             M_RTS
 4879 00000D2C 000B                   M           RTS                             ;RTSの後ろの
 4880 00000D2E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4881                            1697     
 4882                            1698     ;       **********************************
 4883                            1699     ;       *****   OR CODE CHANGE ROUTINE ***
 4884                            1700     ;       **********************************
 4885                                     ***** BEGIN-POOL *****
 4886 00000D30 00000000                   DATA FOR SOURCE-LINE 1685
 4887 00000D34 00000000                   DATA FOR SOURCE-LINE 1686
 4888 00000D38 00000000                   DATA FOR SOURCE-LINE 1687
 4889 00000D3C 00000000                   DATA FOR SOURCE-LINE 1688
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    48
PROGRAM NAME =

 4890 00000D40 00000000                   DATA FOR SOURCE-LINE 1689
 4891 00000D44 00000000                   DATA FOR SOURCE-LINE 1691
 4892                                     ***** END-POOL *****
 4893 00000D48                   1701             .ALIGN  4
 4894 00000D48                   1702     _OR_CHG:                                        ; 00000110B     6
 4895                            1703             SUB_START
 4896 00000D48 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4897                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4898                            1704     
 4899 00000D4A D005              1705             MOV.L   #(_OR_CODE_END - _OR_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4900 00000D4C D305              1706             MOV.L   #_OR_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4901 00000D4E D206              1707             MOV.L   #(OR_ADR - _OR_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4902 00000D50 D506              1708             MOV.L   #(OR_OFS - OR_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4903 00000D52 D607              1709             MOV.L   #(OR_BIT - OR_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4904                            1710     
 4905 00000D54 D107              1711             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4906 00000D56 410B              1712             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4907 00000D58 0009              1713             NOP
 4908                            1714     
 4909                            1715             SUB_END
 4910                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4911 00000D5A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4912                            1716             M_RTS
 4913 00000D5C 000B                   M           RTS                             ;RTSの後ろの
 4914 00000D5E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4915                            1717     
 4916                            1718     ;       **************************************
 4917                            1719     ;       *****   Or Not CODE CHANGE ROUTINE ***
 4918                            1720     ;       **************************************
 4919                                     ***** BEGIN-POOL *****
 4920 00000D60 00000000                   DATA FOR SOURCE-LINE 1705
 4921 00000D64 00000000                   DATA FOR SOURCE-LINE 1706
 4922 00000D68 00000000                   DATA FOR SOURCE-LINE 1707
 4923 00000D6C 00000000                   DATA FOR SOURCE-LINE 1708
 4924 00000D70 00000000                   DATA FOR SOURCE-LINE 1709
 4925 00000D74 00000000                   DATA FOR SOURCE-LINE 1711
 4926                                     ***** END-POOL *****
 4927 00000D78                   1721             .ALIGN  4
 4928 00000D78                   1722     _ORN_CHG:                                       ; 00000111B     7
 4929                            1723             SUB_START
 4930 00000D78 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4931                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4932                            1724     
 4933 00000D7A D005              1725             MOV.L   #(_ORN_CODE_END - _ORN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4934 00000D7C D305              1726             MOV.L   #_ORN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4935 00000D7E D206              1727             MOV.L   #(ORN_ADR - _ORN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4936 00000D80 D506              1728             MOV.L   #(ORN_OFS - ORN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4937 00000D82 D607              1729             MOV.L   #(ORN_BIT - ORN_OFS),R6 ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4938                            1730     
 4939 00000D84 D107              1731             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4940 00000D86 410B              1732             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4941 00000D88 0009              1733             NOP
 4942                            1734     
 4943                            1735             SUB_END
 4944                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4945 00000D8A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4946                            1736             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    49
PROGRAM NAME =

 4947 00000D8C 000B                   M           RTS                             ;RTSの後ろの
 4948 00000D8E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4949                            1737     
 4950                            1738     ;       ***********************************
 4951                            1739     ;       *****   PLS CODE CHANGE ROUTINE ***
 4952                            1740     ;       ***********************************
 4953                                     ***** BEGIN-POOL *****
 4954 00000D90 00000000                   DATA FOR SOURCE-LINE 1725
 4955 00000D94 00000000                   DATA FOR SOURCE-LINE 1726
 4956 00000D98 00000000                   DATA FOR SOURCE-LINE 1727
 4957 00000D9C 00000000                   DATA FOR SOURCE-LINE 1728
 4958 00000DA0 00000000                   DATA FOR SOURCE-LINE 1729
 4959 00000DA4 00000000                   DATA FOR SOURCE-LINE 1731
 4960                                     ***** END-POOL *****
 4961 00000DA8                   1741             .ALIGN  4
 4962 00000DA8                   1742     _PLS_CHG:                                       ; 00001000B     8
 4963                            1743             SUB_START
 4964 00000DA8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4965                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4966                            1744     
 4967 00000DAA D005              1745             MOV.L   #(_PLS_CODE_END - _PLS_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4968 00000DAC D305              1746             MOV.L   #_PLS_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4969 00000DAE D206              1747             MOV.L   #(PLS_ADR - _PLS_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4970 00000DB0 D506              1748             MOV.L   #(PLS_OFS - PLS_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4971 00000DB2 D607              1749             MOV.L   #(PLS_BIT - PLS_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4972                            1750     
 4973 00000DB4 D107              1751             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4974 00000DB6 410B              1752             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4975 00000DB8 0009              1753             NOP
 4976                            1754     
 4977                            1755             SUB_END
 4978                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4979 00000DBA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4980                            1756             M_RTS
 4981 00000DBC 000B                   M           RTS                             ;RTSの後ろの
 4982 00000DBE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4983                            1757     
 4984                            1758     ;       ***********************************
 4985                            1759     ;       *****   PLF CODE CHANGE ROUTINE ***
 4986                            1760     ;       ***********************************
 4987                                     ***** BEGIN-POOL *****
 4988 00000DC0 00000000                   DATA FOR SOURCE-LINE 1745
 4989 00000DC4 00000000                   DATA FOR SOURCE-LINE 1746
 4990 00000DC8 00000000                   DATA FOR SOURCE-LINE 1747
 4991 00000DCC 00000000                   DATA FOR SOURCE-LINE 1748
 4992 00000DD0 00000000                   DATA FOR SOURCE-LINE 1749
 4993 00000DD4 00000000                   DATA FOR SOURCE-LINE 1751
 4994                                     ***** END-POOL *****
 4995 00000DD8                   1761             .ALIGN  4
 4996 00000DD8                   1762     _PLF_CHG:                                       ; 00001001B     9
 4997                            1763             SUB_START
 4998 00000DD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4999                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5000                            1764     
 5001 00000DDA D005              1765             MOV.L   #(_PLF_CODE_END - _PLF_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5002 00000DDC D305              1766             MOV.L   #_PLF_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5003 00000DDE D206              1767             MOV.L   #(PLF_ADR - _PLF_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    50
PROGRAM NAME =

 5004 00000DE0 D506              1768             MOV.L   #(PLF_OFS - PLF_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 5005 00000DE2 D607              1769             MOV.L   #(PLF_BIT - PLF_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 5006                            1770     
 5007 00000DE4 D107              1771             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 5008 00000DE6 410B              1772             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 5009 00000DE8 0009              1773             NOP
 5010                            1774     
 5011                            1775             SUB_END
 5012                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5013 00000DEA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5014                            1776             M_RTS
 5015 00000DEC 000B                   M           RTS                             ;RTSの後ろの
 5016 00000DEE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5017                            1777     
 5018                            1778     ;       ***************************************************
 5019                            1779     ;       ***     SEQ DATA CHANGE3 ROUTINE                ***
 5020                            1780     ;       ***************************************************
 5021                                     ***** BEGIN-POOL *****
 5022 00000DF0 00000000                   DATA FOR SOURCE-LINE 1765
 5023 00000DF4 00000000                   DATA FOR SOURCE-LINE 1766
 5024 00000DF8 00000000                   DATA FOR SOURCE-LINE 1767
 5025 00000DFC 00000000                   DATA FOR SOURCE-LINE 1768
 5026 00000E00 00000000                   DATA FOR SOURCE-LINE 1769
 5027 00000E04 00000000                   DATA FOR SOURCE-LINE 1771
 5028                                     ***** END-POOL *****
 5029 00000E08                   1781             .ALIGN  4
 5030 00000E08                   1782     _SEQ_DATA_CHG3:
 5031                            1783             SUB_START
 5032 00000E08 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5033                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5034                            1784     
 5035                            1785     ;       ************************
 5036                            1786     ;       *** MEM CODE処理追加 ***
 5037                            1787     ;       ************************
 5038 00000E0A D11A              1788             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5039 00000E0C 4B08              1789             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5040 00000E0E 31BC              1790             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5041 00000E10 6912              1791             MOV.L   @R1,R9                          ;
 5042 00000E12 4800              1792             SHLL    R8                              ; MEM ADR * 2
 5043 00000E14 389C              1793             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5044                            1794     
 5045                            1795     ;       ************************
 5046                            1796     ;       *** BIT CODE処理追加 ***
 5047                            1797     ;       ************************
 5048 00000E16 D118              1798             MOV.L   #H'0008,R1                      ;
 5049 00000E18 3A13              1799             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5050 00000E1A 8901              1800             BT      _SEQ_RUN_CHG3_BIT_H             ; R10>=R0 JUMP
 5051 00000E1C D117              1801             MOV.L   #H'0001,R1                      ;
 5052 00000E1E 381C              1802             ADD     R1,R8                           ; MEM ADR L + 1
 5053                            1803     
 5054 00000E20                   1804     _SEQ_RUN_CHG3_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5055                            1805     
 5056                            1806     ;       ****************************
 5057                            1807     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5058                            1808     ;       ****************************
 5059 00000E20 D117              1809             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5060 00000E22 31BC              1810             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    51
PROGRAM NAME =

 5061 00000E24 6B12              1811             MOV.L   @R1,R11                         ;
 5062 00000E26 39BC              1812             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5063 00000E28 3893              1813             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5064 00000E2A 8933              1814             BT      _CHG3_C80                       ; R8 >= R9 JUMP
 5065                            1815     
 5066 00000E2C 6983              1816             MOV.L   R8,R9                           ;
 5067 00000E2E 6888              1817             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5068 00000E30 688C              1818             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5069 00000E32 699C              1819             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5070                            1820     
 5071 00000E34 D113              1821             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5072 00000E36 3813              1822             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5073 00000E38 892C              1823             BT      _CHG3_C80                       ; IF ADR >= 127 THEN JUMP
 5074                            1824     
 5075 00000E3A 64D3              1825             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5076                            1826     
 5077                            1827             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5078 00000E3C D112                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5079 00000E3E 410B                   M           JSR     @R1                     ;
 5080 00000E40 0009                   M           NOP                                     ;
 5081                            1828                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5082                            1829     ;       *** ADR SET ***
 5083 00000E42 342C              1830             ADD     R2,R4                           ;
 5084 00000E44 6141              1831             MOV.W   @R4,R1                          ;
 5085 00000E46 D011              1832             MOV.L   #H'FF00,R0                      ;
 5086 00000E48 2109              1833             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5087                            1834     ;       SHLL    R8                              ; ADR * 2
 5088 00000E4A 218B              1835             OR      R8,R1                           ;
 5089 00000E4C 2411              1836             MOV.W   R1,@R4                          ; RAM ADR SET
 5090                            1837     
 5091                            1838     ;       *** OFFSET SET ***
 5092 00000E4E 345C              1839             ADD     R5,R4                           ;
 5093 00000E50 6141              1840             MOV.W   @R4,R1                          ;
 5094 00000E52 2109              1841             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5095                            1842     ;       SHLL    R9                              ; OFFSET * 2
 5096 00000E54 219B              1843             OR      R9,R1                           ;
 5097 00000E56 2411              1844             MOV.W   R1,@R4                          ; RAM ADR SET
 5098                            1845     
 5099                            1846     ;       *** BIT SET ***
 5100 00000E58 346C              1847             ADD     R6,R4                           ;
 5101 00000E5A 6141              1848             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5102 00000E5C D20C              1849             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5103 00000E5E 4A00              1850             SHLL    R10                             ; * 2(word命令のため2倍する)
 5104 00000E60 32AC              1851             ADD     R10,R2                          ;
 5105 00000E62 6A21              1852             MOV.W   @R2,R10                         ; BIT CODE値格納
 5106                            1853     ;;;     MOV.L   #H'FF00,R0                      ;
 5107 00000E64 2109              1854             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5108 00000E66 21AB              1855             OR      R10,R1                          ;
 5109 00000E68 2411              1856             MOV.W   R1,@R4                          ; BIT CODEを書換
 5110                            1857     
 5111 00000E6A 9001              1858             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5112                            1859             M_BRA   _SEQ_CHG3_EX                    ;
 5113 00000E6C A013                   M           BRA     _SEQ_CHG3_EX
 5114 00000E6E 0009                   M           NOP
 5115                            1860     ;
 5116                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    52
PROGRAM NAME =

 5117 00000E70 0000                       DATA FOR SOURCE-LINE 1858
 5118 00000E72 0000                       ALIGNMENT CODE
 5119 00000E74 00000000                   DATA FOR SOURCE-LINE 1788
 5120 00000E78 00000008                   DATA FOR SOURCE-LINE 1798
 5121 00000E7C 00000001                   DATA FOR SOURCE-LINE 1801
 5122 00000E80 00000000                   DATA FOR SOURCE-LINE 1809
 5123 00000E84 00000C00                   DATA FOR SOURCE-LINE 1821
 5124 00000E88 00000000                   DATA FOR SOURCE-LINE 1827
 5125 00000E8C 0000FF00                   DATA FOR SOURCE-LINE 1832
 5126 00000E90 00000000                   DATA FOR SOURCE-LINE 1849
 5127                                     ***** END-POOL *****
 5128 00000E94                   1861     _CHG3_C80:
 5129 00000E94 9002              1862             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5130                            1863     
 5131 00000E96                   1864     _SEQ_CHG3_EX:
 5132                            1865             SUB_END
 5133                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5134 00000E96 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5135                            1866             M_RTS                                   ; NORMAL END
 5136 00000E98 000B                   M           RTS                             ;RTSの後ろの
 5137 00000E9A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5138                            1867     
 5139                            1868     ;       *******************************************
 5140                            1869     ;       *****   BIT STORE CODE CHANGE ROUTINE   ***
 5141                            1870     ;       *******************************************
 5142                                     ***** BEGIN-POOL *****
 5143 00000E9C FF00                       DATA FOR SOURCE-LINE 1862
 5144                                     ***** END-POOL *****
 5145 00000E9E                   1871     _ST_CHG:                                        ; 00001010B     A
 5146                            1872             SUB_START
 5147 00000E9E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5148                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5149                            1873     
 5150                            1874     ;       ************************
 5151                            1875     ;       *** MEM CODE処理追加 ***
 5152                            1876     ;       ************************
 5153 00000EA0 D11E              1877             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5154 00000EA2 4B08              1878             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5155 00000EA4 31BC              1879             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5156 00000EA6 6912              1880             MOV.L   @R1,R9                          ;
 5157 00000EA8 4800              1881             SHLL    R8                              ; MEM ADR * 2
 5158 00000EAA 389C              1882             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5159                            1883     
 5160                            1884     ;       ************************
 5161                            1885     ;       *** BIT CODE処理追加 ***
 5162                            1886     ;       ************************
 5163 00000EAC D11C              1887             MOV.L   #H'0008,R1                      ;
 5164 00000EAE 3A13              1888             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5165 00000EB0 8901              1889             BT      _SEQ_RUN_CHG4_BIT_H             ; R10>=R0 JUMP
 5166 00000EB2 D11C              1890             MOV.L   #H'0001,R1                      ;
 5167 00000EB4 381C              1891             ADD     R1,R8                           ; MEM ADR L + 1
 5168                            1892     
 5169 00000EB6                   1893     _SEQ_RUN_CHG4_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5170                            1894     
 5171                            1895     ;       ****************************
 5172                            1896     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5173                            1897     ;       ****************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    53
PROGRAM NAME =

 5174 00000EB6 D11C              1898             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5175 00000EB8 31BC              1899             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5176 00000EBA 6B12              1900             MOV.L   @R1,R11                         ;
 5177 00000EBC 39BC              1901             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5178 00000EBE 3893              1902             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5179 00000EC0 8940              1903             BT      _CHG4_C80                       ; R8 >= R9 JUMP
 5180                            1904     
 5181 00000EC2 6983              1905             MOV.L   R8,R9                           ;
 5182 00000EC4 6888              1906             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5183 00000EC6 688C              1907             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5184 00000EC8 699C              1908             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5185                            1909     
 5186 00000ECA D118              1910             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5187 00000ECC 3813              1911             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5188 00000ECE 8939              1912             BT      _CHG4_C80                       ; IF ADR >= 127 THEN JUMP
 5189                            1913     
 5190 00000ED0 D017              1914             MOV.L   #(_ST_CODE_END - _ST_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5191 00000ED2 D318              1915             MOV.L   #_ST_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5192 00000ED4 64D3              1916             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5193                            1917     
 5194                            1918             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5195 00000ED6 D118                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5196 00000ED8 410B                   M           JSR     @R1                     ;
 5197 00000EDA 0009                   M           NOP                                     ;
 5198                            1919                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5199                            1920     ;       *** ADR SET ***
 5200 00000EDC 7400              1921             ADD     #(ST_ADR - _ST_CODE),R4         ;
 5201 00000EDE 6141              1922             MOV.W   @R4,R1                          ;
 5202 00000EE0 D016              1923             MOV.L   #H'FF00,R0                      ;
 5203 00000EE2 2109              1924             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5204                            1925     ;       SHLL    R8                              ; ADR * 2
 5205 00000EE4 218B              1926             OR      R8,R1                           ;
 5206 00000EE6 2411              1927             MOV.W   R1,@R4                          ; RAM ADR SET
 5207                            1928     
 5208                            1929     ;       *** OFFSET SET ***
 5209 00000EE8 7400              1930             ADD     #(ST_OFS - ST_ADR),R4           ;
 5210 00000EEA 6141              1931             MOV.W   @R4,R1                          ;
 5211 00000EEC 2109              1932             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5212                            1933     ;       SHLL    R9                              ; OFFSET * 2
 5213 00000EEE 219B              1934             OR      R9,R1                           ;
 5214 00000EF0 2411              1935             MOV.W   R1,@R4                          ; RAM ADR SET
 5215                            1936     
 5216                            1937     ;       *** BIT SET ***
 5217 00000EF2 7400              1938             ADD     #(STCD_SETBIT - ST_OFS),R4      ;
 5218 00000EF4 6141              1939             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5219 00000EF6 D212              1940             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5220 00000EF8 4A00              1941             SHLL    R10                             ; * 2(word命令のため2倍する)
 5221 00000EFA 32AC              1942             ADD     R10,R2                          ;
 5222 00000EFC 6A21              1943             MOV.W   @R2,R10                         ; BIT CODE値格納
 5223                            1944     ;;;     MOV.L   #H'FF00,R0                      ;
 5224 00000EFE 2109              1945             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5225 00000F00 21AB              1946             OR      R10,R1                          ;
 5226 00000F02 2411              1947             MOV.W   R1,@R4                          ; BIT CODEを書換
 5227                            1948     
 5228                            1949     ;       *** BIT CLR ***
 5229 00000F04 7400              1950             ADD     #(STCD_CLRBIT - STCD_SETBIT),R4 ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    54
PROGRAM NAME =

 5230 00000F06 6141              1951             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5231 00000F08 62A7              1952             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5232                            1953     ;;;     MOV.L   #H'FF00,R0                      ;
 5233 00000F0A 2109              1954             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5234 00000F0C 622C              1955             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5235 00000F0E 212B              1956             OR      R2,R1                           ;
 5236 00000F10 2411              1957             MOV.W   R1,@R4                          ; BIT CODEを書換
 5237                            1958     
 5238                            1959     
 5239 00000F12 9001              1960             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5240                            1961             M_BRA   _SEQ_CHG4_EX                    ;
 5241 00000F14 A017                   M           BRA     _SEQ_CHG4_EX
 5242 00000F16 0009                   M           NOP
 5243                            1962     ;
 5244                                     ***** BEGIN-POOL *****
 5245 00000F18 0000                       DATA FOR SOURCE-LINE 1960
 5246 00000F1A 0000                       ALIGNMENT CODE
 5247 00000F1C 00000000                   DATA FOR SOURCE-LINE 1877
 5248 00000F20 00000008                   DATA FOR SOURCE-LINE 1887
 5249 00000F24 00000001                   DATA FOR SOURCE-LINE 1890
 5250 00000F28 00000000                   DATA FOR SOURCE-LINE 1898
 5251 00000F2C 00000C00                   DATA FOR SOURCE-LINE 1910
 5252 00000F30 00000000                   DATA FOR SOURCE-LINE 1914
 5253 00000F34 00000000                   DATA FOR SOURCE-LINE 1915
 5254 00000F38 00000000                   DATA FOR SOURCE-LINE 1918
 5255 00000F3C 0000FF00                   DATA FOR SOURCE-LINE 1923
 5256 00000F40 00000000                   DATA FOR SOURCE-LINE 1940
 5257                                     ***** END-POOL *****
 5258 00000F44                   1963     _CHG4_C80:
 5259 00000F44 9002              1964             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5260                            1965     
 5261 00000F46                   1966     _SEQ_CHG4_EX:
 5262                            1967             SUB_END
 5263                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5264 00000F46 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5265                            1968             M_RTS
 5266 00000F48 000B                   M           RTS                             ;RTSの後ろの
 5267 00000F4A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5268                            1969     
 5269                            1970     ;       ***********************************
 5270                            1971     ;       *****   SET CODE CHANGE ROUTINE ***
 5271                            1972     ;       ***********************************
 5272                                     ***** BEGIN-POOL *****
 5273 00000F4C FF00                       DATA FOR SOURCE-LINE 1964
 5274                                     ***** END-POOL *****
 5275 00000F4E                   1973     _SET_CHG:                                       ; 00001110B     E
 5276                            1974             SUB_START
 5277 00000F4E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5278                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5279                            1975     
 5280                            1976     ;       ************************
 5281                            1977     ;       *** MEM CODE処理追加 ***
 5282                            1978     ;       ************************
 5283 00000F50 D11A              1979             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5284 00000F52 4B08              1980             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5285 00000F54 31BC              1981             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5286 00000F56 6912              1982             MOV.L   @R1,R9                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    55
PROGRAM NAME =

 5287 00000F58 4800              1983             SHLL    R8                              ; MEM ADR * 2
 5288 00000F5A 389C              1984             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5289                            1985     
 5290                            1986     ;       ************************
 5291                            1987     ;       *** BIT CODE処理追加 ***
 5292                            1988     ;       ************************
 5293 00000F5C D118              1989             MOV.L   #H'0008,R1                      ;
 5294 00000F5E 3A13              1990             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5295 00000F60 8901              1991             BT      _SEQ_RUN_CHG5_BIT_H             ; R10>=R0 JUMP
 5296 00000F62 D118              1992             MOV.L   #H'0001,R1                      ;
 5297 00000F64 381C              1993             ADD     R1,R8                           ; MEM ADR L + 1
 5298                            1994     
 5299 00000F66                   1995     _SEQ_RUN_CHG5_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5300                            1996     
 5301                            1997     ;       ****************************
 5302                            1998     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5303                            1999     ;       ****************************
 5304 00000F66 D118              2000             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5305 00000F68 31BC              2001             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5306 00000F6A 6B12              2002             MOV.L   @R1,R11                         ;
 5307 00000F6C 39BC              2003             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5308 00000F6E 3893              2004             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5309 00000F70 8938              2005             BT      _CHG5_C80                       ; R8 >= R9 JUMP
 5310                            2006     
 5311 00000F72 6983              2007             MOV.L   R8,R9                           ;
 5312 00000F74 6888              2008             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5313 00000F76 688C              2009             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5314 00000F78 699C              2010             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5315                            2011     
 5316 00000F7A D114              2012             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5317 00000F7C 3813              2013             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5318 00000F7E 8931              2014             BT      _CHG5_C80                       ; IF ADR >= 127 THEN JUMP
 5319                            2015     
 5320 00000F80 D013              2016             MOV.L   #(_SET_CODE_END - _SET_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5321 00000F82 D314              2017             MOV.L   #_SET_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5322 00000F84 64D3              2018             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5323                            2019     
 5324                            2020             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5325 00000F86 D114                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5326 00000F88 410B                   M           JSR     @R1                     ;
 5327 00000F8A 0009                   M           NOP                                     ;
 5328                            2021                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5329                            2022     ;       *** ADR SET ***
 5330 00000F8C 7400              2023             ADD     #(SET_ADR - _SET_CODE),R4       ;
 5331 00000F8E 6141              2024             MOV.W   @R4,R1                          ;
 5332 00000F90 D012              2025             MOV.L   #H'FF00,R0                      ;
 5333 00000F92 2109              2026             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5334                            2027     ;       SHLL    R8                              ; ADR * 2
 5335 00000F94 218B              2028             OR      R8,R1                           ;
 5336 00000F96 2411              2029             MOV.W   R1,@R4                          ; RAM ADR SET
 5337                            2030     
 5338                            2031     ;       *** OFFSET SET ***
 5339 00000F98 7400              2032             ADD     #(SET_OFS - SET_ADR),R4         ;
 5340 00000F9A 6141              2033             MOV.W   @R4,R1                          ;
 5341 00000F9C 2109              2034             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5342                            2035     ;       SHLL    R9                              ; OFFSET * 2
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    56
PROGRAM NAME =

 5343 00000F9E 219B              2036             OR      R9,R1                           ;
 5344 00000FA0 2411              2037             MOV.W   R1,@R4                          ; RAM ADR SET
 5345                            2038     
 5346                            2039     ;       *** BIT SET ***
 5347 00000FA2 7400              2040             ADD     #(SETCD_SETBIT - SET_OFS),R4    ;
 5348 00000FA4 6141              2041             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5349 00000FA6 D20E              2042             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5350 00000FA8 4A00              2043             SHLL    R10                             ; * 2(word命令のため2倍する)
 5351 00000FAA 32AC              2044             ADD     R10,R2                          ;
 5352 00000FAC 6A21              2045             MOV.W   @R2,R10                         ; BIT CODE値格納
 5353                            2046     ;;;     MOV.L   #H'FF00,R0                      ;
 5354 00000FAE 2109              2047             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5355 00000FB0 21AB              2048             OR      R10,R1                          ;
 5356 00000FB2 2411              2049             MOV.W   R1,@R4                          ; BIT CODEを書換
 5357                            2050     
 5358 00000FB4 9001              2051             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5359                            2052             M_BRA   _SEQ_CHG5_EX                    ;
 5360 00000FB6 A016                   M           BRA     _SEQ_CHG5_EX
 5361 00000FB8 0009                   M           NOP
 5362                            2053     ;
 5363                                     ***** BEGIN-POOL *****
 5364 00000FBA 0000                       DATA FOR SOURCE-LINE 2051
 5365 00000FBC 00000000                   DATA FOR SOURCE-LINE 1979
 5366 00000FC0 00000008                   DATA FOR SOURCE-LINE 1989
 5367 00000FC4 00000001                   DATA FOR SOURCE-LINE 1992
 5368 00000FC8 00000000                   DATA FOR SOURCE-LINE 2000
 5369 00000FCC 00000C00                   DATA FOR SOURCE-LINE 2012
 5370 00000FD0 00000000                   DATA FOR SOURCE-LINE 2016
 5371 00000FD4 00000000                   DATA FOR SOURCE-LINE 2017
 5372 00000FD8 00000000                   DATA FOR SOURCE-LINE 2020
 5373 00000FDC 0000FF00                   DATA FOR SOURCE-LINE 2025
 5374 00000FE0 00000000                   DATA FOR SOURCE-LINE 2042
 5375                                     ***** END-POOL *****
 5376 00000FE4                   2054     _CHG5_C80:
 5377 00000FE4 9002              2055             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5378                            2056     
 5379 00000FE6                   2057     _SEQ_CHG5_EX:
 5380                            2058             SUB_END
 5381                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5382 00000FE6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5383                            2059             M_RTS
 5384 00000FE8 000B                   M           RTS                             ;RTSの後ろの
 5385 00000FEA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5386                            2060     
 5387                            2061     ;       ***********************************
 5388                            2062     ;       *****   RST CODE CHANGE ROUTINE ***
 5389                            2063     ;       ***********************************
 5390                                     ***** BEGIN-POOL *****
 5391 00000FEC FF00                       DATA FOR SOURCE-LINE 2055
 5392                                     ***** END-POOL *****
 5393 00000FEE                   2064     _RST_CHG:                                       ; 00001111B     F
 5394                            2065             SUB_START
 5395 00000FEE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5396                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5397                            2066     
 5398                            2067     ;       ************************
 5399                            2068     ;       *** MEM CODE処理追加 ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    57
PROGRAM NAME =

 5400                            2069     ;       ************************
 5401 00000FF0 D11B              2070             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5402 00000FF2 4B08              2071             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5403 00000FF4 31BC              2072             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5404 00000FF6 6912              2073             MOV.L   @R1,R9                          ;
 5405 00000FF8 4800              2074             SHLL    R8                              ; MEM ADR * 2
 5406 00000FFA 389C              2075             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5407                            2076     
 5408                            2077     ;       ************************
 5409                            2078     ;       *** BIT CODE処理追加 ***
 5410                            2079     ;       ************************
 5411 00000FFC D119              2080             MOV.L   #H'0008,R1                      ;
 5412 00000FFE 3A13              2081             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5413 00001000 8901              2082             BT      _SEQ_RUN_CHG6_BIT_H             ; R10>=R0 JUMP
 5414 00001002 D119              2083             MOV.L   #H'0001,R1                      ;
 5415 00001004 381C              2084             ADD     R1,R8                           ; MEM ADR L + 1
 5416                            2085     
 5417 00001006                   2086     _SEQ_RUN_CHG6_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5418                            2087     
 5419                            2088     ;       ****************************
 5420                            2089     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5421                            2090     ;       ****************************
 5422 00001006 D119              2091             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5423 00001008 31BC              2092             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5424 0000100A 6B12              2093             MOV.L   @R1,R11                         ;
 5425 0000100C 39BC              2094             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5426 0000100E 3893              2095             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5427 00001010 893A              2096             BT      _CHG6_C80                       ; R8 >= R9 JUMP
 5428                            2097     
 5429 00001012 6983              2098             MOV.L   R8,R9                           ;
 5430 00001014 6888              2099             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5431 00001016 688C              2100             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5432 00001018 699C              2101             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5433                            2102     
 5434 0000101A D115              2103             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5435 0000101C 3813              2104             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5436 0000101E 8933              2105             BT      _CHG6_C80                       ; IF ADR >= 127 THEN JUMP
 5437                            2106     
 5438 00001020 D014              2107             MOV.L   #(_RST_CODE_END - _RST_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5439 00001022 D315              2108             MOV.L   #_RST_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5440 00001024 64D3              2109             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5441                            2110     
 5442                            2111             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5443 00001026 D115                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5444 00001028 410B                   M           JSR     @R1                     ;
 5445 0000102A 0009                   M           NOP                                     ;
 5446                            2112                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5447                            2113     ;       *** ADR SET ***
 5448 0000102C 7400              2114             ADD     #(RST_ADR - _RST_CODE),R4       ;
 5449 0000102E 6141              2115             MOV.W   @R4,R1                          ;
 5450 00001030 D013              2116             MOV.L   #H'FF00,R0                      ;
 5451 00001032 2109              2117             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5452                            2118     ;       SHLL    R8                              ; ADR * 2
 5453 00001034 218B              2119             OR      R8,R1                           ;
 5454 00001036 2411              2120             MOV.W   R1,@R4                          ; RAM ADR SET
 5455                            2121     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    58
PROGRAM NAME =

 5456                            2122     ;       *** OFFSET SET ***
 5457 00001038 7400              2123             ADD     #(RST_OFS - RST_ADR),R4         ;
 5458 0000103A 6141              2124             MOV.W   @R4,R1                          ;
 5459 0000103C 2109              2125             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5460                            2126     ;       SHLL    R9                              ; OFFSET * 2
 5461 0000103E 219B              2127             OR      R9,R1                           ;
 5462 00001040 2411              2128             MOV.W   R1,@R4                          ; RAM ADR SET
 5463                            2129     
 5464                            2130     ;       *** BIT CLR ***
 5465 00001042 7400              2131             ADD     #(RSTCD_SETBIT - RST_OFS),R4    ;
 5466 00001044 6141              2132             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5467 00001046 D20F              2133             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5468 00001048 4A00              2134             SHLL    R10                             ; * 2(word命令のため2倍する)
 5469 0000104A 32AC              2135             ADD     R10,R2                          ;
 5470 0000104C 6A21              2136             MOV.W   @R2,R10                         ; BIT CODE値格納
 5471 0000104E 62A7              2137             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5472                            2138     ;;;     MOV.L   #H'FF00,R0                      ;
 5473 00001050 2109              2139             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5474 00001052 622C              2140             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5475 00001054 212B              2141             OR      R2,R1                           ;
 5476 00001056 2411              2142             MOV.W   R1,@R4                          ; BIT CODEを書換
 5477                            2143     
 5478 00001058 9001              2144             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5479                            2145             M_BRA   _SEQ_CHG6_EX                    ;
 5480 0000105A A016                   M           BRA     _SEQ_CHG6_EX
 5481 0000105C 0009                   M           NOP
 5482                            2146     ;
 5483                                     ***** BEGIN-POOL *****
 5484 0000105E 0000                       DATA FOR SOURCE-LINE 2144
 5485 00001060 00000000                   DATA FOR SOURCE-LINE 2070
 5486 00001064 00000008                   DATA FOR SOURCE-LINE 2080
 5487 00001068 00000001                   DATA FOR SOURCE-LINE 2083
 5488 0000106C 00000000                   DATA FOR SOURCE-LINE 2091
 5489 00001070 00000C00                   DATA FOR SOURCE-LINE 2103
 5490 00001074 00000000                   DATA FOR SOURCE-LINE 2107
 5491 00001078 00000000                   DATA FOR SOURCE-LINE 2108
 5492 0000107C 00000000                   DATA FOR SOURCE-LINE 2111
 5493 00001080 0000FF00                   DATA FOR SOURCE-LINE 2116
 5494 00001084 00000000                   DATA FOR SOURCE-LINE 2133
 5495                                     ***** END-POOL *****
 5496 00001088                   2147     _CHG6_C80:
 5497 00001088 9002              2148             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5498                            2149     
 5499 0000108A                   2150     _SEQ_CHG6_EX:
 5500                            2151             SUB_END
 5501                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5502 0000108A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5503                            2152             M_RTS
 5504 0000108C 000B                   M           RTS                             ;RTSの後ろの
 5505 0000108E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5506                            2153     
 5507                            2154     ;       ***********************************
 5508                            2155     ;       *****   WSC CODE CHANGE ROUTINE ***
 5509                            2156     ;       ***********************************
 5510                                     ***** BEGIN-POOL *****
 5511 00001090 FF00                       DATA FOR SOURCE-LINE 2148
 5512                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    59
PROGRAM NAME =

 5513 00001092                   2157     _WSC_CHG:                                       ; 00001100B     C
 5514                            2158             SUB_START
 5515 00001092 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5516                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5517                            2159     
 5518                            2160     ;       ************************
 5519                            2161     ;       *** MEM CODE処理追加 ***
 5520                            2162     ;       ************************
 5521 00001094 D116              2163             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5522 00001096 4B08              2164             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5523 00001098 31BC              2165             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5524 0000109A 6912              2166             MOV.L   @R1,R9                          ;
 5525 0000109C 4800              2167             SHLL    R8                              ; MEM ADR * 2
 5526 0000109E 389C              2168             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5527                            2169     
 5528                            2170     ;       ************************
 5529                            2171     ;       *** BIT CODE処理追加 ***
 5530                            2172     ;       ************************
 5531                            2173     ;;;     MOV.L   #H'0008,R1                      ;
 5532                            2174     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5533                            2175     ;;;     BT      _SEQ_RUN_CHG7_BIT_H             ; R10>=R0 JUMP
 5534                            2176     ;;;     MOV.L   #H'0001,R1                      ;
 5535                            2177     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5536                            2178     
 5537                            2179     ;;;_SEQ_RUN_CHG7_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5538                            2180     
 5539                            2181     ;       ****************************
 5540                            2182     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5541                            2183     ;       ****************************
 5542 000010A0 D114              2184             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5543 000010A2 31BC              2185             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5544 000010A4 6B12              2186             MOV.L   @R1,R11                         ;
 5545 000010A6 39BC              2187             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5546 000010A8 3893              2188             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5547 000010AA 892F              2189             BT      _CHG7_C80                       ; R8 >= R9 JUMP
 5548                            2190     
 5549 000010AC 6983              2191             MOV.L   R8,R9                           ;
 5550 000010AE 6888              2192             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5551 000010B0 688C              2193             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5552 000010B2 699C              2194             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5553                            2195     
 5554 000010B4 D110              2196             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5555 000010B6 3813              2197             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5556 000010B8 8928              2198             BT      _CHG7_C80                       ; IF ADR >= 127 THEN JUMP
 5557                            2199     
 5558 000010BA D010              2200             MOV.L   #(_WSC_CODE_END - _WSC_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5559 000010BC D310              2201             MOV.L   #_WSC_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5560 000010BE 64D3              2202             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5561                            2203     
 5562                            2204             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5563 000010C0 D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5564 000010C2 410B                   M           JSR     @R1                     ;
 5565 000010C4 0009                   M           NOP                                     ;
 5566                            2205                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5567                            2206     ;       *** ADR SET ***
 5568 000010C6 7400              2207             ADD     #(WSC_ADR - _WSC_CODE),R4       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    60
PROGRAM NAME =

 5569 000010C8 6141              2208             MOV.W   @R4,R1                          ;
 5570 000010CA D00F              2209             MOV.L   #H'FF00,R0                      ;
 5571 000010CC 2109              2210             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5572                            2211     ;       SHLL    R8                              ; ADR * 2
 5573 000010CE 218B              2212             OR      R8,R1                           ;
 5574 000010D0 2411              2213             MOV.W   R1,@R4                          ; RAM ADR SET
 5575                            2214     
 5576                            2215     ;       *** OFFSET SET ***
 5577 000010D2 7400              2216             ADD     #(WSC_OFS - WSC_ADR),R4         ;
 5578 000010D4 6141              2217             MOV.W   @R4,R1                          ;
 5579 000010D6 2109              2218             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5580                            2219     ;       SHLL    R9                              ; OFFSET * 2
 5581 000010D8 219B              2220             OR      R9,R1                           ;
 5582 000010DA 2411              2221             MOV.W   R1,@R4                          ; RAM ADR SET
 5583                            2222     
 5584                            2223     ;       *** BIT SET ***
 5585 000010DC 7400              2224             ADD     #(WSC_BTD - WSC_OFS),R4         ;
 5586 000010DE 6141              2225             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5587                            2226     ;;;     MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5588                            2227     ;;;     SHLL    R10                             ; * 2(word命令のため2倍する)
 5589                            2228     ;;;     ADD     R10,R2                          ;
 5590                            2229     ;;;     MOV.W   @R2,R10                         ; BIT CODE値格納
 5591                            2230     ;;;     MOV.L   #H'FF00,R0                      ;
 5592 000010E0 2109              2231             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5593 000010E2 21AB              2232             OR      R10,R1                          ;
 5594 000010E4 2411              2233             MOV.W   R1,@R4                          ; BIT CODEを書換
 5595                            2234     
 5596 000010E6 9001              2235             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5597                            2236             M_BRA   _SEQ_CHG7_EX                    ;
 5598 000010E8 A011                   M           BRA     _SEQ_CHG7_EX
 5599 000010EA 0009                   M           NOP
 5600                            2237     ;
 5601                                     ***** BEGIN-POOL *****
 5602 000010EC 0000                       DATA FOR SOURCE-LINE 2235
 5603 000010EE 0000                       ALIGNMENT CODE
 5604 000010F0 00000000                   DATA FOR SOURCE-LINE 2163
 5605 000010F4 00000000                   DATA FOR SOURCE-LINE 2184
 5606 000010F8 00000C00                   DATA FOR SOURCE-LINE 2196
 5607 000010FC 00000000                   DATA FOR SOURCE-LINE 2200
 5608 00001100 00000000                   DATA FOR SOURCE-LINE 2201
 5609 00001104 00000000                   DATA FOR SOURCE-LINE 2204
 5610 00001108 0000FF00                   DATA FOR SOURCE-LINE 2209
 5611                                     ***** END-POOL *****
 5612 0000110C                   2238     _CHG7_C80:
 5613 0000110C 9002              2239             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5614                            2240     
 5615 0000110E                   2241     _SEQ_CHG7_EX:
 5616                            2242             SUB_END
 5617                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5618 0000110E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5619                            2243             M_RTS
 5620 00001110 000B                   M           RTS                             ;RTSの後ろの
 5621 00001112 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5622                            2244     
 5623                            2245     ;       *******************************************
 5624                            2246     ;       *****   WTMR CODE CHANGE ROUTINE        ***
 5625                            2247     ;       *******************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    61
PROGRAM NAME =

 5626                                     ***** BEGIN-POOL *****
 5627 00001114 FF00                       DATA FOR SOURCE-LINE 2239
 5628                                     ***** END-POOL *****
 5629 00001116                   2248     _WTMR_CHG:                                      ; 00010000B     10
 5630                            2249             SUB_START
 5631 00001116 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5632                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5633                            2250     
 5634                            2251     ;       ************************
 5635                            2252     ;       *** MEM CODE処理追加 ***
 5636                            2253     ;       ************************
 5637                            2254     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5638                            2255     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5639                            2256     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5640                            2257     ;;;     MOV.L   @R1,R9                          ;
 5641                            2258     ;;;     SHLL    R8                              ; MEM ADR * 2
 5642                            2259     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5643                            2260     
 5644                            2261     ;       ************************
 5645                            2262     ;       *** BIT CODE処理追加 ***
 5646                            2263     ;       ************************
 5647                            2264     ;;;     MOV.L   #H'0008,R1                      ;
 5648                            2265     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5649                            2266     ;;;     BT      _SEQ_RUN_CHG8_BIT_H             ; R10>=R0 JUMP
 5650                            2267     ;;;     MOV.L   #H'0001,R1                      ;
 5651                            2268     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5652                            2269     
 5653                            2270     ;;;_SEQ_RUN_CHG8_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5654                            2271     
 5655                            2272     ;       ****************************
 5656                            2273     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5657                            2274     ;       ****************************
 5658                            2275     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5659                            2276     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5660                            2277     ;;;     MOV.L   @R1,R11                         ;
 5661                            2278     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5662                            2279     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5663                            2280     ;;;     BT      _CHG8_C80                       ; R8 >= R9 JUMP
 5664                            2281     
 5665 00001118 6983              2282             MOV.L   R8,R9                           ;
 5666 0000111A 6888              2283             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5667 0000111C 688C              2284             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5668 0000111E 699C              2285             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5669                            2286     
 5670 00001120 D10F              2287             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5671 00001122 3813              2288             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5672 00001124 8956              2289             BT      _CHG8_C80                       ; IF ADR >= 127 THEN JUMP
 5673                            2290     
 5674 00001126 D00F              2291             MOV.L   #(_WTMR_CODE_END - _WTMR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5675 00001128 D30F              2292             MOV.L   #_WTMR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5676 0000112A 64D3              2293             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5677                            2294     
 5678                            2295             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5679 0000112C D10F                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5680 0000112E 410B                   M           JSR     @R1                     ;
 5681 00001130 0009                   M           NOP                                     ;
 5682                            2296                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    62
PROGRAM NAME =

                                          入れ直す。
 5683                            2297     ;       *** ADR SET ***
 5684 00001132 7400              2298             ADD     #(WTMR_UNH - _WTMR_CODE),R4     ;
 5685 00001134 6141              2299             MOV.W   @R4,R1                          ;
 5686 00001136 D00E              2300             MOV.L   #H'FF00,R0                      ;
 5687 00001138 2109              2301             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5688                            2302     ;       SHLL    R8                              ; ADR * 2
 5689 0000113A 218B              2303             OR      R8,R1                           ;
 5690 0000113C 2411              2304             MOV.W   R1,@R4                          ; RAM ADR SET
 5691                            2305     
 5692                            2306     ;       *** OFFSET SET ***
 5693 0000113E 7400              2307             ADD     #(WTMR_UNL - WTMR_UNH),R4       ;
 5694 00001140 6141              2308             MOV.W   @R4,R1                          ;
 5695 00001142 2109              2309             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5696                            2310     ;       SHLL    R9                              ; OFFSET * 2
 5697 00001144 219B              2311             OR      R9,R1                           ;
 5698 00001146 2411              2312             MOV.W   R1,@R4                          ; RAM ADR SET
 5699                            2313     
 5700                            2314     ;       *** BIT SET ***
 5701 00001148 7400              2315             ADD     #(WTMR_DGT - WTMR_UNL),R4       ;
 5702 0000114A 6141              2316             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5703 0000114C 2109              2317             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5704 0000114E 6888              2318             SWAP.B  R8,R8                           ;
 5705 00001150 289B              2319             OR      R9,R8                           ;
 5706 00001152 6083              2320             MOV.L   R8,R0                           ;
 5707 00001154                   2321     _SEQ_TIM_DGT_SEL1
 5708 00001154 D807              2322             MOV.L   #D'255,R8                       ;
 5709 00001156 3086              2323             CMP/HI  R8,R0                           ;
 5710 00001158 8910              2324             BT      _SEQ_TIM_DGT_SEL2               ;
 5711 0000115A D907              2325             MOV.L   #D'0001,R9                      ;
 5712                            2326             M_BRA   _SEQ_TIM_DGT_END                ;
 5713 0000115C A02F                   M           BRA     _SEQ_TIM_DGT_END
 5714 0000115E 0009                   M           NOP
 5715                                     ***** BEGIN-POOL *****
 5716 00001160 00000C00                   DATA FOR SOURCE-LINE 2287
 5717 00001164 00000000                   DATA FOR SOURCE-LINE 2291
 5718 00001168 00000000                   DATA FOR SOURCE-LINE 2292
 5719 0000116C 00000000                   DATA FOR SOURCE-LINE 2295
 5720 00001170 0000FF00                   DATA FOR SOURCE-LINE 2300
 5721 00001174 000000FF                   DATA FOR SOURCE-LINE 2322
 5722 00001178 00000001                   DATA FOR SOURCE-LINE 2325
 5723                                     ***** END-POOL *****
 5724 0000117C                   2327     _SEQ_TIM_DGT_SEL2
 5725 0000117C D802              2328             MOV.L   #D'383,R8                       ;
 5726 0000117E 3086              2329             CMP/HI  R8,R0                           ;
 5727 00001180 8906              2330             BT      _SEQ_TIM_DGT_SEL3               ;
 5728 00001182 D902              2331             MOV.L   #D'0002,R9                      ;
 5729                            2332             M_BRA   _SEQ_TIM_DGT_END                ;
 5730 00001184 A01B                   M           BRA     _SEQ_TIM_DGT_END
 5731 00001186 0009                   M           NOP
 5732                                     ***** BEGIN-POOL *****
 5733 00001188 0000017F                   DATA FOR SOURCE-LINE 2328
 5734 0000118C 00000002                   DATA FOR SOURCE-LINE 2331
 5735                                     ***** END-POOL *****
 5736 00001190                   2333     _SEQ_TIM_DGT_SEL3
 5737 00001190 D802              2334             MOV.L   #D'415,R8                       ;
 5738 00001192 3086              2335             CMP/HI  R8,R0                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    63
PROGRAM NAME =

 5739 00001194 8906              2336             BT      _SEQ_TIM_DGT_SEL0               ;
 5740 00001196 D902              2337             MOV.L   #D'0003,R9                      ;
 5741                            2338             M_BRA   _SEQ_TIM_DGT_END                ;
 5742 00001198 A011                   M           BRA     _SEQ_TIM_DGT_END
 5743 0000119A 0009                   M           NOP
 5744                                     ***** BEGIN-POOL *****
 5745 0000119C 0000019F                   DATA FOR SOURCE-LINE 2334
 5746 000011A0 00000003                   DATA FOR SOURCE-LINE 2337
 5747                                     ***** END-POOL *****
 5748 000011A4                   2339     _SEQ_TIM_DGT_SEL0
 5749 000011A4 D802              2340             MOV.L   #D'479,R8                       ;
 5750 000011A6 3086              2341             CMP/HI  R8,R0                           ;
 5751 000011A8 8906              2342             BT      _SEQ_TIM_DGT_SEL5               ;
 5752 000011AA D902              2343             MOV.L   #D'0000,R9                      ;
 5753                            2344             M_BRA   _SEQ_TIM_DGT_END                ;
 5754 000011AC A007                   M           BRA     _SEQ_TIM_DGT_END
 5755 000011AE 0009                   M           NOP
 5756                                     ***** BEGIN-POOL *****
 5757 000011B0 000001DF                   DATA FOR SOURCE-LINE 2340
 5758 000011B4 00000000                   DATA FOR SOURCE-LINE 2343
 5759                                     ***** END-POOL *****
 5760 000011B8                   2345     _SEQ_TIM_DGT_SEL5
 5761 000011B8 D804              2346             MOV.L   #D'511,R8                       ;
 5762 000011BA 3086              2347             CMP/HI  R8,R0                           ;
 5763 000011BC D904              2348             MOV.L   #D'0005,R9                      ;
 5764 000011BE                   2349     _SEQ_TIM_DGT_END
 5765 000011BE 219B              2350             OR      R9,R1                           ;
 5766 000011C0 2411              2351             MOV.W   R1,@R4                          ; BIT CODEを書換
 5767                            2352     
 5768 000011C2 9001              2353             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5769                            2354             M_BRA   _SEQ_CHG8_EX                    ;
 5770 000011C4 A007                   M           BRA     _SEQ_CHG8_EX
 5771 000011C6 0009                   M           NOP
 5772                            2355     ;
 5773                                     ***** BEGIN-POOL *****
 5774 000011C8 0000                       DATA FOR SOURCE-LINE 2353
 5775 000011CA 0000                       ALIGNMENT CODE
 5776 000011CC 000001FF                   DATA FOR SOURCE-LINE 2346
 5777 000011D0 00000005                   DATA FOR SOURCE-LINE 2348
 5778                                     ***** END-POOL *****
 5779 000011D4                   2356     _CHG8_C80:
 5780 000011D4 9002              2357             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5781                            2358     
 5782 000011D6                   2359     _SEQ_CHG8_EX:
 5783                            2360             SUB_END
 5784                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5785 000011D6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5786                            2361             M_RTS
 5787 000011D8 000B                   M           RTS                             ;RTSの後ろの
 5788 000011DA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5789                            2362     
 5790                            2363     ;       *******************************************
 5791                            2364     ;       *****   WCTR CODE CHANGE ROUTINE        ***
 5792                            2365     ;       *******************************************
 5793                                     ***** BEGIN-POOL *****
 5794 000011DC FF00                       DATA FOR SOURCE-LINE 2357
 5795                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    64
PROGRAM NAME =

 5796 000011DE                   2366     _WCTR_CHG:                                      ; 00010010B     12
 5797                            2367             SUB_START
 5798 000011DE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5799                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5800                            2368     
 5801                            2369     ;       ************************
 5802                            2370     ;       *** MEM CODE処理追加 ***
 5803                            2371     ;       ************************
 5804                            2372     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5805                            2373     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5806                            2374     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5807                            2375     ;;;     MOV.L   @R1,R9                          ;
 5808                            2376     ;;;     SHLL    R8                              ; MEM ADR * 2
 5809                            2377     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5810                            2378     
 5811                            2379     ;       ****************************
 5812                            2380     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5813                            2381     ;       ****************************
 5814                            2382     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5815                            2383     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5816                            2384     ;;;     MOV.L   @R1,R11                         ;
 5817                            2385     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5818                            2386     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5819                            2387     ;;;     BT      _CHG9_C80                       ; R8 >= R9 JUMP
 5820                            2388     
 5821 000011E0 6983              2389             MOV.L   R8,R9                           ;
 5822 000011E2 6888              2390             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5823 000011E4 688C              2391             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5824 000011E6 699C              2392             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5825                            2393     
 5826 000011E8 D10B              2394             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5827 000011EA 3813              2395             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5828 000011EC 891E              2396             BT      _CHG9_C80                       ; IF ADR >= 127 THEN JUMP
 5829                            2397     
 5830 000011EE D00B              2398             MOV.L   #(_WCTR_CODE_END - _WCTR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5831 000011F0 D30B              2399             MOV.L   #_WCTR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5832 000011F2 64D3              2400             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5833                            2401     
 5834                            2402             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5835 000011F4 D10B                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5836 000011F6 410B                   M           JSR     @R1                     ;
 5837 000011F8 0009                   M           NOP                                     ;
 5838                            2403                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5839                            2404     
 5840                            2405     ;       *** ADR SET ***
 5841 000011FA 7400              2406             ADD     #(WCTR_UNH - _WCTR_CODE),R4     ;
 5842 000011FC 6141              2407             MOV.W   @R4,R1                          ;
 5843 000011FE D00A              2408             MOV.L   #H'FF00,R0                      ;
 5844 00001200 2109              2409             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5845                            2410     ;       SHLL    R8                              ; ADR * 2
 5846 00001202 218B              2411             OR      R8,R1                           ;
 5847 00001204 2411              2412             MOV.W   R1,@R4                          ; RAM ADR SET
 5848                            2413     
 5849                            2414     ;       *** OFFSET SET ***
 5850 00001206 7400              2415             ADD     #(WCTR_UNL - WCTR_UNH),R4       ;
 5851 00001208 6141              2416             MOV.W   @R4,R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    65
PROGRAM NAME =

 5852 0000120A 2109              2417             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5853                            2418     ;       SHLL    R9                              ; OFFSET * 2
 5854 0000120C 219B              2419             OR      R9,R1                           ;
 5855 0000120E 2411              2420             MOV.W   R1,@R4                          ; RAM ADR SET
 5856                            2421     
 5857 00001210 9001              2422             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5858                            2423             M_BRA   _SEQ_CHG9_EX                    ;
 5859 00001212 A00C                   M           BRA     _SEQ_CHG9_EX
 5860 00001214 0009                   M           NOP
 5861                            2424     ;
 5862                                     ***** BEGIN-POOL *****
 5863 00001216 0000                       DATA FOR SOURCE-LINE 2422
 5864 00001218 00000C00                   DATA FOR SOURCE-LINE 2394
 5865 0000121C 00000000                   DATA FOR SOURCE-LINE 2398
 5866 00001220 00000000                   DATA FOR SOURCE-LINE 2399
 5867 00001224 00000000                   DATA FOR SOURCE-LINE 2402
 5868 00001228 0000FF00                   DATA FOR SOURCE-LINE 2408
 5869                                     ***** END-POOL *****
 5870 0000122C                   2425     _CHG9_C80:
 5871 0000122C 9002              2426             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5872                            2427     
 5873 0000122E                   2428     _SEQ_CHG9_EX:
 5874                            2429             SUB_END
 5875                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5876 0000122E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5877                            2430             M_RTS
 5878 00001230 000B                   M           RTS                             ;RTSの後ろの
 5879 00001232 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5880                            2431     
 5881                            2432     ;       *******************************************
 5882                            2433     ;       *****   DSETLI CODE CHANGE ROUTINE      ***
 5883                            2434     ;       *******************************************
 5884                                     ***** BEGIN-POOL *****
 5885 00001234 FF00                       DATA FOR SOURCE-LINE 2426
 5886                                     ***** END-POOL *****
 5887 00001236                   2435     _DSETLI_CHG:                                            ; 10011011B     9B
 5888                            2436             SUB_START
 5889 00001236 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5890                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5891                            2437     
 5892 00001238 6583              2438             MOV.L   R8,R5                                   ;
 5893 0000123A 6888              2439             SWAP.B  R8,R8                                   ; MEM ADR H ⇔ L
 5894 0000123C 688C              2440             EXTU.B  R8,R8                                   ; R8=MEM ADR(HH)抽出
 5895 0000123E 655C              2441             EXTU.B  R5,R5                                   ; R5=MEM ADR(HL)抽出
 5896                            2442     
 5897 00001240 6693              2443             MOV.L   R9,R6                                   ;
 5898 00001242 6998              2444             SWAP.B  R9,R9                                   ; MEM ADR H ⇔ L
 5899 00001244 699C              2445             EXTU.B  R9,R9                                   ; R9=MEM ADR(LH)抽出
 5900 00001246 666C              2446             EXTU.B  R6,R6                                   ; R11=MEM ADR(LL)抽出
 5901                            2447     
 5902 00001248 D00F              2448             MOV.L   #(_DSETLI_CODE_END - _DSETLI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5903 0000124A D310              2449             MOV.L   #_DSETLI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5904 0000124C 64D3              2450             MOV.L   R13,R4                                  ; SEQ ADR. KEEP
 5905                            2451     
 5906                            2452             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1                  ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5907 0000124E D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5908 00001250 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    66
PROGRAM NAME =

 5909 00001252 0009                   M           NOP                                     ;
 5910                            2453                                                             ; 一括して転送してからﾒﾓﾘのとこだ
                                          けあとで入れ直す。
 5911                            2454     ;       *** DATA HH SET ***
 5912 00001254 7400              2455             ADD     #(DSETLI_DT_HH - _DSETLI_CODE),R4       ;
 5913 00001256 6141              2456             MOV.W   @R4,R1                                  ;
 5914 00001258 D00E              2457             MOV.L   #H'FF00,R0                              ;
 5915 0000125A 2109              2458             AND     R0,R1                                   ; DATA HH のところをｸﾘｱ
 5916 0000125C 218B              2459             OR      R8,R1                                   ;
 5917 0000125E 2411              2460             MOV.W   R1,@R4                                  ; RAM ADR SET
 5918                            2461     
 5919                            2462     ;       *** DATA HL SET ***
 5920 00001260 7400              2463             ADD     #(DSETLI_DT_HL - DSETLI_DT_HH),R4       ;
 5921 00001262 6141              2464             MOV.W   @R4,R1                                  ;
 5922 00001264 2109              2465             AND     R0,R1                                   ; DATA HL のところをｸﾘｱ
 5923 00001266 215B              2466             OR      R5,R1                                   ;
 5924 00001268 2411              2467             MOV.W   R1,@R4                                  ; RAM ADR SET
 5925                            2468     
 5926                            2469     ;       *** DATA LH SET ***
 5927 0000126A 7400              2470             ADD     #(DSETLI_DT_LH - DSETLI_DT_HL),R4       ;
 5928 0000126C 6141              2471             MOV.W   @R4,R1                                  ;
 5929 0000126E 2109              2472             AND     R0,R1                                   ; DATA LH のところをｸﾘｱ
 5930 00001270 219B              2473             OR      R9,R1                                   ;
 5931 00001272 2411              2474             MOV.W   R1,@R4                                  ; RAM ADR SET
 5932                            2475     
 5933                            2476     ;       *** DATA LL SET ***
 5934 00001274 7400              2477             ADD     #(DSETLI_DT_LL - DSETLI_DT_LH),R4       ;
 5935 00001276 6141              2478             MOV.W   @R4,R1                                  ;
 5936 00001278 2109              2479             AND     R0,R1                                   ; DATA LL のところをｸﾘｱ
 5937 0000127A 216B              2480             OR      R6,R1                                   ;
 5938 0000127C 2411              2481             MOV.W   R1,@R4                                  ; RAM ADR SET
 5939                            2482     
 5940 0000127E 9001              2483             MOV.W   #_SQ_NML_COD,R0                         ; NORMAL END
 5941                            2484             M_BRA   _SEQ_CHG10_EX                           ;
 5942 00001280 A00A                   M           BRA     _SEQ_CHG10_EX
 5943 00001282 0009                   M           NOP
 5944                            2485     
 5945                                     ***** BEGIN-POOL *****
 5946 00001284 0000                       DATA FOR SOURCE-LINE 2483
 5947 00001286 0000                       ALIGNMENT CODE
 5948 00001288 00000000                   DATA FOR SOURCE-LINE 2448
 5949 0000128C 00000000                   DATA FOR SOURCE-LINE 2449
 5950 00001290 00000000                   DATA FOR SOURCE-LINE 2452
 5951 00001294 0000FF00                   DATA FOR SOURCE-LINE 2457
 5952                                     ***** END-POOL *****
 5953 00001298                   2486     _SEQ_CHG10_EX:
 5954                            2487             SUB_END
 5955                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5956 00001298 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5957                            2488             M_RTS
 5958 0000129A 000B                   M           RTS                             ;RTSの後ろの
 5959 0000129C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5960                            2489     
 5961                            2490     ;       ***********************************
 5962                            2491     ;       ***     ｺｰﾄﾞのﾌﾞﾛｯｸ転送         ***
 5963                            2492     ;       ***********************************
 5964                            2493     ;       INPUT   R0,R3,R13
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    67
PROGRAM NAME =

 5965                            2494     ;       USE     R1
 5966                            2495     
 5967 0000129E                   2496     _SEQ_CODE_BLOCK_MV:
 5968                            2497             SUB_START
 5969 0000129E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5970                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5971                            2498     
 5972 000012A0                   2499     _SEQ_CODE_BLOCK_LOOP:
 5973 000012A0 2008              2500             TST     R0,R0                           ; COUNTER CHECK
 5974 000012A2 8909              2501             BT      _SEQ_CD_BLOCK_MV_EXIT           ; 0 THEN EXIT
 5975                            2502     
 5976 000012A4 6131              2503             MOV.W   @R3,R1                          ; SEQ_ROM
 5977 000012A6 2D11              2504             MOV.W   R1,@R13                         ; SEQ_RAM
 5978 000012A8 D102              2505             MOV.L   #2,R1                           ;
 5979 000012AA 3018              2506             SUB     R1,R0                           ; COUNTER -2
 5980 000012AC 331C              2507             ADD     R1,R3                           ; ROM ADR. +2
 5981 000012AE 3D1C              2508             ADD     R1,R13                          ; RAM ADR. +2
 5982                            2509             M_BRA   _SEQ_CODE_BLOCK_LOOP            ;
 5983 000012B0 AFF6                   M           BRA     _SEQ_CODE_BLOCK_LOOP
 5984 000012B2 0009                   M           NOP
 5985                            2510     
 5986                                     ***** BEGIN-POOL *****
 5987 000012B4 00000002                   DATA FOR SOURCE-LINE 2505
 5988                                     ***** END-POOL *****
 5989 000012B8                   2511     _SEQ_CD_BLOCK_MV_EXIT:
 5990                            2512     
 5991                            2513             SUB_END
 5992                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5993 000012B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5994                            2514             M_RTS
 5995 000012BA 000B                   M           RTS                             ;RTSの後ろの
 5996 000012BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5997                            2515     
 5998                            2516             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    68

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

ADDL_ADR                                  IMPT 00000000   1895  3914  3915 
ADDL_OFS                                  IMPT 00000000   1896  3915 
ADDWI_DT_LH                               IMPT 00000000   1900  4532  4533 
ADDWI_DT_LL                               IMPT 00000000   1901  4533 
ADDW_ADR                                  IMPT 00000000   1890  3881  3882 
ADDW_OFS                                  IMPT 00000000   1891  3882 
ANDL_ADR                                  IMPT 00000000   1925  4046  4047 
ANDL_OFS                                  IMPT 00000000   1926  4047 
ANDN_ADR                                  IMPT 00000000   1681  4867  4868 
ANDN_BIT                                  IMPT 00000000   1683  4869 
ANDN_OFS                                  IMPT 00000000   1682  4868  4869 
ANDWI_DT_LH                               IMPT 00000000   1930  4598  4599 
ANDWI_DT_LL                               IMPT 00000000   1931  4599 
ANDW_ADR                                  IMPT 00000000   1920  4013  4014 
ANDW_OFS                                  IMPT 00000000   1921  4014 
AND_ADR                                   IMPT 00000000   1675  4833  4834 
AND_BIT                                   IMPT 00000000   1677  4835 
AND_OFS                                   IMPT 00000000   1676  4834  4835 
A_REG                                     REG             2219*
BIT0                                      EQU  00000001     19*
BIT1                                      EQU  00000002     20*
BIT10                                     EQU  00000400     29*
BIT11                                     EQU  00000800     30*
BIT12                                     EQU  00001000     31*
BIT13                                     EQU  00002000     32*
BIT14                                     EQU  00004000     33*
BIT15                                     EQU  00008000     34*
BIT16                                     EQU  00010000     35*
BIT17                                     EQU  00020000     36*
BIT18                                     EQU  00040000     37*
BIT19                                     EQU  00080000     38*
BIT2                                      EQU  00000004     21*
BIT20                                     EQU  00100000     39*
BIT21                                     EQU  00200000     40*
BIT22                                     EQU  00400000     41*
BIT23                                     EQU  00800000     42*
BIT24                                     EQU  01000000     43*
BIT25                                     EQU  02000000     44*
BIT26                                     EQU  04000000     45*
BIT27                                     EQU  08000000     46*
BIT28                                     EQU  10000000     47*
BIT29                                     EQU  20000000     48*
BIT3                                      EQU  00000008     22*
BIT30                                     EQU  40000000     49*
BIT31                                     EQU  80000000     50*
BIT4                                      EQU  00000010     23*
BIT5                                      EQU  00000020     24*
BIT6                                      EQU  00000040     25*
BIT7                                      EQU  00000080     26*
BIT8                                      EQU  00000100     27*
BIT9                                      EQU  00000200     28*
CLR_ADR                                   IMPT 00000000   1753  3296  3297 
CLR_OFS                                   IMPT 00000000   1754  3297 
CTBL_REG                                  REG             2223*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    69

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

DSETLI_DT_HH                              IMPT 00000000   1974  5912  5920 
DSETLI_DT_HL                              IMPT 00000000   1975  5920  5927 
DSETLI_DT_LH                              IMPT 00000000   1976  5927  5934 
DSETLI_DT_LL                              IMPT 00000000   1977  5934 
DSETWI_DT_LH                              IMPT 00000000   1748  4301  4302 
DSETWI_DT_LL                              IMPT 00000000   1749  4302 
DTBL_REG                                  REG             2224*
D_REG                                     REG             2222*
EQL_ADR                                   IMPT 00000000   1805  3494  3495 
EQL_OFS                                   IMPT 00000000   1806  3495 
EQWI_DT_LH                                IMPT 00000000   1810  4334  4335 
EQWI_DT_LL                                IMPT 00000000   1811  4335 
EQW_ADR                                   IMPT 00000000   1800  3461  3462 
EQW_OFS                                   IMPT 00000000   1801  3462 
GEL_ADR                                   IMPT 00000000   1850  3692  3693 
GEL_OFS                                   IMPT 00000000   1851  3693 
GEWI_DT_LH                                IMPT 00000000   1855  4433  4434 
GEWI_DT_LL                                IMPT 00000000   1856  4434 
GEW_ADR                                   IMPT 00000000   1845  3659  3660 
GEW_OFS                                   IMPT 00000000   1846  3660 
GTL_ADR                                   IMPT 00000000   1835  3626  3627 
GTL_OFS                                   IMPT 00000000   1836  3627 
GTWI_DT_LH                                IMPT 00000000   1840  4400  4401 
GTWI_DT_LL                                IMPT 00000000   1841  4401 
GTW_ADR                                   IMPT 00000000   1830  3593  3594 
GTW_OFS                                   IMPT 00000000   1831  3594 
H_BYTE                                    EQU  00000000     86*
LDL_ADR                                   IMPT 00000000   1785  3362  3363 
LDL_OFS                                   IMPT 00000000   1786  3363 
LDN_ADR                                   IMPT 00000000   1669  4799  4800 
LDN_BIT                                   IMPT 00000000   1671  4801 
LDN_OFS                                   IMPT 00000000   1670  4800  4801 
LDW_ADR                                   IMPT 00000000   1780  3329  3330 
LDW_OFS                                   IMPT 00000000   1781  3330 
LD_ADR                                    IMPT 00000000   1663  4765  4766 
LD_BIT                                    IMPT 00000000   1665  4767 
LD_OFS                                    IMPT 00000000   1664  4766  4767 
LEL_ADR                                   IMPT 00000000   1880  3848  3849 
LEL_OFS                                   IMPT 00000000   1881  3849 
LEWI_DT_LH                                IMPT 00000000   1885  4499  4500 
LEWI_DT_LL                                IMPT 00000000   1886  4500 
LEW_ADR                                   IMPT 00000000   1875  3815  3816 
LEW_OFS                                   IMPT 00000000   1876  3816 
LTL_ADR                                   IMPT 00000000   1865  3782  3783 
LTL_OFS                                   IMPT 00000000   1866  3783 
LTWI_DT_LH                                IMPT 00000000   1870  4466  4467 
LTWI_DT_LL                                IMPT 00000000   1871  4467 
LTW_ADR                                   IMPT 00000000   1860  3749  3750 
LTW_OFS                                   IMPT 00000000   1861  3750 
L_BYTE                                    EQU  00000001     85*
M_REG                                     REG             2221*
NBIT0                                     EQU  000000FE     53*
NBIT1                                     EQU  000000FD     54*
NBIT10                                    EQU  0000FBFF     64*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    70

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

NBIT11                                    EQU  0000F7FF     65*
NBIT12                                    EQU  0000EFFF     66*
NBIT13                                    EQU  0000DFFF     67*
NBIT14                                    EQU  0000BFFF     68*
NBIT15                                    EQU  00007FFF     69*
NBIT2                                     EQU  000000FB     55*
NBIT3                                     EQU  000000F7     56*
NBIT4                                     EQU  000000EF     57*
NBIT5                                     EQU  000000DF     58*
NBIT6                                     EQU  000000BF     59*
NBIT7                                     EQU  0000007F     60*
NBIT8                                     EQU  0000FEFF     62*
NBIT9                                     EQU  0000FDFF     63*
NEL_ADR                                   IMPT 00000000   1820  3560  3561 
NEL_OFS                                   IMPT 00000000   1821  3561 
NEWI_DT_LH                                IMPT 00000000   1825  4367  4368 
NEWI_DT_LL                                IMPT 00000000   1826  4368 
NEW_ADR                                   IMPT 00000000   1815  3527  3528 
NEW_OFS                                   IMPT 00000000   1816  3528 
N_REG                                     REG             2220*
ORL_ADR                                   IMPT 00000000   1940  4112  4113 
ORL_OFS                                   IMPT 00000000   1941  4113 
ORN_ADR                                   IMPT 00000000   1693  4935  4936 
ORN_BIT                                   IMPT 00000000   1695  4937 
ORN_OFS                                   IMPT 00000000   1694  4936  4937 
ORWI_DT_LH                                IMPT 00000000   1945  4631  4632 
ORWI_DT_LL                                IMPT 00000000   1946  4632 
ORW_ADR                                   IMPT 00000000   1935  4079  4080 
ORW_OFS                                   IMPT 00000000   1936  4080 
OR_ADR                                    IMPT 00000000   1687  4901  4902 
OR_BIT                                    IMPT 00000000   1689  4903 
OR_OFS                                    IMPT 00000000   1688  4902  4903 
P                                P        SCT  00000000   2238*
PLF_ADR                                   IMPT 00000000   1724  5003  5004 
PLF_BIT                                   IMPT 00000000   1726  5005 
PLF_OFS                                   IMPT 00000000   1725  5004  5005 
PLS_ADR                                   IMPT 00000000   1718  4969  4970 
PLS_BIT                                   IMPT 00000000   1720  4971 
PLS_OFS                                   IMPT 00000000   1719  4970  4971 
R0_REG                                    REG             2228*
R10_REG                                   REG             2234*
R1_REG                                    REG             2229*
R2_REG                                    REG             2230*
R3_REG                                    REG             2231*
R4_REG                                    REG             2232*
R9_REG                                    REG             2233*
RSTCD_SETBIT                              IMPT 00000000   1714  5465 
RST_ADR                                   IMPT 00000000   1712  5448  5457 
RST_OFS                                   IMPT 00000000   1713  5457  5465 
SETCD_SETBIT                              IMPT 00000000   1708  5347 
SET_ADR                                   IMPT 00000000   1706  5330  5339 
SET_OFS                                   IMPT 00000000   1707  5339  5347 
STCD_CLRBIT                               IMPT 00000000   1702  5229 
STCD_SETBIT                               IMPT 00000000   1701  5217  5229 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    71

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

STL_ADR                                   IMPT 00000000   1795  3428  3429 
STL_OFS                                   IMPT 00000000   1796  3429 
STW_ADR                                   IMPT 00000000   1790  3395  3396 
STW_OFS                                   IMPT 00000000   1791  3396 
ST_ADR                                    IMPT 00000000   1699  5200  5209 
ST_OFS                                    IMPT 00000000   1700  5209  5217 
SUBL_ADR                                  IMPT 00000000   1910  3980  3981 
SUBL_OFS                                  IMPT 00000000   1911  3981 
SUBWI_DT_LH                               IMPT 00000000   1915  4565  4566 
SUBWI_DT_LL                               IMPT 00000000   1916  4566 
SUBW_ADR                                  IMPT 00000000   1905  3947  3948 
SUBW_OFS                                  IMPT 00000000   1906  3948 
TOP_REG                                   REG             2225*
WCTR_UNH                                  IMPT 00000000   1764  5841  5850 
WCTR_UNL                                  IMPT 00000000   1765  5850 
WSC_ADR                                   IMPT 00000000   1769  5568  5577 
WSC_BTD                                   IMPT 00000000   1771  5585 
WSC_OFS                                   IMPT 00000000   1770  5577  5585 
WSR_ADR                                   IMPT 00000000   1775  3263  3264 
WSR_OFS                                   IMPT 00000000   1776  3264 
WTMR_DGT                                  IMPT 00000000   1760  5701 
WTMR_UNH                                  IMPT 00000000   1758  5684  5693 
WTMR_UNL                                  IMPT 00000000   1759  5693  5701 
XBIT0                                     EQU  00000000     72*
XBIT1                                     EQU  00000001     73*
XBIT2                                     EQU  00000002     74*
XBIT3                                     EQU  00000003     75*
XBIT4                                     EQU  00000004     76*
XBIT5                                     EQU  00000005     77*
XBIT6                                     EQU  00000006     78*
XBIT7                                     EQU  00000007     79*
XORL_ADR                                  IMPT 00000000   1955  4178  4179 
XORL_OFS                                  IMPT 00000000   1956  4179 
XORWI_DT_LH                               IMPT 00000000   1960  4664  4665 
XORWI_DT_LL                               IMPT 00000000   1961  4665 
XORW_ADR                                  IMPT 00000000   1950  4145  4146 
XORW_OFS                                  IMPT 00000000   1951  4146 
_ADDL_CHG                        P        EXPT 0000082C   2037  3907*
_ADDL_CODE                                IMPT 00000000   1894  3912  3913  3914 
_ADDL_CODE_END                            IMPT 00000000   1897  3912 
_ADDWI_CHG                       P        EXPT 00000B5C   2038  4525*
_ADDWI_CODE                               IMPT 00000000   1899  4530  4531  4532 
_ADDWI_CODE_END                           IMPT 00000000   1902  4530 
_ADDW_CHG                        P        EXPT 00000800   2036  3874*
_ADDW_CODE                                IMPT 00000000   1889  3879  3880  3881 
_ADDW_CODE_END                            IMPT 00000000   1892  3879 
_ADD_CODE                                 IMPT 00000000   1964 
_ADD_CODE_END                             IMPT 00000000   1965 
_ADD_SUB                                  IMPT 00000000   1648 
_AMRG_CHG                        P        EXPT 000003DC   2004  3022*
_AMRG_CODE                                IMPT 00000000   1729  3027  3028 
_AMRG_CODE_END                            IMPT 00000000   1730  3027 
_ANDL_CHG                        P        EXPT 000008DC   2045  4039*
_ANDL_CODE                                IMPT 00000000   1924  4044  4045  4046 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    72

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ANDL_CODE_END                            IMPT 00000000   1927  4044 
_ANDN_CHG                        P        EXPT 00000D18   1989  4860*
_ANDN_CODE                                IMPT 00000000   1680  4865  4866  4867 
_ANDN_CODE_END                            IMPT 00000000   1684  4865 
_ANDWI_CHG                       P        EXPT 00000BB4   2046  4591*
_ANDWI_CODE                               IMPT 00000000   1929  4596  4597  4598 
_ANDWI_CODE_END                           IMPT 00000000   1932  4596 
_ANDW_CHG                        P        EXPT 000008B0   2044  4006*
_ANDW_CODE                                IMPT 00000000   1919  4011  4012  4013 
_ANDW_CODE_END                            IMPT 00000000   1922  4011 
_ANDW_SUB                                 IMPT 00000000   1645 
_AND_CHG                         P        EXPT 00000CE8   1988  4826*
_AND_CODE                                 IMPT 00000000   1674  4831  4832  4833 
_AND_CODE_END                             IMPT 00000000   1678  4831 
_CB_BAKUP_CMD1                            EQU  00005678    118*
_CB_BAKUP_CMD2                            EQU  00001234    119*
_CB_BAK_SUM_COD1                          EQU  5AA51234    116*
_CB_BAK_SUM_COD2                          EQU  A55A4321    117*
_CB_ERR_INFO_MEM                          EQU  00000040    141*
_CB_STS_BUF_1BLK                          EQU  00000040    121*  123 
_CB_STS_BUF_BLKMAX                        EQU  00000008    122*  123 
_CB_STS_BUF_MAX                           EQU  00000200    123*
_CB_TRD_BEFORE                            EQU  00000060    131*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    135*
_CB_TRD_BUF_MAX                           EQU  00000800    132*
_CB_TRD_DP_1CNT                           EQU  00000008    134*
_CB_TRD_DP_CH                             EQU  00000004    127*
_CB_TRD_SMP_CNT                           EQU  00000080    130*
_CHG1_C80                        P             00000A1C   4227  4236  4276*
_CHG2_C80                        P             00000C7C   4702  4740*
_CHG3_C80                        P             00000E94   5064  5073  5128*
_CHG4_C80                        P             00000F44   5179  5188  5258*
_CHG5_C80                        P             00000FE4   5309  5318  5376*
_CHG6_C80                        P             00001088   5427  5436  5496*
_CHG7_C80                        P             0000110C   5547  5556  5612*
_CHG8_C80                        P             000011D4   5672  5779*
_CHG9_C80                        P             0000122C   5828  5870*
_CLR_CHG                         P        EXPT 00000500   2002  3289*
_CLR_CODE                                 IMPT 00000000   1752  3294  3295  3296 
_CLR_CODE_END                             IMPT 00000000   1755  3294 
_CLR_SUB                                  IMPT 00000000   1634 
_DI_X_TOP1                                IMPT 00000000   1599 
_DI_X_TOP2                                IMPT 00000000   1600 
_DO_Y_TOP1                                IMPT 00000000   1601 
_DO_Y_TOP2                                IMPT 00000000   1602 
_DSETLI_CHG                      P        EXPT 00001236   2054  5887*
_DSETLI_CODE                              IMPT 00000000   1973  5902  5903  5912 
_DSETLI_CODE_END                          IMPT 00000000   1978  5902 
_DSETWI_CHG                      P        EXPT 00000A28   2003  4294*
_DSETWI_CODE                              IMPT 00000000   1747  4299  4300  4301 
_DSETWI_CODE_END                          IMPT 00000000   1750  4299 
_DUMMY_SUM_CODE                           EQU  5AA53CC3    109*
_ENDNRG_CHG                      P        EXPT 0000047C   2009  3167*
_ENDNRG_CODE                              IMPT 00000000   1744  3172  3173 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    73

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ENDNRG_CODE_END                          IMPT 00000000   1745  3172 
_END_CHG                         P        EXPT 0000049C   2010  3196*
_END_CODE                                 IMPT 00000000   1970  3201  3202 
_END_CODE_END                             IMPT 00000000   1971  3201 
_END_SUB                                  IMPT 00000000   1650 
_EQL_CHG                         P        EXPT 00000608   2018  3487*
_EQL_CODE                                 IMPT 00000000   1804  3492  3493  3494 
_EQL_CODE_END                             IMPT 00000000   1807  3492 
_EQWI_CHG                        P        EXPT 00000A54   2019  4327*
_EQWI_CODE                                IMPT 00000000   1809  4332  4333  4334 
_EQWI_CODE_END                            IMPT 00000000   1812  4332 
_EQW_CHG                         P        EXPT 000005DC   2017  3454*
_EQW_CODE                                 IMPT 00000000   1799  3459  3460  3461 
_EQW_CODE_END                             IMPT 00000000   1802  3459 
_EQ_SUB                                   IMPT 00000000   1641 
_GEL_CHG                         P        EXPT 00000710   2027  3685*
_GEL_CODE                                 IMPT 00000000   1849  3690  3691  3692 
_GEL_CODE_END                             IMPT 00000000   1852  3690 
_GEWI_CHG                        P        EXPT 00000AD8   2028  4426*
_GEWI_CODE                                IMPT 00000000   1854  4431  4432  4433 
_GEWI_CODE_END                            IMPT 00000000   1857  4431 
_GEW_CHG                         P        EXPT 000006E4   2026  3652*
_GEW_CODE                                 IMPT 00000000   1844  3657  3658  3659 
_GEW_CODE_END                             IMPT 00000000   1847  3657 
_GTL_CHG                         P        EXPT 000006B8   2024  3619*
_GTL_CODE                                 IMPT 00000000   1834  3624  3625  3626 
_GTL_CODE_END                             IMPT 00000000   1837  3624 
_GTWI_CHG                        P        EXPT 00000AAC   2025  4393*
_GTWI_CODE                                IMPT 00000000   1839  4398  4399  4400 
_GTWI_CODE_END                            IMPT 00000000   1842  4398 
_GTW_CHG                         P        EXPT 0000068C   2023  3586*
_GTW_CODE                                 IMPT 00000000   1829  3591  3592  3593 
_GTW_CODE_END                             IMPT 00000000   1832  3591 
_GT_SUB                                   IMPT 00000000   1643 
_LDL_CHG                         P        EXPT 00000558   2013  3355*
_LDL_CODE                                 IMPT 00000000   1784  3360  3361  3362 
_LDL_CODE_END                             IMPT 00000000   1787  3360 
_LDNRG_CHG                       P        EXPT 0000045C   2008  3138*
_LDNRG_CODE                               IMPT 00000000   1741  3143  3144 
_LDNRG_CODE_END                           IMPT 00000000   1742  3143 
_LDN_CHG                         P        EXPT 00000CB8   1987  4792*
_LDN_CODE                                 IMPT 00000000   1668  4797  4798  4799 
_LDN_CODE_END                             IMPT 00000000   1672  4797 
_LDON_CHG                        P        EXPT 000003BC   1985  2993*
_LDON_CODE                                IMPT 00000000   1659  2998  2999 
_LDON_CODE_END                            IMPT 00000000   1660  2998 
_LDW_CHG                         P        EXPT 0000052C   2012  3322*
_LDW_CODE                                 IMPT 00000000   1779  3327  3328  3329 
_LDW_CODE_END                             IMPT 00000000   1782  3327 
_LDW_SUB                                  IMPT 00000000   1639 
_LD_CHG                          P        EXPT 00000C88   1986  4758*
_LD_CODE                                  IMPT 00000000   1662  4763  4764  4765 
_LD_CODE_END                              IMPT 00000000   1666  4763 
_LEL_CHG                         P        EXPT 000007D4   2034  3841*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    74

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_LEL_CODE                                 IMPT 00000000   1879  3846  3847  3848 
_LEL_CODE_END                             IMPT 00000000   1882  3846 
_LEWI_CHG                        P        EXPT 00000B30   2035  4492*
_LEWI_CODE                                IMPT 00000000   1884  4497  4498  4499 
_LEWI_CODE_END                            IMPT 00000000   1887  4497 
_LEW_CHG                         P        EXPT 000007A8   2033  3808*
_LEW_CODE                                 IMPT 00000000   1874  3813  3814  3815 
_LEW_CODE_END                             IMPT 00000000   1877  3813 
_LE_SUB                                   IMPT 00000000   1644 
_LTL_CHG                         P        EXPT 0000077C   2031  3775*
_LTL_CODE                                 IMPT 00000000   1864  3780  3781  3782 
_LTL_CODE_END                             IMPT 00000000   1867  3780 
_LTWI_CHG                        P        EXPT 00000B04   2032  4459*
_LTWI_CODE                                IMPT 00000000   1869  4464  4465  4466 
_LTWI_CODE_END                            IMPT 00000000   1872  4464 
_LTW_CHG                         P        EXPT 00000750   2030  3742*
_LTW_CODE                                 IMPT 00000000   1859  3747  3748  3749 
_LTW_CODE_END                             IMPT 00000000   1862  3747 
_MKIND_A                                  EQU  00000040   2195*
_MKIND_A_ADR                              EQU  00001610   2194*
_MKIND_C                                  EQU  00000040   2177* 2178 
_MKIND_CD                                 EQU  00000400   2181* 2182 
_MKIND_CD_ADR                             EQU  00000900   2180* 2182 
_MKIND_C_ADR                              EQU  000004C0   2176* 2178 
_MKIND_F                                  EQU  00000110   2191* 2192 
_MKIND_F_ADR                              EQU  00000D00   2190* 2192 
_MKIND_L                                  EQU  00000040   2173* 2174 
_MKIND_L_ADR                              EQU  00000440   2172* 2174 
_MKIND_M                                  EQU  00000400   2171* 2172 
_MKIND_M_ADR                              EQU  00000040   2170* 2172 
_MKIND_S                                  EQU  00000800   2193* 2194 
_MKIND_S_ADR                              EQU  00000E10   2192* 2194 
_MKIND_T                                  EQU  00000040   2175* 2176 
_MKIND_TBL                                IMPT 00000000   2084  4222  5059  5174  5304  5422  5542 
_MKIND_TBL_TOP                            IMPT 00000000   2085  4212  5038  5153  5283  5401  5521 
_MKIND_TD                                 EQU  00000400   2179* 2180 
_MKIND_TD_ADR                             EQU  00000500   2178* 2180 
_MKIND_T_ADR                              EQU  00000480   2174* 2176 
_MKIND_W0                                 EQU  00000000   2165* 2166 
_MKIND_W0_ADR                             EQU  00000000   2164*
_MKIND_W1                                 EQU  00000000   2183* 2184 
_MKIND_W1_ADR                             EQU  00000D00   2182* 2184 
_MKIND_W2                                 EQU  00000000   2185* 2186 
_MKIND_W2_ADR                             EQU  00000D00   2184* 2186 
_MKIND_W3                                 EQU  00000000   2187* 2188 
_MKIND_W3_ADR                             EQU  00000D00   2186* 2188 
_MKIND_W4                                 EQU  00000000   2189* 2190 
_MKIND_W4_ADR                             EQU  00000D00   2188* 2190 
_MKIND_X                                  EQU  00000020   2167* 2168 
_MKIND_X_ADR                              EQU  00000000   2166* 2168 
_MKIND_Y                                  EQU  00000020   2169* 2170 
_MKIND_Y_ADR                              EQU  00000020   2168* 2170 
_NEL_CHG                         P        EXPT 00000660   2021  3553*
_NEL_CODE                                 IMPT 00000000   1819  3558  3559  3560 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    75

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_NEL_CODE_END                             IMPT 00000000   1822  3558 
_NEWI_CHG                        P        EXPT 00000A80   2022  4360*
_NEWI_CODE                                IMPT 00000000   1824  4365  4366  4367 
_NEWI_CODE_END                            IMPT 00000000   1827  4365 
_NEW_CHG                         P        EXPT 00000634   2020  3520*
_NEW_CODE                                 IMPT 00000000   1814  3525  3526  3527 
_NEW_CODE_END                             IMPT 00000000   1817  3525 
_NE_SUB                                   IMPT 00000000   1642 
_NOP_CHG                         P        EXPT 0000039C   1984  2964*
_NOP_CODE                                 IMPT 00000000   1656  2969  2970 
_NOP_CODE_END                             IMPT 00000000   1657  2969 
_OMRG_CHG                        P        EXPT 000003FC   2005  3051*
_OMRG_CODE                                IMPT 00000000   1732  3056  3057 
_OMRG_CODE_END                            IMPT 00000000   1733  3056 
_ORL_CHG                         P        EXPT 00000934   2048  4105*
_ORL_CODE                                 IMPT 00000000   1939  4110  4111  4112 
_ORL_CODE_END                             IMPT 00000000   1942  4110 
_ORN_CHG                         P        EXPT 00000D78   1991  4928*
_ORN_CODE                                 IMPT 00000000   1692  4933  4934  4935 
_ORN_CODE_END                             IMPT 00000000   1696  4933 
_ORWI_CHG                        P        EXPT 00000BE0   2049  4624*
_ORWI_CODE                                IMPT 00000000   1944  4629  4630  4631 
_ORWI_CODE_END                            IMPT 00000000   1947  4629 
_ORW_CHG                         P        EXPT 00000908   2047  4072*
_ORW_CODE                                 IMPT 00000000   1934  4077  4078  4079 
_ORW_CODE_END                             IMPT 00000000   1937  4077 
_ORW_SUB                                  IMPT 00000000   1646 
_OR_CHG                          P        EXPT 00000D48   1990  4894*
_OR_CODE                                  IMPT 00000000   1686  4899  4900  4901 
_OR_CODE_END                              IMPT 00000000   1690  4899 
_PLF_CHG                         P        EXPT 00000DD8   1993  4996*
_PLF_CODE                                 IMPT 00000000   1723  5001  5002  5003 
_PLF_CODE_END                             IMPT 00000000   1727  5001 
_PLF_SUB                                  IMPT 00000000   1633 
_PLS_CHG                         P        EXPT 00000DA8   1992  4962*
_PLS_CODE                                 IMPT 00000000   1717  4967  4968  4969 
_PLS_CODE_END                             IMPT 00000000   1721  4967 
_PLS_SUB                                  IMPT 00000000   1632 
_POP_CHG                         P        EXPT 0000043C   2007  3109*
_POP_CODE                                 IMPT 00000000   1738  3114  3115 
_POP_CODE_END                             IMPT 00000000   1739  3114 
_PUSH_CHG                        P        EXPT 0000041C   2006  3080*
_PUSH_CODE                                IMPT 00000000   1735  3085  3086 
_PUSH_CODE_END                            IMPT 00000000   1736  3085 
_PVP_SQ_COM_ADR                           IMPT 00000000   2272  2304  2400  2496 
_PVP_SQ_COM_ERR                           IMPT 00000000   2273  2306  2402  2498 
_RST_CHG                         P        EXPT 00000FEE   1997  5393*
_RST_CODE                                 IMPT 00000000   1711  5438  5439  5448 
_RST_CODE_END                             IMPT 00000000   1715  5438 
_SEQ_ARG1_DATA                            IMPT 00000000   1580  2335 
_SEQ_ARG2_DATA                            IMPT 00000000   1587  2431 
_SEQ_ARG3_DATA                            IMPT 00000000   1594  2527 
_SEQ_ASM_RAM_TOP                          IMPT 00000000   1558 
_SEQ_A_SET                                EQU  00000020   2134* 2195 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    76

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_BBIT_CHG_TBL                         IMPT 00000000   2065  5102  5219  5349  5467 
_SEQ_CARD_MAX                             EQU  00000C00   2135* 4234  4700  5071  5186  5316  5434  5554  5670  5826 
_SEQ_CARD_RAM                             IMPT 00000000   1572 
_SEQ_CD_BLOCK_MV_EXIT            P             000012B8   5974  5989*
_SEQ_CD_SET                               EQU  00000200   2127* 2181 
_SEQ_CHG10_EX                    P             00001298   5942  5953*
_SEQ_CHG2_EX                     P             00000C7E   4730  4743*
_SEQ_CHG3_EX                     P             00000E96   5113  5131*
_SEQ_CHG4_EX                     P             00000F46   5241  5261*
_SEQ_CHG5_EX                     P             00000FE6   5360  5379*
_SEQ_CHG6_EX                     P             0000108A   5480  5499*
_SEQ_CHG7_EX                     P             0000110E   5598  5615*
_SEQ_CHG8_EX                     P             000011D6   5770  5782*
_SEQ_CHG9_EX                     P             0000122E   5859  5873*
_SEQ_CHG_TBL0                             IMPT 00000000   2061  2609  2742  2873 
_SEQ_CMP_ERR1                             IMPT 00000000   1578  2310 
_SEQ_CMP_ERR2                             IMPT 00000000   1585  2406 
_SEQ_CMP_ERR3                             IMPT 00000000   1592  2502 
_SEQ_CMP_ERR_ADR1                         IMPT 00000000   1579  2300 
_SEQ_CMP_ERR_ADR2                         IMPT 00000000   1586  2396 
_SEQ_CMP_ERR_ADR3                         IMPT 00000000   1593  2492 
_SEQ_CMP_START                            IMPT 00000000   1606 
_SEQ_CODE_BLOCK_LOOP             P             000012A0   5972* 5983 
_SEQ_CODE_BLOCK_MV               P             0000129E   3236  4241  4707  5078  5195  5325  5443  5563  5679  5835  5907  5967*
_SEQ_COM1_TOP                             IMPT 00000000   2243  2568 
_SEQ_COM2_TOP                             IMPT 00000000   2244  2701 
_SEQ_COM3_TOP                             IMPT 00000000   2245  2832 
_SEQ_CTR_DATA                             IMPT 00000000   1575 
_SEQ_C_SET                                EQU  00000020   2125* 2127  2177 
_SEQ_DATA_CHG0                   P             000004C0   2972  3001  3030  3059  3088  3117  3146  3175  3204  3228*
_SEQ_DATA_CHG0_EX                P             000004CA   3241*
_SEQ_DATA_CHG1_1                 P             0000073C   3266  3299  3332  3365  3398  3431  3464  3497  3530  3563  3596  3629 
                                                          3662  3695  3718*
_SEQ_DATA_CHG1_2                 P             000009B8   3723  3752  3785  3818  3851  3884  3917  3950  3983  4016  4049  4082 
                                                          4115  4148  4181  4204*
_SEQ_DATA_CHG1_EX                P             00000A1E   4264  4279*
_SEQ_DATA_CHG2                   P             00000C38   4304  4337  4370  4403  4436  4469  4502  4535  4568  4601  4634  4667 
                                                          4690*
_SEQ_DATA_CHG3                   P             00000E08   4769  4803  4837  4871  4905  4939  4973  5007  5030*
_SEQ_DRG1_DATA                            IMPT 00000000   1583 
_SEQ_DRG2_DATA                            IMPT 00000000   1590 
_SEQ_DRG3_DATA                            IMPT 00000000   1597 
_SEQ_END_CODE                    P             00000004   2258* 2317  2413  2509 
_SEQ_F_SET                                EQU  00000088   2132* 2191 
_SEQ_LD_TIMOUT                            IMPT 00000000   1614 
_SEQ_L_SET                                EQU  00000020   2123* 2173 
_SEQ_MAX_BYTE                             EQU  0000001E   2158* 2574  2707  2838 
_SEQ_MRG1_DATA                            IMPT 00000000   1581  2337 
_SEQ_MRG2_DATA                            IMPT 00000000   1588  2433 
_SEQ_MRG3_DATA                            IMPT 00000000   1595  2529 
_SEQ_M_SET                                EQU  00000200   2122* 2171 
_SEQ_NRG1_DATA                            IMPT 00000000   1582  2340 
_SEQ_NRG2_DATA                            IMPT 00000000   1589  2436 
_SEQ_NRG3_DATA                            IMPT 00000000   1596  2532 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    77

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_POU_SET                              EQU  00004000   2159*
_SEQ_RUN1                                 IMPT 00000000   1561  2571 
_SEQ_RUN1_END                             IMPT 00000000   1562  2572 
_SEQ_RUN1_TOP                             IMPT 00000000   1560  2285 
_SEQ_RUN2                                 IMPT 00000000   1565  2704 
_SEQ_RUN2_END                             IMPT 00000000   1566  2705 
_SEQ_RUN2_TOP                             IMPT 00000000   1564  2381 
_SEQ_RUN3                                 IMPT 00000000   1569  2835 
_SEQ_RUN3_END                             IMPT 00000000   1570  2836 
_SEQ_RUN3_TOP                             IMPT 00000000   1568  2477 
_SEQ_RUN_CHG1                    P             000001BC   2296  2563*
_SEQ_RUN_CHG1_100                P             000001CE   2578* 2663 
_SEQ_RUN_CHG1_300                P             000001EE   2606*
_SEQ_RUN_CHG1_4BYTE              P             0000022C   2616  2637*
_SEQ_RUN_CHG1_800                P             00000240   2646  2658*
_SEQ_RUN_CHG1_DSETLI             P             00000224   2614  2631*
_SEQ_RUN_CHG1_END                P             0000024A   2649  2669*
_SEQ_RUN_CHG1_ERR_END            P        EXPT 00000250   2042  2589  2651  2676*
_SEQ_RUN_CHG1_EXIT               P             00000252   2673  2679*
_SEQ_RUN_CHG1_MAIN               P        EXPT 0000000C   2247  2279*
_SEQ_RUN_CHG2                    P             0000025C   2392  2696*
_SEQ_RUN_CHG2_100                P             0000026E   2711* 2794 
_SEQ_RUN_CHG2_300                P             0000028E   2739*
_SEQ_RUN_CHG2_4BYTE              P             000002CC   2749  2770*
_SEQ_RUN_CHG2_800                P             000002E0   2779  2790*
_SEQ_RUN_CHG2_DSETLI             P             000002C4   2747  2764*
_SEQ_RUN_CHG2_END                P             000002EA   2782  2800*
_SEQ_RUN_CHG2_ERR_END            P             000002F0   2722  2784  2807*
_SEQ_RUN_CHG2_EXIT               P             000002F2   2804  2810*
_SEQ_RUN_CHG2_MAIN               P        EXPT 0000009C   2248  2375*
_SEQ_RUN_CHG2_MAIN020            P             000000E4   2410  2427*
_SEQ_RUN_CHG3                    P             000002FC   2488  2827*
_SEQ_RUN_CHG3_100                P             0000030E   2842* 2925 
_SEQ_RUN_CHG3_300                P             0000032E   2870*
_SEQ_RUN_CHG3_4BYTE              P             0000036C   2880  2901*
_SEQ_RUN_CHG3_800                P             00000380   2910  2921*
_SEQ_RUN_CHG3_BIT_H              P             00000E20   5050  5054*
_SEQ_RUN_CHG3_DSETLI             P             00000364   2878  2895*
_SEQ_RUN_CHG3_END                P             0000038A   2913  2931*
_SEQ_RUN_CHG3_ERR_END            P             00000390   2853  2915  2938*
_SEQ_RUN_CHG3_EXIT               P             00000392   2935  2941*
_SEQ_RUN_CHG3_MAIN               P        EXPT 0000012C   2249  2471*
_SEQ_RUN_CHG3_MAIN020            P             00000174   2506  2523*
_SEQ_RUN_CHG4_BIT_H              P             00000EB6   5165  5169*
_SEQ_RUN_CHG5_BIT_H              P             00000F66   5295  5299*
_SEQ_RUN_CHG6_BIT_H              P             00001006   5413  5417*
_SEQ_RUN_CHG_MAIN020             P             00000054   2314  2331*
_SEQ_SR_FLG                               IMPT 00000000   1576 
_SEQ_START_CODE                  P             00000000   2252* 2286  2382  2478 
_SEQ_S_SET                                EQU  00000400   2133* 2193 
_SEQ_TD_SET                               EQU  00000200   2126* 2179 
_SEQ_TIM_DGT_END                 P             000011BE   5713  5730  5742  5754  5764*
_SEQ_TIM_DGT_SEL0                P             000011A4   5739  5748*
_SEQ_TIM_DGT_SEL1                P             00001154   5707*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    78

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_TIM_DGT_SEL2                P             0000117C   5710  5724*
_SEQ_TIM_DGT_SEL3                P             00001190   5727  5736*
_SEQ_TIM_DGT_SEL5                P             000011B8   5751  5760*
_SEQ_TIM_WK1000M                          IMPT 00000000   1617 
_SEQ_TIM_WK100M                           IMPT 00000000   1616 
_SEQ_TMR_DATA                             IMPT 00000000   1574 
_SEQ_T_SET                                EQU  00000020   2124* 2126  2175 
_SEQ_W0_SET                               EQU  00000000   2119* 2165 
_SEQ_W1_SET                               EQU  00000000   2128* 2183 
_SEQ_W2_SET                               EQU  00000000   2129* 2185 
_SEQ_W3_SET                               EQU  00000000   2130* 2187 
_SEQ_W4_SET                               EQU  00000000   2131* 2189 
_SEQ_X_SET                                EQU  00000010   2120* 2167 
_SEQ_Y_SET                                EQU  00000010   2121* 2169 
_SET_CHG                         P        EXPT 00000F4E   1996  5275*
_SET_CODE                                 IMPT 00000000   1705  5320  5321  5330 
_SET_CODE_END                             IMPT 00000000   1709  5320 
_SQ_ERR_END                               EQU  0000FF00   2112* 2677  2808  2939  4277  4741  5129  5259  5377  5497  5613  5780 
                                                          5871 
_SQ_NML_COD                               EQU  00000000   2110* 2645  2778  2909  4262  4728  5111  5239  5358  5478  5596  5768 
                                                          5857  5940 
_SQ_NML_END                               EQU  00000055   2111* 2648  2781  2912  3208 
_START_ACK_COD                            EQU  00004321    215*
_START_REQ_COD                            EQU  00009876    214*
_STL_CHG                         P        EXPT 000005B0   2015  3421*
_STL_CODE                                 IMPT 00000000   1794  3426  3427  3428 
_STL_CODE_END                             IMPT 00000000   1797  3426 
_STW_CHG                         P        EXPT 00000584   2014  3388*
_STW_CODE                                 IMPT 00000000   1789  3393  3394  3395 
_STW_CODE_END                             IMPT 00000000   1792  3393 
_STW_SUB                                  IMPT 00000000   1640 
_ST_CHG                          P        EXPT 00000E9E   1994  5145*
_ST_CODE                                  IMPT 00000000   1698  5190  5191  5200 
_ST_CODE_END                              IMPT 00000000   1703  5190 
_SUBL_CHG                        P        EXPT 00000884   2040  3973*
_SUBL_CODE                                IMPT 00000000   1909  3978  3979  3980 
_SUBL_CODE_END                            IMPT 00000000   1912  3978 
_SUBWI_CHG                       P        EXPT 00000B88   2041  4558*
_SUBWI_CODE                               IMPT 00000000   1914  4563  4564  4565 
_SUBWI_CODE_END                           IMPT 00000000   1917  4563 
_SUBW_CHG                        P        EXPT 00000858   2039  3940*
_SUBW_CODE                                IMPT 00000000   1904  3945  3946  3947 
_SUBW_CODE_END                            IMPT 00000000   1907  3945 
_SUB_CODE                                 IMPT 00000000   1967 
_SUB_CODE_END                             IMPT 00000000   1968 
_SUB_SUB                                  IMPT 00000000   1649 
_SeqLd_MKIND_TBL_TOP                      IMPT 00000000   2086 
_SeqSysStat                               IMPT 00000000   1608 
_T_0001HR_CNT                             EQU  00000020   2214*
_T_0001HR_TOP                             EQU  000001E0   2213*
_T_0001MS_CNT                             EQU  00000040   2212* 2213 
_T_0001MS_TOP                             EQU  000001A0   2211* 2213 
_T_0010MS_CNT                             EQU  00000100   2206* 2207 
_T_0010MS_TOP                             EQU  00000000   2205* 2207 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    79

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_T_0100MS_CNT                             EQU  00000080   2208* 2209 
_T_0100MS_TOP                             EQU  00000100   2207* 2209 
_T_1000MS_CNT                             EQU  00000020   2210* 2211 
_T_1000MS_TOP                             EQU  00000180   2209* 2211 
_VUPCHECK_EQU                             EQU  11AB3739    102*
_WCTR_CHG                        P        EXPT 000011DE   2000  5796*
_WCTR_CODE                                IMPT 00000000   1763  5830  5831  5841 
_WCTR_CODE_END                            IMPT 00000000   1766  5830 
_WCTR_SUB                                 IMPT 00000000   1636 
_WSC_CHG                         P        EXPT 00001092   1995  5513*
_WSC_CODE                                 IMPT 00000000   1768  5558  5559  5568 
_WSC_CODE_END                             IMPT 00000000   1772  5558 
_WSC_SUB                                  IMPT 00000000   1637 
_WSR_CHG                         P        EXPT 000004D4   2001  3256*
_WSR_CODE                                 IMPT 00000000   1774  3261  3262  3263 
_WSR_CODE_END                             IMPT 00000000   1777  3261 
_WSR_SUB                                  IMPT 00000000   1638 
_WTMR_CHG                        P        EXPT 00001116   1999  5629*
_WTMR_CODE                                IMPT 00000000   1757  5674  5675  5684 
_WTMR_CODE_END                            IMPT 00000000   1761  5674 
_WTMR_SUB                                 IMPT 00000000   1635 
_XORL_CHG                        P        EXPT 0000098C   2051  4171*
_XORL_CODE                                IMPT 00000000   1954  4176  4177  4178 
_XORL_CODE_END                            IMPT 00000000   1957  4176 
_XORWI_CHG                       P        EXPT 00000C0C   2052  4657*
_XORWI_CODE                               IMPT 00000000   1959  4662  4663  4664 
_XORWI_CODE_END                           IMPT 00000000   1962  4662 
_XORW_CHG                        P        EXPT 00000960   2050  4138*
_XORW_CODE                                IMPT 00000000   1949  4143  4144  4145 
_XORW_CODE_END                            IMPT 00000000   1952  4143 
_XORW_SUB                                 IMPT 00000000   1647 
_X_PUSH_TOP1                              IMPT 00000000   1603 
_X_PUSH_TOP2                              IMPT 00000000   1604 
__TMCT_FLG                                EQU  00000008   2203*
__TMCT_PV                                 EQU  00000000   2201*
__TMCT_ST_CNT                             EQU  0000000C   2200*
__TMCT_SV                                 EQU  00000004   2202*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    11/15/15 05:47:31                                                  PAGE    80

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000012BE        
