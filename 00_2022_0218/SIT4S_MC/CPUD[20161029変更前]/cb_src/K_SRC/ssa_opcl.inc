
	.GLOBAL		_PAR_COP_CNTROT_ZDG1	;+10.0度
	.GLOBAL		_CB_SYS_PARAM081	;回転 ｾﾞﾛ調終了    =荷重測定開始角度
	.GLOBAL		_PAR_COP_CNTROT_ZDG2	;+20.0度
	.GLOBAL		_CB_SYS_PARAM082	;回転 荷重測定開始角度
	.GLOBAL		_PAR_COP_CNTROT_SDG1	;+20.0度
	.GLOBAL		_CB_SYS_PARAM083	;回転 荷重測定開始終了
	.GLOBAL		_PAR_COP_CNTROT_SDG2	;230.0度
	.GLOBAL		_CB_SYS_PARAM084	;反転 ｾﾞﾛ調開始角度   +N
	.GLOBAL		_PAR_COP_REVRSE_ZDG1	;5.0度
	.GLOBAL		_CB_SYS_PARAM085	;反転 ｾﾞﾛ調開始終了   +M
	.GLOBAL		_PAR_COP_REVRSE_ZDG2	;15.0度
	.GLOBAL		_CB_SYS_PARAM086	;反転 荷重測定開始角度+N 
	.GLOBAL		_PAR_COP_REVRSE_SDG1	;待機点+5.0度を横切った角度
	.GLOBAL		_CB_SYS_PARAM087	;反転 荷重測定開始終了+M
	.GLOBAL		_PAR_COP_REVRSE_SDG2	;待機点+5.0度を横切った角度:最終工程以降
	
	.GLOBAL		_SEQ_DP_TOP		;


	.EXPORT	_COP1_ROT_DT_INI
	

;	*******************************************
;	***					***
;	***	ﾃﾞｰﾀ転送 符号拡張		***
;	***	2Bor4B-->2B/4B			***
;	*******************************************
;;	.MACRO	DATA_STD_SHN_MOV	SRC,L1,DST,L2
;;	MOV.L	#\SRC,R5		;
;;	MOV.\L1	@R5,R2			;
;;
;;	MOV.L	#\DST,R6		;
;;	MOV.\L2	R2,@R6			;
;;	.ENDM
;;
;;	.MACRO	DATA_STD_CHG_MOV	SRC,L1,DST,L2,CALLSB
;;	MOV.L	#\SRC,R8						;
;;	MOV.\L1	@R8,R2							;
;;
;;	FAR_JSR	#\CALLSB,R0		;
;;
;;	MOV.L	#\DST,R9		;
;;	MOV.\L2	R2,@R9			;
;;	.ENDM


_COP1_ROT_DT_INI:
	SUB_START
	FAR_JSR	#_CB_COP_DT_MAK1,R0
	FAR_JSR	#_CB_COP_DT_MAK2,R0

	MOV.L	#_INC_ENC360,R1		;//360.0度(ｴﾝｺｰﾀﾞは表示と同じ)
	MOV.W	@R1,R2			;
;;;未使用	MOV.L	#_COP_ENC3600,R1	;
;;;未使用	MOV.W	R2,@R1			;
	MOV.L	#_COP_OLD_ENC3600,R1	;
	MOV.W	R2,@R1			;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(BIT0),WKREG=R1

;	SH4-->SH2へ渡す　2010-12-08
	MEM_MOV_TO_MEM	SRC_ADR=_COP_CB_LD_MONI_SIG,L1=W,DST_ADR=_DP_COP_CB_LD_MONI_SIG,L2=W,WKREG1=R1,WKREG2=R2,WKREG3=R3


	SUB_END
	M_RTS

;	***********************************
;	***				***
;	***	ﾊﾟﾗﾒｰﾀ			***
;	***	ｸﾗﾝｸ設定とする		***
;	***	全て待機点＋で扱う	***
;	***				***
;	***********************************


_CB_COP_DT_MAK1:
	SUB_START
	DATA_STD_SHN_MOV	SRC=_PAR_COP_CNTROT_ZDG1,L1=W,DST=_WPAR_COP_CNTROT_ZDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_CNTROT_ZDG2,L1=W,DST=_WPAR_COP_CNTROT_ZDG2,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_CNTROT_SDG1,L1=W,DST=_WPAR_COP_CNTROT_SDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_CNTROT_SDG2,L1=W,DST=_WPAR_COP_CNTROT_SDG2,L2=W

	DATA_STD_SHN_MOV	SRC=_PAR_COP_REVRSE_ZDG1,L1=W,DST=_WPAR_COP_REVRSE_ZDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_REVRSE_ZDG2,L1=W,DST=_WPAR_COP_REVRSE_ZDG2,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_REVRSE_SDG1,L1=W,DST=_WPAR_COP_REVRSE_SDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_PAR_COP_REVRSE_SDG2,L1=W,DST=_WPAR_COP_REVRSE_SDG2,L2=W


	SUB_END
	M_RTS

;	===================================
;	===				===
;	===	動作時の入れ替え	===
;	===				===
;	===================================
;	待機点＋設定に変換する
_CB_COP_DT_MAK2:
	SUB_START

;	=========[2009-10-07下振子]
	MOV.L	#_SET1_MRTION_SEL1,R1						;
	MOV.W	@R1,R0								;
	TST	#(_DMATH_DNDRIV),R0						;2007-09-06
	TST_BIT_OF CB_COP_DT_MK2_050						;

;	-------往路-------
;	反転のﾃﾞｰﾀを使用する
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG1,L1=W,DST=_WPARX_COP_DNDRV1_ZDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG2,L1=W,DST=_WPARX_COP_DNDRV1_ZDG2,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG1,L1=W,DST=_WPARX_COP_DNDRV1_SDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG2,L1=W,DST=_WPARX_COP_DNDRV1_SDG2,L2=W,CALLSB=_NEG_TAIKI_SUB;

;	-------復路-------
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG2,L1=W,DST=_WPARX_COP_DNDRV2_ZDG1,L2=W,CALLSB=_NEG_TAIKI_SUB;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG1,L1=W,DST=_WPARX_COP_DNDRV2_ZDG2,L2=W,CALLSB=_NEG_TAIKI_SUB;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG2,L1=W,DST=_WPARX_COP_DNDRV2_SDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG1,L1=W,DST=_WPARX_COP_DNDRV2_SDG2,L2=W,CALLSB=_NEG_TAIKI_SUB;


;	-- 2007-09-06 --
	DATA_STD_SHN_MOV	SRC=_SET1_KJSTR_DIG1,L1=W,DST=_SETX_KJSTR_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_SET1_KJEND_DIG1,L1=W,DST=_SETX_KJEND_DIG1,L2=W;

	DATA_STD_CHG_MOV	SRC=_SET1_KJEND_DIG1,L1=W,DST=_SETY_KJSTR_DIG1,L2=W,CALLSB=_NEG_TAIKI;
	DATA_STD_CHG_MOV	SRC=_SET1_KJSTR_DIG1,L1=W,DST=_SETY_KJEND_DIG1,L2=W,CALLSB=_NEG_TAIKI;

	M_BRA	CB_COP_DT_MK2_200


CB_COP_DT_MK2_050:
;;[2009-10-07下振子]	MOV.L	#_SET1_MRTION_SEL1,R1	;
;;[2009-10-07下振子]	MOV.W	@R1,R0			;
	CMP/EQ	#_DMATH_CNTROT,R0	;DRIVE MATH 連続回転
	BF	CB_COP_DT_MK2_100	;NO:反転

;	------- 回転(待機点0だからいいけど)-------
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_CNTROT_ZDG1,L1=W,DST=_WPAR_COP_ZDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_CNTROT_ZDG2,L1=W,DST=_WPAR_COP_ZDG2,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_CNTROT_SDG1,L1=W,DST=_WPAR_COP_SDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_CNTROT_SDG2,L1=W,DST=_WPAR_COP_SDG2,L2=W,CALLSB=_TAIKI_ADD;

;	-- 2009-10-07 --
	DATA_STD_SHN_MOV	SRC=_SET1_KJSTR_DIG1,L1=W,DST=_SETC_KJSTR_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_SET1_KJEND_DIG1,L1=W,DST=_SETC_KJEND_DIG1,L2=W;

	M_BRA	CB_COP_DT_MK2_200	

CB_COP_DT_MK2_100:
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG1,L1=W,DST=_WPAR_COP_ZDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_ZDG2,L1=W,DST=_WPAR_COP_ZDG2,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG1,L1=W,DST=_WPAR_COP_SDG1,L2=W,CALLSB=_TAIKI_ADD;
	DATA_STD_CHG_MOV	SRC=_WPAR_COP_REVRSE_SDG2,L1=W,DST=_WPAR_COP_SDG2,L2=W,CALLSB=_TAIKI_ADD;

;	-- 2009-10-07 --
	DATA_STD_SHN_MOV	SRC=_SET1_KJSTR_DIG1,L1=W,DST=_SETC_KJSTR_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_SET1_KJEND_DIG1,L1=W,DST=_SETC_KJEND_DIG1,L2=W;

CB_COP_DT_MK2_200:

	SUB_END
	M_RTS

;	***************************
;	***	待機点+data	***
;	***************************
;	
_TAIKI_ADD;
	SUB_START
	MOV.L	#_SETX_UPAREA_DIG,R1					;2;回転/反転時待機点
	MOV.W	@R1,R0							;
	DIG_REGA_ADD_REGB_ANS_REGB REGA=R0,REGB=R2,WKREG=R1,LATE=3600	;R0+R2==>R2
	SUB_END
	M_RTS

;	***************************
;	***	2009-10-07下振子***
;	***************************
;	Input +R2
_NEG_TAIKI_SUB;
	SUB_START

	MOV.L	#_SETX_UPAREA_DIG,R1					;2;回転/反転時待機点
	MOV.W	@R1,R1							;
	MOV.W	#3600,R0						;
	SUB	R1,R0							;
	DIG_REGA_SUB_REGB_ANS_REGB REGA=R2,REGB=R0,WKREG=R1,LATE=3600	;R0=R0-R2
	MOV	R0,R2							;

	SUB_END
	M_RTS

;	***************************
;	***	2009-10-07下振子***
;	***************************
;	Input +R2
_NEG_TAIKI;
	SUB_START

	MOV.W	#3600,R0						;
	SUB	R2,R0							;
	MOV	R0,R2							;

	SUB_END
	M_RTS

;	*******************************************
;	***					***
;	***	データ入れ替え			***
;	***	2009-10-07	下振子		***
;	*******************************************
_SIG_AREA_DATA_CHG:
	SUB_START
	MOV.L	#_DNM_DIR_SET_FLG,R1			;
	MOV.W	@R1,R0					;
	MOV.L	#_DNM_DIR_FLG_OLD,R1			;
	MOV.W	@R1,R2					;
	MOV.W	R0,@R1					;
	XOR	R2,R0					;CHG DIRECTION
	TST	R0,R0					;
	TST_BIT_OF SIG_AREA_DATCHG050			;

	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_DIG_SIG_FLG,LG=W,BIT=~(BIT2+BIT1),WKREG=R1				;BIT1:生信号
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~(BIT6+BIT5+BIT4+BIT3+BIT2+BIT1)),WKREG=R1	;2006-07-28

SIG_AREA_DATCHG050:

	MOV.L	#_SET1_MRTION_SEL1,R1			;
	MOV.W	@R1,R0					;
	TST	#_DMATH_CNTROT,R0			;
	TST_BIT_OF SIG_AREA_DATCHG100			;

	M_BRA	SIG_AREA_DATCHG500			;

SIG_AREA_DATCHG100:

	TST	#_DMATH_DNDRIV,R0			;
	TST_BIT_ON SIG_AREA_DATCHG120			;
	M_BRA	SIG_AREA_DATCHG200			;

SIG_AREA_DATCHG120:
	MOV.L	#_DNM_DIR_SET_FLG,R1			;
	MOV.W	@R1,R0					;
	TST	R0,R0					;
	TST_BIT_ON SIG_AREA_DATCHG150

	DATA_STD_SHN_MOV	SRC=_SETX_KJSTR_DIG1,L1=W,DST=_SETC_KJSTR_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_SETX_KJEND_DIG1,L1=W,DST=_SETC_KJEND_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV1_ZDG1,L1=W,DST=_WPAR_COP_ZDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV1_ZDG2,L1=W,DST=_WPAR_COP_ZDG2,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV1_SDG1,L1=W,DST=_WPAR_COP_SDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV1_SDG2,L1=W,DST=_WPAR_COP_SDG2,L2=W
	M_BRA	SIG_AREA_DATCHG190


SIG_AREA_DATCHG150:
	DATA_STD_SHN_MOV	SRC=_SETY_KJSTR_DIG1,L1=W,DST=_SETC_KJSTR_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_SETY_KJEND_DIG1,L1=W,DST=_SETC_KJEND_DIG1,L2=W;
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV2_ZDG1,L1=W,DST=_WPAR_COP_ZDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV2_ZDG2,L1=W,DST=_WPAR_COP_ZDG2,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV2_SDG1,L1=W,DST=_WPAR_COP_SDG1,L2=W
	DATA_STD_SHN_MOV	SRC=_WPARX_COP_DNDRV2_SDG2,L1=W,DST=_WPAR_COP_SDG2,L2=W
SIG_AREA_DATCHG190:
	M_BRA	SIG_AREA_DATCHG500			;

SIG_AREA_DATCHG200:


SIG_AREA_DATCHG500:



	SUB_END
	M_RTS

;	***************************
;	***			***
;	***************************
;
;	工程=1~MAX
;	0:終了ﾌﾗｸﾞ,0:開始ﾌﾗｸﾞ
;
;	//原点復帰ではやらない
;	//RESET解除時にｲﾆｼｬﾙ処理を行う:終了状態 BIT1=0(ｻﾝﾌﾟﾘﾝｸﾞ開始有効の意味)
;	//
;
;	(1)ｸﾗｯﾁに運転開始ｶｳﾝﾀを作る
;	(2)中断
;	(3)完了
;
;	回転
;	開始条件 :運転開始+角度a〜角度b
;	終了条件 :角度Bをcwで横切った

;	反転
;	開始条件 :運転開始+角度a〜角度b
;	終了条件 :最終工程で且つ角度aより待機点側にいる
;
;	=========================
;	COP_CB_LD_MONI_SIG;//荷重測定用信号 2003-01-31
;	BIT0=1 常時ON
;	BIT1=1 ゼロ調整角度
;	BIT2=1 荷重測定角度
;	BIT3=1 荷重測定完了
;	(BIT4)=1 ｾﾞﾛ調完了
;	BIT5=1 ACTIVE
;	*ｾﾞﾛ調整信号より荷重測定を優先する。
;
;

	.EXPORT	_CB_COP_SIG_MAK	
_CB_COP_SIG_MAK:		;
	SUB_START

	FAR_JSR	#_SIG_AREA_DATA_CHG,R0	;[2009-10-07下振子]

	MOV.L	#_INC_ENC360,R1		;//360.0度(ｴﾝｺｰﾀﾞは表示と同じ)
	MOV.W	@R1,R2			;
	MOV	R2,R8			;R8:NOW
;;;未使用	MOV.L	#_COP_ENC3600,R1	;
;;;未使用	MOV.W	R2,@R1			;
	MOV.L	#_COP_OLD_ENC3600,R1	;
	MOV.W	@R1,R9			;R9:OLD
;;;;このﾀｲﾐﾝｸﾞでﾘﾌﾚｯｼｭはしない	MOV.W	R2,@R1			;

	MOV.L	#_SEQ_DP_TOP+109*2,R1		;
	MOV.W	@R1,R0				;109.12
	MOV.W	#BIT12,R4			;
	TST	R4,R0				;
	TST_BIT_ON CB_COP_SIGMK_100		;

	MOV.W	#BIT0,R0			;
	MOV.L	#_COP_CB_LD_MONI_SIG,R1		;荷重測定しない
	MOV.W	R0,@R1				;BIT0=1(常時)
	
	XOR	R0,R0				;
	MOV.L	#_COP_DIG_SIG_FLG,R1		;
	MOV.W	R0,@R1				;
	
;	------ 2006-07-28----
	XOR	R0,R0				;
	MOV.L	#_KJ_AREA_SIG,R1;
	MOV.W	R0,@R1				;
	MOV.L	#_KJ_AREA_BT0_OLD,R1		;2013-06-19
	MOV.W	R0,@R1				;

	M_BRA	CB_COP_SIGMK_EXT		;


;	*******************************************
;	***					***
;	***	運転・非運転に関わらず行う	***
;	***					***
;	*******************************************
;	Z-DIG1:CWで横切ったらONor区間
;	Z-DIG2:CWで横切ったらOFF+完了
;	S-DIG1:CWで横切ったらONor区間(待機点)
;	S-DIG2:CWで横切ったらOFF+完了(待機点)
;	==========================
;	Z-DIG1:CWで横切ったらONor区間
;	Z-DIG2:CWで横切ったらOFF+完了
;	S-DIG1:CWで横切ったらONor区間(待機点+6度以上~180)
;	S-DIG2:CCWで横切ったらOFF+完了 (待機点+5度以下) SDIG2<SIDG1 (SDIG2が待機点に近い)
;
CB_COP_SIGMK_100:				;
	MOV.L	#_COP_DIG_SIG_FLG,R1				;
	MOV.W	@R1,R0						;
	TST	#BIT2,R0					;荷重測定中
	TST_BIT_ON CB_COP_SIGMK_120				;ZERO調整信号OFF

;	=============ｾﾞﾛ調整信号作成====================
	MOV.L	#_WPAR_COP_ZDG1,R0							;ZERO調整開始角度
	MOV.W	@R0,R1									;
	MOV.L	#_WPAR_COP_ZDG2,R0							;終了角度
	MOV.W	@R0,R3									;
	MOV	R8,R2									;
	DIG_AREA_CHK STREG=R1,EDREG=R3,PVREG=R2,ANSREG=R0				;
	CMP/EQ	#1,R0									;
	BF	CB_COP_SIGMK_120							;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_DIG_SIG_FLG,LG=W,BIT=BIT1,WKREG=R1		;範囲内
	M_BRA	CB_COP_SIGMK_150							;

CB_COP_SIGMK_120:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_DIG_SIG_FLG,LG=W,BIT=~BIT1,WKREG=R1		;BIT1:生信号
CB_COP_SIGMK_150:									;


;	============ 荷重信号 ============
	MOV.L	#_SET1_MRTION_SEL1,R1		;
	MOV.W	@R1,R0				;
;;2009-10-07下振子	CMP/EQ	#_DMATH_CNTROT,R0		;DRIVE MATH 連続回転
;;2009-10-07下振子	BF	CB_COP_SIGMK_250		;反転

	TST	#(_DMATH_CNTROT+_DMATH_DNDRIV),R0	;2009-10-06
	TST_BIT_OF CB_COP_SIGMK_250			;NO:反転

;	=== 回転 ==
	MOV.L	#_WPAR_COP_SDG1,R0			;荷重開始角度
	MOV.W	@R0,R1					;
	MOV.L	#_WPAR_COP_SDG2,R0			;終了角度
	MOV.W	@R0,R3					;
	M_BRA	CB_COP_SIGMK_280			;

;	=== 反転 ==
CB_COP_SIGMK_250:
	MOV.L	#_COP_DIG_SIG_FLG,R1				;
	MOV.W	@R1,R0						;
	TST	#BIT2,R0					;ON
	TST_BIT_ON CB_COP_SIGMK_270				;

	MOV.L	#_WPAR_COP_SDG1,R0			;荷重開始角度
	MOV.W	@R0,R1					;
	MOV.W	#_UPDN_DIRJG_DIG,R3			;"角度(距離ではない つもり)"
	M_BRA	CB_COP_SIGMK_280			;

CB_COP_SIGMK_270:
	MOV.L	#_WPAR_COP_SDG2,R0				;終了角度~待機点な角度保持
	MOV.W	@R0,R1						;
	MOV.L	#_SETX_UPAREA_DIG,R0				;
	MOV.W	@R0,R3						;

CB_COP_SIGMK_280:
	MOV	R8,R2									;
	DIG_AREA_CHK STREG=R1,EDREG=R3,PVREG=R2,ANSREG=R0				;
	CMP/EQ	#1,R0									;
	BF	CB_COP_SIGMK_290							;範囲外
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_DIG_SIG_FLG,LG=W,BIT=(BIT2),WKREG=R1		;荷重SET
	M_BRA	CB_COP_SIGMK_300

CB_COP_SIGMK_290:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_DIG_SIG_FLG,LG=W,BIT=(~BIT2),WKREG=R1		;荷重ｸﾘｱ
CB_COP_SIGMK_300:


;	===== 出力信号作成 ======
	MOV.L	#_COP_DIG_SIG_FLG,R1	;
	MOV.W	@R1,R0			;
	TST	#BIT1,R0		;
	TST_BIT_ON CB_COP_SIGMK_550	;

	MOV.L	#_COP_CB_LD_MONI_SIG,R1	;
	MOV.W	@R1,R0			;
	TST	#BIT1,R0		;
	TST_BIT_OF CB_COP_SIGMK_520	;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(BIT4),WKREG=R1	;ｾﾞﾛ完了
CB_COP_SIGMK_520:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~BIT1),WKREG=R1	;ｾﾞﾛｸﾘｱ
	M_BRA	CB_COP_SIGMK_580	;

CB_COP_SIGMK_550:
;;2006-07-28	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~(BIT4+BIT3+BIT2)),WKREG=R1	;ｾﾞﾛ完了ｸﾘｱ
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~(BIT6+BIT5+BIT4+BIT3+BIT2)),WKREG=R1	;2006-07-28
												;ｾﾞﾛ完了ｸﾘｱ
												;荷重測定中ｸﾘｱ
												;荷重完了ｸﾘｱ
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(BIT1),WKREG=R1		;ｾﾞﾛ中

;	------ 2006-07-28----
	XOR	R0,R0				;
	MOV.L	#_KJ_AREA_SIG,R1		;
	MOV.W	R0,@R1				;
	MOV.L	#_KJ_AREA_BT0_OLD,R1		;2013-06-19
	MOV.W	R0,@R1				;

CB_COP_SIGMK_580:


	MOV.L	#_COP_DIG_SIG_FLG,R1						;
	MOV.W	@R1,R0								;
	TST	#BIT2,R0							;
	TST_BIT_ON CB_COP_SIGMK_650						;

	MOV.L	#_COP_CB_LD_MONI_SIG,R1							;
	MOV.W	@R1,R0									;
	TST	#BIT2,R0								;荷重測定中だったか？
	TST_BIT_OF CB_COP_SIGMK_620							;NO
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(BIT3),WKREG=R1	;荷重測定完了
CB_COP_SIGMK_620:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~BIT2),WKREG=R1	;荷重測定ｸﾘｱ
	M_BRA	CB_COP_SIGMK_680	;

CB_COP_SIGMK_650:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(~BIT3),WKREG=R1	;荷重完了ｸﾘｱ
	MEM1_BIT0_TO_BIT7_ORSET MEM=_COP_CB_LD_MONI_SIG,LG=W,BIT=(BIT2),WKREG=R1	;荷重測定中
CB_COP_SIGMK_680:


;	=========2006-07-28 BIT4,5 REFLASH========
	FAR_JSR	#_KAJYUU_AREA_SIGMAK,R0		;
	MOV.W	#(BIT6+BIT5),R4			;
	MOV.L	#_KJ_AREA_SIG,R1		;
	MOV.W	@R1,R0				;
	AND	#(BIT6+BIT5),R0			;
	NOT	R4,R4
	MOV.L	#_COP_CB_LD_MONI_SIG,R1		;
	MOV.W	@R1,R2				;
	AND	R4,R2				;
	OR	R0,R2				;
	MOV.W	R2,@R1				;
;	----------- ﾃﾞﾊﾞｯｸ用--------
	MOV.L	#(_SQ_CBWK_TOP+26*2),R1		;_SQCB226
	MOV.W	R2,@R1				;



CB_COP_SIGMK_EXT:


	MOV.L	#_INC_ENC360,R1		;//360.0度(ｴﾝｺｰﾀﾞは表示と同じ)
	MOV.W	@R1,R2			;
	MOV.L	#_COP_OLD_ENC3600,R1	;
	MOV.W	R2,@R1			;


	SUB_END
	M_RTS


;	***************************************************
;	***						***
;	***	本当は工程も管理しないといけない	***
;	***						***
;	***************************************************
;	BIT0=1 AREA内
;	BIT1=1 STARTに入ったまたは工程が超えた
;	BIT2=1 ENDを超えたまたは範囲外になった
;	CLR 工程MAX~工程1になった
;
;
_KAJYUU_AREA_SIGMAK:
	SUB_START
	MOV.L	#_SETC_KJSTR_DIG1,R4						;[2009-10-07下振子]
	MOV.W	@R4,R1								;
	MOV.L	#_INC_ENC360,R4							;
	MOV.W	@R4,R2								;

	MOV.L	#_SETC_KJEND_DIG1,R4						;[2009-10-07下振子]
	MOV.W	@R4,R3			
	DIG_AREA_CHK STREG=R1,EDREG=R3,PVREG=R2,ANSREG=R0			;
	CMP/EQ	#1,R0								;
	BF	KAYJUU_AREASIGMK050						;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_KJ_AREA_SIG,LG=W,BIT=(BIT0),WKREG=R1	;AREA-ON
	M_BRA	KAYJUU_AREASIGMK090						;
KAYJUU_AREASIGMK050:								;
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_KJ_AREA_SIG,LG=W,BIT=(~BIT0),WKREG=R1	;
KAYJUU_AREASIGMK090:								;


;	-------- 開始条件----
	MOV.L	#_KJ_AREA_SIG,R1						;
	MOV.W	@R1,R0								;
	TST	#BIT1,R0							;START ON?
	TST_BIT_ON KAYJUU_AREASIGMK200						;

	MOV.L	#_SET1_KJSTR_STEP1,R1						;
	MOV.W	@R1,R0								;
	TST	R0,R0								;
	TST_BIT_OF KAYJUU_AREASIGMK130						;0:POS

	MOV.L	#_INT_POS_CTL_STEP,R1						;
	MOV.W	@R1,R2								;
	CMP/HI	R0,R2								;工程を超えた
	BT	KAYJUU_AREASIGMK150						;
	CMP/EQ	R0,R2								;
	BF	KAYJUU_AREASIGMK190						;

KAYJUU_AREASIGMK130:								;
	MOV.L	#_KJ_AREA_SIG,R1						;
	MOV.W	@R1,R0								;
	TST	#BIT0,R0							;
	TST_BIT_OF KAYJUU_AREASIGMK190						;
KAYJUU_AREASIGMK150:								;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_KJ_AREA_SIG,LG=W,BIT=(BIT5+BIT1),WKREG=R1	;AREA-ON
KAYJUU_AREASIGMK190:								;
	M_BRA	KAYJUU_AREASIGMK900						;

KAYJUU_AREASIGMK200:
;	-------- 終了条件----
	MOV.L	#_KJ_AREA_SIG,R1						;
	MOV.W	@R1,R0								;
	TST	#BIT2,R0							;START ON?
	TST_BIT_ON KAYJUU_AREASIGMK290						;


;;;;	MOV.L	#_SET1_KJEND_STEP1,R1						;
;;;;	MOV.W	@R1,R0								;
;;;;	TST	R0,R0								;
;;;;	TST_BIT_ON KAYJUU_AREASIGMK220						;POS以外
;;;;
;;;;
;;;;	MOV.L	#_SET1_MRTION_SEL1,R4						;
;;;;	MOV.W	@R4,R0								;
;;;;	TST	#(_DMATH_CNTROT+_DMATH_DNDRIV),R0				;回転orふりこか
;;;;	TST_BIT_OF KAYJUU_AREASIGMK240						;反転
;;;;
;;;;;	--------回転またはふりこの位置カム--------------
;;;;	MOV.L	#_KJ_AREA_SIG,R1		;
;;;;	MOV.W	@R1,R0				;
;;;;	TST	#BIT0,R0			;位置範囲?
;;;;	TST_BIT_OF KAYJUU_AREASIGMK250		;位置範囲から出たCLR
;;;;	M_BRA	KAYJUU_AREASIGMK290		;


;----------工程指定-------------
KAYJUU_AREASIGMK220:
	MOV.L	#_SET1_KJEND_STEP1,R1						;
	MOV.W	@R1,R0								;
	TST	R0,R0								;
	TST_BIT_OF KAYJUU_AREASIGMK230						;

	MOV.L	#_INT_POS_CTL_STEP,R1						;
	MOV.W	@R1,R2								;
	CMP/HI	R0,R2								;工程を超えた
	BT	KAYJUU_AREASIGMK250						;CLR
	CMP/EQ	R0,R2								;
	BF	KAYJUU_AREASIGMK290						;

KAYJUU_AREASIGMK230:
	MOV.L	#_SET1_MRTION_SEL1,R4				;
	MOV.W	@R4,R0						;
	TST	#(_DMATH_CNTROT+_DMATH_DNDRIV),R0		;回転orふりこか
	TST_BIT_OF KAYJUU_AREASIGMK240				;反転
	NOP
KAYJUU_AREASIGMK240:						;
;	-------- 位置カムまたは工程カムの現行工程-------------
	MOV.L	#_KJ_AREA_SIG,R1		;
	MOV.W	@R1,R0				;
	TST	#BIT0,R0			;
	TST_BIT_ON KAYJUU_AREASIGMK290		;ONしている

	MOV.L	#_KJ_AREA_BT0_OLD,R1		;//2013-06-19
	MOV.W	@R1,R0				;
	TST	#BIT0,R0			;ONしていた
	TST_BIT_ON KAYJUU_AREASIGMK250		;
	M_BRA	KAYJUU_AREASIGMK290		;

;	------------反転の場合だけ----------------
;;;;KAYJUU_AREASIGMK240:
;;;;
;;;;	MOV.L	#_COP_OLD_ENC3600,R0			;
;;;;	MOV.W	@R0,R4					;
;;;;	MOV.L	#_SETC_KJEND_DIG1,R0			;・・・・
;;;;	MOV.W	@R0,R2					;
;;;;	MOV.L	#_INC_ENC360,R0				;逆回転で横切ったら;
;;;;	MOV.W	@R0,R1			
;;;;
;;;;	DIG_AREA_CHK STREG=R1,EDREG=R3,PVREG=R2,ANSREG=R0			;
;;;;	CMP/EQ	#1,R0								;
;;;;	BT	KAYJUU_AREASIGMK250						;
;;;;	M_BRA	KAYJUU_AREASIGMK290						;
KAYJUU_AREASIGMK250:
	MEM1_BIT0_TO_BIT7_ANDCLR MEM=_KJ_AREA_SIG,LG=W,BIT=(~BIT5),WKREG=R1	;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_KJ_AREA_SIG,LG=W,BIT=(BIT6+BIT2),WKREG=R1	;END SET
KAYJUU_AREASIGMK290:								;
	NOP
KAYJUU_AREASIGMK900				;

KAYJUU_AREASIGMKEXT
	MOV.L	#_KJ_AREA_SIG,R1						;
	MOV.W	@R1,R0								;
	MOV.L	#_KJ_AREA_BT0_OLD,R1		;//2013-06-19
	MOV.W	R0,@R1				;


	SUB_END
	M_RTS


