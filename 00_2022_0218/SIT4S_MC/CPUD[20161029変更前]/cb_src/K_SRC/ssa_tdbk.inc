;	*******************************************
;	***					***
;	***	異常履歴、トレンドバックアップ	***
;	***	2003-07-01			***
;	***	EMGﾀｲﾌﾟでのHISTORY		***
;	*******************************************
	.IMPORT	_SQ_CBWK_TOP
	.IMPORT	_LOAD_REST_PLS
	.IMPORT	_LOAD_FREQ_PLS
	.IMPORT	_LOAD_NOW_FREQ_PLS
	.IMPORT	_OBJ_POS_DIG_MAK	;

	.GLOBAL		_ERR_INFO_CPUA_FLG	;CPUA=>WRITE  CPUB=>0CLR
	.GLOBAL		_ERR_INFO_CPUA_TOP	;(CPUAはDPRAM経由)

;	Input R1()
;	Input R4(対象ｺﾏﾝﾄﾞ) =
;;;pg容量確保[2012-03-06]	.EXPORT	_SMPLE_HIST_DATA_SET1	;
;;;pg容量確保[2012-03-06]	.EXPORT	_SMPLE_HIST_CLR

;;;pg容量確保[2012-03-06]	.EXPORT	_TRD_SMP_MAIN		;
;;;pg容量確保[2012-03-06]	.EXPORT	_TRD_SMP_INT_MAIN	;

									;1024
_EQ_TRD_SMP_CNT		.EQU	_CB_TRD_SMP_CNT				;128 128個*4*4=2048
_EQ_TRD_BEFOR_CNT	.EQU	_EQ_TRD_SMP_CNT*3/4			;何個
_EQ_TRD_AFTER_CNT	.EQU	_EQ_TRD_SMP_CNT-_EQ_TRD_BEFOR_CNT	;残り何個

	.MACRO	MAC_TRD_POINT_CHK1 POINT_REG,WKREG1
	MOV.W	#_EQ_TRD_SMP_CNT,\WKREG1	;1024 0~1023 MAX

	CMP/PZ	\POINT_REG			;
	BT	JMP00\@				;引き算をした結果が入力された
	ADD	\WKREG1,\POINT_REG		;
	M_BRA	JMP01\@				;"-" THEN ADD MAX
JMP00\@						;
	CMP/HS	\WKREG1,\POINT_REG		;
	BF	JMP01\@				;DATA=<MAX
	SUB	\WKREG1,\POINT_REG		;
JMP01\@						;
	.ENDM


;	*******************************************
;	***					***
;	***	トレンド			***
;	***	2003-07-09			***
;	***					***
;	*******************************************
;	異常発生の前(96)後(32)または位置決め完了時の前後をサンプリングする。
;	シーケンスはバックアップしたい異常が発生した場合バックアップ指令をＯＮする。
;	特定の異常に関しては、システム側でバックアップを行う
;	・ｼｰｹﾝｽ指令のｲﾍﾞﾝﾄ発生から前Ｋ個＋後Ｍ個のデータを整列させ、バックアップを行う
;	1msec/10msec/20msec
;	SV-残りﾊﾟﾙｽ=指令ﾊﾟﾙｽとして表示する
;	(ｵｰﾊﾞﾗﾝ/ﾌﾞﾚｰｷ異常)
	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;
;	ｻﾝﾌﾟﾘﾝｸﾞ(後32個ｻﾝﾌﾟﾘﾝｸﾞ)後ﾊﾞｯｸｱｯﾌﾟ指令を参照する


;;;pg容量確保[2012-03-06]_TRD_SMP_MAIN:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06];	=== 2004-06-28 ﾄﾚﾝﾄﾞ指令,ﾊﾞｯｸｱｯﾌﾟ指令を切+連続停止釦で行うBIT1,BIT3
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======== 切+連続停止釦======
;;;pg容量確保[2012-03-06]	MOV.L	#(_SQ_CBWK_TOP+_WKSQCB200),R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R2					;
;;;pg容量確保[2012-03-06]	MOV.W	#(BIT7+BIT0),R3				;切+連続
;;;pg容量確保[2012-03-06]	AND	R3,R2					;
;;;pg容量確保[2012-03-06]	CMP/EQ	R3,R2					;
;;;pg容量確保[2012-03-06]	BF	TRD_SMP_MNSQ050				;
;;;pg容量確保[2012-03-06]	MOV.W	#(BIT3+BIT1),R4				;
;;;pg容量確保[2012-03-06]	OR	R4,R0					;
;;;pg容量確保[2012-03-06]TRD_SMP_MNSQ050:					;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_DP_MOV_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_MN020	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_DATA_SND,R0	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_MN020:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMP_DT_CLR,R0		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT2,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_SMP_MN100		;転送中
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0			;転送待ちまで完了
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_SMP_MN050		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_LATCH,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_MN050		;EVENT未
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1					;345.3 ON 2004-06-28
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0							;
;;;pg容量確保[2012-03-06]	TST	#BIT3,R0						;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_MN100					;EXIT
;;;pg容量確保[2012-03-06]	MEM1_BIT0_TO_BIT7_ORSET MEM=_TRD_SMP_FLG,LG=W,BIT=BIT2,WKREG=R1	;BIT2:転送開始
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	== ﾊﾞｯｸｱｯﾌﾟ開始 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_DP_MOV_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	#BIT0,R0		;START
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_MN050:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_MN100:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***********************************
;	***				***
;	***	SMPLING			***
;	***				***
;	***********************************
;;;pg容量確保[2012-03-06]_TRD_SMP_INT_MAIN:
;;;pg容量確保[2012-03-06]	SUB_START				;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_LATCH,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0			;ｻﾝﾌﾟﾘﾝｸﾞ完了
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_SMP_INT_MN_EXT		;完了(転送)
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_INT_MN_EXT		;開始未
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMPLE,R0			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_INT_MN_EXT:
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;
;

;	*******************************************
;	***					***
;	***		CLR			***
;	***					***
;	*******************************************
;	ﾘｾｯﾄ処理
;
;;;pg容量確保[2012-03-06]_TRD_SMP_DT_CLR:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_CLR_CMD,R5	;//01 CLR:開始
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_SMP_DTCLR00	;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMP_DTCLR50		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_DTCLR00:
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1		;345.3 off WAIT 2004-06-28
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT3,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_DTCLR20		;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMP_DTCLR50		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_DTCLR20:
;;;pg容量確保[2012-03-06]	
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_CLR_CMD,R5	;//01 CLR
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R5			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	-------------------------------
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_FLG,R1	;
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===================================
;;;pg容量確保[2012-03-06];	===				===
;;;pg容量確保[2012-03-06];	===================================
;;;pg容量確保[2012-03-06];	==	本当はなくていいが書きえたかどうかのデバックのため	===
;;;pg容量確保[2012-03-06]	MOV.L	#H'0,R2			;CLR data
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT1,R5	;TOP
;;;pg容量確保[2012-03-06]	MOV.W	#_EQ_TRD_SMP_CNT,R3	;ｶｳﾝﾀ
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMP_RAM4B_CLR,R0	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#H'0,R2			;CLR data
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT2,R5	;TOP
;;;pg容量確保[2012-03-06]	MOV.W	#_EQ_TRD_SMP_CNT,R3	;ｶｳﾝﾀ
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMP_RAM4B_CLR,R0	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#H'0,R2			;CLR data
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT3,R5	;TOP
;;;pg容量確保[2012-03-06]	MOV.W	#_EQ_TRD_SMP_CNT,R3	;ｶｳﾝﾀ
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMP_RAM4B_CLR,R0	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#H'0,R2				;CLR data
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT4,R5		;TOP
;;;pg容量確保[2012-03-06]	MOV.W	#_EQ_TRD_SMP_CNT,R3	;ｶｳﾝﾀ
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMP_RAM4B_CLR,R0		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===================
;;;pg容量確保[2012-03-06];	===	開始	===
;;;pg容量確保[2012-03-06];	===================
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMP_INI,R0		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_DTCLR50:
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	*******************************************
;	***					***
;	***	R2 CLR DATA R3 4byte CNT	***
;	***					***
;	*******************************************
;;;pg容量確保[2012-03-06]_SMP_RAM4B_CLR:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]SMP_RAM4BCLR_LOP:
;;;pg容量確保[2012-03-06]	TST	R3,R3				;
;;;pg容量確保[2012-03-06]	TST_BIT_OF SMP_RAM4BCLR_END		;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R5				;
;;;pg容量確保[2012-03-06]	ADD	#4,R5				;
;;;pg容量確保[2012-03-06]	ADD	#-1,R3				;
;;;pg容量確保[2012-03-06]	M_BRA	SMP_RAM4BCLR_LOP		;
;;;pg容量確保[2012-03-06]SMP_RAM4BCLR_END:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


;	*******************************************
;	***					***
;	***	ﾄﾚﾝﾄﾞｻﾝﾌﾟﾘﾝｸﾞ開始ｲﾆｼｬﾙ		***
;	***					***
;	*******************************************
;		ﾘｾｯﾄ時に呼ばれる
;
;;;pg容量確保[2012-03-06]_TRD_SMP_INI:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV	#D'10,R2		;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1	;345.4
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	#BIT4,R0		;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMPINI_020	;
;;;pg容量確保[2012-03-06]	MOV	#D'1,R2			;
;;;pg容量確保[2012-03-06]TRD_SMPINI_020:				;
;;;pg容量確保[2012-03-06]					;
;;;pg容量確保[2012-03-06]	TST	#BIT5,R0		;345.5
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMPINI_040	;
;;;pg容量確保[2012-03-06]	SHLL	R2			;*2(20ms/2ms)
;;;pg容量確保[2012-03-06]TRD_SMPINI_040:				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_SV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R2,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_SV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_PV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===== ｻﾝﾌﾟﾘﾝｸﾞ処理開始 ====
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_POINT,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_LATCH,R1	;//停止イベントラッチ
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_COD,R1
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	=== ﾃﾞﾊﾞｯｸのために0にするだけ====
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_EVENT,R1	;//EVENTが発生したﾎﾟｲﾝﾄ
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_END,R1	;//ここまでｻﾝﾌﾟﾘﾝｸﾞしたら完了
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	#BIT0,R0		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


;	*******************************************
;	***					***
;	***	ﾄﾚﾝﾄﾞｻﾝﾌﾟﾘﾝｸﾞ中			***
;	***					***
;	*******************************************
;		通常処理で呼ばれる
;		TRD_SMP_FLG BIT0=1
;			    BIT1=0
;	POINTERはこれから入れるｱﾄﾞﾚｽを指し示している
;
;;;pg容量確保[2012-03-06]_TRD_SMPLE:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_PV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	ADD	#-1,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMPL_050		;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMPL_900		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMPL_050:
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_SV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_LATE_PV,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	====== LATCH CHKEAK ====
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_LATCH,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0		;処理完了
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMPL_100		;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMPL_900		;
;;;pg容量確保[2012-03-06]TRD_SMPL_100:
;;;pg容量確保[2012-03-06]	TST	#BIT0,R0		;LATCH END?
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_SMPL_200		;YES LATCH END
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_LATCH_CONF,R0		;ｲﾍﾞﾝﾄ条件CHEAK
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	TST	R0,R0				;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMPL_220			;EVENT なし
;;;pg容量確保[2012-03-06];	== EVENT ON ==
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMPLE_EVENT,R0		;
;;;pg容量確保[2012-03-06]	MEM1_BIT0_TO_BIT7_ORSET MEM=_TRD_EVENT_LATCH,LG=W,BIT=BIT0,WKREG=R1	;bit-set
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMPL_220			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMPL_200:
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_POINT,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_END,R1		;//ここまでｻﾝﾌﾟﾘﾝｸﾞしたら完了(END_POSINTはｻﾝﾌﾟﾘﾝｸﾞしていない)
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R2				;
;;;pg容量確保[2012-03-06]	CMP/EQ	R0,R2				;"EQ"
;;;pg容量確保[2012-03-06]	BF	TRD_SMPL_220			;NO
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MEM1_BIT0_TO_BIT7_ORSET MEM=_TRD_EVENT_LATCH,LG=W,BIT=BIT1,WKREG=R1	;bit-set
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMPL_900			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMPL_220:
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_POINT,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R5					;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMP_WORK_1DOT,R0			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_POINT,R6			;
;;;pg容量確保[2012-03-06]	MOV.W	@R6,R0					;
;;;pg容量確保[2012-03-06]	ADD	#1,R0					;
;;;pg容量確保[2012-03-06]	MAC_TRD_POINT_CHK1 POINT_REG=R0,WKREG1=R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R6					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMPL_900:
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	***	SMPLIENG WORK =>SEND WORK	***
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	R7~R14,R0,R1,R2,R5,R6
;;;pg容量確保[2012-03-06];	8Kdata ==>2Kdata
;;;pg容量確保[2012-03-06]_TRD_SMP_WORK_1DOT
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV	R5,R9				;
;;;pg容量確保[2012-03-06]	SHLL2	R9				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	------------------------------------
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT1,R8		;
;;;pg容量確保[2012-03-06]	ADD	R9,R8				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_REST_PLS,R0		;R0
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_SV_OBJ_ABSPLS,R1		;(はじめの起動分はﾒｲﾝで作られている)
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R2			;SV-REST
;;;pg容量確保[2012-03-06]	SUB	R0,R2				;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	------------------------------------
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT2,R8		;
;;;pg容量確保[2012-03-06]	ADD	R9,R8				;
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_PV_ABSPLS,R1		;RL_OBJ-->PV 20060919
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;実位置
;;;pg容量確保[2012-03-06]	MOV.L	R0,@R8				;
;;;pg容量確保[2012-03-06];	------------------------------------
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT3,R8		;
;;;pg容量確保[2012-03-06]	ADD	R9,R8				;
;;;pg容量確保[2012-03-06]	MOV.L	#_RNA_ABS_POS,R1		;RNA_ABS_POS
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@R8				;
;;;pg容量確保[2012-03-06];	------------------------------------
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT4,R8		;
;;;pg容量確保[2012-03-06]	ADD	R9,R8				;周波数
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0		;R0:周波数
;;;pg容量確保[2012-03-06];;2004-01-29	SHLL8	R0				;
;;;pg容量確保[2012-03-06]	SHLL16	R0				;
;;;pg容量確保[2012-03-06]	MOV.L	#_ENC360_HEX,R1			;//HEX data
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R2				;
;;;pg容量確保[2012-03-06]	EXTU.W	R2,R2				;
;;;pg容量確保[2012-03-06]	OR	R2,R0				;上位周波数／下位360ｴﾝｺｰﾀﾞ
;;;pg容量確保[2012-03-06]	MOV.L	R0,@R8				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	***************************
;;;pg容量確保[2012-03-06];	***			***
;;;pg容量確保[2012-03-06];	***			***
;;;pg容量確保[2012-03-06];	***************************
;;;pg容量確保[2012-03-06]_TRD_LATCH_CONF:		;ｲﾍﾞﾝﾄ条件CHEAK
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_COD,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_LATCH_CF_EXT	;
;;;pg容量確保[2012-03-06];;	ﾘｾｯﾄ解除ではまだ立っている
;;;pg容量確保[2012-03-06]	MOV.L	#_emg_err_flg,R1	;//異常ﾗｯﾁ
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_LATCH_CF_50	;EMG
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1	;345.2 TRD
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	#BIT2,R0		;345.2 SMPLING指令
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_LATCH_CF_50	;
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;(miss)
;;;pg容量確保[2012-03-06]	M_BRA	TRD_LATCH_CF_EXT	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_LATCH_CF_50:			;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_EVENT_COD,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	OR	#BIT0,R0		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]TRD_LATCH_CF_EXT:		;ｲﾍﾞﾝﾄ条件CHEAK
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	***	ﾄﾚﾝﾄﾞｻﾝﾌﾟﾘﾝｸﾞ中=>ｲﾍﾞﾝﾄﾗｯﾁ	***
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];		ｼｰｹﾝｽONまたは特定の異常発生時に呼ばれる
;;;pg容量確保[2012-03-06];		ｻﾝﾌﾟﾘﾝｸﾞﾎﾟｲﾝﾀLATCH/終了の処理
;;;pg容量確保[2012-03-06]_TRD_SMPLE_EVENT:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_POINT,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0					;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_EVENT,R1			;//EVENTが発生したﾎﾟｲﾝﾄ
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1					;
;;;pg容量確保[2012-03-06]	MOV.W	#_EQ_TRD_AFTER_CNT,R1			;
;;;pg容量確保[2012-03-06]	ADD	R1,R0					;
;;;pg容量確保[2012-03-06]	MAC_TRD_POINT_CHK1 POINT_REG=R0,WKREG1=R1	;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_END,R1			;//ここまでｻﾝﾌﾟﾘﾝｸﾞしたら完了
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1					;;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	***	ﾄﾚﾝﾄﾞｻﾝﾌﾟﾘﾝｸﾞ中=>終了		***
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	***	ﾄﾚﾝﾄﾞｻﾝﾌﾟﾘﾝｸﾞ中=>終了		***
;;;pg容量確保[2012-03-06];	***	WPV-WORKへの並び替え		***
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	SMPLINGはたくさんやって送るのはEVENT-96+32
;;;pg容量確保[2012-03-06]_TRD_SMPLE_SORT:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_POINT_EVENT,R1			;//EVENTが発生したﾎﾟｲﾝﾄ
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0					;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_BEFORE,R2			;96点
;;;pg容量確保[2012-03-06]	SUB	R2,R0					;
;;;pg容量確保[2012-03-06]	MAC_TRD_POINT_CHK1 POINT_REG=R0,WKREG1=R1	;
;;;pg容量確保[2012-03-06]	MOV	R0,R5					;TOP POINT DATA
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_SMP_CNT,R6			;LOOPS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMP_WORK_TO_WORK_MOVE1,R0		;Input R5,R6 8k-->2k
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	***	SMPLIENG WORK =>SEND WORK	***
;;;pg容量確保[2012-03-06];	***					***
;;;pg容量確保[2012-03-06];	*******************************************
;;;pg容量確保[2012-03-06];	R7~R14,R0,R1,R2,R5,R6
;;;pg容量確保[2012-03-06];	8Kdata ==>2Kdata
;;;pg容量確保[2012-03-06]_TRD_SMP_WORK_TO_WORK_MOVE1:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT1,R8	;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT2,R9	;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT3,R10	;
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_SMP_DAT4,R11	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_TRD_DAT_TOP,R7	;//ﾄﾚﾝﾄﾞﾊﾞﾌｧ
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_WK_MV1_LOP:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	TST	R6,R6					;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_SMP_WK_MV1_END			;
;;;pg容量確保[2012-03-06]	MOV	R5,R0					;
;;;pg容量確保[2012-03-06]	SHLL2	R0					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@(R0,R8),R2				;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R7					;
;;;pg容量確保[2012-03-06]	ADD	#4,R7					;
;;;pg容量確保[2012-03-06]	MOV.L	@(R0,R9),R2				;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R7					;
;;;pg容量確保[2012-03-06]	ADD	#4,R7					;
;;;pg容量確保[2012-03-06]	MOV.L	@(R0,R10),R2				;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R7					;
;;;pg容量確保[2012-03-06]	ADD	#4,R7					;
;;;pg容量確保[2012-03-06]	MOV.L	@(R0,R11),R2				;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R7					;
;;;pg容量確保[2012-03-06]	ADD	#4,R7					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	ADD	#-1,R6					;
;;;pg容量確保[2012-03-06]	ADD	#1,R5					;
;;;pg容量確保[2012-03-06]	MAC_TRD_POINT_CHK1 POINT_REG=R5,WKREG1=R1	;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_SMP_WK_MV1_LOP			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_SMP_WK_MV1_END:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	*******************************************
;	***					***
;	***	WPV-WORK => DPRAM へ		***
;	***	CPUA				***
;	*******************************************
;;;pg容量確保[2012-03-06]_TRD_DATA_SND:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_DP_MOV_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0		;inital end?
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_DATASD_050	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MEM1_BIT0_TO_BIT7_ORSET MEM=_TRD_DP_MOV_FLG,LG=W,BIT=BIT1,WKREG=R1	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_SMPLE_SORT,R0	;data作成 sort
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_POINT,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATASD_050:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_TRD_SAVE_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_DATASD_EXT	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_DP_MOV_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	TST	#BIT2,R0		;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_DATASD_100	;BAKUP CMD END? NO
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R0,R0
;;;pg容量確保[2012-03-06]	MOV.L	#_TRD_DP_MOV_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;END
;;;pg容量確保[2012-03-06]	M_BRA	TRD_DATASD_EXT		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATASD_100:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_POINT,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_SMP_CNT,R4	;128
;;;pg容量確保[2012-03-06]	CMP/HS	R4,R0			;
;;;pg容量確保[2012-03-06]	BF	TRD_DATASD_200		;
;;;pg容量確保[2012-03-06];	=== 終了 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_TRD_SAVE_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R0	;BAKUP-CMD
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	MEM1_BIT0_TO_BIT7_ORSET MEM=_TRD_DP_MOV_FLG,LG=W,BIT=BIT2,WKREG=R1	;END待ち
;;;pg容量確保[2012-03-06]	M_BRA	TRD_DATASD_EXT		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	== R0:POINTER ==
;;;pg容量確保[2012-03-06]TRD_DATASD_200:
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_TRD_DAT_TOP,R7			;//ﾄﾚﾝﾄﾞﾊﾞﾌｧ
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_DAT_TOP,R8			;//ﾄﾚﾝﾄﾞﾊﾞﾌｧ
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_DP_1CNT,R4			;
;;;pg容量確保[2012-03-06]	MOV	R4,R5					;
;;;pg容量確保[2012-03-06]	MOV	R0,R1					;
;;;pg容量確保[2012-03-06]	SHLL2	R1					;*4
;;;pg容量確保[2012-03-06]	SHLL2	R1					;*4=*16
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	ADD	R1,R7					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATASD_250:
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2			;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8			;
;;;pg容量確保[2012-03-06]	ADD	#4,R8			;1CH
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2			;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8			;
;;;pg容量確保[2012-03-06]	ADD	#4,R8			;2CH
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2			;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8			;
;;;pg容量確保[2012-03-06]	ADD	#4,R8			;3CH
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2			;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8			;
;;;pg容量確保[2012-03-06]	ADD	#4,R8			;4CH
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	ADD	#-1,R4			;
;;;pg容量確保[2012-03-06]	TST	R4,R4			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON TRD_DATASD_250	;
;;;pg容量確保[2012-03-06]	ADD	R5,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_POINT,R1	;8個送ったぞ
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_TRD_SAVE_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD2,R0	;WRITE CMD
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATASD_EXT:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


	.AELSE
;
;	== CPUB==
;
_TRD_SMP_MAIN:
	SUB_START
;;;pg容量確保[2012-03-06]	FAR_JSR	#_TRD_DATA_RCV,R0
	
	SUB_END
	M_RTS

_TRD_SMP_INT_MAIN:
	SUB_START

;;;pg容量確保[2012-03-06];	NO USED

	SUB_END
	M_RTS


;	*******************************************
;	***					***
;	***	WPV-WORK => DPRAM へ		***
;	***	CPUB				***
;	*******************************************
;;;pg容量確保[2012-03-06]_TRD_DATA_RCV:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_TRD_SAVE_FLG,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0					;
;;;pg容量確保[2012-03-06]	TST	R0,R0					;
;;;pg容量確保[2012-03-06]	TST_BIT_OF TRD_DATARD_EXT			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R4			;BAKUP-CMD
;;;pg容量確保[2012-03-06]	CMP/EQ	R4,R0					;
;;;pg容量確保[2012-03-06]	BF	TRD_DATARD_050				;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_TRNDDAT1_SAVE_TO_FRAM,R0	;
;;;pg容量確保[2012-03-06]	M_BRA	TRD_DATARD_800				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATARD_050:						;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD2,R4			;BAKUP-CMD
;;;pg容量確保[2012-03-06]	CMP/EQ	R4,R0					;
;;;pg容量確保[2012-03-06]	BT	TRD_DATARD_100				;WR CMD
;;;pg容量確保[2012-03-06]	M_BRA	TRD_DATARD_800
;;;pg容量確保[2012-03-06]TRD_DATARD_100:
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_POINT,R5			;
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0					;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_SMP_CNT,R4			;128
;;;pg容量確保[2012-03-06]	CMP/HI	R4,R0					;MAX < POINT
;;;pg容量確保[2012-03-06]	BT	TRD_DATARD_800				;ERR
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_TRD_DP_1CNT,R4			;8
;;;pg容量確保[2012-03-06]	CMP/HI	R0,R4					;<8
;;;pg容量確保[2012-03-06]	BT	TRD_DATARD_800				;ERR
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_TRD_POINT,R6			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R6					;8
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_TRD_DAT_TOP,R7			;
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_TRD_DAT_TOP,R8			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB	R4,R0					;
;;;pg容量確保[2012-03-06]	SHLL2	R0					;*4BYTE
;;;pg容量確保[2012-03-06]	SHLL2	R0					;*4CH
;;;pg容量確保[2012-03-06]	ADD	R0,R8					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATARD_200:						;
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2					;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8					;
;;;pg容量確保[2012-03-06]	ADD	#4,R8					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2					;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8					;
;;;pg容量確保[2012-03-06]	ADD	#4,R8					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2					;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8					;
;;;pg容量確保[2012-03-06]	ADD	#4,R8					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	@R7+,R2					;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R8					;
;;;pg容量確保[2012-03-06]	ADD	#4,R8					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	ADD	#-1,R4
;;;pg容量確保[2012-03-06]	TST	R4,R4					;
;;;pg容量確保[2012-03-06]	TST_BIT_ON	TRD_DATARD_200			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATARD_800:						;
;;;pg容量確保[2012-03-06]	XOR	R0,R0
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_TRD_SAVE_FLG,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1					;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]TRD_DATARD_EXT:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

	.AENDI




;	*******************************************
;	***					***
;	***	異常履歴			***
;	***	2003-07-09			***
;	***	EMGﾀｲﾌﾟでのHISTORY		***
;	***					***
;	*******************************************
;	R4=1の場合は既に異常が発生していなければｺｰﾄﾞを履歴へ
;		EVENT->WK-->DPRAM
;	R4=0の場合は保留し、異常履歴指令にてバックアップ
;		EVENT->WK SEQ 314.14 WK-->DPRAM
;		もし先にリセットされたた DP->WKへ戻す
;	SENDでWK->DPは全ﾃﾞｰﾀ領域転送 WKは発生した箇所の書き換え
;
;	EVENT 
;	<1>_HIST_DAT_SEND_DIS<=1
;		<2>_HIST_DAT_SEND_COM/_HIST_KEP_SEND_COM <=1
;
;		<3>_HIST_KEP_SEND_COM=1なら
;			SEND_DIS<=0ならキャンセル
;			SEND_DIS=1 で 314.14 <=1なら
;			_HIST_DAT_SEND_COM<=1
;
;		<4>_HIST_DAT_SEND_COM=1なら
;			<5>_CB_STS_SAVE_FLG<=1 (dpram hand)
;
;Input R4

;;;	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]_SMPLE_HIST_DATA_SET1:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	PUSH_ALL
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_DIS,R2	;//1:DISENABLE 0:ENABLE
;;;pg容量確保[2012-03-06]	MOV.W	@R2,R0			;TST
;;;pg容量確保[2012-03-06]	TST	R0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_ON SMPLE_HIST_DATST_EXT	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_EVENT_COD,R0	;//CALL時に入れる
;;;pg容量確保[2012-03-06]	MOV.W	R1,@R0			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMPLE_HIST_DT,R0	;Input R4
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.W	#1,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_DIS,R1	;//1:DISENABLE 0:ENABLE
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;1:DISENABLE(ﾘｾｯﾄでENBになる)
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]SMPLE_HIST_DATST_EXT:
;;;pg容量確保[2012-03-06]	POP_ALL
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***********************************
;	***	HIST DATA CLR		***
;	***********************************

;;;pg容量確保[2012-03-06]_SMPLE_HIST_CLR:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	PUSH_ALL
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.W	#(_CB_STS_BUF_1BLK*_CB_STS_BUF_BLKMAX)/4,R3	;POINTER*BLOCK(32)
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_STS_DAT_TOP,R1				;
;;;pg容量確保[2012-03-06]	XOR	R2,R2						;
;;;pg容量確保[2012-03-06]SMPLE_HIST_CR00:						;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R1						;
;;;pg容量確保[2012-03-06]	ADD	#4,R1						;
;;;pg容量確保[2012-03-06]	ADD	#-1,R3						;
;;;pg容量確保[2012-03-06]	TST	R3,R3						;
;;;pg容量確保[2012-03-06]	TST_BIT_ON SMPLE_HIST_CR00				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_STS_POINT,R1				;
;;;pg容量確保[2012-03-06]	MOV.W	R2,@R1						;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======= COMMAND SET ==========
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_COM,R1				;
;;;pg容量確保[2012-03-06]	MOV.W	#-1,R0						;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1						;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	POP_ALL
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS



;	***********************************
;	***				***
;	***	SMPLING			***
;	***	data=>Work		***
;	***	EMGの処理前にCALLする事	***
;	***********************************
;	Input R4
;	Destroy R0~R14
;;;pg容量確保[2012-03-06]_SMPLE_HIST_DT:			;
;;;pg容量確保[2012-03-06]	SUB_START			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======================
;;;pg容量確保[2012-03-06]	PUSH_REG1 R4			;
;;;pg容量確保[2012-03-06]	MOV.L	#_WXPV_ERR_DISP,R5	;[64*8];//64byte *8 page
;;;pg容量確保[2012-03-06]	LDC.L	R5,GBR			;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_HISTROY_DAT_MOVE2,R0	;Input GBR
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	POP_REG1 R4			;
;;;pg容量確保[2012-03-06];	======================
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	PUSH_REG1 R4
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_STS_POINT,R5	;
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0			;0,1,2,3,,,,,31,0,1
;;;pg容量確保[2012-03-06]	AND	#H'1F,R0		;limit
;;;pg容量確保[2012-03-06]	ADD	#1,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_STS_BUF_BLKMAX,R4	;
;;;pg容量確保[2012-03-06]	CMP/HS	R4,R0			;
;;;pg容量確保[2012-03-06]	BF	SMPLE_HISTDT_050	;
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]SMPLE_HISTDT_050:			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R5			;POINTER SAVE
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_STS_BUF_1BLK,R1	;POINTER*BLOCK(32)
;;;pg容量確保[2012-03-06]	DMULS.L	R1,R0			;
;;;pg容量確保[2012-03-06]	STS.L	MACL,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_WPV_CB_STS_DAT_TOP,R5	;
;;;pg容量確保[2012-03-06]	ADD	R0,R5			;TOP[0~31]
;;;pg容量確保[2012-03-06];	===================================
;;;pg容量確保[2012-03-06];	>> 情報をWORKへ <<
;;;pg容量確保[2012-03-06]	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	LDC.L	R5,GBR			;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_HISTROY_DAT_MOVE1,R0	;Input GBR
;;;pg容量確保[2012-03-06]	.AENDI

;;;pg容量確保[2012-03-06]	POP_REG1 R4
;;;pg容量確保[2012-03-06]	TST	R4,R4
;;;pg容量確保[2012-03-06]	TST_BIT_OF SMPLE_HISTDT_080
;;;pg容量確保[2012-03-06];	======= COMMAND SET ==========
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_COM,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	#-1,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	M_BRA	SMPLE_HISTDT_100	;
;;;pg容量確保[2012-03-06]SMPLE_HISTDT_080:
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_KEP_SEND_COM,R1;//保留ｺﾏﾝﾄﾞ〜ﾘｾｯﾄまでの間 異常履歴指令受付
;;;pg容量確保[2012-03-06]	MOV.W	#-1,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1			;
;;;pg容量確保[2012-03-06]	M_BRA	SMPLE_HISTDT_100	;
;;;pg容量確保[2012-03-06]SMPLE_HISTDT_100:
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***************************
;	***			***
;	***	Info ==> GBR	***
;	***			***
;	***************************
;	_HIST_EVENT_COD,R1;//CALL時に入れる
;	=========================
;	32*8
;	4*8+2*8+2*8= 64(内32)
;	_PV_CB_STS_DAT_TOP
;

;	==== C01~ 4*0~4*7  10進==
_EQ_HIS1_SV_OBJPLS	.EQU	4*0	;C01 下位4byte
_EQ_HIS1_PV_INCPLS	.EQU	4*1	;C02 下位4byte
_EQ_HIS1_SV_PVPCMP	.EQU	4*2	;C03 下位4byte
_EQ_HIS1_REST_PLS	.EQU	4*3	;C04
_EQ_HIS1_TOTAL_PLS1	.EQU	4*4	;C05 上位4BYTE
_EQ_HIS1_ADDDT_PLS	.EQU	4*5	;C06 下位4BYTE
_EQ_HIS1_REV1		.EQU	4*6	;C07 下位4BYTE
_EQ_HIS1_REV2		.EQU	4*7	;C08 下位4BYTE

;	==== A01~ 4*8~4*11+0+1 16進===
_EQ_HIS1_EVENT_COD	.EQU	4*8+0*2		;
_EQ_HIS1_CTL_STEP	.EQU	4*8+1*2		;
_EQ_HIS1_POS_CMD	.EQU	4*9+0*2		;
_EQ_HIS1_POS_STS1	.EQU	4*9+1*2		;
_EQ_HIS1_DRV_DIR1	.EQU	4*10+0*2	;
_EQ_HIS1_PV_DIR		.EQU	4*10+1*2	;
_EQ_HIS1_SEQ1		.EQU	4*11+0*2	;A07
_EQ_HIS1_SEQ2		.EQU	4*11+1*2	;A08

;	==== B01~ 4*12~4*15+0+1 10進===
_EQ_HIS1_POW_CNT	.EQU	4*12+0*2	;0B01 2,3 2byte
_EQ_HIS1_SV_DIG		.EQU	4*12+1*2	;12
_EQ_HIS1_PV_DIG		.EQU	4*13+0*2	;14
_EQ_HIS1_ENCDG		.EQU	4*13+1*2	;
_EQ_HIS1_FREQ_SV	.EQU	4*14+0*2	;4設定周波数 2byte
_EQ_HIS1_NOW_FREQ	.EQU	4*14+1*2	;6現在周波数
_EQ_HIS1_SVSPD_PER	.EQU	4*15+0*2	;8
_EQ_HIS1_PVSPD_PER	.EQU	4*15+1*2	;10

;;;;_EQ_HIS1_FREQ_PLS	.EQU	4*12+1*2	;2動作周波数 2byte

;;
;;;pg容量確保[2012-03-06]_HISTROY_DAT_MOVE1:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===== 2BYTE 16進ﾃﾞｰﾀ A01~A08 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_EVENT_COD,R1;//CALL時に入れる
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_EVENT_COD,GBR)	;+1*2
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_INT_POS_CTL_STEP,R1		;//内部制御工程1~11
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_CTL_STEP,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_MNWR_POS_CMD,R1		;減速停止,起動OFF
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POS_CMD,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_SQ_CBWK_TOP+_WKSQCB232,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POS_STS1,GBR)	;BIT0=_DRV_ACT_FLG
;;;pg容量確保[2012-03-06]						;_INT_POS_STEP_FLG BIT0~BIT7 ==>232.8~232.15
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_POSLSI_DRIV_SHIN,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_DRV_DIR1,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_ENC_PLS_SPD_DIR,R1		;= R9(ad2) 0pls/s でも -と+がある
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PV_DIR,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_SEQ_DP_TOP+_DPSQ287,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SEQ1,GBR)		;SEQ217(287) 2004-01-28
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_SEQ_DP_TOP+_DPSQ288,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SEQ2,GBR)		;SEQ218(288) 2004-01-28
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===== 2BYTE 10進ﾃﾞｰﾀ B01~B08 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_POWER_ON_CNT,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POW_CNT,GBR)	;+0*2
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_OBJ_POS_DIG_MAK,R0		;
;;;pg容量確保[2012-03-06]	MOV.L	#_SV_OBJ360,R1
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SV_DIG,GBR)	;SV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_INC_ENC360,R1			;=_OBJ_ENC360
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PV_DIG,GBR)	;PV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CTL_ENC360,R1			;360.0度
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_ENCDG,GBR)	;SV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_FREQ_SV_SPD,R1		;2003-07-01
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_FREQ_SV,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_NOW_FREQ,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_OUT_SPD_PER,R1		;= R13(ad2)
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SVSPD_PER,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_ENC_SPD_PER,R1		;= R13(ad2)
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PVSPD_PER,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	==== 4byte data C01~C08 =======
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_SV_OBJ_ABSPLS,R1		;(はじめの起動分はﾒｲﾝで作られている)
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV	R0,R2				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_SV_OBJPLS,GBR)	;C01 下位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_PV_ABSPLS,R1		;20060919
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV	R0,R3				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_PV_INCPLS,GBR)	;C02 下位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R2,R3				;
;;;pg容量確保[2012-03-06]	MOV	R3,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_SV_PVPCMP,GBR)	;C03 上位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_REST_PLS,R0		;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REST_PLS,GBR)	;C04
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LT_LNGTH_TOTAL_OUTPLS,R1		;
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_TOTAL_PLS1,GBR)	;C05
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LT_LNGTH_ADD_DATA,R1		;//符号付き
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_ADDDT_PLS,GBR)	;C06
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];;	MOV.L	#_OUT_PLS_SPD,R1		;= R11(ad4)
;;;pg容量確保[2012-03-06];;	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LT_LINK_SV_OBJ_ABSPLS+4,R1;//abs停止目標位置(設定ﾊﾞｯｸﾗｯｼなし)
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REV1,GBR)		;C07
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];;	MOV.L	#_ENC_PLS_SPD,R1		;= R11(ad4)
;;;pg容量確保[2012-03-06];;	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LT_INT_LINK_RL_OBJ_ABSPLS+4,R1;
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REV2,GBR)		;C08
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]

;;;pg容量確保[2012-03-06]	.IMPORT	_LOAD_BASE_FREQ_PLS		;Base speed
;;;pg容量確保[2012-03-06]	.IMPORT	_LOAD_SPD_LATE			;
;;;pg容量確保[2012-03-06]	.IMPORT	_LOAD_ACCS1_LATE		;A4
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]_HISTROY_DAT_MOVE2:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===== 2BYTE 16進ﾃﾞｰﾀ A01~A08 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_EVENT_COD,R1;//CALL時に入れる
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_EVENT_COD,GBR)	;+1*2
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_INT_POS_CTL_STEP,R1		;//内部制御工程1~11
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_CTL_STEP,GBR)	;A2
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_SPD_LATE,R0		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POS_CMD,GBR)	;A3
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_ACCS1_LATE,R0		;A4
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POS_STS1,GBR)	;BIT0=_DRV_ACT_FLG
;;;pg容量確保[2012-03-06]						;_INT_POS_STEP_FLG BIT0~BIT7 ==>232.8~232.15
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_POSLSI_DRIV_SHIN,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_DRV_DIR1,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_ENC_PLS_SPD_DIR,R1		;= R9(ad2) 0pls/s でも -と+がある
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PV_DIR,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_SEQ_DP_TOP+_DPSQ287,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SEQ1,GBR)		;SEQ217(287) 2004-01-28
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_SEQ_DP_TOP+_DPSQ288,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SEQ2,GBR)		;SEQ218(288) 2004-01-28
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	===== 2BYTE 10進ﾃﾞｰﾀ B01~B08 ===
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_POWER_ON_CNT,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_POW_CNT,GBR)	;B1 +0*2
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_OBJ_POS_DIG_MAK,R0		;
;;;pg容量確保[2012-03-06]	MOV.L	#_SV_OBJ360,R1
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SV_DIG,GBR)	;B2 SV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_INC_ENC360,R1			;=_OBJ_ENC360
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PV_DIG,GBR)	;B3 PV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CTL_ENC360,R1			;360.0度
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_ENCDG,GBR)	;B4 SV_PLS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_FREQ_SV_SPD,R1		;2003-07-01
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_FREQ_SV,GBR)	;B5
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_NOW_FREQ,GBR)	;B6
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_OUT_SPD_PER,R1		;= R13(ad2)
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_SVSPD_PER,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_ENC_SPD_PER,R1		;= R13(ad2)
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@(_EQ_HIS1_PVSPD_PER,GBR)	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	==== 4byte data C01~C08 =======
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_SV_OBJ_ABSPLS,R1		;(はじめの起動分はﾒｲﾝで作られている)
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV	R0,R2				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_SV_OBJPLS,GBR)	;C01 下位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LINK_PV_ABSPLS,R1		;RL_OBJ --> PV 20060919
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV	R0,R3				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_PV_INCPLS,GBR)	;C02 下位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_BASE_FREQ_PLS,R0		;Base speed
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_SV_PVPCMP,GBR)	;C03 上位4byte
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_REST_PLS,R0		;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REST_PLS,GBR)	;C04
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_LT_LNGTH_TOTAL_OUTPLS,R1	;
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	@(4,R1),R0			;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_TOTAL_PLS1,GBR)	;C05
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_LOAD_FREQ_PLS,R0		;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_ADDDT_PLS,GBR)	;C06
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_OUT_PLS_SPD,R1		;= R11(ad4)
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REV1,GBR)		;C07
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_ENC_PLS_SPD,R1		;= R11(ad4)
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	R0,@(_EQ_HIS1_REV2,GBR)		;C08
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;	==== 4byte data C01~C08 =======



	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;	***************************
;	***	SH4		***
;	***	送信		***
;	***	Work=>Dp	***
;	***************************
;;;pg容量確保[2012-03-06]	.EXPORT	_SND_HIST_DAT			;
;;;pg容量確保[2012-03-06]_SND_HIST_DAT:		;//SH4 ==>DPRAM
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	FAR_JSR	#_HIST_KEP_CLR_DATCHK,R0
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_STS_SAVE_FLG,R1		;2003-07-01
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	R0,R0				;
;;;pg容量確保[2012-03-06]	TST_BIT_ON SND_HISTDT_EXT		;WAIT
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_COM,R5		;SH4 INT ==>MAIN 
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0				;
;;;pg容量確保[2012-03-06]	TST	R0,R0				;
;;;pg容量確保[2012-03-06]	TST_BIT_OF SND_HISTDT_EXT		;ｲﾍﾞﾝﾄNO
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R5			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	==== 転送 ===
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_WK_TO_DP,R0	;WORK(POINTER+DATA)==>DPRAM
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======Command Set =======
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_STS_SAVE_FLG,R1		;2003-07-01
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R0		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]SND_HISTDT_EXT:		;//SH4 ==>DPRAM
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS



;	*******************************************
;	***					***
;	***	保留ﾃﾞｰﾀの処理／ｸﾘｱｺﾏﾝﾄﾞ	***
;	***					***
;	*******************************************
;;;pg容量確保[2012-03-06]_HIST_KEP_CLR_DATCHK:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1		;345.0
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;345.0=on 異常履歴ｸﾘｱ
;;;pg容量確保[2012-03-06]	TST	#BIT0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF KEP_CLRDTCHK_20		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_SMPLE_HIST_CLR,R0		;
;;;pg容量確保[2012-03-06]KEP_CLRDTCHK_20:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======= 2003-07-01 ===========
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_KEP_SEND_COM,R1		;//保留ｺﾏﾝﾄﾞ〜ﾘｾｯﾄまでの間 異常履歴指令受付
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;保留中?
;;;pg容量確保[2012-03-06]	TST	R0,R0				;
;;;pg容量確保[2012-03-06]	TST_BIT_OF KEP_CLRDTCHK_90		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_DIS,R5		;//1:DISENABLE 0:ENABLE
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0				;
;;;pg容量確保[2012-03-06]	TST	R0,R0				;
;;;pg容量確保[2012-03-06]	TST_BIT_ON KEP_CLRDTCHK_40		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_KEP_SEND_COM,R1		;//保留ｺﾏﾝﾄﾞ〜ﾘｾｯﾄまでの間 異常履歴指令受付
;;;pg容量確保[2012-03-06]	XOR	R0,R0				;ﾘｾｯﾄをかけられた
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	ﾎﾟｲﾝﾀを元に戻す(DPRAM読み直し)		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_DP_TO_WK,R0		;Dpram=Work
;;;pg容量確保[2012-03-06]	M_BRA	KEP_CLRDTCHK_90		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]KEP_CLRDTCHK_40:
;;;2004-06-28	======== 切+連続停止釦======
;;;pg容量確保[2012-03-06];;	MOV.L	#(_SQ_CBWK_TOP+_WKSQCB200),R1		;
;;;pg容量確保[2012-03-06];;	MOV.W	@R1,R0					;
;;;pg容量確保[2012-03-06];;	MOV.W	#(BIT7+BIT0),R1				;切+連続
;;;pg容量確保[2012-03-06];;	AND	R1,R0					;
;;;pg容量確保[2012-03-06];;	CMP/EQ	R1,R0					;
;;;pg容量確保[2012-03-06];;	BT	KEP_CLRDTCHK_50				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_SEQ_CB_COM345X,R1
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT1,R0			;345.1 取込指令
;;;pg容量確保[2012-03-06]	TST_BIT_OF KEP_CLRDTCHK_90		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]KEP_CLRDTCHK_50:
;;;pg容量確保[2012-03-06]	MOV.W	#-1,R0
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_DAT_SEND_COM,R5		;SH4 INT ==>MAIN 
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R5				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	 ==== KEEP から書き込みに昇格 ====
;;;pg容量確保[2012-03-06]	MOV.L	#_HIST_KEP_SEND_COM,R1		;//保留ｺﾏﾝﾄﾞ〜ﾘｾｯﾄまでの間 異常履歴指令受付
;;;pg容量確保[2012-03-06]	XOR	R0,R0				;ﾘｾｯﾄをかけられた
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	====== 2004-01-28 ===
;;;pg容量確保[2012-03-06]	.IMPORT	_ERR_INFO_BAKUP_START
;;;pg容量確保[2012-03-06]	FAR_JSR	#_ERR_INFO_BAKUP_START,R0
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]KEP_CLRDTCHK_90:
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS




	.AELSE

;	***************************
;	***	SH2		***
;	***	受信		***
;	***	Dp=>Work,FeRAM	***
;	***************************
;;;pg容量確保[2012-03-06]	.EXPORT	_RCV_HIST_DAT	;
;;;pg容量確保[2012-03-06]_RCV_HIST_DAT:		;//DPRAM==> SH2 ==>FeRAM
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_STS_SAVE_FLG,R5			;2003-07-01
;;;pg容量確保[2012-03-06]	MOV.W	@R5,R0					;
;;;pg容量確保[2012-03-06]	TST	R0,R0					;
;;;pg容量確保[2012-03-06]	TST_BIT_ON RCV_HISTDT_100			;
;;;pg容量確保[2012-03-06]	M_BRA	RCV_HISTDT_EXT				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]RCV_HISTDT_100:						;//DPRAM==> SH2 ==>FeRAM
;;;pg容量確保[2012-03-06]	XOR	R2,R2					;
;;;pg容量確保[2012-03-06]	MOV.W	R2,@R5					;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R2			;
;;;pg容量確保[2012-03-06]	CMP/EQ	R2,R0					;
;;;pg容量確保[2012-03-06]	BT	RCV_HISTDT_200				;
;;;pg容量確保[2012-03-06]	M_BRA	RCV_HISTDT_EXT				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]RCV_HISTDT_200:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_DP_TO_WK,R0		;DP==>WORK
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_SAVE_TO_FRAM,R0	;WORK==>FeRam
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]RCV_HISTDT_EXT:						;
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

	.AENDI





;	*******************************************************************
;	***	異常履歴をDPRAMからWORKへ入れる				***
;	***	DP==>SH2のWORK(DPをﾊﾞｯｸｱｯﾌﾟへ)				***
;	***	DP==>SH4の(電源投入をWORKへ)				***
;	*******************************************************************
;;;pg容量確保[2012-03-06]_BAKUP_HISTDAT1_DP_TO_WK:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_PV_CB_STS_POINT,L1=W,DST=_WPV_CB_STS_POINT,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV	SRC=_PV_CB_STS_DAT_TOP,L1=L,DST=_WPV_CB_STS_DAT_TOP,L2=L,LOOP=(_CB_STS_BUF_MAX/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


;	***************************************************
;	***	異常履歴及WORKからDPRAMへ入れる		***
;	***	SH2 電源投入時　WORK=>DP		***
;	***	SH4 WR時　WORK=>DP			***
;	***************************************************
;;;pg容量確保[2012-03-06]_BAKUP_HISTDAT1_WK_TO_DP:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV	SRC=_WPV_CB_STS_DAT_TOP,L1=L,DST=_PV_CB_STS_DAT_TOP,L2=L,LOOP=(_CB_STS_BUF_MAX/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_WPV_CB_STS_POINT,L1=W,DST=_PV_CB_STS_POINT,L2=W
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***************************************************
;	***	ｲﾝﾌｫｰﾒｰｼｮﾝWORKからDPRAMへ入れる		***
;	***	SH2 電源投入時　WORK=>DP		***
;	***	SH4 WR時　WORK=>DP			***
;	***************************************************
;;;pg容量確保[2012-03-06]_BAKUP_POW_WK_TO_DP:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_WPV_POWER_ON_CNT,L1=W,DST=_PV_POWER_ON_CNT,L2=W
;;;pg容量確保[2012-03-06]	
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS






;	*******************************************
;	***					***
;	***	CPUにしかない専用ﾒﾓﾘのｱｸｾｽ	***
;	***					***
;	*******************************************

	.AIF	_CB_CPU_SEL EQ	_CB_CPUA

;	*******************************************
;	***					***
;	***		SH4専用ﾒﾓﾘｱｸｾｽ		***
;	***					***
;	*******************************************
;	***********************************
;	***				***
;	***	電源投入時１回		***
;	***	SH4(受信後)		***
;	***********************************
;	*******************************************************************
;	***	異常履歴及びインフォメーションをDPRAMからWORKへ入れる	***
;	*******************************************************************
;;;pg容量確保[2012-03-06]_HIST_DAT_INI_SH4:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_DP_TO_WK,R0		;Dpram=Work
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	=== 2004-01-27 ===
;;;pg容量確保[2012-03-06];;;;不要のつもり	FAR_JSR	#_BAKUP_INFO_DP_TO_WK_SH4,R0		;DP DATA=> WORK
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS




	.AELSE
;	*******************************************
;	***					***
;	***		sh2専用ﾒﾓﾘｱｸｾｽ		***
;	***					***
;	*******************************************
;	===== 2003-07-01 =====
	.import		_FRAM_CB_BAKUP_INF_TOP		;5AA51234なら有効
	.import		_FRAM_CB_BAKUP_INF_END		;
	.import		_FRAM_CB_USELFUL_COD1		;
	.import		_FRAM_CB_STS_POINT		;最新値ﾎﾟｲﾝﾀの指示位置
	.import		_FRAM_CB_TRD_POINT		;有効なﾃﾞｰﾀ数
	.import		_FRAM_CB_USELFUL_COD2		;A55A4321なら有効

	.import		_FRAM_CB_STS_DAT_TOP		;
	.import		_FRAM_CB_TRD_DAT_TOP		;
	.import		_FRAM_POWER_ON_CNT		;電源投入回数

;	==== 2004-01-27 ===
	.IMPORT		_FRAM_ERR_INFO_CPUA_TOP		;
	.IMPORT		_FRAM_ERR_INFO_CPUB_TOP		;

;	***********************************
;	***				***
;	***	電源投入時１回		***
;	***	SH2(受信前)		***
;	***********************************
;;;pg容量確保[2012-03-06]	.EXPORT	_HIST_DAT_INI_SH2	;
;;;pg容量確保[2012-03-06]_HIST_DAT_INI_SH2:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HIST_DAT_COD_CHK,R0	;FERAM CHEAK
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_LOAD_TO_WK,R0	;FeRAM WORK
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_HISTDAT1_WK_TO_DP,R0	;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_POW_WK_TO_DP,R0		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	== 2004-01-27 ===
;;;pg容量確保[2012-03-06]	XOR	R0,R0					;
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_CPUA_FLG,R1			;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1					;
;;;pg容量確保[2012-03-06];;;;不要のつもり	FAR_JSR	#_BAKUP_INFO_FRAM_TO_DP_SH4,R0		;FERAM=>SH4 DPRAM 
;;;pg容量確保[2012-03-06];;;;不要のつもり	FAR_JSR	#_BAKUP_INFO_FRAM_TO_WK_SH2,R0		;FERAM=>SH2 WORK
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


;	*******************************************************************
;	***	ﾊﾞｯｸｱｯﾌﾟｺｰﾄﾞが異常ならﾒﾓﾘｸﾘｱして正常ｺｰﾄﾞを書き込む	***
;	***	また電源投入の回数をｶｳﾝﾄしておく			***
;	*******************************************************************

;;;pg容量確保[2012-03-06]_BAKUP_HIST_DAT_COD_CHK:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_USELFUL_COD1,R1	;
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_BAK_SUM_COD1,R2		;
;;;pg容量確保[2012-03-06]	CMP/EQ	R2,R0				;
;;;pg容量確保[2012-03-06]	BF	BAKUP_HIST_DATCODCK_ERR		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_USELFUL_COD2,R1	;
;;;pg容量確保[2012-03-06]	MOV.L	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_BAK_SUM_COD2,R2		;
;;;pg容量確保[2012-03-06]	CMP/EQ	R2,R0				;
;;;pg容量確保[2012-03-06]	BF	BAKUP_HIST_DATCODCK_ERR		;
;;;pg容量確保[2012-03-06]	M_BRA	BAKUP_HIST_DATCODCK_END		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]BAKUP_HIST_DATCODCK_ERR:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_BAKUP_INF_END,R3	;
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_BAKUP_INF_TOP,R1	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]BAKUP_HIST_DATCODCK_CLR00:
;;;pg容量確保[2012-03-06]	XOR	R0,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]	ADD	#2,R1				;
;;;pg容量確保[2012-03-06]	CMP/GE	R3,R1				;
;;;pg容量確保[2012-03-06]	BF	BAKUP_HIST_DATCODCK_CLR00	;END =< R1 no!  
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	======== SUM CODE SET ======
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_USELFUL_COD1,R1	;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_BAK_SUM_COD1,R2		;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_CB_USELFUL_COD2,R1	;
;;;pg容量確保[2012-03-06]	MOV.L	#_CB_BAK_SUM_COD2,R2		;
;;;pg容量確保[2012-03-06]	MOV.L	R2,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]BAKUP_HIST_DATCODCK_END:			;
;;;pg容量確保[2012-03-06]	MOV.L	#_FRAM_POWER_ON_CNT,R1		;電源投入回数
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	ADD	#1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***********************************************************
;	***	異常履歴及びインフォメーションをWORKへ入れる	***
;	***********************************************************
;;;pg容量確保[2012-03-06]_BAKUP_HISTDAT1_LOAD_TO_WK:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_FRAM_CB_STS_POINT,L1=W,DST=_WPV_CB_STS_POINT,L2=W
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_FRAM_CB_TRD_POINT,L1=W,DST=_WPV_CB_TRD_POINT,L2=W
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_FRAM_POWER_ON_CNT,L1=W,DST=_WPV_POWER_ON_CNT,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV	SRC=_FRAM_CB_STS_DAT_TOP,L1=L,DST=_WPV_CB_STS_DAT_TOP,L2=L,LOOP=(_CB_STS_BUF_MAX/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS




;	***************************************************
;	***	異常履歴WORK=>FeRAMへ入れる	SAVE	***
;	***************************************************
;;;pg容量確保[2012-03-06]_BAKUP_HISTDAT1_SAVE_TO_FRAM:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_WPV_CB_STS_POINT	,L1=W,DST=_FRAM_CB_STS_POINT,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV	SRC=_WPV_CB_STS_DAT_TOP	,L1=L,DST=_FRAM_CB_STS_DAT_TOP,L2=L,LOOP=(_CB_STS_BUF_MAX/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***************************************************
;	***	ﾄﾚﾝﾄﾞWORK=>FeRAMへ入れる		***
;	***************************************************
;;;pg容量確保[2012-03-06]_BAKUP_TRNDDAT1_SAVE_TO_FRAM:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_WPV_CB_TRD_POINT,L1=W,DST=_FRAM_CB_TRD_POINT,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV	SRC=_WPV_CB_TRD_DAT_TOP	,L1=L,DST=_FRAM_CB_TRD_DAT_TOP,L2=L,LOOP=(_CB_TRD_BUF_MAX/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]





	.AENDI

;	*******************************************
;	***					***
;	***	異常履歴画面(C/Bﾃﾞﾊﾞｯｸ画面)	***
;	***					***
;	*******************************************
;_SVP_MONALM_S01	;01:ﾓｰﾄﾞ 異常履歴ﾓｰﾄﾞ 02:ﾄﾚﾝﾄﾞ 00:STOP 99:BLANK CLR
;_SVP_MONALM_S02	;異常履歴頁
;_SVP_MONALM_S03	;
;_SVP_MONALM_S04	;01:(START-A) 00(STOP),01(CPUA),02(CPUB),03(CPUA/B)

_MONI_CB_DISP:
	SUB_START
	MOV.L	#_SVP_MONALM_S04,R1	;S04=1:CPUA 2:CPUB 0:停止
	MOV.W	@R1,R0			;
	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
	MOV.W	#D'01,R1		;
	.AELSE				;
	MOV.W	#D'02,R1		;
	.AENDI
	CMP/EQ	R1,R0			;
	BT	MONI_CB_DSPSTR		;
	M_BRA	MONI_CB_DSPEXT		;REFLASH STOP
MONI_CB_DSPSTR:

	MOV.L	#_SVP_MONALM_S02,R1	;
	MOV.W	@R1,R2			;R2:S02
	MOV.L	#_SVP_MONALM_S03,R1	;
	MOV.W	@R1,R3			;R3:S03

	MOV.L	#_SVP_MONALM_S01,R1	;S01:表示物ﾓｰﾄﾞ
	MOV.W	@R1,R0			;
	MOV.L	#_MONI_DISP_MOD,R1	;
	MOV.W	@R1,R4			;
	MOV.W	R0,@R1			;
	MOV	R0,R1

	CMP/EQ	#00,R0			;
	BF	MONI_CB_DSP001		;MODE00=EXIT
	M_BRA	MONI_CB_DSPEXT		;MODE00=EXIT
MONI_CB_DSP001:
	M_BRA	MONI_CB_DSP140		;YES MODE14(異常情報) WK

;;	CMP/EQ	#01,R0			;
;;	BT	MONI_CB_DSP010		;YES MODE1
;;	CMP/EQ	#02,R0			;
;;	BT	MONI_CB_DSP020		;YES MODE2
;;	CMP/EQ	#03,R0			;
;;	BT	MONI_CB_DSP030		;YES MODE3
;;	CMP/EQ	#04,R0			;
;;	BT	MONI_CB_DSP040		;YES MODE4
;;	CMP/EQ	#D'10,R0			;
;;	BT	MONI_CB_DSP100		;YES MODE10
;;	CMP/EQ	#D'11,R0			;
;;	BT	MONI_CB_DSP110		;YES MODE11(異常情報) FE-A
;;	CMP/EQ	#D'12,R0			;
;;	BT	MONI_CB_DSP120		;YES MODE12(異常情報) FE-B
;;	CMP/EQ	#D'13,R0			;
;;	BT	MONI_CB_DSP130		;YES MODE13(異常情報) DP
;;	CMP/EQ	#D'14,R0			;
;;	BT	MONI_CB_DSP140		;YES MODE14(異常情報) WK
;;	CMP/EQ	#D'15,R0			;
;;	BT	MONI_CB_DSP150		;YES MODE15(異常情報2重回路-1) WK
;;	CMP/EQ	#D'16,R0			;
;;	BT	MONI_CB_DSP160		;YES MODE16(異常情報2重回路-1) WK
;;	CMP/EQ	#D'17,R0			
;;	BT	MONI_CB_DSP170		;YES MODE17
;;	CMP/EQ	#D'18,R0			;
;;	BT	MONI_CB_DSP180		;YES MODE18
;;
;;
;;	CMP/EQ	#D'50,R0				;
;;	BT	MONI_CB_DSP500		;YES MODE50ﾃﾞﾊﾞｯｸ情報のﾘｱﾙﾀｲﾑﾃﾞｰﾀﾌﾞﾚｰｷ異常当
;;	CMP/EQ	#D'51,R0		;
;;	BT	MONI_CB_DSP510		;YES MODE51
;;	CMP/EQ	#D'52,R0		;
;;	BT	MONI_CB_DSP520		;YES MODE52
;;	CMP/EQ	#D'53,R0		;
;;	BT	MONI_CB_DSP530		;YES MODE53
;;	CMP/EQ	#D'99,R0		;
;;	BT	MONI_CB_DSP990		;YES MODE99
;;	M_BRA	MONI_CB_DSPEXT		;

;;MONI_CB_DSP010:
;	Input R1(NOW_MODE),R4(OLD_MODE)
;	Input R2,R3 詳細
;	=== 01:ﾓｰﾄﾞ異常履歴 =====
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CB_ALM_DSP,R0
;;	M_BRA	MONI_CB_DSPEXT
;;
;;MONI_CB_DSP020:
;;MONI_CB_DSP030:
;;MONI_CB_DSP040:
;;	M_BRA	MONI_CB_DSPEXT
;;
;;;	==== 2004-01-27 ======
;;MONI_CB_DSP100:		;
;;	M_BRA	MONI_CB_DSPEXT
;;MONI_CB_DSP110:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_ERR_REAL_DAT_DSP1,R0	;
;;	M_BRA	MONI_CB_DSPEXT
;;MONI_CB_DSP120:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_FRAM_DAT_DSP1,R0	;
;;	M_BRA	MONI_CB_DSPEXT
;;MONI_CB_DSP130:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_ERR_DAT_DSP0,R0	;DP
;;	M_BRA	MONI_CB_DSPEXT

MONI_CB_DSP140:		;
	FAR_JSR	#_ERR_DAT_DSP1,R0	;WK(14) CPUA/B ﾘｱﾙ
	M_BRA	MONI_CB_DSPEXT

	.IMPORT	_DBG_DISP_POS_LSI	;2004-03-03(ﾊﾟﾙｽ)
	.IMPORT	_DBG_DISP_POS_LSI2	;2004-03-03(ﾊﾟﾙｽ)

	.IMPORT	_MONI_CNT_NOW_INFO_DISP		;2004-03-25
	.IMPORT	_MONI_CNT_HIST_INFO_DISP	;2004-03-25

;;MONI_CB_DSP150:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_DBG_DISP_POS_LSI,R0	;異常情報
;;	M_BRA	MONI_CB_DSPEXT
;;
;;MONI_CB_DSP160:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_DBG_DISP_POS_LSI2,R0	;CPUA/B
;;	M_BRA	MONI_CB_DSPEXT

;;MONI_CB_DSP170:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CNT_NOW_INFO_DISP,R0
;;	M_BRA	MONI_CB_DSPEXT

;;MONI_CB_DSP180:		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CNT_HIST_INFO_DISP,R0
;;	M_BRA	MONI_CB_DSPEXT

;	=== MODE 50(ﾘｱﾙﾀｲﾑ) ====
;;MONI_CB_DSP500:
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CB_DAT1_DSP,R0
;;	M_BRA	MONI_CB_DSPEXT
;;
;;	.IMPORT	_MONI_CHG_PROC1		;2004-03-04(連続)
;	=== MODE 51(連続運転ﾁｪｯｸ1)
;;MONI_CB_DSP510:
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CHG_PROC1,R0
;;	M_BRA	MONI_CB_DSPEXT
;	=== MODE 52
;;MONI_CB_DSP520:
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CB_DAT1_DSP,R0
;;	M_BRA	MONI_CB_DSPEXT
;	=== MODE 53
;;MONI_CB_DSP530:
;;	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_SIO2_DSP,R0		;CPUAのみ
;;	.AENDI
;;	M_BRA	MONI_CB_DSPEXT

;	=== 99:ﾓｰﾄﾞ表示0ｸﾘｱ=====
;;MONI_CB_DSP990:				;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_CB_DSP_CLR,R0	;
MONI_CB_DSPEXT:
	SUB_END
	M_RTS


;	***********************************
;       ***     Input R2(頁),R3(詳細)   ***
;	***	MODE=01			***
;	***	異常履歴表示		***
;	***********************************
;	EMG状態でのみﾓﾆﾀ可能
;;_MONI_CB_ALM_DSP:
;;	SUB_START
;;;;	MOV.L	#_emg_err_flg,R1	;//異常ﾗｯﾁ
;;;;	MOV.W	@R1,R0			;EMG
;;;;	TST	R0,R0			;
;;;;	TST_BIT_ON MONI_CBALMDSP_00	;処理速度の関係上・どっちみちEMG時しか新たな情報はつくらない
;;;;	M_BRA	MONI_CBALMDSP_99	;
;;;;MONI_CBALMDSP_00:
;;;pg容量確保[2012-03-06]	PUSH_REG1 R2
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_PV_POWER_ON_CNT,L1=W,DST=_PVP_MONALM_P01,L2=W
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV	SRC=_PV_CB_STS_POINT,L1=W,DST=_PVP_MONALM_P02,L2=W
;;;pg容量確保[2012-03-06]	POP_REG1 R2
;;;pg容量確保[2012-03-06]	MOV	R2,R0			;0頁~7頁
;;;pg容量確保[2012-03-06]	AND	#H'1F,R0		;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_STS_BUF_BLKMAX,R4	;
;;;pg容量確保[2012-03-06]	CMP/HS	R4,R0			;
;;;pg容量確保[2012-03-06]	BF	MONI_CBALMDSP_20	;0~7
;;;pg容量確保[2012-03-06]	XOR	R0,R0			;8
;;;pg容量確保[2012-03-06]MONI_CBALMDSP_20:			;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_STS_BUF_1BLK,R1	;POINTER*BLOCK(32)
;;;pg容量確保[2012-03-06]	DMULS.L	R1,R0			;
;;;pg容量確保[2012-03-06]	STS.L	MACL,R0			;
;;;pg容量確保[2012-03-06]	MOV.L	#_PV_CB_STS_DAT_TOP,R5	;
;;;pg容量確保[2012-03-06]	ADD	R0,R5			;TOP[0~31]
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_STS_BUF_1BLK/2,R4		;WORD 
;;;pg容量確保[2012-03-06]	MOV.L	#_PVP_MONALM_C01,R1		;C01/A01/B01と連続した空間
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]MONI_CBALMDSP_50:
;;;pg容量確保[2012-03-06]	MOV.W	@R5+,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]	ADD	#2,R1				;
;;;pg容量確保[2012-03-06]	ADD	#-1,R4				;
;;;pg容量確保[2012-03-06]	TST	R4,R4				;
;;;pg容量確保[2012-03-06]	TST_BIT_ON MONI_CBALMDSP_50		;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]MONI_CBALMDSP_99:
;;	SUB_END
;;	M_RTS

;	***************************************************
;       ***     Input R2(頁),R3(詳細)  			***
;	***	MODE=02					***
;	***	異常と元データをリアルデータをモニタ	***
;	***************************************************
;	EMG状態でのみﾓﾆﾀ可能
;;_MONI_CB_DAT1_DSP:
;;	SUB_START
;;	DATA_STD_SHN_MOV	SRC=_PV_POWER_ON_CNT,L1=W,DST=_PVP_MONALM_P01,L2=W
;;	DATA_STD_SHN_MOV	SRC=_PV_CB_STS_POINT,L1=W,DST=_PVP_MONALM_P02,L2=W
;;
;	===== 2BYTE 16進ﾃﾞｰﾀ A01~A08 ===
;;	MOV.L	#_INT_POS_CTL_STEP,R1		;//内部制御工程1~11
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_A02,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_MNWR_POS_CMD,R1		;減速停止,起動OFF
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_A03,R1		;
;;	MOV.W	R0,@R1				;
;;
;;;;;2012-10-01	MOV.L	#_SQ_CBWK_TOP+_WKSQCB232,R1	;
;;;;;2012-10-01	MOV.W	@R1,R0				;
;;;;;2012-10-01	MOV.L	#_PVP_MONALM_A04,R1		;
;;;;;2012-10-01	MOV.W	R0,@R1				;

;;	MOV.L	#_POSLSI_DRIV_SHIN,R1		;
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_A05,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_ENC_PLS_SPD_DIR,R1		;= R9(ad2) 0pls/s でも -と+がある
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_A06,R1		;
;;	MOV.W	R0,@R1				;
;;
;;
;;;	===== 2BYTE 10進ﾃﾞｰﾀ B01~B08 ===
;;	MOV.L	#_PV_POWER_ON_CNT,R1		;
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B01,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	FAR_JSR	#_OBJ_POS_DIG_MAK,R0		;
;;	MOV.L	#_SV_OBJ360,R1
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B02,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_INC_ENC360,R1			;=_OBJ_ENC360
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B03,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_CTL_ENC360,R1			;360.0度
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B04,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_FREQ_SV_SPD,R1		;2003-07-01
;;	MOV.L	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B05,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0
;;	MOV.L	#_PVP_MONALM_B06,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_PV_OUT_SPD_PER,R1		;= R13(ad2)
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B07,R1		;
;;	MOV.W	R0,@R1				;
;;
;;	MOV.L	#_PV_ENC_SPD_PER,R1		;= R13(ad2)
;;	MOV.W	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_B08,R1		;
;;	MOV.W	R0,@R1				;
;;
;;
;;
;;;	==== 4byte data C01~C08 =======
;;	MOV.L	#_LINK_SV_OBJ_ABSPLS,R1		;(はじめの起動分はﾒｲﾝで作られている)
;;	MOV.L	@(4,R1),R0			;
;;	MOV.L	#_PVP_MONALM_C01,R1		;
;;	MOV.L	R0,@R1				;
;;
;;	MOV.L	#_LINK_PV_ABSPLS,R1		;RL_OBJ-->PV 20060919
;;	MOV.L	@(4,R1),R0			;
;;	MOV.L	#_PVP_MONALM_C02,R1		;
;;	MOV.L	R0,@R1				;
;;
;;	XOR	R2,R3				;
;;	MOV	R3,R0				;
;;	MOV.L	#_PVP_MONALM_C03,R1		;
;;	MOV.L	R0,@R1				;
;;
;;	FAR_JSR	#_LOAD_REST_PLS,R0		;
;;	MOV.L	#_PVP_MONALM_C04,R1		;
;;	MOV.L	R0,@R1				;
;;
;;	MOV.L	#_LT_LNGTH_TOTAL_OUTPLS,R1		;
;;	MOV.L	@(4,R1),R0			;
;;	MOV.L	#_PVP_MONALM_C05,R1		;
;;	MOV.L	R0,@R1				;
;;
;;
;;	MOV.L	#_LT_LNGTH_ADD_DATA,R1		;//符号付き
;;	MOV.L	@(4,R1),R0			;
;;	MOV.L	#_PVP_MONALM_C06,R1		;
;;	MOV.L	R0,@R1				;
;;
;;
;;;;	MOV.L	#_OUT_PLS_SPD,R1		;= R11(ad4)
;;;;	MOV.L	@R1,R0				;
;;
;;	MOV.L	#_LT_LINK_SV_OBJ_ABSPLS+4,R1;//abs停止目標位置(設定ﾊﾞｯｸﾗｯｼなし)
;;	MOV.L	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_C07,R1		;
;;	MOV.L	R0,@R1				;
;;
;;
;;;;;	MOV.L	#_ENC_PLS_SPD,R1		;= R11(ad4)
;;;;;	MOV.L	@R1,R0				;
;;	MOV.L	#_LT_INT_LINK_RL_OBJ_ABSPLS+4,R1;
;;	MOV.L	@R1,R0				;
;;	MOV.L	#_PVP_MONALM_C08,R1		;
;;	MOV.L	R0,@R1				;
;;
;;	SUB_END
;;	M_RTS
;;
;;
;;
;;;	*******************************************
;;;	***					***
;;;	***	Input R1(NOW_MODE),R4(OLD_MODE)	***
;;;       ***     Input R2(頁),R3(詳細)  		***
;;;	***	MODE=99				***
;;;	*******************************************
;;_MONI_CB_DSP_CLR:
;;	SUB_START
;;	CMP/EQ	R1,R4			;NOW=OLD?
;;	BF	MONI_CBDSPCLR_00	;
;;	M_BRA	MONI_CBDSPCLR_99
;;
;;MONI_CBDSPCLR_00:
;;
;;	XOR	R0,R0
;;	MOV.L	#_PVP_MONALM_P01,R1	;
;;	.arepeat	4		;繰返展開
;;	MOV.W	R0,@R1			;
;;	ADD	#2,R1			;
;;	.aendr				;
;;
;;	MOV.L	#_PVP_MONALM_A01,R1	;
;;	.arepeat	8		;繰返展開
;;	MOV.W	R0,@R1			;
;;	ADD	#2,R1			;
;;	.aendr				;
;;
;;	MOV.L	#_PVP_MONALM_B01,R1	;
;;	.arepeat	8		;繰返展開
;;	MOV.W	R0,@R1			;
;;	ADD	#2,R1			;
;;	.aendr				;
;;
;;	MOV.L	#_PVP_MONALM_C01,R1	;
;;	.arepeat	8		;繰返展開
;;	MOV.L	R0,@R1			;
;;	ADD	#4,R1			;
;;	.aendr				;
;;
;;MONI_CBDSPCLR_99:
;;
;;	SUB_END
;;	M_RTS
;;
;;
;;
;;
;	************************************
;	***				****
;	***	ｵｰﾊﾞﾗﾝ用異常履歴	***
;	***				****
;	************************************

	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;	***********************************
;	***				***
;	***	異常情報		***
;	***	2004-01-27		***
;	***********************************
;	***	SH4 DP==>WKRAM	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_DP_TO_WK_SH4
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_ERR_INFO_CPUA_TOP,L1=L,DST=_WK_ERR_INFO_CPU_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06];	***	SH4 WKRAM=>DP	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_WK_TO_DP_SH4
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_WK_ERR_INFO_CPU_TOP,L1=L,DST=_ERR_INFO_CPUA_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

	.AELSE
;	***********************************
;	***	2004-01-27 SH2 ONLY	***
;	***	異常情報		***
;	***********************************

;;;pg容量確保[2012-03-06];	***	SH4 FERAM==>DPRAM	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_FRAM_TO_DP_SH4
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_FRAM_ERR_INFO_CPUA_TOP,L1=L,DST=_ERR_INFO_CPUA_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	***	SH4 DPRAM==>FERAM	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_DP_TO_FRAM_SH4
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_ERR_INFO_CPUA_TOP,L1=L,DST=_FRAM_ERR_INFO_CPUA_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;	***	SH2 FERAM==>WKRAM	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_FRAM_TO_WK_SH2
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_FRAM_ERR_INFO_CPUB_TOP,L1=L,DST=_WK_ERR_INFO_CPU_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]
;	***	SH2 WKRAM==>FERAM	***
;;;pg容量確保[2012-03-06]_BAKUP_INFO_WK_TO_FRAM_SH2
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_WK_ERR_INFO_CPU_TOP,L1=L,DST=_FRAM_ERR_INFO_CPUB_TOP,L2=L,LOOP=(_CB_ERR_INFO_MEM/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;;;pg容量確保[2012-03-06]

	.AENDI


;	************************************
;	***				****
;	***	SH2/SH4共通ﾒｲﾝ		****
;	***				****
;	************************************
;;;pg容量確保[2012-03-06]	.EXPORT	_ERR_INFO_MAIN			;
;;;pg容量確保[2012-03-06]_ERR_INFO_MAIN:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_SAVE_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	TST	#BIT0,R0			;
;;;pg容量確保[2012-03-06]	TST_BIT_OF ERR_INFO_MN100		;
;;;pg容量確保[2012-03-06]	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_INFO_WK_TO_DP_SH4,R0	;WK=>DPRAM
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R0		;BAKUP-CMD
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_CPUA_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	.AELSE
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_INFO_WK_TO_FRAM_SH2,R0	;WK=>FRAM
;;;pg容量確保[2012-03-06]	.AENDI
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R0,R0;
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_SAVE_FLG,R1	;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]ERR_INFO_MN100:
;;;pg容量確保[2012-03-06]	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	.AELSE
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_CPUA_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	@R1,R0				;
;;;pg容量確保[2012-03-06]	MOV.W	#_CB_BAKUP_CMD1,R2		;BAKUP-CMD
;;;pg容量確保[2012-03-06]	CMP/EQ	R2,R0				;
;;;pg容量確保[2012-03-06]	BF	ERR_INFO_MN200			;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	FAR_JSR	#_BAKUP_INFO_DP_TO_FRAM_SH4,R0	;
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	XOR	R0,R0				;
;;;pg容量確保[2012-03-06]	MOV.L	#_ERR_INFO_CPUA_FLG,R1		;
;;;pg容量確保[2012-03-06]	MOV.W	R0,@R1				;
;;;pg容量確保[2012-03-06]	.AENDI
;;;pg容量確保[2012-03-06]ERR_INFO_MN200:
;;;pg容量確保[2012-03-06]
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS


;	***********************************
;	***				***
;	***	異常情報表示機能	***
;	***				***
;	***********************************
;;;pg容量確保[2012-03-06]_FRAM_DAT_DSP0:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	.AELSE
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV SRC=_PV_POWER_ON_CNT,L1=W,DST=_PVP_MONALM_P01,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_FRAM_CB_BAKUP_INF_TOP,L1=L,DST=_PVP_MONALM_C01,L2=L,LOOP=(16/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	.AENDI
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;	===== 情報11(異常時のﾗｯﾁ情報)======
;;;pg容量確保[2012-03-06]_ERR_REAL_DAT_DSP1:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_WXPV_ERR_DISP+0*64,L1=L,DST=_PVP_MONALM_C01,L2=L,LOOP=(64/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;;;pg容量確保[2012-03-06]_FRAM_DAT_DSP1:
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	.AIF	_CB_CPU_SEL EQ	_CB_CPUA
;;;pg容量確保[2012-03-06]	FAR_JSR	#_ERR_DAT_DSP1,R0					;WORK REAL
;;;pg容量確保[2012-03-06]	.AELSE
;;;pg容量確保[2012-03-06]	DATA_STD_SHN_MOV SRC=_PV_POWER_ON_CNT,L1=W,DST=_PVP_MONALM_P01,L2=W
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_FRAM_ERR_INFO_CPUA_TOP,L1=L,DST=_PVP_MONALM_C01,L2=L,LOOP=(64/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	.AENDI
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS

;	==== DP ==
;;;pg容量確保[2012-03-06]_ERR_DAT_DSP0
;;;pg容量確保[2012-03-06]	SUB_START
;;;pg容量確保[2012-03-06]	DATA_LOP_SHN_MOV SRC=_ERR_INFO_CPUA_TOP,L1=L,DST=_PVP_MONALM_C01,L2=L,LOOP=(64/4),CNT_REG=R7,DSTADD=4
;;;pg容量確保[2012-03-06]	SUB_END
;;;pg容量確保[2012-03-06]	M_RTS
;	==== WK ===
_ERR_DAT_DSP1
	SUB_START
	DATA_LOP_SHN_MOV SRC=_WK_ERR_INFO_CPU_TOP,L1=L,DST=_PVP_MONALM_C01,L2=L,LOOP=(64/4),CNT_REG=R7,DSTADD=4
	SUB_END
	M_RTS

;	***************************
;	***	通信		***
;	***************************
;	==== 通信ﾘﾆｱ異常ﾁｪｯｸ ====
;B1	MOV.L	#_rcv2_err_OverRunCnt,R5		;ｵｰﾊﾞﾗﾝｴﾗｰｶｳﾝﾄ+1
;B2	MOV.L	#_rcv2_err_FRPRErrCnt,R5		;
;B3	MOV.L	#_rcv2_err_elseErrCnt,R5		;
;B4	MOV.L	#_rcv2_err_hard_INTflg3,R1		;// ﾊｰﾄﾞ異常
;B5	MOV.L	#_rcv2_err_hard_INTflg2,R1		;// ﾊｰﾄﾞ異常
;B6	MOV.L	#_rcv2_err_hard_INTflg1,R1		;// ﾊｰﾄﾞ異常
;B7	MOV.L	#_rcv2_data_INcnt,R5			;
;B8	MOV.L	#_rcv2_data_cnt,R5			;
;	MOV.L	#_rcv2_data_buf,R6			;受信ﾃﾞｰﾀ格納
;A1
;A2
;A3
;A4
;A5
;A6
;A7
;A8
	.AIF	_CB_CPU_SEL EQ	_CB_CPUA

	.GLOBAL		_rcv2_err_OverRunCnt		;ｵｰﾊﾞﾗﾝｴﾗｰｶｳﾝﾄ+1
	.GLOBAL		_rcv2_err_FRPRErrCnt
	.GLOBAL		_rcv2_err_elseErrCnt
	.GLOBAL		_rcv2_err_hard_INTflg1
	.GLOBAL		_rcv2_err_hard_INTflg2
	.GLOBAL		_rcv2_err_hard_INTflg3
	.GLOBAL		_rcv2_data_INcnt
	.GLOBAL		_rcv2_data_cnt
	.GLOBAL		_rcv2_data_buf

;//	===================
;//	===		===
;//	===================
;//	=== 2004-04-14 ====
	.global	_IN_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA-FORM),,
	.global	_IN_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
	.global	_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA-FORM),,
	.global	_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
	.global	_LT_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA-FORM),,
	.global	_LT_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8

	.global	_RNA_CMD_VERIFY_CNT;//00,01以外が発生
	.global	_RNA_CMD_VERIFY_DAT;//異常時の最新ﾃﾞｰﾀ
	.global	_RNA_STS_SYSERR_CNT;//BIT0=1
	.global	_RNA_STS_REQERR_CNT;//BIT2=1
	.global	_RNA_STS_ERR_DAT;//異常時の最新ﾃﾞｰﾀ
	.global	_RNA_ALM_BIT0_CNT;//
	.global	_RNA_ALM_BIT1_CNT;//
	.global	_RNA_ALM_BIT2_CNT;//
	.global	_RNA_ALM_BIT3_CNT;//
	.global	_RNA_ALM_BIT4_CNT;//
	.global	_RNA_ALM_BIT5_CNT;//
	.global	_RNA_ALM_BIT6_CNT;//
	.global	_RNA_ALM_BIT7_CNT;//
	.global	_RNA_ALM_CNT;//
	.global	_RNA_ALM_DAT;//
	.global	_RNA_REF1_CNT;//処理が正常に動作しているか
	.global	_RNA_REF2_CNT;//処理が正常に動作しているか

	.IMPORT		_PVX_RNA_INDAT
	
_MONI_SIO2_DSP:
	SUB_START
	MOV	R3,R0				;
	CMP/EQ	#00,R0				;
	BF	MONI_SIO2DSP_010		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_SIO2_DP00,R0		;
	M_BRA	MONI_SIO2DSP_EXT		;
MONI_SIO2DSP_010:
	CMP/EQ	#01,R0				;
	BF	MONI_SIO2DSP_020		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_SIO2_DP01,R0		;
	M_BRA	MONI_SIO2DSP_EXT		;
MONI_SIO2DSP_020:
	CMP/EQ	#02,R0				;
	BF	MONI_SIO2DSP_030		;
;;;pg容量確保[2012-03-06]	FAR_JSR	#_MONI_SIO2_DP02,R0		;
	M_BRA	MONI_SIO2DSP_EXT		;
MONI_SIO2DSP_030:

MONI_SIO2DSP_EXT:
	SUB_END
	M_RTS



_MONI_SIO2_DP00:
_MONI_SIO2_DP01:
_MONI_SIO2_DP02:
	SUB_START
;	=========== A01~A08(同じことを確認) =======
	MEM_MOV_TO_MEM	_rcv2_data_buf+0*2	,W	,_PVP_MONALM_A01,W,R1,R2,R3;CMD
	MEM_MOV_TO_MEM	_rcv2_data_buf+1*2	,W	,_PVP_MONALM_A02,W,R1,R2,R3;STS
	MEM_MOV_TO_MEM	_rcv2_data_buf+2*2	,W	,_PVP_MONALM_A03,W,R1,R2,R3;ALM
	MEM_MOV_TO_MEM	_rcv2_data_buf+3*2	,W	,_PVP_MONALM_A04,W,R1,R2,R3;DAT0,DAT1()
	MEM_MOV_TO_MEM	_rcv2_data_buf+4*2	,W	,_PVP_MONALM_A05,W,R1,R2,R3;DAT2,DAT3()
	MEM_MOV_TO_MEM	_rcv2_data_buf+5*2	,W	,_PVP_MONALM_A06,W,R1,R2,R3;SUM
	MEM_MOV_TO_MEM	_rcv2_data_buf+6*2	,W	,_PVP_MONALM_A07,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_data_buf+7*2	,W	,_PVP_MONALM_A08,W,R1,R2,R3;

	MEM_MOV_TO_MEM	_rcv2_err_OverRunCnt	,W	,_PVP_MONALM_B01,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_err_FRPRErrCnt	,W	,_PVP_MONALM_B02,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_err_elseErrCnt	,W	,_PVP_MONALM_B03,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_err_hard_INTflg1	,W	,_PVP_MONALM_B04,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_err_hard_INTflg2	,W	,_PVP_MONALM_B05,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_err_hard_INTflg3	,W	,_PVP_MONALM_B06,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_rcv2_data_INcnt      	,W	,_PVP_MONALM_B07,W,R1,R2,R3;
	MEM_MOV_TO_MEM	_RNA_COM_ERR_CNT	,W	,_PVP_MONALM_B08,W,R1,R2,R3;

	MEM_MOV_TO_MEM	_PVX_RNA_INDAT			,L	,_PVP_MONALM_C01,L,R1,R2,R3;

	MEM_MOV_TO_MEM	_RNA_CMD_VERIFY_CNT		,W	,_PVP_MONALM_C02,L,R1,R2,R3;
	MEM_MOV_TO_MEM	_RNA_STS_REQERR_CNT		,W	,_PVP_MONALM_C03,L,R1,R2,R3;
	MEM_MOV_TO_MEM	_RNA_STS_SYSERR_CNT		,W	,_PVP_MONALM_C04,L,R1,R2,R3;
	MEM_MOV_TO_MEM	_RNA_ALM_CNT			,W	,_PVP_MONALM_C05,L,R1,R2,R3;
	MEM_MOV_TO_MEM	_LT_RNA_REF_ERR_FLG1		,W	,_PVP_MONALM_C06,L,R1,R2,R3;
	MEM_MOV_TO_MEM	_LT_RNA_REF_ERR_FLG2		,W	,_PVP_MONALM_C07,L,R1,R2,R3;
	SUB_END
	M_RTS

	.AENDI
