;------------------------------------------------------------------------
;                                                                       |
;   FILE        :dbsct.src                                              |
;   DATE        :Sun, Jul 16, 2006                                      |
;   DESCRIPTION :Setting of B,R Section                                 |
;   CPU TYPE    :Other                                                  |
;                                                                       |
;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
;                                                                       |
;------------------------------------------------------------------------
                  


;SH-3DSP
	.SECTION D,DATA,ALIGN=4
	.SECTION R,DATA,ALIGN=4
	.SECTION B,DATA,ALIGN=4
	.SECTION C,DATA,ALIGN=4
__D_ROM .DATA.L (STARTOF D)				;Start Address of Section D
__D_BGN .DATA.L (STARTOF R)				;Start Address of Section R
__D_END .DATA.L (STARTOF R) + (SIZEOF R);End Address of Section R
__B_BGN .DATA.L (STARTOF B)             ;Start Address of Section B
__B_END .DATA.L (STARTOF B) + (SIZEOF B);End Address of Section B
	.EXPORT __D_ROM
	.EXPORT __D_BGN
	.EXPORT __D_END
	.EXPORT __B_BGN
	.EXPORT __B_END
; Remove the following comment when you use __call_init and __call_end
; See resetprg.src and initsct.c
; Specify section addresses of D_INIT_ and D_END_ in Optlinker 
;	.SECTION D_INIT_,DATA,ALIGN=4
;	.SECTION D_END_,DATA,ALIGN=4
;	.SECTION C,DATA,ALIGN=4
;__PRE_BGN  .DATA.L  (STARTOF D_INIT_)
;__PRE_END  .DATA.L  (STARTOF D_INIT_) + (SIZEOF D_INIT_)
;__POST_BGN .DATA.L  (STARTOF D_END_)
;__POST_END .DATA.L  (STARTOF D_END_) + (SIZEOF D_END_)
;	.EXPORT __PRE_BGN
;	.EXPORT __PRE_END
;	.EXPORT __POST_BGN
;	.EXPORT __POST_END	


;*******************  ‚±‚±‚©‚ç‰º‚ÍƒIƒŠƒWƒiƒ‹  ********************
	.SECTION P,CODE,ALIGN=4
	.SECTION PRAM,CODE,ALIGN=4
	.SECTION C,DATA,ALIGN=4
__P_BGN		.DATA.L (STARTOF P)			;Start Address of Section P
__PRAM_BGN	.DATA.L (STARTOF PRAM)			;Start Address of Section PRAM
__P_END		.DATA.L (STARTOF P) + (SIZEOF P)	;End Address of Section P
__PRAM_END	.DATA.L (STARTOF PRAM) + (SIZEOF PRAM)	;End Address of Section PRAM
	.EXPORT __P_BGN
	.EXPORT __PRAM_BGN
	.EXPORT __P_END
	.EXPORT __PRAM_END

	.SECTION PvupsciROM,CODE,ALIGN=4
	.SECTION PvupsciRAM,CODE,ALIGN=4
	.SECTION Phwsetup1,CODE,ALIGN=4
__PvupsciROM_BGN .DATA.L (STARTOF PvupsciROM)				;
__PvupsciRAM_BGN .DATA.L (STARTOF PvupsciRAM)				;
__PvupsciROM_END .DATA.L (STARTOF PvupsciROM) + (SIZEOF PvupsciROM)	;
	.EXPORT __PvupsciROM_BGN
	.EXPORT __PvupsciRAM_BGN
	.EXPORT __PvupsciROM_END

	.SECTION Pcall,CODE,ALIGN=4
	.SECTION PcallRAM,CODE,ALIGN=4
	.SECTION C,DATA,ALIGN=4
__Pcall_BGN	.DATA.L (STARTOF Pcall)				;Start Address of Section R
__PcallRAM_BGN	.DATA.L (STARTOF PcallRAM)			;Start Address of Section B
__Pcall_END	.DATA.L (STARTOF Pcall) + (SIZEOF Pcall)	;End Address of Section R
__PcallRAM_END	.DATA.L (STARTOF PcallRAM) + (SIZEOF PcallRAM)	;End Address of Section B
	.EXPORT __Pcall_BGN
	.EXPORT __PcallRAM_BGN
	.EXPORT __Pcall_END
	.EXPORT __PcallRAM_END


	.SECTION INTHandler,CODE,ALIGN=4
	.SECTION IntPRG,CODE,ALIGN=4
	.SECTION INTHdlrRAM,CODE,ALIGN=4
	.SECTION C,DATA,ALIGN=4
__INTHandler_BGN	.DATA.L (STARTOF INTHandler)			;Start Address of Section R
__INTHdlrRAM_BGN	.DATA.L (STARTOF INTHdlrRAM)			;Start Address of Section B
__INTHnadler_END	.DATA.L (STARTOF IntPRG) + (SIZEOF IntPRG)	;End Address of Section R
	.EXPORT __INTHandler_BGN
	.EXPORT __INTHdlrRAM_BGN
	.EXPORT __INTHnadler_END


;//V06b
	.SECTION PHiROM,CODE,ALIGN=4
	.SECTION PHiRAM,CODE,ALIGN=4
	.SECTION C,DATA,ALIGN=4
__PHiROM_BGN	.DATA.L (STARTOF PHiROM)				;Start Address of Section R
__PHiRAM_BGN	.DATA.L (STARTOF PHiRAM)			;Start Address of Section B
__PHiROM_END	.DATA.L (STARTOF PHiROM) + (SIZEOF PHiROM)	;End Address of Section R
__PHiRAM_END	.DATA.L (STARTOF PHiRAM) + (SIZEOF PHiRAM)	;End Address of Section B
	.EXPORT __PHiROM_BGN
	.EXPORT __PHiRAM_BGN
	.EXPORT __PHiROM_END
	.EXPORT __PHiRAM_END


	.END