*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;------------------------------------------------------------------------
    2                               2     ;                                                                       |
    3                               3     ;   FILE        :vhandler.src                                           |
    4                               4     ;   DATE        :Fri, Nov 22, 2013                                      |
    5                               5     ;   DESCRIPTION :Reset/Interrupt Handler                                |
    6                               6     ;   CPU TYPE    :SH7727                                                 |
    7                               7     ;                                                                       |
    8                               8     ;   This file is generated by Renesas Project Generator (Ver.4.19).     |
    9                               9     ;   NOTE:THIS IS A TYPICAL EXAMPLE.                                     |
   10                              10     ;------------------------------------------------------------------------
   11                              11     
   12                              12     
   13                              13     
   14                              14                     .include        "env.inc"
   15                               1 I1  ;------------------------------------------------------------------------
   16                               2 I1  ;                                                                       |
   17                               3 I1  ;   FILE        :env.inc                                                |
   18                               4 I1  ;   DATE        :Fri, Nov 22, 2013                                      |
   19                               5 I1  ;   DESCRIPTION :Define Interruput Event Register                       |
   20                               6 I1  ;   CPU TYPE    :SH7727                                                 |
   21                               7 I1  ;                                                                       |
   22                               8 I1  ;   This file is generated by Renesas Project Generator (Ver.4.19).     |
   23                               9 I1  ;   NOTE:THIS IS A TYPICAL EXAMPLE.                                     |
   24                              10 I1  ;------------------------------------------------------------------------
   25                              11 I1  
   26                              12 I1  
   27                              13 I1  
   28                              14 I1  
   29          FFFFFFD4            15 I1  EXPEVT:         .equ    H'FFFFFFD4
   30          A4000000            16 I1  INTEVT:         .equ    H'A4000000
   31                              17 I1  
   32                              18 I1  
   33                              15                     .include        "vect.inc"
   34                               1 I1  ;------------------------------------------------------------------------
   35                               2 I1  ;                                                                       |
   36                               3 I1  ;   FILE        :vect.inc                                               |
   37                               4 I1  ;   DATE        :Fri, Nov 22, 2013                                      |
   38                               5 I1  ;   DESCRIPTION :Definition of Vector                                   |
   39                               6 I1  ;   CPU TYPE    :SH7727                                                 |
   40                               7 I1  ;                                                                       |
   41                               8 I1  ;   This file is generated by Renesas Project Generator (Ver.4.19).     |
   42                               9 I1  ;   NOTE:THIS IS A TYPICAL EXAMPLE.                                     |
   43                              10 I1  ;------------------------------------------------------------------------
   44                              11 I1  
   45                              12 I1  
   46                              13 I1  ;;SR_Init:      .equ    B'01100000000000000000000011110000
   47          40000010            14 I1  SR_Init:        .equ    B'01000000000000000000000000010000      ;// ëSäÑçûÇ›ãñâ¬
   48          400000F0            15 I1  SR_Init_DI:     .equ    B'01000000000000000000000011110000      ;// ëSäÑçûÇ›ã÷é~
   49          400000D0            16 I1  SR_Init_SCIEI   .equ    B'01000000000000000000000011010000      ;// ≤∆º¨ŸéûÇÃ ﬁ∞ºﬁÆ›UPë“Çø
                                          éû(SCI(E)ÇæÇØãñâ¬)
   50                              17 I1  
   51                              18 I1  
   52                              19 I1  ;<<VECTOR DATA START (POWER ON RESET)>>
   53                              20 I1          ;H'000 Power On Reset (H-UDI RESET)
   54                              21 I1          .global _PowerON_Reset
                                          
   55                              22 I1  ;<<VECTOR DATA END (POWER ON RESET)>>
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     2
PROGRAM NAME =

   56                              23 I1  ;<<VECTOR DATA START (MANUAL RESET)>>
   57                              24 I1          ;H'020 Manual Reset
   58                              25 I1          .global _Manual_Reset
                                          
   59                              26 I1  ;<<VECTOR DATA END (MANUAL RESET)>>
   60                              27 I1          ;H'040 TLB miss/invalid (load)
   61                              28 I1          .global     _INT_TLBMiss_Load
   62                              29 I1          ;H'060 TLB miss/invalid (store)
   63                              30 I1          .global     _INT_TLBMiss_Store
   64                              31 I1          ;H'070 TBL exception/CPU Address error in repeat loop
   65                              32 I1          .global     _INT_TLBCPU_ADERR
   66                              33 I1          ;H'080 Initial page write
   67                              34 I1          .global     _INT_TLBInitial_Page
   68                              35 I1          ;H'0A0 TLB protect (load)
   69                              36 I1          .global     _INT_TLBProtect_Load
   70                              37 I1          ;H'0C0 TLB protect (store)
   71                              38 I1          .global     _INT_TLBProtect_Store
   72                              39 I1          ;H'0D0 TLB protect in repeat loop
   73                              40 I1          .global     _INT_TLBProtect_Loop
   74                              41 I1          ;H'0E0 Address error (load)
   75                              42 I1          .global     _INT_Address_load
   76                              43 I1          ;H'100 Address error (store)
   77                              44 I1          .global     _INT_Address_store
   78                              45 I1          ;H'120 Reserved
   79                              46 I1          .global     _INT_Reserved1
   80                              47 I1          ;H'140 Reserved
   81                              48 I1          .global     _INT_Reserved2
   82                              49 I1          ;H'160 TRAPA
   83                              50 I1          .global     _INT_TRAPA
   84                              51 I1          ;H'180 Illegal code
   85                              52 I1          .global     _INT_Illegal_code
   86                              53 I1          ;H'1A0 Illegal slot
   87                              54 I1          .global     _INT_Illegal_slot
   88                              55 I1          ;H'1C0 Nonmaskable interrupt
   89                              56 I1          .global     _INT_NMI
   90                              57 I1          ;H'1E0 User breakpoint trap
   91                              58 I1          .global     _INT_User_Break
   92                              59 I1          ;H'200 External hardware interrupt
   93                              60 I1          .global     _INT_Extern_0000
   94                              61 I1          ;H'220 External hardware interrupt
   95                              62 I1          .global     _INT_Extern_0001
   96                              63 I1          ;H'240 External hardware interrupt
   97                              64 I1          .global     _INT_Extern_0010
   98                              65 I1          ;H'260 External hardware interrupt
   99                              66 I1          .global     _INT_Extern_0011
  100                              67 I1          ;H'280 External hardware interrupt
  101                              68 I1          .global     _INT_Extern_0100
  102                              69 I1          ;H'2A0 External hardware interrupt
  103                              70 I1          .global     _INT_Extern_0101
  104                              71 I1          ;H'2C0 External hardware interrupt
  105                              72 I1          .global     _INT_Extern_0110
  106                              73 I1          ;H'2E0 External hardware interrupt
  107                              74 I1          .global     _INT_Extern_0111
  108                              75 I1          ;H'300 External hardware interrupt
  109                              76 I1          .global     _INT_Extern_1000
  110                              77 I1          ;H'320 External hardware interrupt
  111                              78 I1          .global     _INT_Extern_1001
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     3
PROGRAM NAME =

  112                              79 I1          ;H'340 External hardware interrupt
  113                              80 I1          .global     _INT_Extern_1010
  114                              81 I1          ;H'360 External hardware interrupt
  115                              82 I1          .global     _INT_Extern_1011
  116                              83 I1          ;H'380 External hardware interrupt
  117                              84 I1          .global     _INT_Extern_1100
  118                              85 I1          ;H'3A0 External hardware interrupt
  119                              86 I1          .global     _INT_Extern_1101
  120                              87 I1          ;H'3C0 External hardware interrupt
  121                              88 I1          .global     _INT_Extern_1110
  122                              89 I1          ;H'3E0 Reserved
  123                              90 I1          .global     _INT_Reserved3E0
  124                              91 I1          ;H'400 TMU TUNI0
  125                              92 I1          .global     _INT_TMU_TUNI0
  126                              93 I1          ;H'420 TMU TUNI1
  127                              94 I1          .global     _INT_TMU_TUNI1
  128                              95 I1          ;H'440 TMU TUNI2
  129                              96 I1          .global     _INT_TMU_TUNI2
  130                              97 I1          ;H'460 TMU TICPI2
  131                              98 I1          .global     _INT_TMU_TICPI2
  132                              99 I1          ;H'480 RTC ATI
  133                             100 I1          .global     _INT_RTC_ATI
  134                             101 I1          ;H'4A0 RTC PRI
  135                             102 I1          .global     _INT_RTC_PRI
  136                             103 I1          ;H'4C0 RTC CUI
  137                             104 I1          .global     _INT_RTC_CUI
  138                             105 I1          ;H'4E0 SCI ERI
  139                             106 I1          .global     _INT_SCI_ERI
  140                             107 I1          ;H'500 SCI RXI
  141                             108 I1          .global     _INT_SCI_RXI
  142                             109 I1          ;H'520 SCI TXI
  143                             110 I1          .global     _INT_SCI_TXI
  144                             111 I1          ;H'540 SCI TEI
  145                             112 I1          .global     _INT_SCI_TEI
  146                             113 I1          ;H'560 CPG ITI
  147                             114 I1          .global     _INT_CPG_ITI
  148                             115 I1          ;H'580 BSC RCMI
  149                             116 I1          .global     _INT_BSC_RCMI
  150                             117 I1          ;H'5A0 BSC ROVI
  151                             118 I1          .global     _INT_BSC_ROVI
  152                             119 I1          ;H'5C0 Reserved
  153                             120 I1          .global     _INT_Reserved5C0
  154                             121 I1          ;H'5E0 H-UDI
  155                             122 I1          .global     _INT_H_UDI
  156                             123 I1          ;H'600 IRQ0
  157                             124 I1          .global     _INT_IRQ0
  158                             125 I1          ;H'620 IRQ1
  159                             126 I1          .global     _INT_IRQ1
  160                             127 I1          ;H'640 IRQ2
  161                             128 I1          .global     _INT_IRQ2
  162                             129 I1          ;H'660 IRQ3
  163                             130 I1          .global     _INT_IRQ3
  164                             131 I1          ;H'680 IRQ4
  165                             132 I1          .global     _INT_IRQ4
  166                             133 I1          ;H'6A0 IRQ5
  167                             134 I1          .global     _INT_IRQ5
  168                             135 I1          ;H'6C0 Reserved
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     4
PROGRAM NAME =

  169                             136 I1          .global     _INT_Reserved6C0
  170                             137 I1          ;H'6E0 Reserved
  171                             138 I1          .global     _INT_Reserved6E0
  172                             139 I1          ;H'700 PINT0_7
  173                             140 I1          .global     _INT_PINT0_7
  174                             141 I1          ;H'720 PINT8_15
  175                             142 I1          .global     _INT_PINT8_15
  176                             143 I1          ;H'740 Reserved
  177                             144 I1          .global     _INT_Reserved740
  178                             145 I1          ;H'760 Reserved
  179                             146 I1          .global     _INT_Reserved760
  180                             147 I1          ;H'780 Reserved
  181                             148 I1          .global     _INT_Reserved780
  182                             149 I1          ;H'7A0 Reserved
  183                             150 I1          .global     _INT_Reserved7A0
  184                             151 I1          ;H'7C0 Reserved
  185                             152 I1          .global     _INT_Reserved7C0
  186                             153 I1          ;H'7E0 Reserved
  187                             154 I1          .global     _INT_Reserved7E0
  188                             155 I1          ;H'800 DMAC DEI0
  189                             156 I1          .global     _INT_DMAC_DEI0
  190                             157 I1          ;H'820 DMAC DEI1
  191                             158 I1          .global     _INT_DMAC_DEI1
  192                             159 I1          ;H'840 DMAC DEI2
  193                             160 I1          .global     _INT_DMAC_DEI2
  194                             161 I1          ;H'860 DMAC DEI3
  195                             162 I1          .global     _INT_DMAC_DEI3
  196                             163 I1          ;H'880 Reserved
  197                             164 I1          .global     _INT_Reserved880
  198                             165 I1          ;H'8A0 Reserved
  199                             166 I1          .global     _INT_Reserved8A0
  200                             167 I1          ;H'8C0 Reserved
  201                             168 I1          .global     _INT_Reserved8C0
  202                             169 I1          ;H'8E0 Reserved
  203                             170 I1          .global     _INT_Reserved8E0
  204                             171 I1          ;H'900 SCIF ERI2
  205                             172 I1          .global     _INT_SCIF_ERI2
  206                             173 I1          ;H'920 SCIF RXI2
  207                             174 I1          .global     _INT_SCIF_RXI2
  208                             175 I1          ;H'940 SCIF BRI2
  209                             176 I1          .global     _INT_SCIF_BRI2
  210                             177 I1          ;H'960 SCIF TXI2
  211                             178 I1          .global     _INT_SCIF_TXI2
  212                             179 I1          ;H'980 ADC ADI
  213                             180 I1          .global     _INT_ADC_ADI
  214                             181 I1          ;H'9A0 LCDC LCDCI
  215                             182 I1          .global     _INT_LCDC_LCDCI
  216                             183 I1          ;H'9C0 PCC0
  217                             184 I1          .global     _INT_PCC0
  218                             185 I1          ;H'9E0 Reserved
  219                             186 I1          .global     _INT_Reserved9E0
  220                             187 I1          ;H'A00 USBH USBHI
  221                             188 I1          .global     _INT_USBH_USBHI
  222                             189 I1          ;H'A20 USBF USBFI0
  223                             190 I1          .global     _INT_USBF_USBFI0
  224                             191 I1          ;H'A40 USBF USBFI1
  225                             192 I1          .global     _INT_USBF_USBFI1
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     5
PROGRAM NAME =

  226                             193 I1          ;H'A60 AFEIF AFEIFI
  227                             194 I1          .global     _INT_AFEIF_AFEIFI
  228                             195 I1          ;H'A80 Reserved
  229                             196 I1          .global     _INT_ReservedA80
  230                             197 I1          ;H'AA0 Reserved
  231                             198 I1          .global     _INT_ReservedAA0
  232                             199 I1          ;H'AC0 Reserved
  233                             200 I1          .global     _INT_ReservedAC0
  234                             201 I1          ;H'AE0 Reserved
  235                             202 I1          .global     _INT_ReservedAE0
  236                             203 I1          ;H'B00 SIOF SIFERI
  237                             204 I1          .global     _INT_SIOF_SIFERI
  238                             205 I1          ;H'B20 SIOF SIFTXI
  239                             206 I1          .global     _INT_SIOF_SIFTXI
  240                             207 I1          ;H'B40 SIOF SIFRXI
  241                             208 I1          .global     _INT_SIOF_SIFRXI
  242                             209 I1          ;H'B60 SIOF SIFCCI
  243                             210 I1          .global     _INT_SIOF_SIFCCI
  244                             211 I1          ; dummy
  245                             212 I1          .global     _DUMMY
  246                             213 I1  
  247                              16     
  248          FFFFFF0F            17     IMASKclr:       .equ    H'FFFFFF0F
  249          CFFFFFFF            18     RBBLclr:        .equ    H'CFFFFFFF
  250          70000000            19     MDRBBLset:      .equ    H'70000000
  251                              20     
  252          00000070            21     TLBCPU_CODE                             .equ    H'70
  253          00000C00            22     DUMMY_TLBCPU_CODE               .equ    H'C00
  254          000000D0            23     TLBProtect_CODE                 .equ    H'D0
  255          00000C20            24     DUMMY_TLBProtect_CODE   .equ    H'C20
  256                              25     
  257                              26                     .import         _RESET_Vectors
  258                              27                     .import         _INT_Vectors
  259                              28                     .import         _INT_MASK
  260                              29     
  261                              30                     .export         _ResetHandler
  262                              31     
  263                              32     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  264                              33     ;*             macro definition                                *;
  265                              34     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  266                              35                     .macro PUSH_EXP_BASE_REG
  267                              36             stc.l   ssr,@-r15               ; save ssr
  268                              37             stc.l   spc,@-r15               ; save spc
  269                              38             sts.l   pr,@-r15                ; save context registers
  270                              39             stc.l   r7_bank,@-r15
  271                              40             stc.l   r6_bank,@-r15
  272                              41             stc.l   r5_bank,@-r15
  273                              42             stc.l   r4_bank,@-r15
  274                              43             stc.l   r3_bank,@-r15
  275                              44             stc.l   r2_bank,@-r15
  276                              45             stc.l   r1_bank,@-r15
  277                              46             stc.l   r0_bank,@-r15
  278                              47                     .endm
  279                              48     ;
  280                              49                     .macro POP_EXP_BASE_REG
  281                              50             ldc.l   @r15+,r0_bank           ; recover registers
  282                              51             ldc.l   @r15+,r1_bank
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     6
PROGRAM NAME =

  283                              52             ldc.l   @r15+,r2_bank
  284                              53             ldc.l   @r15+,r3_bank
  285                              54             ldc.l   @r15+,r4_bank
  286                              55             ldc.l   @r15+,r5_bank
  287                              56             ldc.l   @r15+,r6_bank
  288                              57             ldc.l   @r15+,r7_bank
  289                              58             lds.l   @r15+,pr
  290                              59             ldc.l   @r15+,spc
  291                              60             ldc.l   @r15+,ssr
  292                              61                     .endm
  293                              62     ;
  294                              63     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  295                              64     ;               reset
                                                                  ;
  296                              65     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  297 00000000                     66                     .section        RSTHandler,code
  298 00000000                     67     _ResetHandler:
  299 00000000 D004                68                                     mov.l   #EXPEVT,r0
  300 00000002 6002                69                                     mov.l   @r0,r0
  301 00000004 4009                70                                     shlr2   r0
  302 00000006 4001                71                                     shlr    r0
  303 00000008 D103                72                                     mov.l   #_RESET_Vectors,r1
  304 0000000A 301C                73                                     add             r1,r0
  305 0000000C 6002                74                                     mov.l   @r0,r0
  306 0000000E 402B                75                                     jmp             @r0
  307 00000010 0009                76                                     nop
  308                              77     ;
  309                              78     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  310                              79     ;               exceptional interrupt
                                                  ;
  311                              80     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  312                                     ***** BEGIN-POOL *****
  313 00000012 0000                       ALIGNMENT CODE
  314 00000014 FFFFFFD4                   DATA FOR SOURCE-LINE 68
  315 00000018 00000000                   DATA FOR SOURCE-LINE 72
  316                                     ***** END-POOL *****
  317 00000000                     81                     .section        INTHandler,code
  318                              82                     .export         _INTHandlerPRG
  319 00000000                     83     _INTHandlerPRG:
  320 00000000                     84     _ExpHandler:
  321                              85                                     PUSH_EXP_BASE_REG
  322 00000000 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  323 00000002 4F43                   M           stc.l   spc,@-r15               ; save spc
  324 00000004 4F22                   M           sts.l   pr,@-r15                ; save context registers
  325 00000006 4FF3                   M           stc.l   r7_bank,@-r15
  326 00000008 4FE3                   M           stc.l   r6_bank,@-r15
  327 0000000A 4FD3                   M           stc.l   r5_bank,@-r15
  328 0000000C 4FC3                   M           stc.l   r4_bank,@-r15
  329 0000000E 4FB3                   M           stc.l   r3_bank,@-r15
  330 00000010 4FA3                   M           stc.l   r2_bank,@-r15
  331 00000012 4F93                   M           stc.l   r1_bank,@-r15
  332 00000014 4F83                   M           stc.l   r0_bank,@-r15
  333                              86     ;
  334 00000016 D00F                87                                     mov.l   #EXPEVT,r0                      ; set event addres
                                          s
  335 00000018 6102                88                                     mov.l   @r0,r1                          ; set exception co
                                          de
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     7
PROGRAM NAME =

  336                              89                                                 ; SH7729 event code
  337 0000001A D20F                90                                     mov.l   #TLBCPU_CODE,r2         ; H'70
  338 0000001C 3210                91                                     cmp/eq  r1,r2
  339 0000001E 8B01                92                                     bf              exp_01
  340 00000020 D10E                93                                     mov.l   #DUMMY_TLBCPU_CODE,r1   ; H'70 -> H'600
  341 00000022 A004                94                                     bra             exp_10
  342 00000024 E2D0                95     exp_01:                 mov             #TLBProtect_CODE,r2     ; H'D0
  343 00000026 622C                96                                     extu.b  r2,r2
  344 00000028 3210                97                                     cmp/eq  r1,r2
  345 0000002A 8B00                98                                     bf              exp_10
  346 0000002C D10C                99                                     mov.l   #DUMMY_TLBProtect_CODE,r1       ; H'D0 -> H'620
  347 0000002E                    100     exp_10:
  348 0000002E D00D               101                                     mov.l   #_INT_Vectors,r0        ; set vector table address
  349 00000030 71C0               102                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  350 00000032 4109               103                                     shlr2   r1
  351 00000034 4101               104                                     shlr    r1
  352 00000036 031E               105                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
  353                             106     ;
  354 00000038 D00B               107                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  355 0000003A 4109               108                                     shlr2   r1
  356 0000003C 011C               109                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  357 0000003E 611C               110                                     extu.b  r1,r1
  358                             111     ;
  359 00000040 0002               112                                     stc             sr,r0                           ; save sr
  360 00000042 D20A               113                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  361 00000044 2029               114                                     and             r2,r0                           ; clear ma
                                          sk data
  362 00000046 201B               115                                     or              r1,r0                           ; set inte
                                          rrupt mask
  363 00000048 403E               116                                     ldc             r0,ssr                          ; set curr
                                          ent status
  364                             117     ;
  365 0000004A 434E               118                                     ldc.l   r3,spc
  366 0000004C D008               119                                     mov.l   #__int_term,r0          ; set interrupt terminate
  367 0000004E 402A               120                                     lds             r0,pr
  368                             121     ;
  369 00000050 002B               122                                     rte
  370 00000052 0009               123                                     nop
  371                             124     ;
  372                                     ***** BEGIN-POOL *****
  373 00000054 FFFFFFD4                   DATA FOR SOURCE-LINE 87
  374 00000058 00000070                   DATA FOR SOURCE-LINE 90
  375 0000005C 00000C00                   DATA FOR SOURCE-LINE 93
  376 00000060 00000C20                   DATA FOR SOURCE-LINE 99
  377 00000064 00000000                   DATA FOR SOURCE-LINE 101
  378 00000068 00000000                   DATA FOR SOURCE-LINE 107
  379 0000006C CFFFFF0F                   DATA FOR SOURCE-LINE 113
  380 00000070 00000000                   DATA FOR SOURCE-LINE 119
  381                                     ***** END-POOL *****
  382                             125                                     .pool
  383                             126     ;
  384                             127     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  385                             128     ;               Interrupt terminate
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     8
PROGRAM NAME =

                                                          ;
  386                             129     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  387 00000074                    130                                     .align  4
  388 00000074                    131     __int_term:
  389 00000074 D007               132                                     mov.l   #MDRBBLset,r0   ; set MD,BL,RB
  390 00000076 400E               133                                     ldc.l   r0,sr                           ;
  391                             134                                     POP_EXP_BASE_REG
  392 00000078 4F87                   M           ldc.l   @r15+,r0_bank           ; recover registers
  393 0000007A 4F97                   M           ldc.l   @r15+,r1_bank
  394 0000007C 4FA7                   M           ldc.l   @r15+,r2_bank
  395 0000007E 4FB7                   M           ldc.l   @r15+,r3_bank
  396 00000080 4FC7                   M           ldc.l   @r15+,r4_bank
  397 00000082 4FD7                   M           ldc.l   @r15+,r5_bank
  398 00000084 4FE7                   M           ldc.l   @r15+,r6_bank
  399 00000086 4FF7                   M           ldc.l   @r15+,r7_bank
  400 00000088 4F26                   M           lds.l   @r15+,pr
  401 0000008A 4F47                   M           ldc.l   @r15+,spc
  402 0000008C 4F37                   M           ldc.l   @r15+,ssr
  403 0000008E 002B               135                                     rte                                     ; return
  404 00000090 0009               136                                     nop
  405                             137     ;
  406                                     ***** BEGIN-POOL *****
  407 00000092 0000                       ALIGNMENT CODE
  408 00000094 70000000                   DATA FOR SOURCE-LINE 132
  409                                     ***** END-POOL *****
  410                             138                                     .pool
  411                             139     ;
  412                             140     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  413                             141     ;               TLB miss interrupt
                                                          ;
  414                             142     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  415 00000300                    143                     .org    H'300
  416 00000300                    144     _TLBmissHandler:
  417                             145                                     PUSH_EXP_BASE_REG
  418 00000300 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  419 00000302 4F43                   M           stc.l   spc,@-r15               ; save spc
  420 00000304 4F22                   M           sts.l   pr,@-r15                ; save context registers
  421 00000306 4FF3                   M           stc.l   r7_bank,@-r15
  422 00000308 4FE3                   M           stc.l   r6_bank,@-r15
  423 0000030A 4FD3                   M           stc.l   r5_bank,@-r15
  424 0000030C 4FC3                   M           stc.l   r4_bank,@-r15
  425 0000030E 4FB3                   M           stc.l   r3_bank,@-r15
  426 00000310 4FA3                   M           stc.l   r2_bank,@-r15
  427 00000312 4F93                   M           stc.l   r1_bank,@-r15
  428 00000314 4F83                   M           stc.l   r0_bank,@-r15
  429                             146     ;
  430 00000316 D00A               147                                     mov.l   #EXPEVT,r0                      ; set event addres
                                          s
  431 00000318 6102               148                                     mov.l   @r0,r1                          ; set exception co
                                          de
  432 0000031A D00A               149                                     mov.l   #_INT_Vectors,r0        ; set vector table address
  433 0000031C 71C0               150                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  434 0000031E 4109               151                                     shlr2   r1
  435 00000320 4101               152                                     shlr    r1
  436 00000322 031E               153                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     9
PROGRAM NAME =

  437                             154     ;
  438 00000324 D008               155                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  439 00000326 4109               156                                     shlr2   r1
  440 00000328 011C               157                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  441 0000032A 611C               158                                     extu.b  r1,r1
  442                             159     ;
  443 0000032C 0002               160                                     stc             sr,r0                           ; save sr
  444 0000032E D207               161                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  445 00000330 2029               162                                     and             r2,r0                           ; clear ma
                                          sk data
  446 00000332 201B               163                                     or              r1,r0                           ; set inte
                                          rrupt mask
  447 00000334 403E               164                                     ldc             r0,ssr                          ; set curr
                                          ent status
  448                             165     ;
  449 00000336 434E               166                                     ldc.l   r3,spc
  450 00000338 D005               167                                     mov.l   #__int_term,r0          ; set interrupt terminate
  451 0000033A 402A               168                                     lds             r0,pr
  452                             169     ;
  453 0000033C 002B               170                                     rte
  454 0000033E 0009               171                                     nop
  455                             172     ;
  456                                     ***** BEGIN-POOL *****
  457 00000340 FFFFFFD4                   DATA FOR SOURCE-LINE 147
  458 00000344 00000000                   DATA FOR SOURCE-LINE 149
  459 00000348 00000000                   DATA FOR SOURCE-LINE 155
  460 0000034C CFFFFF0F                   DATA FOR SOURCE-LINE 161
  461 00000350 00000000                   DATA FOR SOURCE-LINE 167
  462                                     ***** END-POOL *****
  463                             173                                     .pool
  464                             174     ;
  465                             175     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  466                             176     ;               IRQ
                                                                          ;
  467                             177     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  468 00000500                    178                     .org    H'500
  469 00000500                    179     _IRQHandler:
  470                             180                                     PUSH_EXP_BASE_REG
  471 00000500 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  472 00000502 4F43                   M           stc.l   spc,@-r15               ; save spc
  473 00000504 4F22                   M           sts.l   pr,@-r15                ; save context registers
  474 00000506 4FF3                   M           stc.l   r7_bank,@-r15
  475 00000508 4FE3                   M           stc.l   r6_bank,@-r15
  476 0000050A 4FD3                   M           stc.l   r5_bank,@-r15
  477 0000050C 4FC3                   M           stc.l   r4_bank,@-r15
  478 0000050E 4FB3                   M           stc.l   r3_bank,@-r15
  479 00000510 4FA3                   M           stc.l   r2_bank,@-r15
  480 00000512 4F93                   M           stc.l   r1_bank,@-r15
  481 00000514 4F83                   M           stc.l   r0_bank,@-r15
  482                             181     ;
  483 00000516 D00A               182                                     mov.l   #INTEVT,r0                      ; set event addres
                                          s
  484 00000518 6102               183                                     mov.l   @r0,r1                          ; set exception co
                                          de
  485 0000051A D00A               184                                     mov.l   #_INT_Vectors,r0        ; set vector table address
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    10
PROGRAM NAME =

  486 0000051C 71C0               185                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  487 0000051E 4109               186                                     shlr2   r1
  488 00000520 4101               187                                     shlr    r1
  489 00000522 031E               188                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
  490                             189     ;
  491 00000524 D008               190                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  492 00000526 4109               191                                     shlr2   r1
  493 00000528 011C               192                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  494 0000052A 611C               193                                     extu.b  r1,r1
  495                             194     ;
  496 0000052C 0002               195                                     stc             sr,r0                           ; save sr
  497 0000052E D207               196                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  498 00000530 2029               197                                     and             r2,r0                           ; clear ma
                                          sk data
  499 00000532 201B               198                                     or              r1,r0                           ; set inte
                                          rrupt mask
  500 00000534 403E               199                                     ldc             r0,ssr                          ; set curr
                                          ent status
  501                             200     ;
  502 00000536 434E               201                                     ldc.l   r3,spc
  503 00000538 D005               202                                     mov.l   #__int_term,r0          ; set interrupt terminate
  504 0000053A 402A               203                                     lds             r0,pr
  505                             204     ;
  506 0000053C 002B               205                                     rte
  507 0000053E 0009               206                                     nop
  508                             207     ;
  509                                     ***** BEGIN-POOL *****
  510 00000540 A4000000                   DATA FOR SOURCE-LINE 182
  511 00000544 00000000                   DATA FOR SOURCE-LINE 184
  512 00000548 00000000                   DATA FOR SOURCE-LINE 190
  513 0000054C CFFFFF0F                   DATA FOR SOURCE-LINE 196
  514 00000550 00000000                   DATA FOR SOURCE-LINE 202
  515                                     ***** END-POOL *****
  516                             208                                     .pool
  517                             209                                     .end
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    11

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

DUMMY_TLBCPU_CODE                         EQU  00000C00    253*  340 
DUMMY_TLBProtect_CODE                     EQU  00000C20    255*  346 
EXPEVT                                    EQU  FFFFFFD4     29*  299   334   430 
IMASKclr                                  EQU  FFFFFF0F    248*  360   444   497 
INTEVT                                    EQU  A4000000     30*  483 
INTHandler                       INTHandl SCT  00000000    317*
MDRBBLset                                 EQU  70000000    250*  389 
RBBLclr                                   EQU  CFFFFFFF    249*  360   444   497 
RSTHandler                       RSTHandl SCT  00000000    297*
SR_Init                                   EQU  40000010     47*
SR_Init_DI                                EQU  400000F0     48*
SR_Init_SCIEI                             EQU  400000D0     49*
TLBCPU_CODE                               EQU  00000070    252*  337 
TLBProtect_CODE                           EQU  000000D0    254*  342 
_DUMMY                                    IMPT 00000000    245 
_ExpHandler                      INTHandl      00000000    320*
_INTHandlerPRG                   INTHandl EXPT 00000000    318   319*
_INT_ADC_ADI                              IMPT 00000000    213 
_INT_AFEIF_AFEIFI                         IMPT 00000000    227 
_INT_Address_load                         IMPT 00000000     75 
_INT_Address_store                        IMPT 00000000     77 
_INT_BSC_RCMI                             IMPT 00000000    149 
_INT_BSC_ROVI                             IMPT 00000000    151 
_INT_CPG_ITI                              IMPT 00000000    147 
_INT_DMAC_DEI0                            IMPT 00000000    189 
_INT_DMAC_DEI1                            IMPT 00000000    191 
_INT_DMAC_DEI2                            IMPT 00000000    193 
_INT_DMAC_DEI3                            IMPT 00000000    195 
_INT_Extern_0000                          IMPT 00000000     93 
_INT_Extern_0001                          IMPT 00000000     95 
_INT_Extern_0010                          IMPT 00000000     97 
_INT_Extern_0011                          IMPT 00000000     99 
_INT_Extern_0100                          IMPT 00000000    101 
_INT_Extern_0101                          IMPT 00000000    103 
_INT_Extern_0110                          IMPT 00000000    105 
_INT_Extern_0111                          IMPT 00000000    107 
_INT_Extern_1000                          IMPT 00000000    109 
_INT_Extern_1001                          IMPT 00000000    111 
_INT_Extern_1010                          IMPT 00000000    113 
_INT_Extern_1011                          IMPT 00000000    115 
_INT_Extern_1100                          IMPT 00000000    117 
_INT_Extern_1101                          IMPT 00000000    119 
_INT_Extern_1110                          IMPT 00000000    121 
_INT_H_UDI                                IMPT 00000000    155 
_INT_IRQ0                                 IMPT 00000000    157 
_INT_IRQ1                                 IMPT 00000000    159 
_INT_IRQ2                                 IMPT 00000000    161 
_INT_IRQ3                                 IMPT 00000000    163 
_INT_IRQ4                                 IMPT 00000000    165 
_INT_IRQ5                                 IMPT 00000000    167 
_INT_Illegal_code                         IMPT 00000000     85 
_INT_Illegal_slot                         IMPT 00000000     87 
_INT_LCDC_LCDCI                           IMPT 00000000    215 
_INT_MASK                                 IMPT 00000000    259   354   438   491 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    12

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_NMI                                  IMPT 00000000     89 
_INT_PCC0                                 IMPT 00000000    217 
_INT_PINT0_7                              IMPT 00000000    173 
_INT_PINT8_15                             IMPT 00000000    175 
_INT_RTC_ATI                              IMPT 00000000    133 
_INT_RTC_CUI                              IMPT 00000000    137 
_INT_RTC_PRI                              IMPT 00000000    135 
_INT_Reserved1                            IMPT 00000000     79 
_INT_Reserved2                            IMPT 00000000     81 
_INT_Reserved3E0                          IMPT 00000000    123 
_INT_Reserved5C0                          IMPT 00000000    153 
_INT_Reserved6C0                          IMPT 00000000    169 
_INT_Reserved6E0                          IMPT 00000000    171 
_INT_Reserved740                          IMPT 00000000    177 
_INT_Reserved760                          IMPT 00000000    179 
_INT_Reserved780                          IMPT 00000000    181 
_INT_Reserved7A0                          IMPT 00000000    183 
_INT_Reserved7C0                          IMPT 00000000    185 
_INT_Reserved7E0                          IMPT 00000000    187 
_INT_Reserved880                          IMPT 00000000    197 
_INT_Reserved8A0                          IMPT 00000000    199 
_INT_Reserved8C0                          IMPT 00000000    201 
_INT_Reserved8E0                          IMPT 00000000    203 
_INT_Reserved9E0                          IMPT 00000000    219 
_INT_ReservedA80                          IMPT 00000000    229 
_INT_ReservedAA0                          IMPT 00000000    231 
_INT_ReservedAC0                          IMPT 00000000    233 
_INT_ReservedAE0                          IMPT 00000000    235 
_INT_SCIF_BRI2                            IMPT 00000000    209 
_INT_SCIF_ERI2                            IMPT 00000000    205 
_INT_SCIF_RXI2                            IMPT 00000000    207 
_INT_SCIF_TXI2                            IMPT 00000000    211 
_INT_SCI_ERI                              IMPT 00000000    139 
_INT_SCI_RXI                              IMPT 00000000    141 
_INT_SCI_TEI                              IMPT 00000000    145 
_INT_SCI_TXI                              IMPT 00000000    143 
_INT_SIOF_SIFCCI                          IMPT 00000000    243 
_INT_SIOF_SIFERI                          IMPT 00000000    237 
_INT_SIOF_SIFRXI                          IMPT 00000000    241 
_INT_SIOF_SIFTXI                          IMPT 00000000    239 
_INT_TLBCPU_ADERR                         IMPT 00000000     65 
_INT_TLBInitial_Page                      IMPT 00000000     67 
_INT_TLBMiss_Load                         IMPT 00000000     61 
_INT_TLBMiss_Store                        IMPT 00000000     63 
_INT_TLBProtect_Load                      IMPT 00000000     69 
_INT_TLBProtect_Loop                      IMPT 00000000     73 
_INT_TLBProtect_Store                     IMPT 00000000     71 
_INT_TMU_TICPI2                           IMPT 00000000    131 
_INT_TMU_TUNI0                            IMPT 00000000    125 
_INT_TMU_TUNI1                            IMPT 00000000    127 
_INT_TMU_TUNI2                            IMPT 00000000    129 
_INT_TRAPA                                IMPT 00000000     83 
_INT_USBF_USBFI0                          IMPT 00000000    223 
_INT_USBF_USBFI1                          IMPT 00000000    225 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    13

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_USBH_USBHI                           IMPT 00000000    221 
_INT_User_Break                           IMPT 00000000     91 
_INT_Vectors                              IMPT 00000000    258   348   432   485 
_IRQHandler                      INTHandl      00000500    469*
_Manual_Reset                             IMPT 00000000     58 
_PowerON_Reset                            IMPT 00000000     54 
_RESET_Vectors                            IMPT 00000000    257   303 
_ResetHandler                    RSTHandl EXPT 00000000    261   298*
_TLBmissHandler                  INTHandl      00000300    416*
__int_term                       INTHandl      00000074    366   388*  450   503 
exp_01                           INTHandl      00000024    339   342*
exp_10                           INTHandl      0000002E    341   345   347*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    14

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

RSTHandler                       REL-CODE    00000001C        
INTHandler                       REL-CODE    000000554        
