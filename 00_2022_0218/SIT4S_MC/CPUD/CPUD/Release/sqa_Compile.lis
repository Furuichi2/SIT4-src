*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;****************************************************************************************
    2                               2     ;* File Name    : ssa_Compile.src
    3                               3     ;* Function     : シーケンス コンパイル処理
    4                               4     ;* Author       : Designed by T.Akiba, Coded by T.Akiba
    5                               5     ;* Date         : 2009-11-20 Akiba
    6                               6     ;* Update       : 2010-08-11 Y.Kobayashi(コード整理)
    7                               7     ;****************************************************************************************
    8                               8     
    9                               9     ;********************************************************************
   10                              10     ;* INCLUDE
   11                              11     ;********************************************************************
 2285                              19     
 2286 00000000                     20             .SECTION        P,CODE
 2287                              21     
 2288                              22     ;********************************************************************
 2289                              23     ;* EXTERN 宣言 MEMORY,HARD
 2290                              24     ;********************************************************************
 2291                              25             .IMPORT _SEQ_COM1_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2292                              26             .IMPORT _SEQ_COM2_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2293                              27             .IMPORT _SEQ_COM3_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2294                              28     
 2295                              29             .EXPORT _SEQ_RUN_CHG1_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2296                              30             .EXPORT _SEQ_RUN_CHG2_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2297                              31             .EXPORT _SEQ_RUN_CHG3_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2298                              32     
 2299                              33     
 2300 00000000                     34     _SEQ_START_CODE:
 2301                              35             SUB_START
 2302 00000000 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2303                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2304 00000002 0009                36             NOP
 2305                              37     
 2306 00000004                     38     _SEQ_END_CODE:
 2307                              39             SUB_END
 2308                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2309 00000004 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2310                              40             M_RTS
 2311 00000006 000B                   M           RTS                             ;RTSの後ろの
 2312 00000008 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2313                              41     
 2314                              42     
 2315                              43     ;********************************************************************
 2316                              44     ;* FUNCTION     : シーケンスコマンド変換 1
 2317                              45     ;* DATE         : 09/11/20 Akiba
 2318                              46     ;* UPDATE       :
 2319                              47     ;********************************************************************
 2320                              48             .IMPORT _PVP_SQ_COM_ADR                 ;word
 2321                              49             .IMPORT _PVP_SQ_COM_ERR                 ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2322                              50     
 2323                              51     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2324                              52     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2325                              53     
 2326 0000000C                     54             .ALIGN  4
 2327 0000000C                     55     _SEQ_RUN_CHG1_MAIN:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     2
PROGRAM NAME =

 2328                              56             SUB_START
 2329 0000000C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2330                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2331                              57     
 2332                              58     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2333 0000000E DD17                59             MOV.L   #_SEQ_RUN1_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2334 00000010 DC17                60             MOV.L   #_SEQ_START_CODE,R12            ;
 2335 00000012 60C1                61             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2336 00000014 2D01                62             MOV.W   R0,@R13                         ;
 2337 00000016 D017                63             MOV.L   #2,R0                           ;
 2338 00000018 3D0C                64             ADD     R0,R13                          ; ADDRESS INC
 2339 0000001A 3C0C                65             ADD     R0,R12                          ; ADDRESS INC
 2340 0000001C 60C1                66             MOV.W   @R12,R0                         ;
 2341 0000001E 2D01                67             MOV.W   R0,@R13                         ; NOP CODE SET
 2342                              68     
 2343                              69             FAR_JSR #_SEQ_RUN_CHG1,R1               ;
 2344 00000020 D115                   M           MOV.L   #_SEQ_RUN_CHG1,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2345 00000022 410B                   M           JSR     @R1                     ;
 2346 00000024 0009                   M           NOP                                     ;
 2347                              70     
 2348 00000026 D115                71             MOV.L   #_SEQ_CMP_ERR_ADR1,R1           ;
 2349 00000028 2172                72             MOV.L   R7,@R1                          ; compile error adr set
 2350                              73     
 2351                              74     ;       ===========================
 2352 0000002A D115                75             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2353 0000002C 2171                76             MOV.W   R7,@R1                          ;
 2354 0000002E D115                77             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2355 00000030 2101                78             MOV.W   R0,@R1                          ;
 2356                              79     ;       ============================
 2357                              80     
 2358 00000032 D115                81             MOV.L   #_SEQ_CMP_ERR1,R1               ;
 2359 00000034 2101                82             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2360                              83     
 2361 00000036 2008                84             TST     R0,R0                           ;
 2362 00000038 890C                85             BT      _SEQ_RUN_CHG_MAIN020            ;
 2363                              86     
 2364                              87     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2365 0000003A DC14                88             MOV.L   #_SEQ_END_CODE,R12              ;
 2366 0000003C 60C1                89             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2367 0000003E 2D01                90             MOV.W   R0,@R13                         ;
 2368 00000040 D00C                91             MOV.L   #2,R0                           ;
 2369 00000042 3D0C                92             ADD     R0,R13                          ; ADDRESS INC
 2370 00000044 3C0C                93             ADD     R0,R12                          ; ADDRESS INC
 2371 00000046 60C1                94             MOV.W   @R12,R0                         ;
 2372 00000048 2D01                95             MOV.W   R0,@R13                         ; M_RTS SET
 2373 0000004A D00A                96             MOV.L   #2,R0                           ;
 2374 0000004C 3D0C                97             ADD     R0,R13                          ; ADDRESS INC
 2375 0000004E 3C0C                98             ADD     R0,R12                          ; ADDRESS INC
 2376 00000050 60C1                99             MOV.W   @R12,R0                         ;
 2377 00000052 2D01               100             MOV.W   R0,@R13                         ; M_RTS SET
 2378                             101     
 2379 00000054                    102     _SEQ_RUN_CHG_MAIN020:
 2380                             103     
 2381 00000054 222A               104             XOR     R2,R2                           ;
 2382                             105     
 2383 00000056 D10E               106             MOV.L   #_SEQ_ARG1_DATA,R1              ; ARG clear
 2384 00000058 2121               107             MOV.W   R2,@R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     3
PROGRAM NAME =

 2385 0000005A D10E               108             MOV.L   #_SEQ_MRG1_DATA,R1              ; MRG clear
 2386 0000005C 2121               109             MOV.W   R2,@R1                          ;
 2387 0000005E 9204               110             MOV.W   #H'01,R2                        ; NRG 1 set
 2388 00000060 D10D               111             MOV.L   #_SEQ_NRG1_DATA,R1              ;
 2389 00000062 2121               112             MOV.W   R2,@R1                          ;
 2390                             113     
 2391                             114             SUB_END
 2392                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2393 00000064 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2394                             115             M_RTS
 2395 00000066 000B                   M           RTS                             ;RTSの後ろの
 2396 00000068 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2397                             116     
 2398                             117     ;********************************************************************
 2399                             118     ;* FUNCTION     : シーケンスコマンド変換 2
 2400                             119     ;* DATE         : 09/11/20 Akiba
 2401                             120     ;* UPDATE       :
 2402                             121     ;********************************************************************
 2403                             122     
 2404                             123     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2405                             124     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2406                             125     
 2407                                     ***** BEGIN-POOL *****
 2408 0000006A 0001                       DATA FOR SOURCE-LINE 110
 2409 0000006C 00000000                   DATA FOR SOURCE-LINE 59
 2410 00000070 00000000                   DATA FOR SOURCE-LINE 60
 2411 00000074 00000002                   DATA FOR SOURCE-LINE 63,91,96
 2412 00000078 00000000                   DATA FOR SOURCE-LINE 69
 2413 0000007C 00000000                   DATA FOR SOURCE-LINE 71
 2414 00000080 00000000                   DATA FOR SOURCE-LINE 75
 2415 00000084 00000000                   DATA FOR SOURCE-LINE 77
 2416 00000088 00000000                   DATA FOR SOURCE-LINE 81
 2417 0000008C 00000000                   DATA FOR SOURCE-LINE 88
 2418 00000090 00000000                   DATA FOR SOURCE-LINE 106
 2419 00000094 00000000                   DATA FOR SOURCE-LINE 108
 2420 00000098 00000000                   DATA FOR SOURCE-LINE 111
 2421                                     ***** END-POOL *****
 2422 0000009C                    126             .ALIGN  4
 2423 0000009C                    127     _SEQ_RUN_CHG2_MAIN:
 2424                             128             SUB_START
 2425 0000009C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2426                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2427                             129     
 2428                             130     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2429 0000009E DD17               131             MOV.L   #_SEQ_RUN2_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2430 000000A0 DC17               132             MOV.L   #_SEQ_START_CODE,R12            ;
 2431 000000A2 60C1               133             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2432 000000A4 2D01               134             MOV.W   R0,@R13                         ;
 2433 000000A6 D017               135             MOV.L   #2,R0                           ;
 2434 000000A8 3D0C               136             ADD     R0,R13                          ; ADDRESS INC
 2435 000000AA 3C0C               137             ADD     R0,R12                          ; ADDRESS INC
 2436 000000AC 60C1               138             MOV.W   @R12,R0                         ;
 2437 000000AE 2D01               139             MOV.W   R0,@R13                         ; NOP CODE SET
 2438                             140     
 2439                             141             FAR_JSR #_SEQ_RUN_CHG2,R1               ;
 2440 000000B0 D115                   M           MOV.L   #_SEQ_RUN_CHG2,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2441 000000B2 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     4
PROGRAM NAME =

 2442 000000B4 0009                   M           NOP                                     ;
 2443                             142     
 2444 000000B6 D115               143             MOV.L   #_SEQ_CMP_ERR_ADR2,R1           ;
 2445 000000B8 2172               144             MOV.L   R7,@R1                          ; compile error adr set
 2446                             145     
 2447                             146     ;       ===========================
 2448 000000BA D115               147             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2449 000000BC 2171               148             MOV.W   R7,@R1                          ;
 2450 000000BE D115               149             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2451 000000C0 2101               150             MOV.W   R0,@R1                          ;
 2452                             151     ;       ============================
 2453                             152     
 2454 000000C2 D115               153             MOV.L   #_SEQ_CMP_ERR2,R1               ;
 2455 000000C4 2101               154             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2456                             155     
 2457 000000C6 2008               156             TST     R0,R0                           ;
 2458 000000C8 890C               157             BT      _SEQ_RUN_CHG2_MAIN020           ;
 2459                             158     
 2460                             159     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2461 000000CA DC14               160             MOV.L   #_SEQ_END_CODE,R12              ;
 2462 000000CC 60C1               161             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2463 000000CE 2D01               162             MOV.W   R0,@R13                         ;
 2464 000000D0 D00C               163             MOV.L   #2,R0                           ;
 2465 000000D2 3D0C               164             ADD     R0,R13                          ; ADDRESS INC
 2466 000000D4 3C0C               165             ADD     R0,R12                          ; ADDRESS INC
 2467 000000D6 60C1               166             MOV.W   @R12,R0                         ;
 2468 000000D8 2D01               167             MOV.W   R0,@R13                         ; M_RTS SET
 2469 000000DA D00A               168             MOV.L   #2,R0                           ;
 2470 000000DC 3D0C               169             ADD     R0,R13                          ; ADDRESS INC
 2471 000000DE 3C0C               170             ADD     R0,R12                          ; ADDRESS INC
 2472 000000E0 60C1               171             MOV.W   @R12,R0                         ;
 2473 000000E2 2D01               172             MOV.W   R0,@R13                         ; M_RTS SET
 2474                             173     
 2475 000000E4                    174     _SEQ_RUN_CHG2_MAIN020:
 2476                             175     
 2477 000000E4 222A               176             XOR     R2,R2                           ;
 2478                             177     
 2479 000000E6 D10E               178             MOV.L   #_SEQ_ARG2_DATA,R1              ; ARG clear
 2480 000000E8 2121               179             MOV.W   R2,@R1                          ;
 2481 000000EA D10E               180             MOV.L   #_SEQ_MRG2_DATA,R1              ; MRG clear
 2482 000000EC 2121               181             MOV.W   R2,@R1                          ;
 2483 000000EE 9204               182             MOV.W   #H'01,R2                        ; NRG 1 set
 2484 000000F0 D10D               183             MOV.L   #_SEQ_NRG2_DATA,R1              ;
 2485 000000F2 2121               184             MOV.W   R2,@R1                          ;
 2486                             185     
 2487                             186             SUB_END
 2488                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2489 000000F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2490                             187             M_RTS
 2491 000000F6 000B                   M           RTS                             ;RTSの後ろの
 2492 000000F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2493                             188     
 2494                             189     ;********************************************************************
 2495                             190     ;* FUNCTION     : シーケンスコマンド変換 3
 2496                             191     ;* DATE         : 09/11/20 Akiba
 2497                             192     ;* UPDATE       :
 2498                             193     ;********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     5
PROGRAM NAME =

 2499                             194     
 2500                             195     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2501                             196     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2502                             197     
 2503                                     ***** BEGIN-POOL *****
 2504 000000FA 0001                       DATA FOR SOURCE-LINE 182
 2505 000000FC 00000000                   DATA FOR SOURCE-LINE 131
 2506 00000100 00000000                   DATA FOR SOURCE-LINE 132
 2507 00000104 00000002                   DATA FOR SOURCE-LINE 135,163,168
 2508 00000108 00000000                   DATA FOR SOURCE-LINE 141
 2509 0000010C 00000000                   DATA FOR SOURCE-LINE 143
 2510 00000110 00000000                   DATA FOR SOURCE-LINE 147
 2511 00000114 00000000                   DATA FOR SOURCE-LINE 149
 2512 00000118 00000000                   DATA FOR SOURCE-LINE 153
 2513 0000011C 00000000                   DATA FOR SOURCE-LINE 160
 2514 00000120 00000000                   DATA FOR SOURCE-LINE 178
 2515 00000124 00000000                   DATA FOR SOURCE-LINE 180
 2516 00000128 00000000                   DATA FOR SOURCE-LINE 183
 2517                                     ***** END-POOL *****
 2518 0000012C                    198             .ALIGN  4
 2519 0000012C                    199     _SEQ_RUN_CHG3_MAIN:
 2520                             200             SUB_START
 2521 0000012C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2522                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2523                             201     
 2524                             202     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2525 0000012E DD17               203             MOV.L   #_SEQ_RUN3_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2526 00000130 DC17               204             MOV.L   #_SEQ_START_CODE,R12            ;
 2527 00000132 60C1               205             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2528 00000134 2D01               206             MOV.W   R0,@R13                         ;
 2529 00000136 D017               207             MOV.L   #2,R0                           ;
 2530 00000138 3D0C               208             ADD     R0,R13                          ; ADDRESS INC
 2531 0000013A 3C0C               209             ADD     R0,R12                          ; ADDRESS INC
 2532 0000013C 60C1               210             MOV.W   @R12,R0                         ;
 2533 0000013E 2D01               211             MOV.W   R0,@R13                         ; NOP CODE SET
 2534                             212     
 2535                             213             FAR_JSR #_SEQ_RUN_CHG3,R1               ;
 2536 00000140 D115                   M           MOV.L   #_SEQ_RUN_CHG3,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2537 00000142 410B                   M           JSR     @R1                     ;
 2538 00000144 0009                   M           NOP                                     ;
 2539                             214     
 2540 00000146 D115               215             MOV.L   #_SEQ_CMP_ERR_ADR3,R1           ;
 2541 00000148 2172               216             MOV.L   R7,@R1                          ; compile error adr set
 2542                             217     
 2543                             218     ;       ===========================
 2544 0000014A D115               219             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2545 0000014C 2171               220             MOV.W   R7,@R1                          ;
 2546 0000014E D115               221             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2547 00000150 2101               222             MOV.W   R0,@R1                          ;
 2548                             223     ;       ============================
 2549                             224     
 2550 00000152 D115               225             MOV.L   #_SEQ_CMP_ERR3,R1               ;
 2551 00000154 2101               226             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2552                             227     
 2553 00000156 2008               228             TST     R0,R0                           ;
 2554 00000158 890C               229             BT      _SEQ_RUN_CHG3_MAIN020           ;
 2555                             230     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     6
PROGRAM NAME =

 2556                             231     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2557 0000015A DC14               232             MOV.L   #_SEQ_END_CODE,R12              ;
 2558 0000015C 60C1               233             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2559 0000015E 2D01               234             MOV.W   R0,@R13                         ;
 2560 00000160 D00C               235             MOV.L   #2,R0                           ;
 2561 00000162 3D0C               236             ADD     R0,R13                          ; ADDRESS INC
 2562 00000164 3C0C               237             ADD     R0,R12                          ; ADDRESS INC
 2563 00000166 60C1               238             MOV.W   @R12,R0                         ;
 2564 00000168 2D01               239             MOV.W   R0,@R13                         ; M_RTS SET
 2565 0000016A D00A               240             MOV.L   #2,R0                           ;
 2566 0000016C 3D0C               241             ADD     R0,R13                          ; ADDRESS INC
 2567 0000016E 3C0C               242             ADD     R0,R12                          ; ADDRESS INC
 2568 00000170 60C1               243             MOV.W   @R12,R0                         ;
 2569 00000172 2D01               244             MOV.W   R0,@R13                         ; M_RTS SET
 2570                             245     
 2571 00000174                    246     _SEQ_RUN_CHG3_MAIN020:
 2572                             247     
 2573 00000174 222A               248             XOR     R2,R2                           ;
 2574                             249     
 2575 00000176 D10E               250             MOV.L   #_SEQ_ARG3_DATA,R1              ; ARG clear
 2576 00000178 2121               251             MOV.W   R2,@R1                          ;
 2577 0000017A D10E               252             MOV.L   #_SEQ_MRG3_DATA,R1              ; MRG clear
 2578 0000017C 2121               253             MOV.W   R2,@R1                          ;
 2579 0000017E 9204               254             MOV.W   #H'01,R2                        ; NRG 1 set
 2580 00000180 D10D               255             MOV.L   #_SEQ_NRG3_DATA,R1              ;
 2581 00000182 2121               256             MOV.W   R2,@R1                          ;
 2582                             257     
 2583                             258             SUB_END
 2584                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2585 00000184 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2586                             259             M_RTS
 2587 00000186 000B                   M           RTS                             ;RTSの後ろの
 2588 00000188 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2589                             260     
 2590                             261     ;********************************************************************
 2591                             262     ;* FUNCTION     : コンパイルサブルーチン 1
 2592                             263     ;* DATE         : 09/11/20 Akiba
 2593                             264     ;* UPDATE       :
 2594                             265     ;********************************************************************
 2595                                     ***** BEGIN-POOL *****
 2596 0000018A 0001                       DATA FOR SOURCE-LINE 254
 2597 0000018C 00000000                   DATA FOR SOURCE-LINE 203
 2598 00000190 00000000                   DATA FOR SOURCE-LINE 204
 2599 00000194 00000002                   DATA FOR SOURCE-LINE 207,235,240
 2600 00000198 00000000                   DATA FOR SOURCE-LINE 213
 2601 0000019C 00000000                   DATA FOR SOURCE-LINE 215
 2602 000001A0 00000000                   DATA FOR SOURCE-LINE 219
 2603 000001A4 00000000                   DATA FOR SOURCE-LINE 221
 2604 000001A8 00000000                   DATA FOR SOURCE-LINE 225
 2605 000001AC 00000000                   DATA FOR SOURCE-LINE 232
 2606 000001B0 00000000                   DATA FOR SOURCE-LINE 250
 2607 000001B4 00000000                   DATA FOR SOURCE-LINE 252
 2608 000001B8 00000000                   DATA FOR SOURCE-LINE 255
 2609                                     ***** END-POOL *****
 2610 000001BC                    266             .ALIGN  4
 2611 000001BC                    267     _SEQ_RUN_CHG1:
 2612                             268             SUB_START
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     7
PROGRAM NAME =

 2613 000001BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2614                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2615                             269     
 2616 000001BE DC10               270             MOV.L   #_SEQ_COM1_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2617 000001C0 DD10               271             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2618 000001C2 3CDC               272             ADD.L   R13,R12                         ;
 2619 000001C4 DD10               273             MOV.L   #_SEQ_RUN1,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2620 000001C6 DE11               274             MOV.L   #_SEQ_RUN1_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2621                             275     
 2622 000001C8 D011               276             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2623 000001CA 3E08               277             SUB     R0,R14                          ; 最大命令数28BYTE
 2624 000001CC 277A               278             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2625                             279     
 2626 000001CE                    280     _SEQ_RUN_CHG1_100:
 2627                             281     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2628                             282                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2629                             283                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2630                             284                                                     ; R13:SEQ-展開命令-WORK
 2631                             285                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2632 000001CE 3DE3               286             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2633                             287     
 2634 000001D0 D610               288             MOV.L   #H'0C1DFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2635                             289     
 2636 000001D2 3C63               290             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2637 000001D4 893C               291             BT      _SEQ_RUN_CHG1_ERR_END           ; R12>=R6 JUMP
 2638                             292     
 2639 000001D6 6AC5               293             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2640 000001D8 68C5               294             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2641                             295     
 2642 000001DA 69A8               296             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2643 000001DC 699C               297             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2644 000001DE 900E               298             MOV.W   #H'00FF,R0                      ;
 2645 000001E0 2909               299             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2646                             300     
 2647 000001E2 6BA3               301             MOV.L   R10,R11                         ;
 2648 000001E4 4B09               302             SHLR2   R11                             ; MKIND 抽出
 2649 000001E6 4B09               303             SHLR2   R11                             ; MKIND 抽出
 2650 000001E8 D00B               304             MOV.L   #H'000F,R0                      ;
 2651 000001EA 2B09               305             AND     R0,R11                          ; MKIND 抽出
 2652 000001EC 2A09               306             AND     R0,R10                          ; BIT DATA 抽出
 2653                             307     
 2654 000001EE                    308     _SEQ_RUN_CHG1_300:
 2655                             309     ;                                               ; SEQUENCE COMMAND
 2656 000001EE 4908               310             SHLL2   R9                              ; OP CODE × 4
 2657 000001F0 D10A               311             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2658 000001F2 319C               312             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2659                             313     
 2660 000001F4 D50A               314             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2661 000001F6 3950               315             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2662 000001F8 8914               316             BT      _SEQ_RUN_CHG1_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2663                             317             M_BRA   _SEQ_RUN_CHG1_4BYTE             ;
 2664 000001FA A017                   M           BRA     _SEQ_RUN_CHG1_4BYTE
 2665 000001FC 0009                   M           NOP
 2666                             318     
 2667                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     8
PROGRAM NAME =

 2668 000001FE 00FF                       DATA FOR SOURCE-LINE 298
 2669 00000200 00000000                   DATA FOR SOURCE-LINE 270
 2670 00000204 00000018                   DATA FOR SOURCE-LINE 271
 2671 00000208 00000000                   DATA FOR SOURCE-LINE 273
 2672 0000020C 00000000                   DATA FOR SOURCE-LINE 274
 2673 00000210 0000001E                   DATA FOR SOURCE-LINE 276
 2674 00000214 0C1DFFFF                   DATA FOR SOURCE-LINE 288
 2675 00000218 0000000F                   DATA FOR SOURCE-LINE 304
 2676 0000021C 00000000                   DATA FOR SOURCE-LINE 311
 2677 00000220 0000026C                   DATA FOR SOURCE-LINE 314
 2678                                     ***** END-POOL *****
 2679 00000224                    319     _SEQ_RUN_CHG1_DSETLI:
 2680 00000224 900B               320             MOV.W   #1,R0                           ;
 2681 00000226 370C               321             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2682 00000228 68C5               322             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2683 0000022A 69C5               323             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2684                             324     
 2685 0000022C                    325     _SEQ_RUN_CHG1_4BYTE:
 2686                             326     
 2687 0000022C 6112               327             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2688 0000022E 410B               328             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2689 00000230 0009               329             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2690                             330                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2691                             331                                                     ; IF END THEN R0=0000H ELSE "0"
 2692                             332     
 2693 00000232 8800               333             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2694 00000234 8904               334             BT      _SEQ_RUN_CHG1_800               ; NO ERR THEN JUMP
 2695                             335     
 2696 00000236 8855               336             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2697 00000238 8907               337             BT      _SEQ_RUN_CHG1_END               ; NORMAL END
 2698                             338             M_BRA   _SEQ_RUN_CHG1_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2699 0000023A A009                   M           BRA     _SEQ_RUN_CHG1_ERR_END
 2700 0000023C 0009                   M           NOP
 2701                             339                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2702                             340     
 2703                                     ***** BEGIN-POOL *****
 2704 0000023E 0001                       DATA FOR SOURCE-LINE 320
 2705                                     ***** END-POOL *****
 2706 00000240                    341     _SEQ_RUN_CHG1_800:                              ; CODE SET END
 2707                             342     
 2708 00000240 9102               343             MOV.W   #1,R1                           ;
 2709 00000242 371C               344             ADD     R1,R7                           ; STEP COUNTER + 1
 2710                             345             M_BRA   _SEQ_RUN_CHG1_100               ; LOOP
 2711 00000244 AFC3                   M           BRA     _SEQ_RUN_CHG1_100
 2712 00000246 0009                   M           NOP
 2713                             346     
 2714                                     ***** BEGIN-POOL *****
 2715 00000248 0001                       DATA FOR SOURCE-LINE 343
 2716                                     ***** END-POOL *****
 2717 0000024A                    347     _SEQ_RUN_CHG1_END:
 2718 0000024A 200A               348             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2719                             349                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2720                             350             M_BRA   _SEQ_RUN_CHG1_EXIT              ;
 2721 0000024C A001                   M           BRA     _SEQ_RUN_CHG1_EXIT
 2722 0000024E 0009                   M           NOP
 2723                             351     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE     9
PROGRAM NAME =

 2724 00000250                    352     _SEQ_RUN_CHG1_ERR_END:
 2725 00000250 9002               353             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2726                             354                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2727 00000252                    355     _SEQ_RUN_CHG1_EXIT:
 2728                             356             SUB_END
 2729                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2730 00000252 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2731                             357             M_RTS
 2732 00000254 000B                   M           RTS                             ;RTSの後ろの
 2733 00000256 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2734                             358     
 2735                             359     ;********************************************************************
 2736                             360     ;* FUNCTION     : コンパイルサブルーチン 2
 2737                             361     ;* DATE         : 09/11/20 Akiba
 2738                             362     ;* UPDATE       :
 2739                             363     ;********************************************************************
 2740                                     ***** BEGIN-POOL *****
 2741 00000258 FF00                       DATA FOR SOURCE-LINE 353
 2742                                     ***** END-POOL *****
 2743 0000025C                    364             .ALIGN  4
 2744 0000025C                    365     _SEQ_RUN_CHG2:
 2745                             366             SUB_START
 2746 0000025C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2747                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2748                             367     
 2749 0000025E DC10               368             MOV.L   #_SEQ_COM2_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2750 00000260 DD10               369             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2751 00000262 3CDC               370             ADD.L   R13,R12                         ;
 2752 00000264 DD10               371             MOV.L   #_SEQ_RUN2,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2753 00000266 DE11               372             MOV.L   #_SEQ_RUN2_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2754                             373     
 2755 00000268 D011               374             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2756 0000026A 3E08               375             SUB     R0,R14                          ; 最大命令数28BYTE
 2757 0000026C 277A               376             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2758                             377     
 2759 0000026E                    378     _SEQ_RUN_CHG2_100:
 2760                             379     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2761                             380                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2762                             381                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2763                             382                                                     ; R13:SEQ-展開命令-WORK
 2764                             383                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2765 0000026E 3DE3               384             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2766                             385     
 2767 00000270 D610               386             MOV.L   #H'0C1EFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2768                             387     
 2769 00000272 3C63               388             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2770 00000274 893C               389             BT      _SEQ_RUN_CHG2_ERR_END           ; R12>=R6 JUMP
 2771                             390     
 2772 00000276 6AC5               391             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2773 00000278 68C5               392             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2774                             393     
 2775 0000027A 69A8               394             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2776 0000027C 699C               395             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2777 0000027E 900E               396             MOV.W   #H'00FF,R0                      ;
 2778 00000280 2909               397             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    10
PROGRAM NAME =

 2779                             398     
 2780 00000282 6BA3               399             MOV.L   R10,R11                         ;
 2781 00000284 4B09               400             SHLR2   R11                             ; MKIND 抽出
 2782 00000286 4B09               401             SHLR2   R11                             ; MKIND 抽出
 2783 00000288 D00B               402             MOV.L   #H'000F,R0                      ;
 2784 0000028A 2B09               403             AND     R0,R11                          ; MKIND 抽出
 2785 0000028C 2A09               404             AND     R0,R10                          ; BIT DATA 抽出
 2786                             405     
 2787 0000028E                    406     _SEQ_RUN_CHG2_300:
 2788                             407     ;                                               ; SEQUENCE COMMAND
 2789 0000028E 4908               408             SHLL2   R9                              ; OP CODE × 4
 2790 00000290 D10A               409             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2791 00000292 319C               410             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2792                             411     
 2793 00000294 D50A               412             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2794 00000296 3950               413             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2795 00000298 8914               414             BT      _SEQ_RUN_CHG2_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2796                             415             M_BRA   _SEQ_RUN_CHG2_4BYTE             ;
 2797 0000029A A017                   M           BRA     _SEQ_RUN_CHG2_4BYTE
 2798 0000029C 0009                   M           NOP
 2799                             416     
 2800                                     ***** BEGIN-POOL *****
 2801 0000029E 00FF                       DATA FOR SOURCE-LINE 396
 2802 000002A0 00000000                   DATA FOR SOURCE-LINE 368
 2803 000002A4 00000018                   DATA FOR SOURCE-LINE 369
 2804 000002A8 00000000                   DATA FOR SOURCE-LINE 371
 2805 000002AC 00000000                   DATA FOR SOURCE-LINE 372
 2806 000002B0 0000001E                   DATA FOR SOURCE-LINE 374
 2807 000002B4 0C1EFFFF                   DATA FOR SOURCE-LINE 386
 2808 000002B8 0000000F                   DATA FOR SOURCE-LINE 402
 2809 000002BC 00000000                   DATA FOR SOURCE-LINE 409
 2810 000002C0 0000026C                   DATA FOR SOURCE-LINE 412
 2811                                     ***** END-POOL *****
 2812 000002C4                    417     _SEQ_RUN_CHG2_DSETLI:
 2813 000002C4 900B               418             MOV.W   #1,R0                           ;
 2814 000002C6 370C               419             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2815 000002C8 68C5               420             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2816 000002CA 69C5               421             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2817                             422     
 2818 000002CC                    423     _SEQ_RUN_CHG2_4BYTE:
 2819                             424     
 2820 000002CC 6112               425             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2821 000002CE 410B               426             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2822 000002D0 0009               427             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2823                             428                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2824                             429                                                     ; IF END THEN R0=0000H ELSE "0"
 2825                             430     
 2826 000002D2 8800               431             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2827 000002D4 8904               432             BT      _SEQ_RUN_CHG2_800               ; NO ERR THEN JUMP
 2828                             433     
 2829 000002D6 8855               434             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2830 000002D8 8907               435             BT      _SEQ_RUN_CHG2_END               ; NORMAL END
 2831                             436             M_BRA   _SEQ_RUN_CHG2_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2832 000002DA A009                   M           BRA     _SEQ_RUN_CHG2_ERR_END
 2833 000002DC 0009                   M           NOP
 2834                             437                                                     ;    [ENDなし異常=内部RAMに収まらない]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    11
PROGRAM NAME =

 2835                                     ***** BEGIN-POOL *****
 2836 000002DE 0001                       DATA FOR SOURCE-LINE 418
 2837                                     ***** END-POOL *****
 2838 000002E0                    438     _SEQ_RUN_CHG2_800:                              ; CODE SET END
 2839 000002E0 9102               439             MOV.W   #1,R1                           ;
 2840 000002E2 371C               440             ADD     R1,R7                           ; STEP COUNTER + 1
 2841                             441             M_BRA   _SEQ_RUN_CHG2_100               ; LOOP
 2842 000002E4 AFC3                   M           BRA     _SEQ_RUN_CHG2_100
 2843 000002E6 0009                   M           NOP
 2844                             442     
 2845                                     ***** BEGIN-POOL *****
 2846 000002E8 0001                       DATA FOR SOURCE-LINE 439
 2847                                     ***** END-POOL *****
 2848 000002EA                    443     _SEQ_RUN_CHG2_END:
 2849 000002EA 200A               444             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2850                             445                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2851                             446             M_BRA   _SEQ_RUN_CHG2_EXIT              ;
 2852 000002EC A001                   M           BRA     _SEQ_RUN_CHG2_EXIT
 2853 000002EE 0009                   M           NOP
 2854                             447     
 2855 000002F0                    448     _SEQ_RUN_CHG2_ERR_END:
 2856 000002F0 9002               449             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2857                             450                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2858 000002F2                    451     _SEQ_RUN_CHG2_EXIT:
 2859                             452             SUB_END
 2860                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2861 000002F2 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2862                             453             M_RTS
 2863 000002F4 000B                   M           RTS                             ;RTSの後ろの
 2864 000002F6 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2865                             454     
 2866                             455     ;********************************************************************
 2867                             456     ;* FUNCTION     : コンパイルサブルーチン 3
 2868                             457     ;* DATE         : 09/11/20 Akiba
 2869                             458     ;* UPDATE       :
 2870                             459     ;********************************************************************
 2871                                     ***** BEGIN-POOL *****
 2872 000002F8 FF00                       DATA FOR SOURCE-LINE 449
 2873                                     ***** END-POOL *****
 2874 000002FC                    460             .ALIGN  4
 2875 000002FC                    461     _SEQ_RUN_CHG3:
 2876                             462             SUB_START
 2877 000002FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2878                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2879                             463     
 2880 000002FE DC10               464             MOV.L   #_SEQ_COM3_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2881 00000300 DD10               465             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2882 00000302 3CDC               466             ADD.L   R13,R12                         ;
 2883 00000304 DD10               467             MOV.L   #_SEQ_RUN3,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2884 00000306 DE11               468             MOV.L   #_SEQ_RUN3_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2885                             469     
 2886 00000308 D011               470             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2887 0000030A 3E08               471             SUB     R0,R14                          ; 最大命令数28BYTE
 2888 0000030C 277A               472             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2889                             473     
 2890 0000030E                    474     _SEQ_RUN_CHG3_100:
 2891                             475     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    12
PROGRAM NAME =

 2892                             476                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2893                             477                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2894                             478                                                     ; R13:SEQ-展開命令-WORK
 2895                             479                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2896 0000030E 3DE3               480             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2897                             481     
 2898 00000310 D610               482             MOV.L   #H'0C1FFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2899                             483     
 2900 00000312 3C63               484             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2901 00000314 893C               485             BT      _SEQ_RUN_CHG3_ERR_END           ; R12>=R6 JUMP
 2902                             486     
 2903 00000316 6AC5               487             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2904 00000318 68C5               488             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2905                             489     
 2906 0000031A 69A8               490             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2907 0000031C 699C               491             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2908 0000031E 900E               492             MOV.W   #H'00FF,R0                      ;
 2909 00000320 2909               493             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2910                             494     
 2911 00000322 6BA3               495             MOV.L   R10,R11                         ;
 2912 00000324 4B09               496             SHLR2   R11                             ; MKIND 抽出
 2913 00000326 4B09               497             SHLR2   R11                             ; MKIND 抽出
 2914 00000328 D00B               498             MOV.L   #H'000F,R0                      ;
 2915 0000032A 2B09               499             AND     R0,R11                          ; MKIND 抽出
 2916 0000032C 2A09               500             AND     R0,R10                          ; BIT DATA 抽出
 2917                             501     
 2918 0000032E                    502     _SEQ_RUN_CHG3_300:
 2919                             503     ;                                               ; SEQUENCE COMMAND
 2920 0000032E 4908               504             SHLL2   R9                              ; OP CODE × 4
 2921 00000330 D10A               505             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2922 00000332 319C               506             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2923                             507     
 2924 00000334 D50A               508             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2925 00000336 3950               509             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2926 00000338 8914               510             BT      _SEQ_RUN_CHG3_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2927                             511             M_BRA   _SEQ_RUN_CHG3_4BYTE             ;
 2928 0000033A A017                   M           BRA     _SEQ_RUN_CHG3_4BYTE
 2929 0000033C 0009                   M           NOP
 2930                             512     
 2931                                     ***** BEGIN-POOL *****
 2932 0000033E 00FF                       DATA FOR SOURCE-LINE 492
 2933 00000340 00000000                   DATA FOR SOURCE-LINE 464
 2934 00000344 00000018                   DATA FOR SOURCE-LINE 465
 2935 00000348 00000000                   DATA FOR SOURCE-LINE 467
 2936 0000034C 00000000                   DATA FOR SOURCE-LINE 468
 2937 00000350 0000001E                   DATA FOR SOURCE-LINE 470
 2938 00000354 0C1FFFFF                   DATA FOR SOURCE-LINE 482
 2939 00000358 0000000F                   DATA FOR SOURCE-LINE 498
 2940 0000035C 00000000                   DATA FOR SOURCE-LINE 505
 2941 00000360 0000026C                   DATA FOR SOURCE-LINE 508
 2942                                     ***** END-POOL *****
 2943 00000364                    513     _SEQ_RUN_CHG3_DSETLI:
 2944 00000364 900B               514             MOV.W   #1,R0                           ;
 2945 00000366 370C               515             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    13
PROGRAM NAME =

 2946 00000368 68C5               516             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2947 0000036A 69C5               517             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2948                             518     
 2949 0000036C                    519     _SEQ_RUN_CHG3_4BYTE:
 2950                             520     
 2951 0000036C 6112               521             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2952 0000036E 410B               522             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2953 00000370 0009               523             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2954                             524                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2955                             525                                                     ; IF END THEN R0=0000H ELSE "0"
 2956                             526     
 2957 00000372 8800               527             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2958 00000374 8904               528             BT      _SEQ_RUN_CHG3_800               ; NO ERR THEN JUMP
 2959                             529     
 2960 00000376 8855               530             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2961 00000378 8907               531             BT      _SEQ_RUN_CHG3_END               ; NORMAL END
 2962                             532             M_BRA   _SEQ_RUN_CHG3_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2963 0000037A A009                   M           BRA     _SEQ_RUN_CHG3_ERR_END
 2964 0000037C 0009                   M           NOP
 2965                             533                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2966                                     ***** BEGIN-POOL *****
 2967 0000037E 0001                       DATA FOR SOURCE-LINE 514
 2968                                     ***** END-POOL *****
 2969 00000380                    534     _SEQ_RUN_CHG3_800:                              ; CODE SET END
 2970 00000380 9102               535             MOV.W   #1,R1                           ;
 2971 00000382 371C               536             ADD     R1,R7                           ; STEP COUNTER + 1
 2972                             537             M_BRA   _SEQ_RUN_CHG3_100               ; LOOP
 2973 00000384 AFC3                   M           BRA     _SEQ_RUN_CHG3_100
 2974 00000386 0009                   M           NOP
 2975                             538     
 2976                                     ***** BEGIN-POOL *****
 2977 00000388 0001                       DATA FOR SOURCE-LINE 535
 2978                                     ***** END-POOL *****
 2979 0000038A                    539     _SEQ_RUN_CHG3_END:
 2980 0000038A 200A               540             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2981                             541                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2982                             542             M_BRA   _SEQ_RUN_CHG3_EXIT              ;
 2983 0000038C A001                   M           BRA     _SEQ_RUN_CHG3_EXIT
 2984 0000038E 0009                   M           NOP
 2985                             543     
 2986 00000390                    544     _SEQ_RUN_CHG3_ERR_END:
 2987 00000390 9002               545             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2988                             546                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2989 00000392                    547     _SEQ_RUN_CHG3_EXIT:
 2990                             548             SUB_END
 2991                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2992 00000392 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2993                             549             M_RTS
 2994 00000394 000B                   M           RTS                             ;RTSの後ろの
 2995 00000396 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2996                             550     
 2997                             551     
 2998                             552     ;       /****************************************************
 2999                             553     ;       /*****    R11 ＝　ＯＰ　ＣＯＤＥ                *****
 3000                             554     ;       /*****    R10 ＝　ＢＩＴ　ＣＯＤＥ              *****
 3001                             555     ;       /*****    R9  ＝　ＯＦＦＳＥＴ　ＣＯＤＥ        *****
 3002                             556     ;       /*****    R8  ＝　ＡＤＲ　ＣＯＤＥ              *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    14
PROGRAM NAME =

 3003                             557     ;       /****************************************************
 3004                             558     ;
 3005                             559     ;       ***********************************
 3006                             560     ;       *****   NOP CODE CHANGE ROUTINE ***
 3007                             561     ;       ***********************************
 3008                                     ***** BEGIN-POOL *****
 3009 00000398 FF00                       DATA FOR SOURCE-LINE 545
 3010                                     ***** END-POOL *****
 3011 0000039C                    562             .ALIGN  4
 3012 0000039C                    563     _NOP_CHG:                                               ; 00000000B     00
 3013                             564             SUB_START
 3014 0000039C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3015                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3016                             565     
 3017 0000039E D004               566             MOV.L   #(_NOP_CODE_END - _NOP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3018 000003A0 D304               567             MOV.L   #_NOP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3019                             568     
 3020 000003A2 D105               569             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3021 000003A4 410B               570             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3022 000003A6 0009               571             NOP
 3023                             572     
 3024                             573             SUB_END
 3025                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3026 000003A8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3027                             574             M_RTS
 3028 000003AA 000B                   M           RTS                             ;RTSの後ろの
 3029 000003AC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3030                             575     
 3031                             576     ;       ************************************
 3032                             577     ;       *****   LDON CODE CHANGE ROUTINE ***
 3033                             578     ;       ************************************
 3034                                     ***** BEGIN-POOL *****
 3035 000003AE 0000                       ALIGNMENT CODE
 3036 000003B0 00000000                   DATA FOR SOURCE-LINE 566
 3037 000003B4 00000000                   DATA FOR SOURCE-LINE 567
 3038 000003B8 00000000                   DATA FOR SOURCE-LINE 569
 3039                                     ***** END-POOL *****
 3040 000003BC                    579             .ALIGN  4
 3041 000003BC                    580     _LDON_CHG:                                              ; 00000001B     01
 3042                             581             SUB_START
 3043 000003BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3044                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3045                             582     
 3046 000003BE D004               583             MOV.L   #(_LDON_CODE_END - _LDON_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3047 000003C0 D304               584             MOV.L   #_LDON_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3048                             585     
 3049 000003C2 D105               586             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3050 000003C4 410B               587             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3051 000003C6 0009               588             NOP
 3052                             589     
 3053                             590             SUB_END
 3054                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3055 000003C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3056                             591             M_RTS
 3057 000003CA 000B                   M           RTS                             ;RTSの後ろの
 3058 000003CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3059                             592     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    15
PROGRAM NAME =

 3060                             593     ;       ***********************************
 3061                             594     ;       *****   AMRG CODE CHANGE ROUTINE ***
 3062                             595     ;       ***********************************
 3063                                     ***** BEGIN-POOL *****
 3064 000003CE 0000                       ALIGNMENT CODE
 3065 000003D0 00000000                   DATA FOR SOURCE-LINE 583
 3066 000003D4 00000000                   DATA FOR SOURCE-LINE 584
 3067 000003D8 00000000                   DATA FOR SOURCE-LINE 586
 3068                                     ***** END-POOL *****
 3069 000003DC                    596             .ALIGN  4
 3070 000003DC                    597     _AMRG_CHG:                                              ; 00100000B     20
 3071                             598             SUB_START
 3072 000003DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3073                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3074                             599     
 3075 000003DE D004               600             MOV.L   #(_AMRG_CODE_END - _AMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3076 000003E0 D304               601             MOV.L   #_AMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3077                             602     
 3078 000003E2 D105               603             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3079 000003E4 410B               604             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3080 000003E6 0009               605             NOP
 3081                             606     
 3082                             607             SUB_END
 3083                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3084 000003E8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3085                             608             M_RTS
 3086 000003EA 000B                   M           RTS                             ;RTSの後ろの
 3087 000003EC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3088                             609     
 3089                             610     ;       ***********************************
 3090                             611     ;       *****   OMRG CODE CHANGE ROUTINE ***
 3091                             612     ;       ***********************************
 3092                                     ***** BEGIN-POOL *****
 3093 000003EE 0000                       ALIGNMENT CODE
 3094 000003F0 00000000                   DATA FOR SOURCE-LINE 600
 3095 000003F4 00000000                   DATA FOR SOURCE-LINE 601
 3096 000003F8 00000000                   DATA FOR SOURCE-LINE 603
 3097                                     ***** END-POOL *****
 3098 000003FC                    613             .ALIGN  4
 3099 000003FC                    614     _OMRG_CHG:                                              ; 00100010B     22
 3100                             615             SUB_START
 3101 000003FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3102                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3103                             616     
 3104 000003FE D004               617             MOV.L   #(_OMRG_CODE_END - _OMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3105 00000400 D304               618             MOV.L   #_OMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3106                             619     
 3107 00000402 D105               620             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3108 00000404 410B               621             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3109 00000406 0009               622             NOP
 3110                             623     
 3111                             624             SUB_END
 3112                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3113 00000408 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3114                             625             M_RTS
 3115 0000040A 000B                   M           RTS                             ;RTSの後ろの
 3116 0000040C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    16
PROGRAM NAME =

 3117                             626     
 3118                             627     ;       ***********************************
 3119                             628     ;       *****   PUSH CODE CHANGE ROUTINE ***
 3120                             629     ;       ***********************************
 3121                                     ***** BEGIN-POOL *****
 3122 0000040E 0000                       ALIGNMENT CODE
 3123 00000410 00000000                   DATA FOR SOURCE-LINE 617
 3124 00000414 00000000                   DATA FOR SOURCE-LINE 618
 3125 00000418 00000000                   DATA FOR SOURCE-LINE 620
 3126                                     ***** END-POOL *****
 3127 0000041C                    630             .ALIGN  4
 3128 0000041C                    631     _PUSH_CHG:                                              ; 00100100B     24
 3129                             632             SUB_START
 3130 0000041C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3131                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3132                             633     
 3133 0000041E D004               634             MOV.L   #(_PUSH_CODE_END - _PUSH_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3134 00000420 D304               635             MOV.L   #_PUSH_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3135                             636     
 3136 00000422 D105               637             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3137 00000424 410B               638             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3138 00000426 0009               639             NOP
 3139                             640     
 3140                             641             SUB_END
 3141                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3142 00000428 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3143                             642             M_RTS
 3144 0000042A 000B                   M           RTS                             ;RTSの後ろの
 3145 0000042C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3146                             643     
 3147                             644     ;       ***********************************
 3148                             645     ;       *****   POP CODE CHANGE ROUTINE ***
 3149                             646     ;       ***********************************
 3150                                     ***** BEGIN-POOL *****
 3151 0000042E 0000                       ALIGNMENT CODE
 3152 00000430 00000000                   DATA FOR SOURCE-LINE 634
 3153 00000434 00000000                   DATA FOR SOURCE-LINE 635
 3154 00000438 00000000                   DATA FOR SOURCE-LINE 637
 3155                                     ***** END-POOL *****
 3156 0000043C                    647             .ALIGN  4
 3157 0000043C                    648     _POP_CHG:                                               ; 00100101B     25
 3158                             649             SUB_START
 3159 0000043C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3160                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3161                             650     
 3162 0000043E D004               651             MOV.L   #(_POP_CODE_END - _POP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3163 00000440 D304               652             MOV.L   #_POP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3164                             653     
 3165 00000442 D105               654             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3166 00000444 410B               655             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3167 00000446 0009               656             NOP
 3168                             657     
 3169                             658             SUB_END
 3170                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3171 00000448 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3172                             659             M_RTS
 3173 0000044A 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    17
PROGRAM NAME =

 3174 0000044C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3175                             660     
 3176                             661     ;       *************************************
 3177                             662     ;       *****   LDNRG CODE CHANGE ROUTINE ***
 3178                             663     ;       *************************************
 3179                                     ***** BEGIN-POOL *****
 3180 0000044E 0000                       ALIGNMENT CODE
 3181 00000450 00000000                   DATA FOR SOURCE-LINE 651
 3182 00000454 00000000                   DATA FOR SOURCE-LINE 652
 3183 00000458 00000000                   DATA FOR SOURCE-LINE 654
 3184                                     ***** END-POOL *****
 3185 0000045C                    664             .ALIGN  4
 3186 0000045C                    665     _LDNRG_CHG:                                             ; 00100110B     26
 3187                             666             SUB_START
 3188 0000045C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3189                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3190                             667     
 3191 0000045E D004               668             MOV.L   #(_LDNRG_CODE_END - _LDNRG_CODE),R0     ; 転送ﾊﾞｲﾄ長
 3192 00000460 D304               669             MOV.L   #_LDNRG_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3193                             670     
 3194 00000462 D105               671             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3195 00000464 410B               672             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3196 00000466 0009               673             NOP
 3197                             674     
 3198                             675             SUB_END
 3199                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3200 00000468 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3201                             676             M_RTS
 3202 0000046A 000B                   M           RTS                             ;RTSの後ろの
 3203 0000046C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3204                             677     
 3205                             678     ;       **************************************
 3206                             679     ;       *****   ENDNRG CODE CHANGE ROUTINE ***
 3207                             680     ;       **************************************
 3208                                     ***** BEGIN-POOL *****
 3209 0000046E 0000                       ALIGNMENT CODE
 3210 00000470 00000000                   DATA FOR SOURCE-LINE 668
 3211 00000474 00000000                   DATA FOR SOURCE-LINE 669
 3212 00000478 00000000                   DATA FOR SOURCE-LINE 671
 3213                                     ***** END-POOL *****
 3214 0000047C                    681             .ALIGN  4
 3215 0000047C                    682     _ENDNRG_CHG:                                            ; 00100111B     27
 3216                             683             SUB_START
 3217 0000047C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3218                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3219                             684     
 3220 0000047E D004               685             MOV.L   #(_ENDNRG_CODE_END - _ENDNRG_CODE),R0   ; 転送ﾊﾞｲﾄ長
 3221 00000480 D304               686             MOV.L   #_ENDNRG_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3222                             687     
 3223 00000482 D105               688             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3224 00000484 410B               689             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3225 00000486 0009               690             NOP
 3226                             691     
 3227                             692             SUB_END
 3228                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3229 00000488 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3230                             693             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    18
PROGRAM NAME =

 3231 0000048A 000B                   M           RTS                             ;RTSの後ろの
 3232 0000048C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3233                             694     
 3234                             695     ;       ***********************************
 3235                             696     ;       *****   END CODE CHANGE ROUTINE ***
 3236                             697     ;       **********************************
 3237                                     ***** BEGIN-POOL *****
 3238 0000048E 0000                       ALIGNMENT CODE
 3239 00000490 00000000                   DATA FOR SOURCE-LINE 685
 3240 00000494 00000000                   DATA FOR SOURCE-LINE 686
 3241 00000498 00000000                   DATA FOR SOURCE-LINE 688
 3242                                     ***** END-POOL *****
 3243 0000049C                    698             .ALIGN  4
 3244 0000049C                    699     _END_CHG:                                               ; 00101010B     2A
 3245                             700             SUB_START
 3246 0000049C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3247                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3248                             701     
 3249 0000049E D005               702             MOV.L   #(_END_CODE_END - _END_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3250 000004A0 D305               703             MOV.L   #_END_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3251                             704     
 3252 000004A2 D106               705             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3253 000004A4 410B               706             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3254 000004A6 0009               707             NOP
 3255                             708     
 3256 000004A8 9002               709             MOV.W   #_SQ_NML_END,R0                         ; END CODE SET
 3257                             710     
 3258                             711             SUB_END
 3259                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3260 000004AA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3261                             712             M_RTS
 3262 000004AC 000B                   M           RTS                             ;RTSの後ろの
 3263 000004AE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3264                             713     
 3265                             714     ;       ***************************************************
 3266                             715     ;       ***     SEQ DATA CHANGE0 ROUTINE                ***
 3267                             716     ;       ***************************************************
 3268                                     ***** BEGIN-POOL *****
 3269 000004B0 0055                       DATA FOR SOURCE-LINE 709
 3270 000004B2 0000                       ALIGNMENT CODE
 3271 000004B4 00000000                   DATA FOR SOURCE-LINE 702
 3272 000004B8 00000000                   DATA FOR SOURCE-LINE 703
 3273 000004BC 00000000                   DATA FOR SOURCE-LINE 705
 3274                                     ***** END-POOL *****
 3275 000004C0                    717             .ALIGN  4
 3276 000004C0                    718     _SEQ_DATA_CHG0:
 3277                             719             SUB_START
 3278 000004C0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3279                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3280                             720     
 3281 000004C2 64D3               721             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 3282                             722     
 3283                             723             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 3284 000004C4 D102                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 3285 000004C6 410B                   M           JSR     @R1                     ;
 3286 000004C8 0009                   M           NOP                                     ;
 3287                             724                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    19
PROGRAM NAME =

                                          入れ直す。
 3288                             725     
 3289 000004CA                    726     _SEQ_DATA_CHG0_EX:
 3290                             727             SUB_END
 3291                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3292 000004CA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3293                             728             M_RTS                                   ; NORMAL END
 3294 000004CC 000B                   M           RTS                             ;RTSの後ろの
 3295 000004CE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3296                             729     
 3297                             730     ;       ***********************************
 3298                             731     ;       *****   WSR CODE CHANGE ROUTINE ***
 3299                             732     ;       ***********************************
 3300                                     ***** BEGIN-POOL *****
 3301 000004D0 00000000                   DATA FOR SOURCE-LINE 723
 3302                                     ***** END-POOL *****
 3303 000004D4                    733             .ALIGN  4
 3304 000004D4                    734     _WSR_CHG:                                       ; 00010100B     14
 3305                             735             SUB_START
 3306 000004D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3307                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3308                             736     
 3309 000004D6 D005               737             MOV.L   #(_WSR_CODE_END - _WSR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3310 000004D8 D305               738             MOV.L   #_WSR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3311 000004DA D206               739             MOV.L   #(WSR_ADR - _WSR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3312 000004DC D506               740             MOV.L   #(WSR_OFS - WSR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3313                             741     
 3314 000004DE D107               742             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3315 000004E0 410B               743             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3316 000004E2 0009               744             NOP
 3317                             745     
 3318                             746             SUB_END
 3319                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3320 000004E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3321                             747             M_RTS
 3322 000004E6 000B                   M           RTS                             ;RTSの後ろの
 3323 000004E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3324                             748     
 3325                             749     ;       ***********************************
 3326                             750     ;       *****   CLR CODE CHANGE ROUTINE ***
 3327                             751     ;       ***********************************
 3328                                     ***** BEGIN-POOL *****
 3329 000004EA 0000                       ALIGNMENT CODE
 3330 000004EC 00000000                   DATA FOR SOURCE-LINE 737
 3331 000004F0 00000000                   DATA FOR SOURCE-LINE 738
 3332 000004F4 00000000                   DATA FOR SOURCE-LINE 739
 3333 000004F8 00000000                   DATA FOR SOURCE-LINE 740
 3334 000004FC 00000000                   DATA FOR SOURCE-LINE 742
 3335                                     ***** END-POOL *****
 3336 00000500                    752             .ALIGN  4
 3337 00000500                    753     _CLR_CHG:                                       ; 00010110B     16
 3338                             754             SUB_START
 3339 00000500 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3340                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3341                             755     
 3342 00000502 D005               756             MOV.L   #(_CLR_CODE_END - _CLR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3343 00000504 D305               757             MOV.L   #_CLR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    20
PROGRAM NAME =

 3344 00000506 D206               758             MOV.L   #(CLR_ADR - _CLR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3345 00000508 D506               759             MOV.L   #(CLR_OFS - CLR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3346                             760     
 3347 0000050A D107               761             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3348 0000050C 410B               762             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3349 0000050E 0009               763             NOP
 3350                             764     
 3351                             765             SUB_END
 3352                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3353 00000510 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3354                             766             M_RTS
 3355 00000512 000B                   M           RTS                             ;RTSの後ろの
 3356 00000514 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3357                             767     
 3358                             768     ;       ***********************************
 3359                             769     ;       *****   LDW CODE CHANGE ROUTINE ***
 3360                             770     ;       ***********************************
 3361                                     ***** BEGIN-POOL *****
 3362 00000516 0000                       ALIGNMENT CODE
 3363 00000518 00000000                   DATA FOR SOURCE-LINE 756
 3364 0000051C 00000000                   DATA FOR SOURCE-LINE 757
 3365 00000520 00000000                   DATA FOR SOURCE-LINE 758
 3366 00000524 00000000                   DATA FOR SOURCE-LINE 759
 3367 00000528 00000000                   DATA FOR SOURCE-LINE 761
 3368                                     ***** END-POOL *****
 3369 0000052C                    771             .ALIGN  4
 3370 0000052C                    772     _LDW_CHG:                                       ; 00110100B     34
 3371                             773             SUB_START
 3372 0000052C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3373                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3374                             774     
 3375 0000052E D005               775             MOV.L   #(_LDW_CODE_END - _LDW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3376 00000530 D305               776             MOV.L   #_LDW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3377 00000532 D206               777             MOV.L   #(LDW_ADR - _LDW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3378 00000534 D506               778             MOV.L   #(LDW_OFS - LDW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3379                             779     
 3380 00000536 D107               780             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3381 00000538 410B               781             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3382 0000053A 0009               782             NOP
 3383                             783     
 3384                             784             SUB_END
 3385                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3386 0000053C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3387                             785             M_RTS
 3388 0000053E 000B                   M           RTS                             ;RTSの後ろの
 3389 00000540 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3390                             786     
 3391                             787     ;       ***********************************
 3392                             788     ;       *****   LDL CODE CHANGE ROUTINE ***
 3393                             789     ;       ***********************************
 3394                                     ***** BEGIN-POOL *****
 3395 00000542 0000                       ALIGNMENT CODE
 3396 00000544 00000000                   DATA FOR SOURCE-LINE 775
 3397 00000548 00000000                   DATA FOR SOURCE-LINE 776
 3398 0000054C 00000000                   DATA FOR SOURCE-LINE 777
 3399 00000550 00000000                   DATA FOR SOURCE-LINE 778
 3400 00000554 00000000                   DATA FOR SOURCE-LINE 780
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    21
PROGRAM NAME =

 3401                                     ***** END-POOL *****
 3402 00000558                    790             .ALIGN  4
 3403 00000558                    791     _LDL_CHG:                                       ; 00110101B     35
 3404                             792             SUB_START
 3405 00000558 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3406                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3407                             793     
 3408 0000055A D005               794             MOV.L   #(_LDL_CODE_END - _LDL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3409 0000055C D305               795             MOV.L   #_LDL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3410 0000055E D206               796             MOV.L   #(LDL_ADR - _LDL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3411 00000560 D506               797             MOV.L   #(LDL_OFS - LDL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3412                             798     
 3413 00000562 D107               799             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3414 00000564 410B               800             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3415 00000566 0009               801             NOP
 3416                             802     
 3417                             803             SUB_END
 3418                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3419 00000568 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3420                             804             M_RTS
 3421 0000056A 000B                   M           RTS                             ;RTSの後ろの
 3422 0000056C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3423                             805     
 3424                             806     ;       ***********************************
 3425                             807     ;       *****   STW CODE CHANGE ROUTINE ***
 3426                             808     ;       ***********************************
 3427                                     ***** BEGIN-POOL *****
 3428 0000056E 0000                       ALIGNMENT CODE
 3429 00000570 00000000                   DATA FOR SOURCE-LINE 794
 3430 00000574 00000000                   DATA FOR SOURCE-LINE 795
 3431 00000578 00000000                   DATA FOR SOURCE-LINE 796
 3432 0000057C 00000000                   DATA FOR SOURCE-LINE 797
 3433 00000580 00000000                   DATA FOR SOURCE-LINE 799
 3434                                     ***** END-POOL *****
 3435 00000584                    809             .ALIGN  4
 3436 00000584                    810     _STW_CHG:                                       ; 00111100B     3C
 3437                             811             SUB_START
 3438 00000584 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3439                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3440                             812     
 3441 00000586 D005               813             MOV.L   #(_STW_CODE_END - _STW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3442 00000588 D305               814             MOV.L   #_STW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3443 0000058A D206               815             MOV.L   #(STW_ADR - _STW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3444 0000058C D506               816             MOV.L   #(STW_OFS - STW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3445                             817     
 3446 0000058E D107               818             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3447 00000590 410B               819             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3448 00000592 0009               820             NOP
 3449                             821     
 3450                             822             SUB_END
 3451                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3452 00000594 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3453                             823             M_RTS
 3454 00000596 000B                   M           RTS                             ;RTSの後ろの
 3455 00000598 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3456                             824     
 3457                             825     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    22
PROGRAM NAME =

 3458                             826     ;       *****   STL CODE CHANGE ROUTINE ***
 3459                             827     ;       ***********************************
 3460                                     ***** BEGIN-POOL *****
 3461 0000059A 0000                       ALIGNMENT CODE
 3462 0000059C 00000000                   DATA FOR SOURCE-LINE 813
 3463 000005A0 00000000                   DATA FOR SOURCE-LINE 814
 3464 000005A4 00000000                   DATA FOR SOURCE-LINE 815
 3465 000005A8 00000000                   DATA FOR SOURCE-LINE 816
 3466 000005AC 00000000                   DATA FOR SOURCE-LINE 818
 3467                                     ***** END-POOL *****
 3468 000005B0                    828             .ALIGN  4
 3469 000005B0                    829     _STL_CHG:                                       ; 00111101B     3D
 3470                             830             SUB_START
 3471 000005B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3472                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3473                             831     
 3474 000005B2 D005               832             MOV.L   #(_STL_CODE_END - _STL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3475 000005B4 D305               833             MOV.L   #_STL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3476 000005B6 D206               834             MOV.L   #(STL_ADR - _STL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3477 000005B8 D506               835             MOV.L   #(STL_OFS - STL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3478                             836     
 3479 000005BA D107               837             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3480 000005BC 410B               838             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3481 000005BE 0009               839             NOP
 3482                             840     
 3483                             841             SUB_END
 3484                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3485 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3486                             842             M_RTS
 3487 000005C2 000B                   M           RTS                             ;RTSの後ろの
 3488 000005C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3489                             843     
 3490                             844     ;       ***********************************
 3491                             845     ;       *****   EQW CODE CHANGE ROUTINE ***
 3492                             846     ;       ***********************************
 3493                                     ***** BEGIN-POOL *****
 3494 000005C6 0000                       ALIGNMENT CODE
 3495 000005C8 00000000                   DATA FOR SOURCE-LINE 832
 3496 000005CC 00000000                   DATA FOR SOURCE-LINE 833
 3497 000005D0 00000000                   DATA FOR SOURCE-LINE 834
 3498 000005D4 00000000                   DATA FOR SOURCE-LINE 835
 3499 000005D8 00000000                   DATA FOR SOURCE-LINE 837
 3500                                     ***** END-POOL *****
 3501 000005DC                    847             .ALIGN  4
 3502 000005DC                    848     _EQW_CHG:                                       ; 01000000B     40
 3503                             849             SUB_START
 3504 000005DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3505                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3506                             850     
 3507 000005DE D005               851             MOV.L   #(_EQW_CODE_END - _EQW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3508 000005E0 D305               852             MOV.L   #_EQW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3509 000005E2 D206               853             MOV.L   #(EQW_ADR - _EQW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3510 000005E4 D506               854             MOV.L   #(EQW_OFS - EQW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3511                             855     
 3512 000005E6 D107               856             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3513 000005E8 410B               857             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3514 000005EA 0009               858             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    23
PROGRAM NAME =

 3515                             859     
 3516                             860             SUB_END
 3517                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3518 000005EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3519                             861             M_RTS
 3520 000005EE 000B                   M           RTS                             ;RTSの後ろの
 3521 000005F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3522                             862     
 3523                             863     ;       *******************************************
 3524                             864     ;       *****   EQL CODE CHANGE ROUTINE         ***
 3525                             865     ;       *******************************************
 3526                                     ***** BEGIN-POOL *****
 3527 000005F2 0000                       ALIGNMENT CODE
 3528 000005F4 00000000                   DATA FOR SOURCE-LINE 851
 3529 000005F8 00000000                   DATA FOR SOURCE-LINE 852
 3530 000005FC 00000000                   DATA FOR SOURCE-LINE 853
 3531 00000600 00000000                   DATA FOR SOURCE-LINE 854
 3532 00000604 00000000                   DATA FOR SOURCE-LINE 856
 3533                                     ***** END-POOL *****
 3534 00000608                    866             .ALIGN  4
 3535 00000608                    867     _EQL_CHG:                                       ; 01000001B     41
 3536                             868             SUB_START
 3537 00000608 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3538                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3539                             869     
 3540 0000060A D005               870             MOV.L   #(_EQL_CODE_END - _EQL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3541 0000060C D305               871             MOV.L   #_EQL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3542 0000060E D206               872             MOV.L   #(EQL_ADR - _EQL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3543 00000610 D506               873             MOV.L   #(EQL_OFS - EQL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3544                             874     
 3545 00000612 D107               875             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3546 00000614 410B               876             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3547 00000616 0009               877             NOP
 3548                             878     
 3549                             879             SUB_END
 3550                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3551 00000618 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3552                             880             M_RTS
 3553 0000061A 000B                   M           RTS                             ;RTSの後ろの
 3554 0000061C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3555                             881     
 3556                             882     ;       ***********************************
 3557                             883     ;       *****   NEW CODE CHANGE ROUTINE ***
 3558                             884     ;       ***********************************
 3559                                     ***** BEGIN-POOL *****
 3560 0000061E 0000                       ALIGNMENT CODE
 3561 00000620 00000000                   DATA FOR SOURCE-LINE 870
 3562 00000624 00000000                   DATA FOR SOURCE-LINE 871
 3563 00000628 00000000                   DATA FOR SOURCE-LINE 872
 3564 0000062C 00000000                   DATA FOR SOURCE-LINE 873
 3565 00000630 00000000                   DATA FOR SOURCE-LINE 875
 3566                                     ***** END-POOL *****
 3567 00000634                    885             .ALIGN  4
 3568 00000634                    886     _NEW_CHG:                                       ; 01000100B     44
 3569                             887             SUB_START
 3570 00000634 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3571                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    24
PROGRAM NAME =

 3572                             888     
 3573 00000636 D005               889             MOV.L   #(_NEW_CODE_END - _NEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3574 00000638 D305               890             MOV.L   #_NEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3575 0000063A D206               891             MOV.L   #(NEW_ADR - _NEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3576 0000063C D506               892             MOV.L   #(NEW_OFS - NEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3577                             893     
 3578 0000063E D107               894             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3579 00000640 410B               895             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3580 00000642 0009               896             NOP
 3581                             897     
 3582                             898             SUB_END
 3583                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3584 00000644 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3585                             899             M_RTS
 3586 00000646 000B                   M           RTS                             ;RTSの後ろの
 3587 00000648 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3588                             900     
 3589                             901     ;       ***********************************
 3590                             902     ;       *****   NEL CODE CHANGE ROUTINE ***
 3591                             903     ;       ***********************************
 3592                                     ***** BEGIN-POOL *****
 3593 0000064A 0000                       ALIGNMENT CODE
 3594 0000064C 00000000                   DATA FOR SOURCE-LINE 889
 3595 00000650 00000000                   DATA FOR SOURCE-LINE 890
 3596 00000654 00000000                   DATA FOR SOURCE-LINE 891
 3597 00000658 00000000                   DATA FOR SOURCE-LINE 892
 3598 0000065C 00000000                   DATA FOR SOURCE-LINE 894
 3599                                     ***** END-POOL *****
 3600 00000660                    904             .ALIGN  4
 3601 00000660                    905     _NEL_CHG:                                       ; 01000101B     45
 3602                             906             SUB_START
 3603 00000660 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3604                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3605                             907     
 3606 00000662 D005               908             MOV.L   #(_NEL_CODE_END - _NEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3607 00000664 D305               909             MOV.L   #_NEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3608 00000666 D206               910             MOV.L   #(NEL_ADR - _NEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3609 00000668 D506               911             MOV.L   #(NEL_OFS - NEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3610                             912     
 3611 0000066A D107               913             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3612 0000066C 410B               914             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3613 0000066E 0009               915             NOP
 3614                             916     
 3615                             917             SUB_END
 3616                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3617 00000670 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3618                             918             M_RTS
 3619 00000672 000B                   M           RTS                             ;RTSの後ろの
 3620 00000674 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3621                             919     
 3622                             920     ;       ***********************************
 3623                             921     ;       *****   GTW CODE CHANGE ROUTINE ***
 3624                             922     ;       ***********************************
 3625                                     ***** BEGIN-POOL *****
 3626 00000676 0000                       ALIGNMENT CODE
 3627 00000678 00000000                   DATA FOR SOURCE-LINE 908
 3628 0000067C 00000000                   DATA FOR SOURCE-LINE 909
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    25
PROGRAM NAME =

 3629 00000680 00000000                   DATA FOR SOURCE-LINE 910
 3630 00000684 00000000                   DATA FOR SOURCE-LINE 911
 3631 00000688 00000000                   DATA FOR SOURCE-LINE 913
 3632                                     ***** END-POOL *****
 3633 0000068C                    923             .ALIGN  4
 3634 0000068C                    924     _GTW_CHG:                                       ; 01001000B     48
 3635                             925             SUB_START
 3636 0000068C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3637                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3638                             926     
 3639 0000068E D005               927             MOV.L   #(_GTW_CODE_END - _GTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3640 00000690 D305               928             MOV.L   #_GTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3641 00000692 D206               929             MOV.L   #(GTW_ADR - _GTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3642 00000694 D506               930             MOV.L   #(GTW_OFS - GTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3643                             931     
 3644 00000696 D107               932             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3645 00000698 410B               933             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3646 0000069A 0009               934             NOP
 3647                             935     
 3648                             936             SUB_END
 3649                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3650 0000069C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3651                             937             M_RTS
 3652 0000069E 000B                   M           RTS                             ;RTSの後ろの
 3653 000006A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3654                             938     
 3655                             939     ;       ***********************************
 3656                             940     ;       *****   GTL CODE CHANGE ROUTINE ***
 3657                             941     ;       ***********************************
 3658                                     ***** BEGIN-POOL *****
 3659 000006A2 0000                       ALIGNMENT CODE
 3660 000006A4 00000000                   DATA FOR SOURCE-LINE 927
 3661 000006A8 00000000                   DATA FOR SOURCE-LINE 928
 3662 000006AC 00000000                   DATA FOR SOURCE-LINE 929
 3663 000006B0 00000000                   DATA FOR SOURCE-LINE 930
 3664 000006B4 00000000                   DATA FOR SOURCE-LINE 932
 3665                                     ***** END-POOL *****
 3666 000006B8                    942             .ALIGN  4
 3667 000006B8                    943     _GTL_CHG:                                       ; 01001001B     49
 3668                             944             SUB_START
 3669 000006B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3670                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3671                             945     
 3672 000006BA D005               946             MOV.L   #(_GTL_CODE_END - _GTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3673 000006BC D305               947             MOV.L   #_GTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3674 000006BE D206               948             MOV.L   #(GTL_ADR - _GTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3675 000006C0 D506               949             MOV.L   #(GTL_OFS - GTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3676                             950     
 3677 000006C2 D107               951             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3678 000006C4 410B               952             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3679 000006C6 0009               953             NOP
 3680                             954     
 3681                             955             SUB_END
 3682                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3683 000006C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3684                             956             M_RTS
 3685 000006CA 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    26
PROGRAM NAME =

 3686 000006CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3687                             957     
 3688                             958     ;       ***********************************
 3689                             959     ;       *****   GEW CODE CHANGE ROUTINE ***
 3690                             960     ;       ***********************************
 3691                                     ***** BEGIN-POOL *****
 3692 000006CE 0000                       ALIGNMENT CODE
 3693 000006D0 00000000                   DATA FOR SOURCE-LINE 946
 3694 000006D4 00000000                   DATA FOR SOURCE-LINE 947
 3695 000006D8 00000000                   DATA FOR SOURCE-LINE 948
 3696 000006DC 00000000                   DATA FOR SOURCE-LINE 949
 3697 000006E0 00000000                   DATA FOR SOURCE-LINE 951
 3698                                     ***** END-POOL *****
 3699 000006E4                    961             .ALIGN  4
 3700 000006E4                    962     _GEW_CHG:                                       ; 01001100B     4C
 3701                             963             SUB_START
 3702 000006E4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3703                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3704                             964     
 3705 000006E6 D005               965             MOV.L   #(_GEW_CODE_END - _GEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3706 000006E8 D305               966             MOV.L   #_GEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3707 000006EA D206               967             MOV.L   #(GEW_ADR - _GEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3708 000006EC D506               968             MOV.L   #(GEW_OFS - GEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3709                             969     
 3710 000006EE D107               970             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3711 000006F0 410B               971             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3712 000006F2 0009               972             NOP
 3713                             973     
 3714                             974             SUB_END
 3715                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3716 000006F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3717                             975             M_RTS
 3718 000006F6 000B                   M           RTS                             ;RTSの後ろの
 3719 000006F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3720                             976     
 3721                             977     ;       ***********************************
 3722                             978     ;       *****   GEL CODE CHANGE ROUTINE ***
 3723                             979     ;       ***********************************
 3724                                     ***** BEGIN-POOL *****
 3725 000006FA 0000                       ALIGNMENT CODE
 3726 000006FC 00000000                   DATA FOR SOURCE-LINE 965
 3727 00000700 00000000                   DATA FOR SOURCE-LINE 966
 3728 00000704 00000000                   DATA FOR SOURCE-LINE 967
 3729 00000708 00000000                   DATA FOR SOURCE-LINE 968
 3730 0000070C 00000000                   DATA FOR SOURCE-LINE 970
 3731                                     ***** END-POOL *****
 3732 00000710                    980             .ALIGN  4
 3733 00000710                    981     _GEL_CHG:                                       ; 01001101B     4D
 3734                             982             SUB_START
 3735 00000710 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3736                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3737                             983     
 3738 00000712 D005               984             MOV.L   #(_GEL_CODE_END - _GEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3739 00000714 D305               985             MOV.L   #_GEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3740 00000716 D206               986             MOV.L   #(GEL_ADR - _GEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3741 00000718 D506               987             MOV.L   #(GEL_OFS - GEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3742                             988     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    27
PROGRAM NAME =

 3743 0000071A D107               989             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3744 0000071C 410B               990             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3745 0000071E 0009               991             NOP
 3746                             992     
 3747                             993             SUB_END
 3748                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3749 00000720 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3750                             994             M_RTS
 3751 00000722 000B                   M           RTS                             ;RTSの後ろの
 3752 00000724 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3753                             995     
 3754                             996     ;       ***********************************
 3755                             997     ;       *****   CALL RELEY ROUTINE ***
 3756                             998     ;       ***********************************
 3757                                     ***** BEGIN-POOL *****
 3758 00000726 0000                       ALIGNMENT CODE
 3759 00000728 00000000                   DATA FOR SOURCE-LINE 984
 3760 0000072C 00000000                   DATA FOR SOURCE-LINE 985
 3761 00000730 00000000                   DATA FOR SOURCE-LINE 986
 3762 00000734 00000000                   DATA FOR SOURCE-LINE 987
 3763 00000738 00000000                   DATA FOR SOURCE-LINE 989
 3764                                     ***** END-POOL *****
 3765 0000073C                    999             .ALIGN  4
 3766 0000073C                   1000     _SEQ_DATA_CHG1_1:
 3767                            1001             SUB_START
 3768 0000073C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3769                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3770                            1002     
 3771 0000073E D103              1003             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3772 00000740 410B              1004             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3773 00000742 0009              1005             NOP
 3774                            1006     
 3775                            1007             SUB_END
 3776                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3777 00000744 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3778                            1008             M_RTS                                   ; NORMAL END
 3779 00000746 000B                   M           RTS                             ;RTSの後ろの
 3780 00000748 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3781                            1009     
 3782                            1010     ;       ***********************************
 3783                            1011     ;       *****   LTW CODE CHANGE ROUTINE ***
 3784                            1012     ;       ***********************************
 3785                                     ***** BEGIN-POOL *****
 3786 0000074A 0000                       ALIGNMENT CODE
 3787 0000074C 00000000                   DATA FOR SOURCE-LINE 1003
 3788                                     ***** END-POOL *****
 3789 00000750                   1013             .ALIGN  4
 3790 00000750                   1014     _LTW_CHG:                                       ; 01010000B     50
 3791                            1015             SUB_START
 3792 00000750 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3793                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3794                            1016     
 3795 00000752 D005              1017             MOV.L   #(_LTW_CODE_END - _LTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3796 00000754 D305              1018             MOV.L   #_LTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3797 00000756 D206              1019             MOV.L   #(LTW_ADR - _LTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3798 00000758 D506              1020             MOV.L   #(LTW_OFS - LTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3799                            1021     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    28
PROGRAM NAME =

 3800 0000075A D107              1022             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3801 0000075C 410B              1023             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3802 0000075E 0009              1024             NOP
 3803                            1025     
 3804                            1026             SUB_END
 3805                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3806 00000760 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3807                            1027             M_RTS
 3808 00000762 000B                   M           RTS                             ;RTSの後ろの
 3809 00000764 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3810                            1028     
 3811                            1029     ;       ***********************************
 3812                            1030     ;       *****   LTL CODE CHANGE ROUTINE ***
 3813                            1031     ;       ***********************************
 3814                                     ***** BEGIN-POOL *****
 3815 00000766 0000                       ALIGNMENT CODE
 3816 00000768 00000000                   DATA FOR SOURCE-LINE 1017
 3817 0000076C 00000000                   DATA FOR SOURCE-LINE 1018
 3818 00000770 00000000                   DATA FOR SOURCE-LINE 1019
 3819 00000774 00000000                   DATA FOR SOURCE-LINE 1020
 3820 00000778 00000000                   DATA FOR SOURCE-LINE 1022
 3821                                     ***** END-POOL *****
 3822 0000077C                   1032             .ALIGN  4
 3823 0000077C                   1033     _LTL_CHG:                                       ; 01010001B     51
 3824                            1034             SUB_START
 3825 0000077C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3826                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3827                            1035     
 3828 0000077E D005              1036             MOV.L   #(_LTL_CODE_END - _LTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3829 00000780 D305              1037             MOV.L   #_LTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3830 00000782 D206              1038             MOV.L   #(LTL_ADR - _LTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3831 00000784 D506              1039             MOV.L   #(LTL_OFS - LTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3832                            1040     
 3833 00000786 D107              1041             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3834 00000788 410B              1042             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3835 0000078A 0009              1043             NOP
 3836                            1044     
 3837                            1045             SUB_END
 3838                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3839 0000078C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3840                            1046             M_RTS
 3841 0000078E 000B                   M           RTS                             ;RTSの後ろの
 3842 00000790 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3843                            1047     
 3844                            1048     ;       ***********************************
 3845                            1049     ;       *****   LEW CODE CHANGE ROUTINE ***
 3846                            1050     ;       ***********************************
 3847                                     ***** BEGIN-POOL *****
 3848 00000792 0000                       ALIGNMENT CODE
 3849 00000794 00000000                   DATA FOR SOURCE-LINE 1036
 3850 00000798 00000000                   DATA FOR SOURCE-LINE 1037
 3851 0000079C 00000000                   DATA FOR SOURCE-LINE 1038
 3852 000007A0 00000000                   DATA FOR SOURCE-LINE 1039
 3853 000007A4 00000000                   DATA FOR SOURCE-LINE 1041
 3854                                     ***** END-POOL *****
 3855 000007A8                   1051             .ALIGN  4
 3856 000007A8                   1052     _LEW_CHG:                                       ; 01010100B     54
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    29
PROGRAM NAME =

 3857                            1053             SUB_START
 3858 000007A8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3859                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3860                            1054     
 3861 000007AA D005              1055             MOV.L   #(_LEW_CODE_END - _LEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3862 000007AC D305              1056             MOV.L   #_LEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3863 000007AE D206              1057             MOV.L   #(LEW_ADR - _LEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3864 000007B0 D506              1058             MOV.L   #(LEW_OFS - LEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3865                            1059     
 3866 000007B2 D107              1060             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3867 000007B4 410B              1061             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3868 000007B6 0009              1062             NOP
 3869                            1063     
 3870                            1064             SUB_END
 3871                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3872 000007B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3873                            1065             M_RTS
 3874 000007BA 000B                   M           RTS                             ;RTSの後ろの
 3875 000007BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3876                            1066     
 3877                            1067     ;       ***********************************
 3878                            1068     ;       *****   LTL CODE CHANGE ROUTINE ***
 3879                            1069     ;       ***********************************
 3880                                     ***** BEGIN-POOL *****
 3881 000007BE 0000                       ALIGNMENT CODE
 3882 000007C0 00000000                   DATA FOR SOURCE-LINE 1055
 3883 000007C4 00000000                   DATA FOR SOURCE-LINE 1056
 3884 000007C8 00000000                   DATA FOR SOURCE-LINE 1057
 3885 000007CC 00000000                   DATA FOR SOURCE-LINE 1058
 3886 000007D0 00000000                   DATA FOR SOURCE-LINE 1060
 3887                                     ***** END-POOL *****
 3888 000007D4                   1070             .ALIGN  4
 3889 000007D4                   1071     _LEL_CHG:                                       ; 01010101B     55
 3890                            1072             SUB_START
 3891 000007D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3892                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3893                            1073     
 3894 000007D6 D005              1074             MOV.L   #(_LEL_CODE_END - _LEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3895 000007D8 D305              1075             MOV.L   #_LEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3896 000007DA D206              1076             MOV.L   #(LEL_ADR - _LEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3897 000007DC D506              1077             MOV.L   #(LEL_OFS - LEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3898                            1078     
 3899 000007DE D107              1079             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3900 000007E0 410B              1080             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3901 000007E2 0009              1081             NOP
 3902                            1082     
 3903                            1083             SUB_END
 3904                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3905 000007E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3906                            1084             M_RTS
 3907 000007E6 000B                   M           RTS                             ;RTSの後ろの
 3908 000007E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3909                            1085     
 3910                            1086     ;       ************************************
 3911                            1087     ;       *****   ADDW CODE CHANGE ROUTINE ***
 3912                            1088     ;       ************************************
 3913                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    30
PROGRAM NAME =

 3914 000007EA 0000                       ALIGNMENT CODE
 3915 000007EC 00000000                   DATA FOR SOURCE-LINE 1074
 3916 000007F0 00000000                   DATA FOR SOURCE-LINE 1075
 3917 000007F4 00000000                   DATA FOR SOURCE-LINE 1076
 3918 000007F8 00000000                   DATA FOR SOURCE-LINE 1077
 3919 000007FC 00000000                   DATA FOR SOURCE-LINE 1079
 3920                                     ***** END-POOL *****
 3921 00000800                   1089             .ALIGN  4
 3922 00000800                   1090     _ADDW_CHG:                                              ; 01011000B     58
 3923                            1091             SUB_START
 3924 00000800 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3925                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3926                            1092     
 3927 00000802 D005              1093             MOV.L   #(_ADDW_CODE_END - _ADDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3928 00000804 D305              1094             MOV.L   #_ADDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3929 00000806 D206              1095             MOV.L   #(ADDW_ADR - _ADDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3930 00000808 D506              1096             MOV.L   #(ADDW_OFS - ADDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3931                            1097     
 3932 0000080A D107              1098             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3933 0000080C 410B              1099             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3934 0000080E 0009              1100             NOP
 3935                            1101     
 3936                            1102             SUB_END
 3937                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3938 00000810 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3939                            1103             M_RTS
 3940 00000812 000B                   M           RTS                             ;RTSの後ろの
 3941 00000814 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3942                            1104     
 3943                            1105     ;       ************************************
 3944                            1106     ;       *****   ADDL CODE CHANGE ROUTINE ***
 3945                            1107     ;       ************************************
 3946                                     ***** BEGIN-POOL *****
 3947 00000816 0000                       ALIGNMENT CODE
 3948 00000818 00000000                   DATA FOR SOURCE-LINE 1093
 3949 0000081C 00000000                   DATA FOR SOURCE-LINE 1094
 3950 00000820 00000000                   DATA FOR SOURCE-LINE 1095
 3951 00000824 00000000                   DATA FOR SOURCE-LINE 1096
 3952 00000828 00000000                   DATA FOR SOURCE-LINE 1098
 3953                                     ***** END-POOL *****
 3954 0000082C                   1108             .ALIGN  4
 3955 0000082C                   1109     _ADDL_CHG:                                              ; 01011001B     59
 3956                            1110             SUB_START
 3957 0000082C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3958                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3959                            1111     
 3960 0000082E D005              1112             MOV.L   #(_ADDL_CODE_END - _ADDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3961 00000830 D305              1113             MOV.L   #_ADDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3962 00000832 D206              1114             MOV.L   #(ADDL_ADR - _ADDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3963 00000834 D506              1115             MOV.L   #(ADDL_OFS - ADDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3964                            1116     
 3965 00000836 D107              1117             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3966 00000838 410B              1118             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3967 0000083A 0009              1119             NOP
 3968                            1120     
 3969                            1121             SUB_END
 3970                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    31
PROGRAM NAME =

 3971 0000083C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3972                            1122             M_RTS
 3973 0000083E 000B                   M           RTS                             ;RTSの後ろの
 3974 00000840 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3975                            1123     
 3976                            1124     ;       ************************************
 3977                            1125     ;       *****   SUBW CODE CHANGE ROUTINE ***
 3978                            1126     ;       ************************************
 3979                                     ***** BEGIN-POOL *****
 3980 00000842 0000                       ALIGNMENT CODE
 3981 00000844 00000000                   DATA FOR SOURCE-LINE 1112
 3982 00000848 00000000                   DATA FOR SOURCE-LINE 1113
 3983 0000084C 00000000                   DATA FOR SOURCE-LINE 1114
 3984 00000850 00000000                   DATA FOR SOURCE-LINE 1115
 3985 00000854 00000000                   DATA FOR SOURCE-LINE 1117
 3986                                     ***** END-POOL *****
 3987 00000858                   1127             .ALIGN  4
 3988 00000858                   1128     _SUBW_CHG:                                              ; 01011100B     5C
 3989                            1129             SUB_START
 3990 00000858 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3991                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3992                            1130     
 3993 0000085A D005              1131             MOV.L   #(_SUBW_CODE_END - _SUBW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3994 0000085C D305              1132             MOV.L   #_SUBW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3995 0000085E D206              1133             MOV.L   #(SUBW_ADR - _SUBW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3996 00000860 D506              1134             MOV.L   #(SUBW_OFS - SUBW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3997                            1135     
 3998 00000862 D107              1136             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3999 00000864 410B              1137             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4000 00000866 0009              1138             NOP
 4001                            1139     
 4002                            1140             SUB_END
 4003                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4004 00000868 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4005                            1141             M_RTS
 4006 0000086A 000B                   M           RTS                             ;RTSの後ろの
 4007 0000086C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4008                            1142     
 4009                            1143     ;       ************************************
 4010                            1144     ;       *****   SUBL CODE CHANGE ROUTINE ***
 4011                            1145     ;       ************************************
 4012                                     ***** BEGIN-POOL *****
 4013 0000086E 0000                       ALIGNMENT CODE
 4014 00000870 00000000                   DATA FOR SOURCE-LINE 1131
 4015 00000874 00000000                   DATA FOR SOURCE-LINE 1132
 4016 00000878 00000000                   DATA FOR SOURCE-LINE 1133
 4017 0000087C 00000000                   DATA FOR SOURCE-LINE 1134
 4018 00000880 00000000                   DATA FOR SOURCE-LINE 1136
 4019                                     ***** END-POOL *****
 4020 00000884                   1146             .ALIGN  4
 4021 00000884                   1147     _SUBL_CHG:                                              ; 01011101B     5D
 4022                            1148             SUB_START
 4023 00000884 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4024                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4025                            1149     
 4026 00000886 D005              1150             MOV.L   #(_SUBL_CODE_END - _SUBL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4027 00000888 D305              1151             MOV.L   #_SUBL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    32
PROGRAM NAME =

 4028 0000088A D206              1152             MOV.L   #(SUBL_ADR - _SUBL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4029 0000088C D506              1153             MOV.L   #(SUBL_OFS - SUBL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4030                            1154     
 4031 0000088E D107              1155             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4032 00000890 410B              1156             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4033 00000892 0009              1157             NOP
 4034                            1158     
 4035                            1159             SUB_END
 4036                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4037 00000894 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4038                            1160             M_RTS
 4039 00000896 000B                   M           RTS                             ;RTSの後ろの
 4040 00000898 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4041                            1161     
 4042                            1162     ;       ************************************
 4043                            1163     ;       *****   ANDW CODE CHANGE ROUTINE ***
 4044                            1164     ;       ************************************
 4045                                     ***** BEGIN-POOL *****
 4046 0000089A 0000                       ALIGNMENT CODE
 4047 0000089C 00000000                   DATA FOR SOURCE-LINE 1150
 4048 000008A0 00000000                   DATA FOR SOURCE-LINE 1151
 4049 000008A4 00000000                   DATA FOR SOURCE-LINE 1152
 4050 000008A8 00000000                   DATA FOR SOURCE-LINE 1153
 4051 000008AC 00000000                   DATA FOR SOURCE-LINE 1155
 4052                                     ***** END-POOL *****
 4053 000008B0                   1165             .ALIGN  4
 4054 000008B0                   1166     _ANDW_CHG:                                              ; 01100000B     60
 4055                            1167             SUB_START
 4056 000008B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4057                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4058                            1168     
 4059 000008B2 D005              1169             MOV.L   #(_ANDW_CODE_END - _ANDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4060 000008B4 D305              1170             MOV.L   #_ANDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4061 000008B6 D206              1171             MOV.L   #(ANDW_ADR - _ANDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4062 000008B8 D506              1172             MOV.L   #(ANDW_OFS - ANDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4063                            1173     
 4064 000008BA D107              1174             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4065 000008BC 410B              1175             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4066 000008BE 0009              1176             NOP
 4067                            1177     
 4068                            1178             SUB_END
 4069                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4070 000008C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4071                            1179             M_RTS
 4072 000008C2 000B                   M           RTS                             ;RTSの後ろの
 4073 000008C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4074                            1180     
 4075                            1181     ;       ************************************
 4076                            1182     ;       *****   ANDL CODE CHANGE ROUTINE ***
 4077                            1183     ;       ************************************
 4078                                     ***** BEGIN-POOL *****
 4079 000008C6 0000                       ALIGNMENT CODE
 4080 000008C8 00000000                   DATA FOR SOURCE-LINE 1169
 4081 000008CC 00000000                   DATA FOR SOURCE-LINE 1170
 4082 000008D0 00000000                   DATA FOR SOURCE-LINE 1171
 4083 000008D4 00000000                   DATA FOR SOURCE-LINE 1172
 4084 000008D8 00000000                   DATA FOR SOURCE-LINE 1174
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    33
PROGRAM NAME =

 4085                                     ***** END-POOL *****
 4086 000008DC                   1184             .ALIGN  4
 4087 000008DC                   1185     _ANDL_CHG:                                              ; 01100000B     61
 4088                            1186             SUB_START
 4089 000008DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4090                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4091                            1187     
 4092 000008DE D005              1188             MOV.L   #(_ANDL_CODE_END - _ANDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4093 000008E0 D305              1189             MOV.L   #_ANDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4094 000008E2 D206              1190             MOV.L   #(ANDL_ADR - _ANDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4095 000008E4 D506              1191             MOV.L   #(ANDL_OFS - ANDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4096                            1192     
 4097 000008E6 D107              1193             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4098 000008E8 410B              1194             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4099 000008EA 0009              1195             NOP
 4100                            1196     
 4101                            1197             SUB_END
 4102                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4103 000008EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4104                            1198             M_RTS
 4105 000008EE 000B                   M           RTS                             ;RTSの後ろの
 4106 000008F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4107                            1199     
 4108                            1200     ;       ***********************************
 4109                            1201     ;       *****   ORW CODE CHANGE ROUTINE ***
 4110                            1202     ;       ***********************************
 4111                                     ***** BEGIN-POOL *****
 4112 000008F2 0000                       ALIGNMENT CODE
 4113 000008F4 00000000                   DATA FOR SOURCE-LINE 1188
 4114 000008F8 00000000                   DATA FOR SOURCE-LINE 1189
 4115 000008FC 00000000                   DATA FOR SOURCE-LINE 1190
 4116 00000900 00000000                   DATA FOR SOURCE-LINE 1191
 4117 00000904 00000000                   DATA FOR SOURCE-LINE 1193
 4118                                     ***** END-POOL *****
 4119 00000908                   1203             .ALIGN  4
 4120 00000908                   1204     _ORW_CHG:                                       ; 01100100B     64
 4121                            1205             SUB_START
 4122 00000908 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4123                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4124                            1206     
 4125 0000090A D005              1207             MOV.L   #(_ORW_CODE_END - _ORW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4126 0000090C D305              1208             MOV.L   #_ORW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4127 0000090E D206              1209             MOV.L   #(ORW_ADR - _ORW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4128 00000910 D506              1210             MOV.L   #(ORW_OFS - ORW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4129                            1211     
 4130 00000912 D107              1212             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4131 00000914 410B              1213             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4132 00000916 0009              1214             NOP
 4133                            1215     
 4134                            1216             SUB_END
 4135                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4136 00000918 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4137                            1217             M_RTS
 4138 0000091A 000B                   M           RTS                             ;RTSの後ろの
 4139 0000091C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4140                            1218     
 4141                            1219     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    34
PROGRAM NAME =

 4142                            1220     ;       *****   ORL CODE CHANGE ROUTINE ***
 4143                            1221     ;       ***********************************
 4144                                     ***** BEGIN-POOL *****
 4145 0000091E 0000                       ALIGNMENT CODE
 4146 00000920 00000000                   DATA FOR SOURCE-LINE 1207
 4147 00000924 00000000                   DATA FOR SOURCE-LINE 1208
 4148 00000928 00000000                   DATA FOR SOURCE-LINE 1209
 4149 0000092C 00000000                   DATA FOR SOURCE-LINE 1210
 4150 00000930 00000000                   DATA FOR SOURCE-LINE 1212
 4151                                     ***** END-POOL *****
 4152 00000934                   1222             .ALIGN  4
 4153 00000934                   1223     _ORL_CHG:                                       ; 01100101B     65
 4154                            1224             SUB_START
 4155 00000934 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4156                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4157                            1225     
 4158 00000936 D005              1226             MOV.L   #(_ORL_CODE_END - _ORL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4159 00000938 D305              1227             MOV.L   #_ORL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4160 0000093A D206              1228             MOV.L   #(ORL_ADR - _ORL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4161 0000093C D506              1229             MOV.L   #(ORL_OFS - ORL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4162                            1230     
 4163 0000093E D107              1231             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4164 00000940 410B              1232             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4165 00000942 0009              1233             NOP
 4166                            1234     
 4167                            1235             SUB_END
 4168                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4169 00000944 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4170                            1236             M_RTS
 4171 00000946 000B                   M           RTS                             ;RTSの後ろの
 4172 00000948 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4173                            1237     
 4174                            1238     ;       ************************************
 4175                            1239     ;       *****   XORW CODE CHANGE ROUTINE ***
 4176                            1240     ;       ************************************
 4177                                     ***** BEGIN-POOL *****
 4178 0000094A 0000                       ALIGNMENT CODE
 4179 0000094C 00000000                   DATA FOR SOURCE-LINE 1226
 4180 00000950 00000000                   DATA FOR SOURCE-LINE 1227
 4181 00000954 00000000                   DATA FOR SOURCE-LINE 1228
 4182 00000958 00000000                   DATA FOR SOURCE-LINE 1229
 4183 0000095C 00000000                   DATA FOR SOURCE-LINE 1231
 4184                                     ***** END-POOL *****
 4185 00000960                   1241             .ALIGN  4
 4186 00000960                   1242     _XORW_CHG:                                              ; 01101000B     68
 4187                            1243             SUB_START
 4188 00000960 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4189                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4190                            1244     
 4191 00000962 D005              1245             MOV.L   #(_XORW_CODE_END - _XORW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4192 00000964 D305              1246             MOV.L   #_XORW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4193 00000966 D206              1247             MOV.L   #(XORW_ADR - _XORW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4194 00000968 D506              1248             MOV.L   #(XORW_OFS - XORW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4195                            1249     
 4196 0000096A D107              1250             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4197 0000096C 410B              1251             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4198 0000096E 0009              1252             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    35
PROGRAM NAME =

 4199                            1253     
 4200                            1254             SUB_END
 4201                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4202 00000970 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4203                            1255             M_RTS
 4204 00000972 000B                   M           RTS                             ;RTSの後ろの
 4205 00000974 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4206                            1256     
 4207                            1257     ;       ************************************
 4208                            1258     ;       *****   XORL CODE CHANGE ROUTINE ***
 4209                            1259     ;       ************************************
 4210                                     ***** BEGIN-POOL *****
 4211 00000976 0000                       ALIGNMENT CODE
 4212 00000978 00000000                   DATA FOR SOURCE-LINE 1245
 4213 0000097C 00000000                   DATA FOR SOURCE-LINE 1246
 4214 00000980 00000000                   DATA FOR SOURCE-LINE 1247
 4215 00000984 00000000                   DATA FOR SOURCE-LINE 1248
 4216 00000988 00000000                   DATA FOR SOURCE-LINE 1250
 4217                                     ***** END-POOL *****
 4218 0000098C                   1260             .ALIGN  4
 4219 0000098C                   1261     _XORL_CHG:                                              ; 01101001B     69
 4220                            1262             SUB_START
 4221 0000098C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4222                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4223                            1263     
 4224 0000098E D005              1264             MOV.L   #(_XORL_CODE_END - _XORL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4225 00000990 D305              1265             MOV.L   #_XORL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4226 00000992 D206              1266             MOV.L   #(XORL_ADR - _XORL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4227 00000994 D506              1267             MOV.L   #(XORL_OFS - XORL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4228                            1268     
 4229 00000996 D107              1269             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4230 00000998 410B              1270             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4231 0000099A 0009              1271             NOP
 4232                            1272     
 4233                            1273             SUB_END
 4234                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4235 0000099C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4236                            1274             M_RTS
 4237 0000099E 000B                   M           RTS                             ;RTSの後ろの
 4238 000009A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4239                            1275     
 4240                            1276     ;       ***************************************************
 4241                            1277     ;       ***     SEQ DATA CHANGE1 ROUTINE                ***
 4242                            1278     ;       ***************************************************
 4243                                     ***** BEGIN-POOL *****
 4244 000009A2 0000                       ALIGNMENT CODE
 4245 000009A4 00000000                   DATA FOR SOURCE-LINE 1264
 4246 000009A8 00000000                   DATA FOR SOURCE-LINE 1265
 4247 000009AC 00000000                   DATA FOR SOURCE-LINE 1266
 4248 000009B0 00000000                   DATA FOR SOURCE-LINE 1267
 4249 000009B4 00000000                   DATA FOR SOURCE-LINE 1269
 4250                                     ***** END-POOL *****
 4251 000009B8                   1279             .ALIGN  4
 4252 000009B8                   1280     _SEQ_DATA_CHG1_2:
 4253                            1281             SUB_START
 4254 000009B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4255                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    36
PROGRAM NAME =

 4256                            1282     
 4257                            1283     ;       ************************
 4258                            1284     ;       *** MEM CODE処理追加 ***
 4259                            1285     ;       ************************
 4260 000009BA D113              1286             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 4261 000009BC 4B08              1287             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 4262 000009BE 31BC              1288             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4263 000009C0 6912              1289             MOV.L   @R1,R9                          ;
 4264 000009C2 4800              1290             SHLL    R8                              ; MEM ADR * 2
 4265 000009C4 389C              1291             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 4266                            1292     
 4267                            1293     ;       ****************************
 4268                            1294     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 4269                            1295     ;       ****************************
 4270 000009C6 D111              1296             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 4271 000009C8 31BC              1297             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4272 000009CA 6B12              1298             MOV.L   @R1,R11                         ;
 4273 000009CC 39BC              1299             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 4274 000009CE 3893              1300             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 4275 000009D0 8924              1301             BT      _CHG1_C80                       ; R8 >= R9 JUMP
 4276                            1302     
 4277 000009D2 6983              1303             MOV.L   R8,R9                           ;
 4278 000009D4 6888              1304             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4279 000009D6 688C              1305             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4280 000009D8 699C              1306             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4281                            1307     
 4282 000009DA D10D              1308             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4283 000009DC 3813              1309             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4284 000009DE 891D              1310             BT      _CHG1_C80                       ; IF ADR >= 127 THEN JUMP
 4285                            1311     
 4286 000009E0 64D3              1312             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4287                            1313     
 4288                            1314             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4289 000009E2 D10C                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4290 000009E4 410B                   M           JSR     @R1                     ;
 4291 000009E6 0009                   M           NOP                                     ;
 4292                            1315                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4293                            1316     ;       *** ADR SET ***
 4294 000009E8 342C              1317             ADD     R2,R4                           ;
 4295 000009EA 6141              1318             MOV.W   @R4,R1                          ;
 4296 000009EC D00A              1319             MOV.L   #H'FF00,R0                      ;
 4297 000009EE 2109              1320             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4298                            1321     ;       SHLL    R8                              ; ADR * 2
 4299 000009F0 218B              1322             OR      R8,R1                           ;
 4300 000009F2 2411              1323             MOV.W   R1,@R4                          ; RAM ADR SET
 4301                            1324     
 4302                            1325     ;       *** OFFSET SET ***
 4303 000009F4 345C              1326             ADD     R5,R4                           ;
 4304 000009F6 6141              1327             MOV.W   @R4,R1                          ;
 4305 000009F8 2109              1328             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4306                            1329     ;       SHLL    R9                              ; OFFSET * 2
 4307 000009FA 219B              1330             OR      R9,R1                           ;
 4308 000009FC 2411              1331             MOV.W   R1,@R4                          ; RAM ADR SET
 4309                            1332     
 4310 000009FE 9001              1333             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4311                            1334             M_BRA   _SEQ_DATA_CHG1_EX               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    37
PROGRAM NAME =

 4312 00000A00 A00D                   M           BRA     _SEQ_DATA_CHG1_EX
 4313 00000A02 0009                   M           NOP
 4314                            1335     ;
 4315                                     ***** BEGIN-POOL *****
 4316 00000A04 0000                       DATA FOR SOURCE-LINE 1333
 4317 00000A06 0000                       ALIGNMENT CODE
 4318 00000A08 00000000                   DATA FOR SOURCE-LINE 1286
 4319 00000A0C 00000000                   DATA FOR SOURCE-LINE 1296
 4320 00000A10 00000C00                   DATA FOR SOURCE-LINE 1308
 4321 00000A14 00000000                   DATA FOR SOURCE-LINE 1314
 4322 00000A18 0000FF00                   DATA FOR SOURCE-LINE 1319
 4323                                     ***** END-POOL *****
 4324 00000A1C                   1336     _CHG1_C80:
 4325 00000A1C 9002              1337             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4326                            1338     
 4327 00000A1E                   1339     _SEQ_DATA_CHG1_EX:
 4328                            1340             SUB_END
 4329                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4330 00000A1E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4331                            1341             M_RTS                           ; NORMAL END
 4332 00000A20 000B                   M           RTS                             ;RTSの後ろの
 4333 00000A22 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4334                            1342     
 4335                            1343     ;       ************************************
 4336                            1344     ;       *****   DSETWI CODE CHANGE ROUTINE ***
 4337                            1345     ;       ************************************
 4338                                     ***** BEGIN-POOL *****
 4339 00000A24 FF00                       DATA FOR SOURCE-LINE 1337
 4340                                     ***** END-POOL *****
 4341 00000A28                   1346             .ALIGN  4
 4342 00000A28                   1347     _DSETWI_CHG:                                            ; 00011010B     1A
 4343                            1348             SUB_START
 4344 00000A28 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4345                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4346                            1349     
 4347 00000A2A D005              1350             MOV.L   #(_DSETWI_CODE_END - _DSETWI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4348 00000A2C D305              1351             MOV.L   #_DSETWI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4349 00000A2E D206              1352             MOV.L   #(DSETWI_DT_LH - _DSETWI_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4350 00000A30 D506              1353             MOV.L   #(DSETWI_DT_LL - DSETWI_DT_LH),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4351                            1354     
 4352 00000A32 D107              1355             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4353 00000A34 410B              1356             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4354 00000A36 0009              1357             NOP
 4355                            1358     
 4356                            1359             SUB_END
 4357                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4358 00000A38 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4359                            1360             M_RTS
 4360 00000A3A 000B                   M           RTS                             ;RTSの後ろの
 4361 00000A3C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4362                            1361     
 4363                            1362     ;       ************************************
 4364                            1363     ;       *****   EQWI CODE CHANGE ROUTINE ***
 4365                            1364     ;       ************************************
 4366                                     ***** BEGIN-POOL *****
 4367 00000A3E 0000                       ALIGNMENT CODE
 4368 00000A40 00000000                   DATA FOR SOURCE-LINE 1350
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    38
PROGRAM NAME =

 4369 00000A44 00000000                   DATA FOR SOURCE-LINE 1351
 4370 00000A48 00000000                   DATA FOR SOURCE-LINE 1352
 4371 00000A4C 00000000                   DATA FOR SOURCE-LINE 1353
 4372 00000A50 00000000                   DATA FOR SOURCE-LINE 1355
 4373                                     ***** END-POOL *****
 4374 00000A54                   1365             .ALIGN  4
 4375 00000A54                   1366     _EQWI_CHG:                                              ; 01000010B     42
 4376                            1367             SUB_START
 4377 00000A54 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4378                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4379                            1368     
 4380 00000A56 D005              1369             MOV.L   #(_EQWI_CODE_END - _EQWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4381 00000A58 D305              1370             MOV.L   #_EQWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4382 00000A5A D206              1371             MOV.L   #(EQWI_DT_LH - _EQWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4383 00000A5C D506              1372             MOV.L   #(EQWI_DT_LL - EQWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4384                            1373     
 4385 00000A5E D107              1374             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4386 00000A60 410B              1375             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4387 00000A62 0009              1376             NOP
 4388                            1377     
 4389                            1378             SUB_END
 4390                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4391 00000A64 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4392                            1379             M_RTS
 4393 00000A66 000B                   M           RTS                             ;RTSの後ろの
 4394 00000A68 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4395                            1380     
 4396                            1381     ;       ************************************
 4397                            1382     ;       *****   NEWI CODE CHANGE ROUTINE ***
 4398                            1383     ;       ************************************
 4399                                     ***** BEGIN-POOL *****
 4400 00000A6A 0000                       ALIGNMENT CODE
 4401 00000A6C 00000000                   DATA FOR SOURCE-LINE 1369
 4402 00000A70 00000000                   DATA FOR SOURCE-LINE 1370
 4403 00000A74 00000000                   DATA FOR SOURCE-LINE 1371
 4404 00000A78 00000000                   DATA FOR SOURCE-LINE 1372
 4405 00000A7C 00000000                   DATA FOR SOURCE-LINE 1374
 4406                                     ***** END-POOL *****
 4407 00000A80                   1384             .ALIGN  4
 4408 00000A80                   1385     _NEWI_CHG:                                              ; 01000110B     46
 4409                            1386             SUB_START
 4410 00000A80 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4411                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4412                            1387     
 4413 00000A82 D005              1388             MOV.L   #(_NEWI_CODE_END - _NEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4414 00000A84 D305              1389             MOV.L   #_NEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4415 00000A86 D206              1390             MOV.L   #(NEWI_DT_LH - _NEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4416 00000A88 D506              1391             MOV.L   #(NEWI_DT_LL - NEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4417                            1392     
 4418 00000A8A D107              1393             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4419 00000A8C 410B              1394             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4420 00000A8E 0009              1395             NOP
 4421                            1396     
 4422                            1397             SUB_END
 4423                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4424 00000A90 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4425                            1398             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    39
PROGRAM NAME =

 4426 00000A92 000B                   M           RTS                             ;RTSの後ろの
 4427 00000A94 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4428                            1399     
 4429                            1400     ;       ************************************
 4430                            1401     ;       *****   GTWI CODE CHANGE ROUTINE ***
 4431                            1402     ;       ************************************
 4432                                     ***** BEGIN-POOL *****
 4433 00000A96 0000                       ALIGNMENT CODE
 4434 00000A98 00000000                   DATA FOR SOURCE-LINE 1388
 4435 00000A9C 00000000                   DATA FOR SOURCE-LINE 1389
 4436 00000AA0 00000000                   DATA FOR SOURCE-LINE 1390
 4437 00000AA4 00000000                   DATA FOR SOURCE-LINE 1391
 4438 00000AA8 00000000                   DATA FOR SOURCE-LINE 1393
 4439                                     ***** END-POOL *****
 4440 00000AAC                   1403             .ALIGN  4
 4441 00000AAC                   1404     _GTWI_CHG:                                              ; 01001010B     4A
 4442                            1405             SUB_START
 4443 00000AAC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4444                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4445                            1406     
 4446 00000AAE D005              1407             MOV.L   #(_GTWI_CODE_END - _GTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4447 00000AB0 D305              1408             MOV.L   #_GTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4448 00000AB2 D206              1409             MOV.L   #(GTWI_DT_LH - _GTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4449 00000AB4 D506              1410             MOV.L   #(GTWI_DT_LL - GTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4450                            1411     
 4451 00000AB6 D107              1412             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4452 00000AB8 410B              1413             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4453 00000ABA 0009              1414             NOP
 4454                            1415     
 4455                            1416             SUB_END
 4456                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4457 00000ABC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4458                            1417             M_RTS
 4459 00000ABE 000B                   M           RTS                             ;RTSの後ろの
 4460 00000AC0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4461                            1418     
 4462                            1419     ;       ************************************
 4463                            1420     ;       *****   GEWI CODE CHANGE ROUTINE ***
 4464                            1421     ;       ************************************
 4465                                     ***** BEGIN-POOL *****
 4466 00000AC2 0000                       ALIGNMENT CODE
 4467 00000AC4 00000000                   DATA FOR SOURCE-LINE 1407
 4468 00000AC8 00000000                   DATA FOR SOURCE-LINE 1408
 4469 00000ACC 00000000                   DATA FOR SOURCE-LINE 1409
 4470 00000AD0 00000000                   DATA FOR SOURCE-LINE 1410
 4471 00000AD4 00000000                   DATA FOR SOURCE-LINE 1412
 4472                                     ***** END-POOL *****
 4473 00000AD8                   1422             .ALIGN  4
 4474 00000AD8                   1423     _GEWI_CHG:                                              ; 01001110B     4E
 4475                            1424             SUB_START
 4476 00000AD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4477                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4478                            1425     
 4479 00000ADA D005              1426             MOV.L   #(_GEWI_CODE_END - _GEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4480 00000ADC D305              1427             MOV.L   #_GEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4481 00000ADE D206              1428             MOV.L   #(GEWI_DT_LH - _GEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4482 00000AE0 D506              1429             MOV.L   #(GEWI_DT_LL - GEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    40
PROGRAM NAME =

 4483                            1430     
 4484 00000AE2 D107              1431             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4485 00000AE4 410B              1432             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4486 00000AE6 0009              1433             NOP
 4487                            1434     
 4488                            1435             SUB_END
 4489                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4490 00000AE8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4491                            1436             M_RTS
 4492 00000AEA 000B                   M           RTS                             ;RTSの後ろの
 4493 00000AEC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4494                            1437     
 4495                            1438     ;       ************************************
 4496                            1439     ;       *****   LTWI CODE CHANGE ROUTINE ***
 4497                            1440     ;       ************************************
 4498                                     ***** BEGIN-POOL *****
 4499 00000AEE 0000                       ALIGNMENT CODE
 4500 00000AF0 00000000                   DATA FOR SOURCE-LINE 1426
 4501 00000AF4 00000000                   DATA FOR SOURCE-LINE 1427
 4502 00000AF8 00000000                   DATA FOR SOURCE-LINE 1428
 4503 00000AFC 00000000                   DATA FOR SOURCE-LINE 1429
 4504 00000B00 00000000                   DATA FOR SOURCE-LINE 1431
 4505                                     ***** END-POOL *****
 4506 00000B04                   1441             .ALIGN  4
 4507 00000B04                   1442     _LTWI_CHG:                                              ; 01010010B     52
 4508                            1443             SUB_START
 4509 00000B04 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4510                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4511                            1444     
 4512 00000B06 D005              1445             MOV.L   #(_LTWI_CODE_END - _LTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4513 00000B08 D305              1446             MOV.L   #_LTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4514 00000B0A D206              1447             MOV.L   #(LTWI_DT_LH - _LTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4515 00000B0C D506              1448             MOV.L   #(LTWI_DT_LL - LTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4516                            1449     
 4517 00000B0E D107              1450             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4518 00000B10 410B              1451             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4519 00000B12 0009              1452             NOP
 4520                            1453     
 4521                            1454             SUB_END
 4522                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4523 00000B14 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4524                            1455             M_RTS
 4525 00000B16 000B                   M           RTS                             ;RTSの後ろの
 4526 00000B18 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4527                            1456     
 4528                            1457     ;       ************************************
 4529                            1458     ;       *****   LEWI CODE CHANGE ROUTINE ***
 4530                            1459     ;       ************************************
 4531                                     ***** BEGIN-POOL *****
 4532 00000B1A 0000                       ALIGNMENT CODE
 4533 00000B1C 00000000                   DATA FOR SOURCE-LINE 1445
 4534 00000B20 00000000                   DATA FOR SOURCE-LINE 1446
 4535 00000B24 00000000                   DATA FOR SOURCE-LINE 1447
 4536 00000B28 00000000                   DATA FOR SOURCE-LINE 1448
 4537 00000B2C 00000000                   DATA FOR SOURCE-LINE 1450
 4538                                     ***** END-POOL *****
 4539 00000B30                   1460             .ALIGN  4
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    41
PROGRAM NAME =

 4540 00000B30                   1461     _LEWI_CHG:                                              ; 01010110B     56
 4541                            1462             SUB_START
 4542 00000B30 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4543                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4544                            1463     
 4545 00000B32 D005              1464             MOV.L   #(_LEWI_CODE_END - _LEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4546 00000B34 D305              1465             MOV.L   #_LEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4547 00000B36 D206              1466             MOV.L   #(LEWI_DT_LH - _LEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4548 00000B38 D506              1467             MOV.L   #(LEWI_DT_LL - LEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4549                            1468     
 4550 00000B3A D107              1469             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4551 00000B3C 410B              1470             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4552 00000B3E 0009              1471             NOP
 4553                            1472     
 4554                            1473             SUB_END
 4555                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4556 00000B40 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4557                            1474             M_RTS
 4558 00000B42 000B                   M           RTS                             ;RTSの後ろの
 4559 00000B44 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4560                            1475     
 4561                            1476     ;       ************************************
 4562                            1477     ;       *****   ADDWI CODE CHANGE ROUTINE ***
 4563                            1478     ;       ************************************
 4564                                     ***** BEGIN-POOL *****
 4565 00000B46 0000                       ALIGNMENT CODE
 4566 00000B48 00000000                   DATA FOR SOURCE-LINE 1464
 4567 00000B4C 00000000                   DATA FOR SOURCE-LINE 1465
 4568 00000B50 00000000                   DATA FOR SOURCE-LINE 1466
 4569 00000B54 00000000                   DATA FOR SOURCE-LINE 1467
 4570 00000B58 00000000                   DATA FOR SOURCE-LINE 1469
 4571                                     ***** END-POOL *****
 4572 00000B5C                   1479             .ALIGN  4
 4573 00000B5C                   1480     _ADDWI_CHG:                                             ; 01011010B     5A
 4574                            1481             SUB_START
 4575 00000B5C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4576                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4577                            1482     
 4578 00000B5E D005              1483             MOV.L   #(_ADDWI_CODE_END - _ADDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4579 00000B60 D305              1484             MOV.L   #_ADDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4580 00000B62 D206              1485             MOV.L   #(ADDWI_DT_LH - _ADDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4581 00000B64 D506              1486             MOV.L   #(ADDWI_DT_LL - ADDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4582                            1487     
 4583 00000B66 D107              1488             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4584 00000B68 410B              1489             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4585 00000B6A 0009              1490             NOP
 4586                            1491     
 4587                            1492             SUB_END
 4588                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4589 00000B6C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4590                            1493             M_RTS
 4591 00000B6E 000B                   M           RTS                             ;RTSの後ろの
 4592 00000B70 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4593                            1494     
 4594                            1495     ;       ************************************
 4595                            1496     ;       *****   SUBWI CODE CHANGE ROUTINE ***
 4596                            1497     ;       ************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    42
PROGRAM NAME =

 4597                                     ***** BEGIN-POOL *****
 4598 00000B72 0000                       ALIGNMENT CODE
 4599 00000B74 00000000                   DATA FOR SOURCE-LINE 1483
 4600 00000B78 00000000                   DATA FOR SOURCE-LINE 1484
 4601 00000B7C 00000000                   DATA FOR SOURCE-LINE 1485
 4602 00000B80 00000000                   DATA FOR SOURCE-LINE 1486
 4603 00000B84 00000000                   DATA FOR SOURCE-LINE 1488
 4604                                     ***** END-POOL *****
 4605 00000B88                   1498             .ALIGN  4
 4606 00000B88                   1499     _SUBWI_CHG:                                             ; 01011110B     5E
 4607                            1500             SUB_START
 4608 00000B88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4609                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4610                            1501     
 4611 00000B8A D005              1502             MOV.L   #(_SUBWI_CODE_END - _SUBWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4612 00000B8C D305              1503             MOV.L   #_SUBWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4613 00000B8E D206              1504             MOV.L   #(SUBWI_DT_LH - _SUBWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4614 00000B90 D506              1505             MOV.L   #(SUBWI_DT_LL - SUBWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4615                            1506     
 4616 00000B92 D107              1507             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4617 00000B94 410B              1508             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4618 00000B96 0009              1509             NOP
 4619                            1510     
 4620                            1511             SUB_END
 4621                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4622 00000B98 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4623                            1512             M_RTS
 4624 00000B9A 000B                   M           RTS                             ;RTSの後ろの
 4625 00000B9C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4626                            1513     
 4627                            1514     ;       ************************************
 4628                            1515     ;       *****   ANDWI CODE CHANGE ROUTINE ***
 4629                            1516     ;       ************************************
 4630                                     ***** BEGIN-POOL *****
 4631 00000B9E 0000                       ALIGNMENT CODE
 4632 00000BA0 00000000                   DATA FOR SOURCE-LINE 1502
 4633 00000BA4 00000000                   DATA FOR SOURCE-LINE 1503
 4634 00000BA8 00000000                   DATA FOR SOURCE-LINE 1504
 4635 00000BAC 00000000                   DATA FOR SOURCE-LINE 1505
 4636 00000BB0 00000000                   DATA FOR SOURCE-LINE 1507
 4637                                     ***** END-POOL *****
 4638 00000BB4                   1517             .ALIGN  4
 4639 00000BB4                   1518     _ANDWI_CHG:                                             ; 01100010B     62
 4640                            1519             SUB_START
 4641 00000BB4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4642                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4643                            1520     
 4644 00000BB6 D005              1521             MOV.L   #(_ANDWI_CODE_END - _ANDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4645 00000BB8 D305              1522             MOV.L   #_ANDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4646 00000BBA D206              1523             MOV.L   #(ANDWI_DT_LH - _ANDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4647 00000BBC D506              1524             MOV.L   #(ANDWI_DT_LL - ANDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4648                            1525     
 4649 00000BBE D107              1526             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4650 00000BC0 410B              1527             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4651 00000BC2 0009              1528             NOP
 4652                            1529     
 4653                            1530             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    43
PROGRAM NAME =

 4654                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4655 00000BC4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4656                            1531             M_RTS
 4657 00000BC6 000B                   M           RTS                             ;RTSの後ろの
 4658 00000BC8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4659                            1532     
 4660                            1533     ;       ************************************
 4661                            1534     ;       *****   ORWI CODE CHANGE ROUTINE ***
 4662                            1535     ;       ************************************
 4663                                     ***** BEGIN-POOL *****
 4664 00000BCA 0000                       ALIGNMENT CODE
 4665 00000BCC 00000000                   DATA FOR SOURCE-LINE 1521
 4666 00000BD0 00000000                   DATA FOR SOURCE-LINE 1522
 4667 00000BD4 00000000                   DATA FOR SOURCE-LINE 1523
 4668 00000BD8 00000000                   DATA FOR SOURCE-LINE 1524
 4669 00000BDC 00000000                   DATA FOR SOURCE-LINE 1526
 4670                                     ***** END-POOL *****
 4671 00000BE0                   1536             .ALIGN  4
 4672 00000BE0                   1537     _ORWI_CHG:                                              ; 01100110B     66
 4673                            1538             SUB_START
 4674 00000BE0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4675                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4676                            1539     
 4677 00000BE2 D005              1540             MOV.L   #(_ORWI_CODE_END - _ORWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4678 00000BE4 D305              1541             MOV.L   #_ORWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4679 00000BE6 D206              1542             MOV.L   #(ORWI_DT_LH - _ORWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4680 00000BE8 D506              1543             MOV.L   #(ORWI_DT_LL - ORWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4681                            1544     
 4682 00000BEA D107              1545             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4683 00000BEC 410B              1546             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4684 00000BEE 0009              1547             NOP
 4685                            1548     
 4686                            1549             SUB_END
 4687                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4688 00000BF0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4689                            1550             M_RTS
 4690 00000BF2 000B                   M           RTS                             ;RTSの後ろの
 4691 00000BF4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4692                            1551     
 4693                            1552     ;       ************************************
 4694                            1553     ;       *****   XORWI CODE CHANGE ROUTINE ***
 4695                            1554     ;       ************************************
 4696                                     ***** BEGIN-POOL *****
 4697 00000BF6 0000                       ALIGNMENT CODE
 4698 00000BF8 00000000                   DATA FOR SOURCE-LINE 1540
 4699 00000BFC 00000000                   DATA FOR SOURCE-LINE 1541
 4700 00000C00 00000000                   DATA FOR SOURCE-LINE 1542
 4701 00000C04 00000000                   DATA FOR SOURCE-LINE 1543
 4702 00000C08 00000000                   DATA FOR SOURCE-LINE 1545
 4703                                     ***** END-POOL *****
 4704 00000C0C                   1555             .ALIGN  4
 4705 00000C0C                   1556     _XORWI_CHG:                                             ; 01101010B     6A
 4706                            1557             SUB_START
 4707 00000C0C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4708                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4709                            1558     
 4710 00000C0E D005              1559             MOV.L   #(_XORWI_CODE_END - _XORWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    44
PROGRAM NAME =

 4711 00000C10 D305              1560             MOV.L   #_XORWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4712 00000C12 D206              1561             MOV.L   #(XORWI_DT_LH - _XORWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4713 00000C14 D506              1562             MOV.L   #(XORWI_DT_LL - XORWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4714                            1563     
 4715 00000C16 D107              1564             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4716 00000C18 410B              1565             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4717 00000C1A 0009              1566             NOP
 4718                            1567     
 4719                            1568             SUB_END
 4720                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4721 00000C1C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4722                            1569             M_RTS
 4723 00000C1E 000B                   M           RTS                             ;RTSの後ろの
 4724 00000C20 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4725                            1570     
 4726                            1571     ;       ***************************************************
 4727                            1572     ;       ***     SEQ DATA CHANGE2 ROUTINE                ***
 4728                            1573     ;       ***************************************************
 4729                                     ***** BEGIN-POOL *****
 4730 00000C22 0000                       ALIGNMENT CODE
 4731 00000C24 00000000                   DATA FOR SOURCE-LINE 1559
 4732 00000C28 00000000                   DATA FOR SOURCE-LINE 1560
 4733 00000C2C 00000000                   DATA FOR SOURCE-LINE 1561
 4734 00000C30 00000000                   DATA FOR SOURCE-LINE 1562
 4735 00000C34 00000000                   DATA FOR SOURCE-LINE 1564
 4736                                     ***** END-POOL *****
 4737 00000C38                   1574             .ALIGN  4
 4738 00000C38                   1575     _SEQ_DATA_CHG2:
 4739                            1576             SUB_START
 4740 00000C38 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4741                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4742                            1577     
 4743 00000C3A 6983              1578             MOV.L   R8,R9                           ;
 4744 00000C3C 6888              1579             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4745 00000C3E 688C              1580             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4746 00000C40 699C              1581             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4747                            1582     
 4748 00000C42 D10B              1583             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4749 00000C44 3813              1584             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4750 00000C46 8919              1585             BT      _CHG2_C80                       ; IF ADR >= 127 THEN JUMP
 4751                            1586     
 4752 00000C48 64D3              1587             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4753                            1588     
 4754                            1589             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4755 00000C4A D10A                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4756 00000C4C 410B                   M           JSR     @R1                     ;
 4757 00000C4E 0009                   M           NOP                                     ;
 4758                            1590                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4759                            1591     ;       *** ADR SET ***
 4760 00000C50 342C              1592             ADD     R2,R4                           ;
 4761 00000C52 6141              1593             MOV.W   @R4,R1                          ;
 4762 00000C54 D008              1594             MOV.L   #H'FF00,R0                      ;
 4763 00000C56 2109              1595             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4764                            1596     ;       SHLL    R8                              ; ADR * 2
 4765 00000C58 218B              1597             OR      R8,R1                           ;
 4766 00000C5A 2411              1598             MOV.W   R1,@R4                          ; RAM ADR SET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    45
PROGRAM NAME =

 4767                            1599     
 4768                            1600     ;       *** OFFSET SET ***
 4769 00000C5C 345C              1601             ADD     R5,R4                           ;
 4770 00000C5E 6141              1602             MOV.W   @R4,R1                          ;
 4771 00000C60 2109              1603             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4772                            1604     ;       SHLL    R9                              ; OFFSET * 2
 4773 00000C62 219B              1605             OR      R9,R1                           ;
 4774 00000C64 2411              1606             MOV.W   R1,@R4                          ; RAM ADR SET
 4775                            1607     
 4776 00000C66 9001              1608             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4777                            1609             M_BRA   _SEQ_CHG2_EX                    ;
 4778 00000C68 A009                   M           BRA     _SEQ_CHG2_EX
 4779 00000C6A 0009                   M           NOP
 4780                            1610     ;
 4781                                     ***** BEGIN-POOL *****
 4782 00000C6C 0000                       DATA FOR SOURCE-LINE 1608
 4783 00000C6E 0000                       ALIGNMENT CODE
 4784 00000C70 00000C00                   DATA FOR SOURCE-LINE 1583
 4785 00000C74 00000000                   DATA FOR SOURCE-LINE 1589
 4786 00000C78 0000FF00                   DATA FOR SOURCE-LINE 1594
 4787                                     ***** END-POOL *****
 4788 00000C7C                   1611     _CHG2_C80:
 4789 00000C7C 9002              1612             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4790                            1613     
 4791 00000C7E                   1614     _SEQ_CHG2_EX:
 4792                            1615             SUB_END
 4793                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4794 00000C7E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4795                            1616             M_RTS                                   ; NORMAL END
 4796 00000C80 000B                   M           RTS                             ;RTSの後ろの
 4797 00000C82 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4798                            1617     
 4799                            1618     ;       ************************************
 4800                            1619     ;       ***     Read CODE CHANGE ROUTINE ***
 4801                            1620     ;       ************************************
 4802                                     ***** BEGIN-POOL *****
 4803 00000C84 FF00                       DATA FOR SOURCE-LINE 1612
 4804                                     ***** END-POOL *****
 4805 00000C88                   1621             .ALIGN  4
 4806 00000C88                   1622     _LD_CHG:                                        ; 00000010B     2
 4807                            1623             SUB_START
 4808 00000C88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4809                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4810                            1624     
 4811 00000C8A D005              1625             MOV.L   #(_LD_CODE_END - _LD_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4812 00000C8C D305              1626             MOV.L   #_LD_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4813 00000C8E D206              1627             MOV.L   #(LD_ADR - _LD_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4814 00000C90 D506              1628             MOV.L   #(LD_OFS - LD_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4815 00000C92 D607              1629             MOV.L   #(LD_BIT - LD_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4816                            1630     
 4817 00000C94 D107              1631             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4818 00000C96 410B              1632             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4819 00000C98 0009              1633             NOP
 4820                            1634     
 4821                            1635             SUB_END
 4822                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4823 00000C9A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    46
PROGRAM NAME =

 4824                            1636             M_RTS
 4825 00000C9C 000B                   M           RTS                             ;RTSの後ろの
 4826 00000C9E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4827                            1637     
 4828                            1638     ;       **************************************
 4829                            1639     ;       ***   Read Not CODE CHANGE ROUTINE ***
 4830                            1640     ;       **************************************
 4831                                     ***** BEGIN-POOL *****
 4832 00000CA0 00000000                   DATA FOR SOURCE-LINE 1625
 4833 00000CA4 00000000                   DATA FOR SOURCE-LINE 1626
 4834 00000CA8 00000000                   DATA FOR SOURCE-LINE 1627
 4835 00000CAC 00000000                   DATA FOR SOURCE-LINE 1628
 4836 00000CB0 00000000                   DATA FOR SOURCE-LINE 1629
 4837 00000CB4 00000000                   DATA FOR SOURCE-LINE 1631
 4838                                     ***** END-POOL *****
 4839 00000CB8                   1641             .ALIGN  4
 4840 00000CB8                   1642     _LDN_CHG:                                       ; 00000011B     3
 4841                            1643             SUB_START
 4842 00000CB8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4843                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4844                            1644     
 4845 00000CBA D005              1645             MOV.L   #(_LDN_CODE_END - _LDN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4846 00000CBC D305              1646             MOV.L   #_LDN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4847 00000CBE D206              1647             MOV.L   #(LDN_ADR - _LDN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4848 00000CC0 D506              1648             MOV.L   #(LDN_OFS - LDN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4849 00000CC2 D607              1649             MOV.L   #(LDN_BIT - LDN_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4850                            1650     
 4851 00000CC4 D107              1651             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4852 00000CC6 410B              1652             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4853 00000CC8 0009              1653             NOP
 4854                            1654     
 4855                            1655             SUB_END
 4856                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4857 00000CCA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4858                            1656             M_RTS
 4859 00000CCC 000B                   M           RTS                             ;RTSの後ろの
 4860 00000CCE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4861                            1657     
 4862                            1658     ;       ***********************************
 4863                            1659     ;       *****   And CODE CHANGE ROUTINE ***
 4864                            1660     ;       ***********************************
 4865                                     ***** BEGIN-POOL *****
 4866 00000CD0 00000000                   DATA FOR SOURCE-LINE 1645
 4867 00000CD4 00000000                   DATA FOR SOURCE-LINE 1646
 4868 00000CD8 00000000                   DATA FOR SOURCE-LINE 1647
 4869 00000CDC 00000000                   DATA FOR SOURCE-LINE 1648
 4870 00000CE0 00000000                   DATA FOR SOURCE-LINE 1649
 4871 00000CE4 00000000                   DATA FOR SOURCE-LINE 1651
 4872                                     ***** END-POOL *****
 4873 00000CE8                   1661             .ALIGN  4
 4874 00000CE8                   1662     _AND_CHG:                                       ; 00000100B     4
 4875                            1663             SUB_START
 4876 00000CE8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4877                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4878                            1664     
 4879 00000CEA D005              1665             MOV.L   #(_AND_CODE_END - _AND_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4880 00000CEC D305              1666             MOV.L   #_AND_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    47
PROGRAM NAME =

 4881 00000CEE D206              1667             MOV.L   #(AND_ADR - _AND_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4882 00000CF0 D506              1668             MOV.L   #(AND_OFS - AND_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4883 00000CF2 D607              1669             MOV.L   #(AND_BIT - AND_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4884                            1670     
 4885 00000CF4 D107              1671             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4886 00000CF6 410B              1672             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4887 00000CF8 0009              1673             NOP
 4888                            1674     
 4889                            1675             SUB_END
 4890                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4891 00000CFA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4892                            1676             M_RTS
 4893 00000CFC 000B                   M           RTS                             ;RTSの後ろの
 4894 00000CFE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4895                            1677     
 4896                            1678     ;       ***************************************
 4897                            1679     ;       *****   And Not CODE CHANGE ROUTINE ***
 4898                            1680     ;       ***************************************
 4899                                     ***** BEGIN-POOL *****
 4900 00000D00 00000000                   DATA FOR SOURCE-LINE 1665
 4901 00000D04 00000000                   DATA FOR SOURCE-LINE 1666
 4902 00000D08 00000000                   DATA FOR SOURCE-LINE 1667
 4903 00000D0C 00000000                   DATA FOR SOURCE-LINE 1668
 4904 00000D10 00000000                   DATA FOR SOURCE-LINE 1669
 4905 00000D14 00000000                   DATA FOR SOURCE-LINE 1671
 4906                                     ***** END-POOL *****
 4907 00000D18                   1681             .ALIGN  4
 4908 00000D18                   1682     _ANDN_CHG:                                      ; 00000101B     5
 4909                            1683             SUB_START
 4910 00000D18 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4911                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4912                            1684     
 4913 00000D1A D005              1685             MOV.L   #(_ANDN_CODE_END - _ANDN_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4914 00000D1C D305              1686             MOV.L   #_ANDN_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4915 00000D1E D206              1687             MOV.L   #(ANDN_ADR - _ANDN_CODE),R2     ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4916 00000D20 D506              1688             MOV.L   #(ANDN_OFS - ANDN_ADR),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4917 00000D22 D607              1689             MOV.L   #(ANDN_BIT - ANDN_OFS),R6       ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4918                            1690     
 4919 00000D24 D107              1691             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4920 00000D26 410B              1692             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4921 00000D28 0009              1693             NOP
 4922                            1694     
 4923                            1695             SUB_END
 4924                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4925 00000D2A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4926                            1696             M_RTS
 4927 00000D2C 000B                   M           RTS                             ;RTSの後ろの
 4928 00000D2E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4929                            1697     
 4930                            1698     ;       **********************************
 4931                            1699     ;       *****   OR CODE CHANGE ROUTINE ***
 4932                            1700     ;       **********************************
 4933                                     ***** BEGIN-POOL *****
 4934 00000D30 00000000                   DATA FOR SOURCE-LINE 1685
 4935 00000D34 00000000                   DATA FOR SOURCE-LINE 1686
 4936 00000D38 00000000                   DATA FOR SOURCE-LINE 1687
 4937 00000D3C 00000000                   DATA FOR SOURCE-LINE 1688
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    48
PROGRAM NAME =

 4938 00000D40 00000000                   DATA FOR SOURCE-LINE 1689
 4939 00000D44 00000000                   DATA FOR SOURCE-LINE 1691
 4940                                     ***** END-POOL *****
 4941 00000D48                   1701             .ALIGN  4
 4942 00000D48                   1702     _OR_CHG:                                        ; 00000110B     6
 4943                            1703             SUB_START
 4944 00000D48 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4945                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4946                            1704     
 4947 00000D4A D005              1705             MOV.L   #(_OR_CODE_END - _OR_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4948 00000D4C D305              1706             MOV.L   #_OR_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4949 00000D4E D206              1707             MOV.L   #(OR_ADR - _OR_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4950 00000D50 D506              1708             MOV.L   #(OR_OFS - OR_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4951 00000D52 D607              1709             MOV.L   #(OR_BIT - OR_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4952                            1710     
 4953 00000D54 D107              1711             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4954 00000D56 410B              1712             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4955 00000D58 0009              1713             NOP
 4956                            1714     
 4957                            1715             SUB_END
 4958                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4959 00000D5A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4960                            1716             M_RTS
 4961 00000D5C 000B                   M           RTS                             ;RTSの後ろの
 4962 00000D5E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4963                            1717     
 4964                            1718     ;       **************************************
 4965                            1719     ;       *****   Or Not CODE CHANGE ROUTINE ***
 4966                            1720     ;       **************************************
 4967                                     ***** BEGIN-POOL *****
 4968 00000D60 00000000                   DATA FOR SOURCE-LINE 1705
 4969 00000D64 00000000                   DATA FOR SOURCE-LINE 1706
 4970 00000D68 00000000                   DATA FOR SOURCE-LINE 1707
 4971 00000D6C 00000000                   DATA FOR SOURCE-LINE 1708
 4972 00000D70 00000000                   DATA FOR SOURCE-LINE 1709
 4973 00000D74 00000000                   DATA FOR SOURCE-LINE 1711
 4974                                     ***** END-POOL *****
 4975 00000D78                   1721             .ALIGN  4
 4976 00000D78                   1722     _ORN_CHG:                                       ; 00000111B     7
 4977                            1723             SUB_START
 4978 00000D78 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4979                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4980                            1724     
 4981 00000D7A D005              1725             MOV.L   #(_ORN_CODE_END - _ORN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4982 00000D7C D305              1726             MOV.L   #_ORN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4983 00000D7E D206              1727             MOV.L   #(ORN_ADR - _ORN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4984 00000D80 D506              1728             MOV.L   #(ORN_OFS - ORN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4985 00000D82 D607              1729             MOV.L   #(ORN_BIT - ORN_OFS),R6 ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4986                            1730     
 4987 00000D84 D107              1731             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4988 00000D86 410B              1732             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4989 00000D88 0009              1733             NOP
 4990                            1734     
 4991                            1735             SUB_END
 4992                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4993 00000D8A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4994                            1736             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    49
PROGRAM NAME =

 4995 00000D8C 000B                   M           RTS                             ;RTSの後ろの
 4996 00000D8E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4997                            1737     
 4998                            1738     ;       ***********************************
 4999                            1739     ;       *****   PLS CODE CHANGE ROUTINE ***
 5000                            1740     ;       ***********************************
 5001                                     ***** BEGIN-POOL *****
 5002 00000D90 00000000                   DATA FOR SOURCE-LINE 1725
 5003 00000D94 00000000                   DATA FOR SOURCE-LINE 1726
 5004 00000D98 00000000                   DATA FOR SOURCE-LINE 1727
 5005 00000D9C 00000000                   DATA FOR SOURCE-LINE 1728
 5006 00000DA0 00000000                   DATA FOR SOURCE-LINE 1729
 5007 00000DA4 00000000                   DATA FOR SOURCE-LINE 1731
 5008                                     ***** END-POOL *****
 5009 00000DA8                   1741             .ALIGN  4
 5010 00000DA8                   1742     _PLS_CHG:                                       ; 00001000B     8
 5011                            1743             SUB_START
 5012 00000DA8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5013                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5014                            1744     
 5015 00000DAA D005              1745             MOV.L   #(_PLS_CODE_END - _PLS_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5016 00000DAC D305              1746             MOV.L   #_PLS_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5017 00000DAE D206              1747             MOV.L   #(PLS_ADR - _PLS_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 5018 00000DB0 D506              1748             MOV.L   #(PLS_OFS - PLS_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 5019 00000DB2 D607              1749             MOV.L   #(PLS_BIT - PLS_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 5020                            1750     
 5021 00000DB4 D107              1751             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 5022 00000DB6 410B              1752             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 5023 00000DB8 0009              1753             NOP
 5024                            1754     
 5025                            1755             SUB_END
 5026                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5027 00000DBA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5028                            1756             M_RTS
 5029 00000DBC 000B                   M           RTS                             ;RTSの後ろの
 5030 00000DBE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5031                            1757     
 5032                            1758     ;       ***********************************
 5033                            1759     ;       *****   PLF CODE CHANGE ROUTINE ***
 5034                            1760     ;       ***********************************
 5035                                     ***** BEGIN-POOL *****
 5036 00000DC0 00000000                   DATA FOR SOURCE-LINE 1745
 5037 00000DC4 00000000                   DATA FOR SOURCE-LINE 1746
 5038 00000DC8 00000000                   DATA FOR SOURCE-LINE 1747
 5039 00000DCC 00000000                   DATA FOR SOURCE-LINE 1748
 5040 00000DD0 00000000                   DATA FOR SOURCE-LINE 1749
 5041 00000DD4 00000000                   DATA FOR SOURCE-LINE 1751
 5042                                     ***** END-POOL *****
 5043 00000DD8                   1761             .ALIGN  4
 5044 00000DD8                   1762     _PLF_CHG:                                       ; 00001001B     9
 5045                            1763             SUB_START
 5046 00000DD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5047                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5048                            1764     
 5049 00000DDA D005              1765             MOV.L   #(_PLF_CODE_END - _PLF_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5050 00000DDC D305              1766             MOV.L   #_PLF_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5051 00000DDE D206              1767             MOV.L   #(PLF_ADR - _PLF_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    50
PROGRAM NAME =

 5052 00000DE0 D506              1768             MOV.L   #(PLF_OFS - PLF_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 5053 00000DE2 D607              1769             MOV.L   #(PLF_BIT - PLF_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 5054                            1770     
 5055 00000DE4 D107              1771             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 5056 00000DE6 410B              1772             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 5057 00000DE8 0009              1773             NOP
 5058                            1774     
 5059                            1775             SUB_END
 5060                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5061 00000DEA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5062                            1776             M_RTS
 5063 00000DEC 000B                   M           RTS                             ;RTSの後ろの
 5064 00000DEE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5065                            1777     
 5066                            1778     ;       ***************************************************
 5067                            1779     ;       ***     SEQ DATA CHANGE3 ROUTINE                ***
 5068                            1780     ;       ***************************************************
 5069                                     ***** BEGIN-POOL *****
 5070 00000DF0 00000000                   DATA FOR SOURCE-LINE 1765
 5071 00000DF4 00000000                   DATA FOR SOURCE-LINE 1766
 5072 00000DF8 00000000                   DATA FOR SOURCE-LINE 1767
 5073 00000DFC 00000000                   DATA FOR SOURCE-LINE 1768
 5074 00000E00 00000000                   DATA FOR SOURCE-LINE 1769
 5075 00000E04 00000000                   DATA FOR SOURCE-LINE 1771
 5076                                     ***** END-POOL *****
 5077 00000E08                   1781             .ALIGN  4
 5078 00000E08                   1782     _SEQ_DATA_CHG3:
 5079                            1783             SUB_START
 5080 00000E08 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5081                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5082                            1784     
 5083                            1785     ;       ************************
 5084                            1786     ;       *** MEM CODE処理追加 ***
 5085                            1787     ;       ************************
 5086 00000E0A D11A              1788             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5087 00000E0C 4B08              1789             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5088 00000E0E 31BC              1790             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5089 00000E10 6912              1791             MOV.L   @R1,R9                          ;
 5090 00000E12 4800              1792             SHLL    R8                              ; MEM ADR * 2
 5091 00000E14 389C              1793             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5092                            1794     
 5093                            1795     ;       ************************
 5094                            1796     ;       *** BIT CODE処理追加 ***
 5095                            1797     ;       ************************
 5096 00000E16 D118              1798             MOV.L   #H'0008,R1                      ;
 5097 00000E18 3A13              1799             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5098 00000E1A 8901              1800             BT      _SEQ_RUN_CHG3_BIT_H             ; R10>=R0 JUMP
 5099 00000E1C D117              1801             MOV.L   #H'0001,R1                      ;
 5100 00000E1E 381C              1802             ADD     R1,R8                           ; MEM ADR L + 1
 5101                            1803     
 5102 00000E20                   1804     _SEQ_RUN_CHG3_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5103                            1805     
 5104                            1806     ;       ****************************
 5105                            1807     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5106                            1808     ;       ****************************
 5107 00000E20 D117              1809             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5108 00000E22 31BC              1810             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    51
PROGRAM NAME =

 5109 00000E24 6B12              1811             MOV.L   @R1,R11                         ;
 5110 00000E26 39BC              1812             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5111 00000E28 3893              1813             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5112 00000E2A 8933              1814             BT      _CHG3_C80                       ; R8 >= R9 JUMP
 5113                            1815     
 5114 00000E2C 6983              1816             MOV.L   R8,R9                           ;
 5115 00000E2E 6888              1817             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5116 00000E30 688C              1818             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5117 00000E32 699C              1819             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5118                            1820     
 5119 00000E34 D113              1821             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5120 00000E36 3813              1822             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5121 00000E38 892C              1823             BT      _CHG3_C80                       ; IF ADR >= 127 THEN JUMP
 5122                            1824     
 5123 00000E3A 64D3              1825             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5124                            1826     
 5125                            1827             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5126 00000E3C D112                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5127 00000E3E 410B                   M           JSR     @R1                     ;
 5128 00000E40 0009                   M           NOP                                     ;
 5129                            1828                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5130                            1829     ;       *** ADR SET ***
 5131 00000E42 342C              1830             ADD     R2,R4                           ;
 5132 00000E44 6141              1831             MOV.W   @R4,R1                          ;
 5133 00000E46 D011              1832             MOV.L   #H'FF00,R0                      ;
 5134 00000E48 2109              1833             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5135                            1834     ;       SHLL    R8                              ; ADR * 2
 5136 00000E4A 218B              1835             OR      R8,R1                           ;
 5137 00000E4C 2411              1836             MOV.W   R1,@R4                          ; RAM ADR SET
 5138                            1837     
 5139                            1838     ;       *** OFFSET SET ***
 5140 00000E4E 345C              1839             ADD     R5,R4                           ;
 5141 00000E50 6141              1840             MOV.W   @R4,R1                          ;
 5142 00000E52 2109              1841             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5143                            1842     ;       SHLL    R9                              ; OFFSET * 2
 5144 00000E54 219B              1843             OR      R9,R1                           ;
 5145 00000E56 2411              1844             MOV.W   R1,@R4                          ; RAM ADR SET
 5146                            1845     
 5147                            1846     ;       *** BIT SET ***
 5148 00000E58 346C              1847             ADD     R6,R4                           ;
 5149 00000E5A 6141              1848             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5150 00000E5C D20C              1849             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5151 00000E5E 4A00              1850             SHLL    R10                             ; * 2(word命令のため2倍する)
 5152 00000E60 32AC              1851             ADD     R10,R2                          ;
 5153 00000E62 6A21              1852             MOV.W   @R2,R10                         ; BIT CODE値格納
 5154                            1853     ;;;     MOV.L   #H'FF00,R0                      ;
 5155 00000E64 2109              1854             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5156 00000E66 21AB              1855             OR      R10,R1                          ;
 5157 00000E68 2411              1856             MOV.W   R1,@R4                          ; BIT CODEを書換
 5158                            1857     
 5159 00000E6A 9001              1858             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5160                            1859             M_BRA   _SEQ_CHG3_EX                    ;
 5161 00000E6C A013                   M           BRA     _SEQ_CHG3_EX
 5162 00000E6E 0009                   M           NOP
 5163                            1860     ;
 5164                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    52
PROGRAM NAME =

 5165 00000E70 0000                       DATA FOR SOURCE-LINE 1858
 5166 00000E72 0000                       ALIGNMENT CODE
 5167 00000E74 00000000                   DATA FOR SOURCE-LINE 1788
 5168 00000E78 00000008                   DATA FOR SOURCE-LINE 1798
 5169 00000E7C 00000001                   DATA FOR SOURCE-LINE 1801
 5170 00000E80 00000000                   DATA FOR SOURCE-LINE 1809
 5171 00000E84 00000C00                   DATA FOR SOURCE-LINE 1821
 5172 00000E88 00000000                   DATA FOR SOURCE-LINE 1827
 5173 00000E8C 0000FF00                   DATA FOR SOURCE-LINE 1832
 5174 00000E90 00000000                   DATA FOR SOURCE-LINE 1849
 5175                                     ***** END-POOL *****
 5176 00000E94                   1861     _CHG3_C80:
 5177 00000E94 9002              1862             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5178                            1863     
 5179 00000E96                   1864     _SEQ_CHG3_EX:
 5180                            1865             SUB_END
 5181                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5182 00000E96 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5183                            1866             M_RTS                                   ; NORMAL END
 5184 00000E98 000B                   M           RTS                             ;RTSの後ろの
 5185 00000E9A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5186                            1867     
 5187                            1868     ;       *******************************************
 5188                            1869     ;       *****   BIT STORE CODE CHANGE ROUTINE   ***
 5189                            1870     ;       *******************************************
 5190                                     ***** BEGIN-POOL *****
 5191 00000E9C FF00                       DATA FOR SOURCE-LINE 1862
 5192                                     ***** END-POOL *****
 5193 00000E9E                   1871     _ST_CHG:                                        ; 00001010B     A
 5194                            1872             SUB_START
 5195 00000E9E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5196                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5197                            1873     
 5198                            1874     ;       ************************
 5199                            1875     ;       *** MEM CODE処理追加 ***
 5200                            1876     ;       ************************
 5201 00000EA0 D11E              1877             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5202 00000EA2 4B08              1878             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5203 00000EA4 31BC              1879             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5204 00000EA6 6912              1880             MOV.L   @R1,R9                          ;
 5205 00000EA8 4800              1881             SHLL    R8                              ; MEM ADR * 2
 5206 00000EAA 389C              1882             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5207                            1883     
 5208                            1884     ;       ************************
 5209                            1885     ;       *** BIT CODE処理追加 ***
 5210                            1886     ;       ************************
 5211 00000EAC D11C              1887             MOV.L   #H'0008,R1                      ;
 5212 00000EAE 3A13              1888             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5213 00000EB0 8901              1889             BT      _SEQ_RUN_CHG4_BIT_H             ; R10>=R0 JUMP
 5214 00000EB2 D11C              1890             MOV.L   #H'0001,R1                      ;
 5215 00000EB4 381C              1891             ADD     R1,R8                           ; MEM ADR L + 1
 5216                            1892     
 5217 00000EB6                   1893     _SEQ_RUN_CHG4_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5218                            1894     
 5219                            1895     ;       ****************************
 5220                            1896     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5221                            1897     ;       ****************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    53
PROGRAM NAME =

 5222 00000EB6 D11C              1898             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5223 00000EB8 31BC              1899             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5224 00000EBA 6B12              1900             MOV.L   @R1,R11                         ;
 5225 00000EBC 39BC              1901             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5226 00000EBE 3893              1902             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5227 00000EC0 8940              1903             BT      _CHG4_C80                       ; R8 >= R9 JUMP
 5228                            1904     
 5229 00000EC2 6983              1905             MOV.L   R8,R9                           ;
 5230 00000EC4 6888              1906             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5231 00000EC6 688C              1907             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5232 00000EC8 699C              1908             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5233                            1909     
 5234 00000ECA D118              1910             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5235 00000ECC 3813              1911             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5236 00000ECE 8939              1912             BT      _CHG4_C80                       ; IF ADR >= 127 THEN JUMP
 5237                            1913     
 5238 00000ED0 D017              1914             MOV.L   #(_ST_CODE_END - _ST_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5239 00000ED2 D318              1915             MOV.L   #_ST_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5240 00000ED4 64D3              1916             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5241                            1917     
 5242                            1918             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5243 00000ED6 D118                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5244 00000ED8 410B                   M           JSR     @R1                     ;
 5245 00000EDA 0009                   M           NOP                                     ;
 5246                            1919                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5247                            1920     ;       *** ADR SET ***
 5248 00000EDC 7400              1921             ADD     #(ST_ADR - _ST_CODE),R4         ;
 5249 00000EDE 6141              1922             MOV.W   @R4,R1                          ;
 5250 00000EE0 D016              1923             MOV.L   #H'FF00,R0                      ;
 5251 00000EE2 2109              1924             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5252                            1925     ;       SHLL    R8                              ; ADR * 2
 5253 00000EE4 218B              1926             OR      R8,R1                           ;
 5254 00000EE6 2411              1927             MOV.W   R1,@R4                          ; RAM ADR SET
 5255                            1928     
 5256                            1929     ;       *** OFFSET SET ***
 5257 00000EE8 7400              1930             ADD     #(ST_OFS - ST_ADR),R4           ;
 5258 00000EEA 6141              1931             MOV.W   @R4,R1                          ;
 5259 00000EEC 2109              1932             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5260                            1933     ;       SHLL    R9                              ; OFFSET * 2
 5261 00000EEE 219B              1934             OR      R9,R1                           ;
 5262 00000EF0 2411              1935             MOV.W   R1,@R4                          ; RAM ADR SET
 5263                            1936     
 5264                            1937     ;       *** BIT SET ***
 5265 00000EF2 7400              1938             ADD     #(STCD_SETBIT - ST_OFS),R4      ;
 5266 00000EF4 6141              1939             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5267 00000EF6 D212              1940             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5268 00000EF8 4A00              1941             SHLL    R10                             ; * 2(word命令のため2倍する)
 5269 00000EFA 32AC              1942             ADD     R10,R2                          ;
 5270 00000EFC 6A21              1943             MOV.W   @R2,R10                         ; BIT CODE値格納
 5271                            1944     ;;;     MOV.L   #H'FF00,R0                      ;
 5272 00000EFE 2109              1945             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5273 00000F00 21AB              1946             OR      R10,R1                          ;
 5274 00000F02 2411              1947             MOV.W   R1,@R4                          ; BIT CODEを書換
 5275                            1948     
 5276                            1949     ;       *** BIT CLR ***
 5277 00000F04 7400              1950             ADD     #(STCD_CLRBIT - STCD_SETBIT),R4 ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    54
PROGRAM NAME =

 5278 00000F06 6141              1951             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5279 00000F08 62A7              1952             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5280                            1953     ;;;     MOV.L   #H'FF00,R0                      ;
 5281 00000F0A 2109              1954             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5282 00000F0C 622C              1955             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5283 00000F0E 212B              1956             OR      R2,R1                           ;
 5284 00000F10 2411              1957             MOV.W   R1,@R4                          ; BIT CODEを書換
 5285                            1958     
 5286                            1959     
 5287 00000F12 9001              1960             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5288                            1961             M_BRA   _SEQ_CHG4_EX                    ;
 5289 00000F14 A017                   M           BRA     _SEQ_CHG4_EX
 5290 00000F16 0009                   M           NOP
 5291                            1962     ;
 5292                                     ***** BEGIN-POOL *****
 5293 00000F18 0000                       DATA FOR SOURCE-LINE 1960
 5294 00000F1A 0000                       ALIGNMENT CODE
 5295 00000F1C 00000000                   DATA FOR SOURCE-LINE 1877
 5296 00000F20 00000008                   DATA FOR SOURCE-LINE 1887
 5297 00000F24 00000001                   DATA FOR SOURCE-LINE 1890
 5298 00000F28 00000000                   DATA FOR SOURCE-LINE 1898
 5299 00000F2C 00000C00                   DATA FOR SOURCE-LINE 1910
 5300 00000F30 00000000                   DATA FOR SOURCE-LINE 1914
 5301 00000F34 00000000                   DATA FOR SOURCE-LINE 1915
 5302 00000F38 00000000                   DATA FOR SOURCE-LINE 1918
 5303 00000F3C 0000FF00                   DATA FOR SOURCE-LINE 1923
 5304 00000F40 00000000                   DATA FOR SOURCE-LINE 1940
 5305                                     ***** END-POOL *****
 5306 00000F44                   1963     _CHG4_C80:
 5307 00000F44 9002              1964             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5308                            1965     
 5309 00000F46                   1966     _SEQ_CHG4_EX:
 5310                            1967             SUB_END
 5311                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5312 00000F46 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5313                            1968             M_RTS
 5314 00000F48 000B                   M           RTS                             ;RTSの後ろの
 5315 00000F4A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5316                            1969     
 5317                            1970     ;       ***********************************
 5318                            1971     ;       *****   SET CODE CHANGE ROUTINE ***
 5319                            1972     ;       ***********************************
 5320                                     ***** BEGIN-POOL *****
 5321 00000F4C FF00                       DATA FOR SOURCE-LINE 1964
 5322                                     ***** END-POOL *****
 5323 00000F4E                   1973     _SET_CHG:                                       ; 00001110B     E
 5324                            1974             SUB_START
 5325 00000F4E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5326                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5327                            1975     
 5328                            1976     ;       ************************
 5329                            1977     ;       *** MEM CODE処理追加 ***
 5330                            1978     ;       ************************
 5331 00000F50 D11A              1979             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5332 00000F52 4B08              1980             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5333 00000F54 31BC              1981             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5334 00000F56 6912              1982             MOV.L   @R1,R9                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    55
PROGRAM NAME =

 5335 00000F58 4800              1983             SHLL    R8                              ; MEM ADR * 2
 5336 00000F5A 389C              1984             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5337                            1985     
 5338                            1986     ;       ************************
 5339                            1987     ;       *** BIT CODE処理追加 ***
 5340                            1988     ;       ************************
 5341 00000F5C D118              1989             MOV.L   #H'0008,R1                      ;
 5342 00000F5E 3A13              1990             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5343 00000F60 8901              1991             BT      _SEQ_RUN_CHG5_BIT_H             ; R10>=R0 JUMP
 5344 00000F62 D118              1992             MOV.L   #H'0001,R1                      ;
 5345 00000F64 381C              1993             ADD     R1,R8                           ; MEM ADR L + 1
 5346                            1994     
 5347 00000F66                   1995     _SEQ_RUN_CHG5_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5348                            1996     
 5349                            1997     ;       ****************************
 5350                            1998     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5351                            1999     ;       ****************************
 5352 00000F66 D118              2000             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5353 00000F68 31BC              2001             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5354 00000F6A 6B12              2002             MOV.L   @R1,R11                         ;
 5355 00000F6C 39BC              2003             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5356 00000F6E 3893              2004             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5357 00000F70 8938              2005             BT      _CHG5_C80                       ; R8 >= R9 JUMP
 5358                            2006     
 5359 00000F72 6983              2007             MOV.L   R8,R9                           ;
 5360 00000F74 6888              2008             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5361 00000F76 688C              2009             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5362 00000F78 699C              2010             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5363                            2011     
 5364 00000F7A D114              2012             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5365 00000F7C 3813              2013             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5366 00000F7E 8931              2014             BT      _CHG5_C80                       ; IF ADR >= 127 THEN JUMP
 5367                            2015     
 5368 00000F80 D013              2016             MOV.L   #(_SET_CODE_END - _SET_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5369 00000F82 D314              2017             MOV.L   #_SET_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5370 00000F84 64D3              2018             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5371                            2019     
 5372                            2020             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5373 00000F86 D114                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5374 00000F88 410B                   M           JSR     @R1                     ;
 5375 00000F8A 0009                   M           NOP                                     ;
 5376                            2021                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5377                            2022     ;       *** ADR SET ***
 5378 00000F8C 7400              2023             ADD     #(SET_ADR - _SET_CODE),R4       ;
 5379 00000F8E 6141              2024             MOV.W   @R4,R1                          ;
 5380 00000F90 D012              2025             MOV.L   #H'FF00,R0                      ;
 5381 00000F92 2109              2026             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5382                            2027     ;       SHLL    R8                              ; ADR * 2
 5383 00000F94 218B              2028             OR      R8,R1                           ;
 5384 00000F96 2411              2029             MOV.W   R1,@R4                          ; RAM ADR SET
 5385                            2030     
 5386                            2031     ;       *** OFFSET SET ***
 5387 00000F98 7400              2032             ADD     #(SET_OFS - SET_ADR),R4         ;
 5388 00000F9A 6141              2033             MOV.W   @R4,R1                          ;
 5389 00000F9C 2109              2034             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5390                            2035     ;       SHLL    R9                              ; OFFSET * 2
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    56
PROGRAM NAME =

 5391 00000F9E 219B              2036             OR      R9,R1                           ;
 5392 00000FA0 2411              2037             MOV.W   R1,@R4                          ; RAM ADR SET
 5393                            2038     
 5394                            2039     ;       *** BIT SET ***
 5395 00000FA2 7400              2040             ADD     #(SETCD_SETBIT - SET_OFS),R4    ;
 5396 00000FA4 6141              2041             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5397 00000FA6 D20E              2042             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5398 00000FA8 4A00              2043             SHLL    R10                             ; * 2(word命令のため2倍する)
 5399 00000FAA 32AC              2044             ADD     R10,R2                          ;
 5400 00000FAC 6A21              2045             MOV.W   @R2,R10                         ; BIT CODE値格納
 5401                            2046     ;;;     MOV.L   #H'FF00,R0                      ;
 5402 00000FAE 2109              2047             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5403 00000FB0 21AB              2048             OR      R10,R1                          ;
 5404 00000FB2 2411              2049             MOV.W   R1,@R4                          ; BIT CODEを書換
 5405                            2050     
 5406 00000FB4 9001              2051             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5407                            2052             M_BRA   _SEQ_CHG5_EX                    ;
 5408 00000FB6 A016                   M           BRA     _SEQ_CHG5_EX
 5409 00000FB8 0009                   M           NOP
 5410                            2053     ;
 5411                                     ***** BEGIN-POOL *****
 5412 00000FBA 0000                       DATA FOR SOURCE-LINE 2051
 5413 00000FBC 00000000                   DATA FOR SOURCE-LINE 1979
 5414 00000FC0 00000008                   DATA FOR SOURCE-LINE 1989
 5415 00000FC4 00000001                   DATA FOR SOURCE-LINE 1992
 5416 00000FC8 00000000                   DATA FOR SOURCE-LINE 2000
 5417 00000FCC 00000C00                   DATA FOR SOURCE-LINE 2012
 5418 00000FD0 00000000                   DATA FOR SOURCE-LINE 2016
 5419 00000FD4 00000000                   DATA FOR SOURCE-LINE 2017
 5420 00000FD8 00000000                   DATA FOR SOURCE-LINE 2020
 5421 00000FDC 0000FF00                   DATA FOR SOURCE-LINE 2025
 5422 00000FE0 00000000                   DATA FOR SOURCE-LINE 2042
 5423                                     ***** END-POOL *****
 5424 00000FE4                   2054     _CHG5_C80:
 5425 00000FE4 9002              2055             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5426                            2056     
 5427 00000FE6                   2057     _SEQ_CHG5_EX:
 5428                            2058             SUB_END
 5429                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5430 00000FE6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5431                            2059             M_RTS
 5432 00000FE8 000B                   M           RTS                             ;RTSの後ろの
 5433 00000FEA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5434                            2060     
 5435                            2061     ;       ***********************************
 5436                            2062     ;       *****   RST CODE CHANGE ROUTINE ***
 5437                            2063     ;       ***********************************
 5438                                     ***** BEGIN-POOL *****
 5439 00000FEC FF00                       DATA FOR SOURCE-LINE 2055
 5440                                     ***** END-POOL *****
 5441 00000FEE                   2064     _RST_CHG:                                       ; 00001111B     F
 5442                            2065             SUB_START
 5443 00000FEE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5444                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5445                            2066     
 5446                            2067     ;       ************************
 5447                            2068     ;       *** MEM CODE処理追加 ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    57
PROGRAM NAME =

 5448                            2069     ;       ************************
 5449 00000FF0 D11B              2070             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5450 00000FF2 4B08              2071             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5451 00000FF4 31BC              2072             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5452 00000FF6 6912              2073             MOV.L   @R1,R9                          ;
 5453 00000FF8 4800              2074             SHLL    R8                              ; MEM ADR * 2
 5454 00000FFA 389C              2075             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5455                            2076     
 5456                            2077     ;       ************************
 5457                            2078     ;       *** BIT CODE処理追加 ***
 5458                            2079     ;       ************************
 5459 00000FFC D119              2080             MOV.L   #H'0008,R1                      ;
 5460 00000FFE 3A13              2081             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5461 00001000 8901              2082             BT      _SEQ_RUN_CHG6_BIT_H             ; R10>=R0 JUMP
 5462 00001002 D119              2083             MOV.L   #H'0001,R1                      ;
 5463 00001004 381C              2084             ADD     R1,R8                           ; MEM ADR L + 1
 5464                            2085     
 5465 00001006                   2086     _SEQ_RUN_CHG6_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5466                            2087     
 5467                            2088     ;       ****************************
 5468                            2089     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5469                            2090     ;       ****************************
 5470 00001006 D119              2091             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5471 00001008 31BC              2092             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5472 0000100A 6B12              2093             MOV.L   @R1,R11                         ;
 5473 0000100C 39BC              2094             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5474 0000100E 3893              2095             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5475 00001010 893A              2096             BT      _CHG6_C80                       ; R8 >= R9 JUMP
 5476                            2097     
 5477 00001012 6983              2098             MOV.L   R8,R9                           ;
 5478 00001014 6888              2099             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5479 00001016 688C              2100             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5480 00001018 699C              2101             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5481                            2102     
 5482 0000101A D115              2103             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5483 0000101C 3813              2104             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5484 0000101E 8933              2105             BT      _CHG6_C80                       ; IF ADR >= 127 THEN JUMP
 5485                            2106     
 5486 00001020 D014              2107             MOV.L   #(_RST_CODE_END - _RST_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5487 00001022 D315              2108             MOV.L   #_RST_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5488 00001024 64D3              2109             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5489                            2110     
 5490                            2111             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5491 00001026 D115                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5492 00001028 410B                   M           JSR     @R1                     ;
 5493 0000102A 0009                   M           NOP                                     ;
 5494                            2112                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5495                            2113     ;       *** ADR SET ***
 5496 0000102C 7400              2114             ADD     #(RST_ADR - _RST_CODE),R4       ;
 5497 0000102E 6141              2115             MOV.W   @R4,R1                          ;
 5498 00001030 D013              2116             MOV.L   #H'FF00,R0                      ;
 5499 00001032 2109              2117             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5500                            2118     ;       SHLL    R8                              ; ADR * 2
 5501 00001034 218B              2119             OR      R8,R1                           ;
 5502 00001036 2411              2120             MOV.W   R1,@R4                          ; RAM ADR SET
 5503                            2121     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    58
PROGRAM NAME =

 5504                            2122     ;       *** OFFSET SET ***
 5505 00001038 7400              2123             ADD     #(RST_OFS - RST_ADR),R4         ;
 5506 0000103A 6141              2124             MOV.W   @R4,R1                          ;
 5507 0000103C 2109              2125             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5508                            2126     ;       SHLL    R9                              ; OFFSET * 2
 5509 0000103E 219B              2127             OR      R9,R1                           ;
 5510 00001040 2411              2128             MOV.W   R1,@R4                          ; RAM ADR SET
 5511                            2129     
 5512                            2130     ;       *** BIT CLR ***
 5513 00001042 7400              2131             ADD     #(RSTCD_SETBIT - RST_OFS),R4    ;
 5514 00001044 6141              2132             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5515 00001046 D20F              2133             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5516 00001048 4A00              2134             SHLL    R10                             ; * 2(word命令のため2倍する)
 5517 0000104A 32AC              2135             ADD     R10,R2                          ;
 5518 0000104C 6A21              2136             MOV.W   @R2,R10                         ; BIT CODE値格納
 5519 0000104E 62A7              2137             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5520                            2138     ;;;     MOV.L   #H'FF00,R0                      ;
 5521 00001050 2109              2139             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5522 00001052 622C              2140             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5523 00001054 212B              2141             OR      R2,R1                           ;
 5524 00001056 2411              2142             MOV.W   R1,@R4                          ; BIT CODEを書換
 5525                            2143     
 5526 00001058 9001              2144             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5527                            2145             M_BRA   _SEQ_CHG6_EX                    ;
 5528 0000105A A016                   M           BRA     _SEQ_CHG6_EX
 5529 0000105C 0009                   M           NOP
 5530                            2146     ;
 5531                                     ***** BEGIN-POOL *****
 5532 0000105E 0000                       DATA FOR SOURCE-LINE 2144
 5533 00001060 00000000                   DATA FOR SOURCE-LINE 2070
 5534 00001064 00000008                   DATA FOR SOURCE-LINE 2080
 5535 00001068 00000001                   DATA FOR SOURCE-LINE 2083
 5536 0000106C 00000000                   DATA FOR SOURCE-LINE 2091
 5537 00001070 00000C00                   DATA FOR SOURCE-LINE 2103
 5538 00001074 00000000                   DATA FOR SOURCE-LINE 2107
 5539 00001078 00000000                   DATA FOR SOURCE-LINE 2108
 5540 0000107C 00000000                   DATA FOR SOURCE-LINE 2111
 5541 00001080 0000FF00                   DATA FOR SOURCE-LINE 2116
 5542 00001084 00000000                   DATA FOR SOURCE-LINE 2133
 5543                                     ***** END-POOL *****
 5544 00001088                   2147     _CHG6_C80:
 5545 00001088 9002              2148             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5546                            2149     
 5547 0000108A                   2150     _SEQ_CHG6_EX:
 5548                            2151             SUB_END
 5549                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5550 0000108A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5551                            2152             M_RTS
 5552 0000108C 000B                   M           RTS                             ;RTSの後ろの
 5553 0000108E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5554                            2153     
 5555                            2154     ;       ***********************************
 5556                            2155     ;       *****   WSC CODE CHANGE ROUTINE ***
 5557                            2156     ;       ***********************************
 5558                                     ***** BEGIN-POOL *****
 5559 00001090 FF00                       DATA FOR SOURCE-LINE 2148
 5560                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    59
PROGRAM NAME =

 5561 00001092                   2157     _WSC_CHG:                                       ; 00001100B     C
 5562                            2158             SUB_START
 5563 00001092 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5564                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5565                            2159     
 5566                            2160     ;       ************************
 5567                            2161     ;       *** MEM CODE処理追加 ***
 5568                            2162     ;       ************************
 5569 00001094 D116              2163             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5570 00001096 4B08              2164             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5571 00001098 31BC              2165             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5572 0000109A 6912              2166             MOV.L   @R1,R9                          ;
 5573 0000109C 4800              2167             SHLL    R8                              ; MEM ADR * 2
 5574 0000109E 389C              2168             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5575                            2169     
 5576                            2170     ;       ************************
 5577                            2171     ;       *** BIT CODE処理追加 ***
 5578                            2172     ;       ************************
 5579                            2173     ;;;     MOV.L   #H'0008,R1                      ;
 5580                            2174     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5581                            2175     ;;;     BT      _SEQ_RUN_CHG7_BIT_H             ; R10>=R0 JUMP
 5582                            2176     ;;;     MOV.L   #H'0001,R1                      ;
 5583                            2177     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5584                            2178     
 5585                            2179     ;;;_SEQ_RUN_CHG7_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5586                            2180     
 5587                            2181     ;       ****************************
 5588                            2182     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5589                            2183     ;       ****************************
 5590 000010A0 D114              2184             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5591 000010A2 31BC              2185             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5592 000010A4 6B12              2186             MOV.L   @R1,R11                         ;
 5593 000010A6 39BC              2187             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5594 000010A8 3893              2188             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5595 000010AA 892F              2189             BT      _CHG7_C80                       ; R8 >= R9 JUMP
 5596                            2190     
 5597 000010AC 6983              2191             MOV.L   R8,R9                           ;
 5598 000010AE 6888              2192             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5599 000010B0 688C              2193             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5600 000010B2 699C              2194             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5601                            2195     
 5602 000010B4 D110              2196             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5603 000010B6 3813              2197             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5604 000010B8 8928              2198             BT      _CHG7_C80                       ; IF ADR >= 127 THEN JUMP
 5605                            2199     
 5606 000010BA D010              2200             MOV.L   #(_WSC_CODE_END - _WSC_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5607 000010BC D310              2201             MOV.L   #_WSC_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5608 000010BE 64D3              2202             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5609                            2203     
 5610                            2204             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5611 000010C0 D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5612 000010C2 410B                   M           JSR     @R1                     ;
 5613 000010C4 0009                   M           NOP                                     ;
 5614                            2205                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5615                            2206     ;       *** ADR SET ***
 5616 000010C6 7400              2207             ADD     #(WSC_ADR - _WSC_CODE),R4       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    60
PROGRAM NAME =

 5617 000010C8 6141              2208             MOV.W   @R4,R1                          ;
 5618 000010CA D00F              2209             MOV.L   #H'FF00,R0                      ;
 5619 000010CC 2109              2210             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5620                            2211     ;       SHLL    R8                              ; ADR * 2
 5621 000010CE 218B              2212             OR      R8,R1                           ;
 5622 000010D0 2411              2213             MOV.W   R1,@R4                          ; RAM ADR SET
 5623                            2214     
 5624                            2215     ;       *** OFFSET SET ***
 5625 000010D2 7400              2216             ADD     #(WSC_OFS - WSC_ADR),R4         ;
 5626 000010D4 6141              2217             MOV.W   @R4,R1                          ;
 5627 000010D6 2109              2218             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5628                            2219     ;       SHLL    R9                              ; OFFSET * 2
 5629 000010D8 219B              2220             OR      R9,R1                           ;
 5630 000010DA 2411              2221             MOV.W   R1,@R4                          ; RAM ADR SET
 5631                            2222     
 5632                            2223     ;       *** BIT SET ***
 5633 000010DC 7400              2224             ADD     #(WSC_BTD - WSC_OFS),R4         ;
 5634 000010DE 6141              2225             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5635                            2226     ;;;     MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5636                            2227     ;;;     SHLL    R10                             ; * 2(word命令のため2倍する)
 5637                            2228     ;;;     ADD     R10,R2                          ;
 5638                            2229     ;;;     MOV.W   @R2,R10                         ; BIT CODE値格納
 5639                            2230     ;;;     MOV.L   #H'FF00,R0                      ;
 5640 000010E0 2109              2231             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5641 000010E2 21AB              2232             OR      R10,R1                          ;
 5642 000010E4 2411              2233             MOV.W   R1,@R4                          ; BIT CODEを書換
 5643                            2234     
 5644 000010E6 9001              2235             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5645                            2236             M_BRA   _SEQ_CHG7_EX                    ;
 5646 000010E8 A011                   M           BRA     _SEQ_CHG7_EX
 5647 000010EA 0009                   M           NOP
 5648                            2237     ;
 5649                                     ***** BEGIN-POOL *****
 5650 000010EC 0000                       DATA FOR SOURCE-LINE 2235
 5651 000010EE 0000                       ALIGNMENT CODE
 5652 000010F0 00000000                   DATA FOR SOURCE-LINE 2163
 5653 000010F4 00000000                   DATA FOR SOURCE-LINE 2184
 5654 000010F8 00000C00                   DATA FOR SOURCE-LINE 2196
 5655 000010FC 00000000                   DATA FOR SOURCE-LINE 2200
 5656 00001100 00000000                   DATA FOR SOURCE-LINE 2201
 5657 00001104 00000000                   DATA FOR SOURCE-LINE 2204
 5658 00001108 0000FF00                   DATA FOR SOURCE-LINE 2209
 5659                                     ***** END-POOL *****
 5660 0000110C                   2238     _CHG7_C80:
 5661 0000110C 9002              2239             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5662                            2240     
 5663 0000110E                   2241     _SEQ_CHG7_EX:
 5664                            2242             SUB_END
 5665                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5666 0000110E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5667                            2243             M_RTS
 5668 00001110 000B                   M           RTS                             ;RTSの後ろの
 5669 00001112 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5670                            2244     
 5671                            2245     ;       *******************************************
 5672                            2246     ;       *****   WTMR CODE CHANGE ROUTINE        ***
 5673                            2247     ;       *******************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    61
PROGRAM NAME =

 5674                                     ***** BEGIN-POOL *****
 5675 00001114 FF00                       DATA FOR SOURCE-LINE 2239
 5676                                     ***** END-POOL *****
 5677 00001116                   2248     _WTMR_CHG:                                      ; 00010000B     10
 5678                            2249             SUB_START
 5679 00001116 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5680                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5681                            2250     
 5682                            2251     ;       ************************
 5683                            2252     ;       *** MEM CODE処理追加 ***
 5684                            2253     ;       ************************
 5685                            2254     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5686                            2255     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5687                            2256     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5688                            2257     ;;;     MOV.L   @R1,R9                          ;
 5689                            2258     ;;;     SHLL    R8                              ; MEM ADR * 2
 5690                            2259     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5691                            2260     
 5692                            2261     ;       ************************
 5693                            2262     ;       *** BIT CODE処理追加 ***
 5694                            2263     ;       ************************
 5695                            2264     ;;;     MOV.L   #H'0008,R1                      ;
 5696                            2265     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5697                            2266     ;;;     BT      _SEQ_RUN_CHG8_BIT_H             ; R10>=R0 JUMP
 5698                            2267     ;;;     MOV.L   #H'0001,R1                      ;
 5699                            2268     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5700                            2269     
 5701                            2270     ;;;_SEQ_RUN_CHG8_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5702                            2271     
 5703                            2272     ;       ****************************
 5704                            2273     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5705                            2274     ;       ****************************
 5706                            2275     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5707                            2276     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5708                            2277     ;;;     MOV.L   @R1,R11                         ;
 5709                            2278     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5710                            2279     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5711                            2280     ;;;     BT      _CHG8_C80                       ; R8 >= R9 JUMP
 5712                            2281     
 5713 00001118 6983              2282             MOV.L   R8,R9                           ;
 5714 0000111A 6888              2283             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5715 0000111C 688C              2284             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5716 0000111E 699C              2285             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5717                            2286     
 5718 00001120 D10F              2287             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5719 00001122 3813              2288             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5720 00001124 8956              2289             BT      _CHG8_C80                       ; IF ADR >= 127 THEN JUMP
 5721                            2290     
 5722 00001126 D00F              2291             MOV.L   #(_WTMR_CODE_END - _WTMR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5723 00001128 D30F              2292             MOV.L   #_WTMR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5724 0000112A 64D3              2293             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5725                            2294     
 5726                            2295             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5727 0000112C D10F                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5728 0000112E 410B                   M           JSR     @R1                     ;
 5729 00001130 0009                   M           NOP                                     ;
 5730                            2296                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    62
PROGRAM NAME =

                                          入れ直す。
 5731                            2297     ;       *** ADR SET ***
 5732 00001132 7400              2298             ADD     #(WTMR_UNH - _WTMR_CODE),R4     ;
 5733 00001134 6141              2299             MOV.W   @R4,R1                          ;
 5734 00001136 D00E              2300             MOV.L   #H'FF00,R0                      ;
 5735 00001138 2109              2301             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5736                            2302     ;       SHLL    R8                              ; ADR * 2
 5737 0000113A 218B              2303             OR      R8,R1                           ;
 5738 0000113C 2411              2304             MOV.W   R1,@R4                          ; RAM ADR SET
 5739                            2305     
 5740                            2306     ;       *** OFFSET SET ***
 5741 0000113E 7400              2307             ADD     #(WTMR_UNL - WTMR_UNH),R4       ;
 5742 00001140 6141              2308             MOV.W   @R4,R1                          ;
 5743 00001142 2109              2309             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5744                            2310     ;       SHLL    R9                              ; OFFSET * 2
 5745 00001144 219B              2311             OR      R9,R1                           ;
 5746 00001146 2411              2312             MOV.W   R1,@R4                          ; RAM ADR SET
 5747                            2313     
 5748                            2314     ;       *** BIT SET ***
 5749 00001148 7400              2315             ADD     #(WTMR_DGT - WTMR_UNL),R4       ;
 5750 0000114A 6141              2316             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5751 0000114C 2109              2317             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5752 0000114E 6888              2318             SWAP.B  R8,R8                           ;
 5753 00001150 289B              2319             OR      R9,R8                           ;
 5754 00001152 6083              2320             MOV.L   R8,R0                           ;
 5755 00001154                   2321     _SEQ_TIM_DGT_SEL1
 5756 00001154 D807              2322             MOV.L   #D'255,R8                       ;
 5757 00001156 3086              2323             CMP/HI  R8,R0                           ;
 5758 00001158 8910              2324             BT      _SEQ_TIM_DGT_SEL2               ;
 5759 0000115A D907              2325             MOV.L   #D'0001,R9                      ;
 5760                            2326             M_BRA   _SEQ_TIM_DGT_END                ;
 5761 0000115C A02F                   M           BRA     _SEQ_TIM_DGT_END
 5762 0000115E 0009                   M           NOP
 5763                                     ***** BEGIN-POOL *****
 5764 00001160 00000C00                   DATA FOR SOURCE-LINE 2287
 5765 00001164 00000000                   DATA FOR SOURCE-LINE 2291
 5766 00001168 00000000                   DATA FOR SOURCE-LINE 2292
 5767 0000116C 00000000                   DATA FOR SOURCE-LINE 2295
 5768 00001170 0000FF00                   DATA FOR SOURCE-LINE 2300
 5769 00001174 000000FF                   DATA FOR SOURCE-LINE 2322
 5770 00001178 00000001                   DATA FOR SOURCE-LINE 2325
 5771                                     ***** END-POOL *****
 5772 0000117C                   2327     _SEQ_TIM_DGT_SEL2
 5773 0000117C D802              2328             MOV.L   #D'383,R8                       ;
 5774 0000117E 3086              2329             CMP/HI  R8,R0                           ;
 5775 00001180 8906              2330             BT      _SEQ_TIM_DGT_SEL3               ;
 5776 00001182 D902              2331             MOV.L   #D'0002,R9                      ;
 5777                            2332             M_BRA   _SEQ_TIM_DGT_END                ;
 5778 00001184 A01B                   M           BRA     _SEQ_TIM_DGT_END
 5779 00001186 0009                   M           NOP
 5780                                     ***** BEGIN-POOL *****
 5781 00001188 0000017F                   DATA FOR SOURCE-LINE 2328
 5782 0000118C 00000002                   DATA FOR SOURCE-LINE 2331
 5783                                     ***** END-POOL *****
 5784 00001190                   2333     _SEQ_TIM_DGT_SEL3
 5785 00001190 D802              2334             MOV.L   #D'415,R8                       ;
 5786 00001192 3086              2335             CMP/HI  R8,R0                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    63
PROGRAM NAME =

 5787 00001194 8906              2336             BT      _SEQ_TIM_DGT_SEL0               ;
 5788 00001196 D902              2337             MOV.L   #D'0003,R9                      ;
 5789                            2338             M_BRA   _SEQ_TIM_DGT_END                ;
 5790 00001198 A011                   M           BRA     _SEQ_TIM_DGT_END
 5791 0000119A 0009                   M           NOP
 5792                                     ***** BEGIN-POOL *****
 5793 0000119C 0000019F                   DATA FOR SOURCE-LINE 2334
 5794 000011A0 00000003                   DATA FOR SOURCE-LINE 2337
 5795                                     ***** END-POOL *****
 5796 000011A4                   2339     _SEQ_TIM_DGT_SEL0
 5797 000011A4 D802              2340             MOV.L   #D'479,R8                       ;
 5798 000011A6 3086              2341             CMP/HI  R8,R0                           ;
 5799 000011A8 8906              2342             BT      _SEQ_TIM_DGT_SEL5               ;
 5800 000011AA D902              2343             MOV.L   #D'0000,R9                      ;
 5801                            2344             M_BRA   _SEQ_TIM_DGT_END                ;
 5802 000011AC A007                   M           BRA     _SEQ_TIM_DGT_END
 5803 000011AE 0009                   M           NOP
 5804                                     ***** BEGIN-POOL *****
 5805 000011B0 000001DF                   DATA FOR SOURCE-LINE 2340
 5806 000011B4 00000000                   DATA FOR SOURCE-LINE 2343
 5807                                     ***** END-POOL *****
 5808 000011B8                   2345     _SEQ_TIM_DGT_SEL5
 5809 000011B8 D804              2346             MOV.L   #D'511,R8                       ;
 5810 000011BA 3086              2347             CMP/HI  R8,R0                           ;
 5811 000011BC D904              2348             MOV.L   #D'0005,R9                      ;
 5812 000011BE                   2349     _SEQ_TIM_DGT_END
 5813 000011BE 219B              2350             OR      R9,R1                           ;
 5814 000011C0 2411              2351             MOV.W   R1,@R4                          ; BIT CODEを書換
 5815                            2352     
 5816 000011C2 9001              2353             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5817                            2354             M_BRA   _SEQ_CHG8_EX                    ;
 5818 000011C4 A007                   M           BRA     _SEQ_CHG8_EX
 5819 000011C6 0009                   M           NOP
 5820                            2355     ;
 5821                                     ***** BEGIN-POOL *****
 5822 000011C8 0000                       DATA FOR SOURCE-LINE 2353
 5823 000011CA 0000                       ALIGNMENT CODE
 5824 000011CC 000001FF                   DATA FOR SOURCE-LINE 2346
 5825 000011D0 00000005                   DATA FOR SOURCE-LINE 2348
 5826                                     ***** END-POOL *****
 5827 000011D4                   2356     _CHG8_C80:
 5828 000011D4 9002              2357             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5829                            2358     
 5830 000011D6                   2359     _SEQ_CHG8_EX:
 5831                            2360             SUB_END
 5832                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5833 000011D6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5834                            2361             M_RTS
 5835 000011D8 000B                   M           RTS                             ;RTSの後ろの
 5836 000011DA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5837                            2362     
 5838                            2363     ;       *******************************************
 5839                            2364     ;       *****   WCTR CODE CHANGE ROUTINE        ***
 5840                            2365     ;       *******************************************
 5841                                     ***** BEGIN-POOL *****
 5842 000011DC FF00                       DATA FOR SOURCE-LINE 2357
 5843                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    64
PROGRAM NAME =

 5844 000011DE                   2366     _WCTR_CHG:                                      ; 00010010B     12
 5845                            2367             SUB_START
 5846 000011DE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5847                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5848                            2368     
 5849                            2369     ;       ************************
 5850                            2370     ;       *** MEM CODE処理追加 ***
 5851                            2371     ;       ************************
 5852                            2372     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5853                            2373     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5854                            2374     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5855                            2375     ;;;     MOV.L   @R1,R9                          ;
 5856                            2376     ;;;     SHLL    R8                              ; MEM ADR * 2
 5857                            2377     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5858                            2378     
 5859                            2379     ;       ****************************
 5860                            2380     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5861                            2381     ;       ****************************
 5862                            2382     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5863                            2383     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5864                            2384     ;;;     MOV.L   @R1,R11                         ;
 5865                            2385     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5866                            2386     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5867                            2387     ;;;     BT      _CHG9_C80                       ; R8 >= R9 JUMP
 5868                            2388     
 5869 000011E0 6983              2389             MOV.L   R8,R9                           ;
 5870 000011E2 6888              2390             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5871 000011E4 688C              2391             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5872 000011E6 699C              2392             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5873                            2393     
 5874 000011E8 D10B              2394             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5875 000011EA 3813              2395             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5876 000011EC 891E              2396             BT      _CHG9_C80                       ; IF ADR >= 127 THEN JUMP
 5877                            2397     
 5878 000011EE D00B              2398             MOV.L   #(_WCTR_CODE_END - _WCTR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5879 000011F0 D30B              2399             MOV.L   #_WCTR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5880 000011F2 64D3              2400             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5881                            2401     
 5882                            2402             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5883 000011F4 D10B                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5884 000011F6 410B                   M           JSR     @R1                     ;
 5885 000011F8 0009                   M           NOP                                     ;
 5886                            2403                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5887                            2404     
 5888                            2405     ;       *** ADR SET ***
 5889 000011FA 7400              2406             ADD     #(WCTR_UNH - _WCTR_CODE),R4     ;
 5890 000011FC 6141              2407             MOV.W   @R4,R1                          ;
 5891 000011FE D00A              2408             MOV.L   #H'FF00,R0                      ;
 5892 00001200 2109              2409             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5893                            2410     ;       SHLL    R8                              ; ADR * 2
 5894 00001202 218B              2411             OR      R8,R1                           ;
 5895 00001204 2411              2412             MOV.W   R1,@R4                          ; RAM ADR SET
 5896                            2413     
 5897                            2414     ;       *** OFFSET SET ***
 5898 00001206 7400              2415             ADD     #(WCTR_UNL - WCTR_UNH),R4       ;
 5899 00001208 6141              2416             MOV.W   @R4,R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    65
PROGRAM NAME =

 5900 0000120A 2109              2417             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5901                            2418     ;       SHLL    R9                              ; OFFSET * 2
 5902 0000120C 219B              2419             OR      R9,R1                           ;
 5903 0000120E 2411              2420             MOV.W   R1,@R4                          ; RAM ADR SET
 5904                            2421     
 5905 00001210 9001              2422             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5906                            2423             M_BRA   _SEQ_CHG9_EX                    ;
 5907 00001212 A00C                   M           BRA     _SEQ_CHG9_EX
 5908 00001214 0009                   M           NOP
 5909                            2424     ;
 5910                                     ***** BEGIN-POOL *****
 5911 00001216 0000                       DATA FOR SOURCE-LINE 2422
 5912 00001218 00000C00                   DATA FOR SOURCE-LINE 2394
 5913 0000121C 00000000                   DATA FOR SOURCE-LINE 2398
 5914 00001220 00000000                   DATA FOR SOURCE-LINE 2399
 5915 00001224 00000000                   DATA FOR SOURCE-LINE 2402
 5916 00001228 0000FF00                   DATA FOR SOURCE-LINE 2408
 5917                                     ***** END-POOL *****
 5918 0000122C                   2425     _CHG9_C80:
 5919 0000122C 9002              2426             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5920                            2427     
 5921 0000122E                   2428     _SEQ_CHG9_EX:
 5922                            2429             SUB_END
 5923                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5924 0000122E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5925                            2430             M_RTS
 5926 00001230 000B                   M           RTS                             ;RTSの後ろの
 5927 00001232 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5928                            2431     
 5929                            2432     ;       *******************************************
 5930                            2433     ;       *****   DSETLI CODE CHANGE ROUTINE      ***
 5931                            2434     ;       *******************************************
 5932                                     ***** BEGIN-POOL *****
 5933 00001234 FF00                       DATA FOR SOURCE-LINE 2426
 5934                                     ***** END-POOL *****
 5935 00001236                   2435     _DSETLI_CHG:                                            ; 10011011B     9B
 5936                            2436             SUB_START
 5937 00001236 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5938                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5939                            2437     
 5940 00001238 6583              2438             MOV.L   R8,R5                                   ;
 5941 0000123A 6888              2439             SWAP.B  R8,R8                                   ; MEM ADR H ⇔ L
 5942 0000123C 688C              2440             EXTU.B  R8,R8                                   ; R8=MEM ADR(HH)抽出
 5943 0000123E 655C              2441             EXTU.B  R5,R5                                   ; R5=MEM ADR(HL)抽出
 5944                            2442     
 5945 00001240 6693              2443             MOV.L   R9,R6                                   ;
 5946 00001242 6998              2444             SWAP.B  R9,R9                                   ; MEM ADR H ⇔ L
 5947 00001244 699C              2445             EXTU.B  R9,R9                                   ; R9=MEM ADR(LH)抽出
 5948 00001246 666C              2446             EXTU.B  R6,R6                                   ; R11=MEM ADR(LL)抽出
 5949                            2447     
 5950 00001248 D00F              2448             MOV.L   #(_DSETLI_CODE_END - _DSETLI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5951 0000124A D310              2449             MOV.L   #_DSETLI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5952 0000124C 64D3              2450             MOV.L   R13,R4                                  ; SEQ ADR. KEEP
 5953                            2451     
 5954                            2452             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1                  ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5955 0000124E D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5956 00001250 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    66
PROGRAM NAME =

 5957 00001252 0009                   M           NOP                                     ;
 5958                            2453                                                             ; 一括して転送してからﾒﾓﾘのとこだ
                                          けあとで入れ直す。
 5959                            2454     ;       *** DATA HH SET ***
 5960 00001254 7400              2455             ADD     #(DSETLI_DT_HH - _DSETLI_CODE),R4       ;
 5961 00001256 6141              2456             MOV.W   @R4,R1                                  ;
 5962 00001258 D00E              2457             MOV.L   #H'FF00,R0                              ;
 5963 0000125A 2109              2458             AND     R0,R1                                   ; DATA HH のところをｸﾘｱ
 5964 0000125C 218B              2459             OR      R8,R1                                   ;
 5965 0000125E 2411              2460             MOV.W   R1,@R4                                  ; RAM ADR SET
 5966                            2461     
 5967                            2462     ;       *** DATA HL SET ***
 5968 00001260 7400              2463             ADD     #(DSETLI_DT_HL - DSETLI_DT_HH),R4       ;
 5969 00001262 6141              2464             MOV.W   @R4,R1                                  ;
 5970 00001264 2109              2465             AND     R0,R1                                   ; DATA HL のところをｸﾘｱ
 5971 00001266 215B              2466             OR      R5,R1                                   ;
 5972 00001268 2411              2467             MOV.W   R1,@R4                                  ; RAM ADR SET
 5973                            2468     
 5974                            2469     ;       *** DATA LH SET ***
 5975 0000126A 7400              2470             ADD     #(DSETLI_DT_LH - DSETLI_DT_HL),R4       ;
 5976 0000126C 6141              2471             MOV.W   @R4,R1                                  ;
 5977 0000126E 2109              2472             AND     R0,R1                                   ; DATA LH のところをｸﾘｱ
 5978 00001270 219B              2473             OR      R9,R1                                   ;
 5979 00001272 2411              2474             MOV.W   R1,@R4                                  ; RAM ADR SET
 5980                            2475     
 5981                            2476     ;       *** DATA LL SET ***
 5982 00001274 7400              2477             ADD     #(DSETLI_DT_LL - DSETLI_DT_LH),R4       ;
 5983 00001276 6141              2478             MOV.W   @R4,R1                                  ;
 5984 00001278 2109              2479             AND     R0,R1                                   ; DATA LL のところをｸﾘｱ
 5985 0000127A 216B              2480             OR      R6,R1                                   ;
 5986 0000127C 2411              2481             MOV.W   R1,@R4                                  ; RAM ADR SET
 5987                            2482     
 5988 0000127E 9001              2483             MOV.W   #_SQ_NML_COD,R0                         ; NORMAL END
 5989                            2484             M_BRA   _SEQ_CHG10_EX                           ;
 5990 00001280 A00A                   M           BRA     _SEQ_CHG10_EX
 5991 00001282 0009                   M           NOP
 5992                            2485     
 5993                                     ***** BEGIN-POOL *****
 5994 00001284 0000                       DATA FOR SOURCE-LINE 2483
 5995 00001286 0000                       ALIGNMENT CODE
 5996 00001288 00000000                   DATA FOR SOURCE-LINE 2448
 5997 0000128C 00000000                   DATA FOR SOURCE-LINE 2449
 5998 00001290 00000000                   DATA FOR SOURCE-LINE 2452
 5999 00001294 0000FF00                   DATA FOR SOURCE-LINE 2457
 6000                                     ***** END-POOL *****
 6001 00001298                   2486     _SEQ_CHG10_EX:
 6002                            2487             SUB_END
 6003                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 6004 00001298 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 6005                            2488             M_RTS
 6006 0000129A 000B                   M           RTS                             ;RTSの後ろの
 6007 0000129C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 6008                            2489     
 6009                            2490     ;       ***********************************
 6010                            2491     ;       ***     ｺｰﾄﾞのﾌﾞﾛｯｸ転送         ***
 6011                            2492     ;       ***********************************
 6012                            2493     ;       INPUT   R0,R3,R13
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    67
PROGRAM NAME =

 6013                            2494     ;       USE     R1
 6014                            2495     
 6015 0000129E                   2496     _SEQ_CODE_BLOCK_MV:
 6016                            2497             SUB_START
 6017 0000129E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 6018                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 6019                            2498     
 6020 000012A0                   2499     _SEQ_CODE_BLOCK_LOOP:
 6021 000012A0 2008              2500             TST     R0,R0                           ; COUNTER CHECK
 6022 000012A2 8909              2501             BT      _SEQ_CD_BLOCK_MV_EXIT           ; 0 THEN EXIT
 6023                            2502     
 6024 000012A4 6131              2503             MOV.W   @R3,R1                          ; SEQ_ROM
 6025 000012A6 2D11              2504             MOV.W   R1,@R13                         ; SEQ_RAM
 6026 000012A8 D102              2505             MOV.L   #2,R1                           ;
 6027 000012AA 3018              2506             SUB     R1,R0                           ; COUNTER -2
 6028 000012AC 331C              2507             ADD     R1,R3                           ; ROM ADR. +2
 6029 000012AE 3D1C              2508             ADD     R1,R13                          ; RAM ADR. +2
 6030                            2509             M_BRA   _SEQ_CODE_BLOCK_LOOP            ;
 6031 000012B0 AFF6                   M           BRA     _SEQ_CODE_BLOCK_LOOP
 6032 000012B2 0009                   M           NOP
 6033                            2510     
 6034                                     ***** BEGIN-POOL *****
 6035 000012B4 00000002                   DATA FOR SOURCE-LINE 2505
 6036                                     ***** END-POOL *****
 6037 000012B8                   2511     _SEQ_CD_BLOCK_MV_EXIT:
 6038                            2512     
 6039                            2513             SUB_END
 6040                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 6041 000012B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 6042                            2514             M_RTS
 6043 000012BA 000B                   M           RTS                             ;RTSの後ろの
 6044 000012BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 6045                            2515     
 6046                            2516             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    68

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

ADDL_ADR                                  IMPT 00000000   1943  3962  3963 
ADDL_OFS                                  IMPT 00000000   1944  3963 
ADDWI_DT_LH                               IMPT 00000000   1948  4580  4581 
ADDWI_DT_LL                               IMPT 00000000   1949  4581 
ADDW_ADR                                  IMPT 00000000   1938  3929  3930 
ADDW_OFS                                  IMPT 00000000   1939  3930 
ANDL_ADR                                  IMPT 00000000   1973  4094  4095 
ANDL_OFS                                  IMPT 00000000   1974  4095 
ANDN_ADR                                  IMPT 00000000   1729  4915  4916 
ANDN_BIT                                  IMPT 00000000   1731  4917 
ANDN_OFS                                  IMPT 00000000   1730  4916  4917 
ANDWI_DT_LH                               IMPT 00000000   1978  4646  4647 
ANDWI_DT_LL                               IMPT 00000000   1979  4647 
ANDW_ADR                                  IMPT 00000000   1968  4061  4062 
ANDW_OFS                                  IMPT 00000000   1969  4062 
AND_ADR                                   IMPT 00000000   1723  4881  4882 
AND_BIT                                   IMPT 00000000   1725  4883 
AND_OFS                                   IMPT 00000000   1724  4882  4883 
A_REG                                     REG             2267*
BIT0                                      EQU  00000001     19*
BIT1                                      EQU  00000002     20*
BIT10                                     EQU  00000400     29*
BIT11                                     EQU  00000800     30*
BIT12                                     EQU  00001000     31*
BIT13                                     EQU  00002000     32*
BIT14                                     EQU  00004000     33*
BIT15                                     EQU  00008000     34*
BIT16                                     EQU  00010000     35*
BIT17                                     EQU  00020000     36*
BIT18                                     EQU  00040000     37*
BIT19                                     EQU  00080000     38*
BIT2                                      EQU  00000004     21*
BIT20                                     EQU  00100000     39*
BIT21                                     EQU  00200000     40*
BIT22                                     EQU  00400000     41*
BIT23                                     EQU  00800000     42*
BIT24                                     EQU  01000000     43*
BIT25                                     EQU  02000000     44*
BIT26                                     EQU  04000000     45*
BIT27                                     EQU  08000000     46*
BIT28                                     EQU  10000000     47*
BIT29                                     EQU  20000000     48*
BIT3                                      EQU  00000008     22*
BIT30                                     EQU  40000000     49*
BIT31                                     EQU  80000000     50*
BIT4                                      EQU  00000010     23*
BIT5                                      EQU  00000020     24*
BIT6                                      EQU  00000040     25*
BIT7                                      EQU  00000080     26*
BIT8                                      EQU  00000100     27*
BIT9                                      EQU  00000200     28*
CLR_ADR                                   IMPT 00000000   1801  3344  3345 
CLR_OFS                                   IMPT 00000000   1802  3345 
CTBL_REG                                  REG             2271*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    69

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

DSETLI_DT_HH                              IMPT 00000000   2022  5960  5968 
DSETLI_DT_HL                              IMPT 00000000   2023  5968  5975 
DSETLI_DT_LH                              IMPT 00000000   2024  5975  5982 
DSETLI_DT_LL                              IMPT 00000000   2025  5982 
DSETWI_DT_LH                              IMPT 00000000   1796  4349  4350 
DSETWI_DT_LL                              IMPT 00000000   1797  4350 
DTBL_REG                                  REG             2272*
D_REG                                     REG             2270*
EQL_ADR                                   IMPT 00000000   1853  3542  3543 
EQL_OFS                                   IMPT 00000000   1854  3543 
EQWI_DT_LH                                IMPT 00000000   1858  4382  4383 
EQWI_DT_LL                                IMPT 00000000   1859  4383 
EQW_ADR                                   IMPT 00000000   1848  3509  3510 
EQW_OFS                                   IMPT 00000000   1849  3510 
GEL_ADR                                   IMPT 00000000   1898  3740  3741 
GEL_OFS                                   IMPT 00000000   1899  3741 
GEWI_DT_LH                                IMPT 00000000   1903  4481  4482 
GEWI_DT_LL                                IMPT 00000000   1904  4482 
GEW_ADR                                   IMPT 00000000   1893  3707  3708 
GEW_OFS                                   IMPT 00000000   1894  3708 
GTL_ADR                                   IMPT 00000000   1883  3674  3675 
GTL_OFS                                   IMPT 00000000   1884  3675 
GTWI_DT_LH                                IMPT 00000000   1888  4448  4449 
GTWI_DT_LL                                IMPT 00000000   1889  4449 
GTW_ADR                                   IMPT 00000000   1878  3641  3642 
GTW_OFS                                   IMPT 00000000   1879  3642 
H_BYTE                                    EQU  00000000     86*
LDL_ADR                                   IMPT 00000000   1833  3410  3411 
LDL_OFS                                   IMPT 00000000   1834  3411 
LDN_ADR                                   IMPT 00000000   1717  4847  4848 
LDN_BIT                                   IMPT 00000000   1719  4849 
LDN_OFS                                   IMPT 00000000   1718  4848  4849 
LDW_ADR                                   IMPT 00000000   1828  3377  3378 
LDW_OFS                                   IMPT 00000000   1829  3378 
LD_ADR                                    IMPT 00000000   1711  4813  4814 
LD_BIT                                    IMPT 00000000   1713  4815 
LD_OFS                                    IMPT 00000000   1712  4814  4815 
LEL_ADR                                   IMPT 00000000   1928  3896  3897 
LEL_OFS                                   IMPT 00000000   1929  3897 
LEWI_DT_LH                                IMPT 00000000   1933  4547  4548 
LEWI_DT_LL                                IMPT 00000000   1934  4548 
LEW_ADR                                   IMPT 00000000   1923  3863  3864 
LEW_OFS                                   IMPT 00000000   1924  3864 
LTL_ADR                                   IMPT 00000000   1913  3830  3831 
LTL_OFS                                   IMPT 00000000   1914  3831 
LTWI_DT_LH                                IMPT 00000000   1918  4514  4515 
LTWI_DT_LL                                IMPT 00000000   1919  4515 
LTW_ADR                                   IMPT 00000000   1908  3797  3798 
LTW_OFS                                   IMPT 00000000   1909  3798 
L_BYTE                                    EQU  00000001     85*
M_REG                                     REG             2269*
NBIT0                                     EQU  000000FE     53*
NBIT1                                     EQU  000000FD     54*
NBIT10                                    EQU  0000FBFF     64*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    70

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

NBIT11                                    EQU  0000F7FF     65*
NBIT12                                    EQU  0000EFFF     66*
NBIT13                                    EQU  0000DFFF     67*
NBIT14                                    EQU  0000BFFF     68*
NBIT15                                    EQU  00007FFF     69*
NBIT2                                     EQU  000000FB     55*
NBIT3                                     EQU  000000F7     56*
NBIT4                                     EQU  000000EF     57*
NBIT5                                     EQU  000000DF     58*
NBIT6                                     EQU  000000BF     59*
NBIT7                                     EQU  0000007F     60*
NBIT8                                     EQU  0000FEFF     62*
NBIT9                                     EQU  0000FDFF     63*
NEL_ADR                                   IMPT 00000000   1868  3608  3609 
NEL_OFS                                   IMPT 00000000   1869  3609 
NEWI_DT_LH                                IMPT 00000000   1873  4415  4416 
NEWI_DT_LL                                IMPT 00000000   1874  4416 
NEW_ADR                                   IMPT 00000000   1863  3575  3576 
NEW_OFS                                   IMPT 00000000   1864  3576 
N_REG                                     REG             2268*
ORL_ADR                                   IMPT 00000000   1988  4160  4161 
ORL_OFS                                   IMPT 00000000   1989  4161 
ORN_ADR                                   IMPT 00000000   1741  4983  4984 
ORN_BIT                                   IMPT 00000000   1743  4985 
ORN_OFS                                   IMPT 00000000   1742  4984  4985 
ORWI_DT_LH                                IMPT 00000000   1993  4679  4680 
ORWI_DT_LL                                IMPT 00000000   1994  4680 
ORW_ADR                                   IMPT 00000000   1983  4127  4128 
ORW_OFS                                   IMPT 00000000   1984  4128 
OR_ADR                                    IMPT 00000000   1735  4949  4950 
OR_BIT                                    IMPT 00000000   1737  4951 
OR_OFS                                    IMPT 00000000   1736  4950  4951 
P                                P        SCT  00000000   2286*
PLF_ADR                                   IMPT 00000000   1772  5051  5052 
PLF_BIT                                   IMPT 00000000   1774  5053 
PLF_OFS                                   IMPT 00000000   1773  5052  5053 
PLS_ADR                                   IMPT 00000000   1766  5017  5018 
PLS_BIT                                   IMPT 00000000   1768  5019 
PLS_OFS                                   IMPT 00000000   1767  5018  5019 
R0_REG                                    REG             2276*
R10_REG                                   REG             2282*
R1_REG                                    REG             2277*
R2_REG                                    REG             2278*
R3_REG                                    REG             2279*
R4_REG                                    REG             2280*
R9_REG                                    REG             2281*
RSTCD_SETBIT                              IMPT 00000000   1762  5513 
RST_ADR                                   IMPT 00000000   1760  5496  5505 
RST_OFS                                   IMPT 00000000   1761  5505  5513 
SETCD_SETBIT                              IMPT 00000000   1756  5395 
SET_ADR                                   IMPT 00000000   1754  5378  5387 
SET_OFS                                   IMPT 00000000   1755  5387  5395 
STCD_CLRBIT                               IMPT 00000000   1750  5277 
STCD_SETBIT                               IMPT 00000000   1749  5265  5277 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    71

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

STL_ADR                                   IMPT 00000000   1843  3476  3477 
STL_OFS                                   IMPT 00000000   1844  3477 
STW_ADR                                   IMPT 00000000   1838  3443  3444 
STW_OFS                                   IMPT 00000000   1839  3444 
ST_ADR                                    IMPT 00000000   1747  5248  5257 
ST_OFS                                    IMPT 00000000   1748  5257  5265 
SUBL_ADR                                  IMPT 00000000   1958  4028  4029 
SUBL_OFS                                  IMPT 00000000   1959  4029 
SUBWI_DT_LH                               IMPT 00000000   1963  4613  4614 
SUBWI_DT_LL                               IMPT 00000000   1964  4614 
SUBW_ADR                                  IMPT 00000000   1953  3995  3996 
SUBW_OFS                                  IMPT 00000000   1954  3996 
TOP_REG                                   REG             2273*
WCTR_UNH                                  IMPT 00000000   1812  5889  5898 
WCTR_UNL                                  IMPT 00000000   1813  5898 
WSC_ADR                                   IMPT 00000000   1817  5616  5625 
WSC_BTD                                   IMPT 00000000   1819  5633 
WSC_OFS                                   IMPT 00000000   1818  5625  5633 
WSR_ADR                                   IMPT 00000000   1823  3311  3312 
WSR_OFS                                   IMPT 00000000   1824  3312 
WTMR_DGT                                  IMPT 00000000   1808  5749 
WTMR_UNH                                  IMPT 00000000   1806  5732  5741 
WTMR_UNL                                  IMPT 00000000   1807  5741  5749 
XBIT0                                     EQU  00000000     72*
XBIT1                                     EQU  00000001     73*
XBIT2                                     EQU  00000002     74*
XBIT3                                     EQU  00000003     75*
XBIT4                                     EQU  00000004     76*
XBIT5                                     EQU  00000005     77*
XBIT6                                     EQU  00000006     78*
XBIT7                                     EQU  00000007     79*
XORL_ADR                                  IMPT 00000000   2003  4226  4227 
XORL_OFS                                  IMPT 00000000   2004  4227 
XORWI_DT_LH                               IMPT 00000000   2008  4712  4713 
XORWI_DT_LL                               IMPT 00000000   2009  4713 
XORW_ADR                                  IMPT 00000000   1998  4193  4194 
XORW_OFS                                  IMPT 00000000   1999  4194 
_ADDL_CHG                        P        EXPT 0000082C   2085  3955*
_ADDL_CODE                                IMPT 00000000   1942  3960  3961  3962 
_ADDL_CODE_END                            IMPT 00000000   1945  3960 
_ADDWI_CHG                       P        EXPT 00000B5C   2086  4573*
_ADDWI_CODE                               IMPT 00000000   1947  4578  4579  4580 
_ADDWI_CODE_END                           IMPT 00000000   1950  4578 
_ADDW_CHG                        P        EXPT 00000800   2084  3922*
_ADDW_CODE                                IMPT 00000000   1937  3927  3928  3929 
_ADDW_CODE_END                            IMPT 00000000   1940  3927 
_ADD_CODE                                 IMPT 00000000   2012 
_ADD_CODE_END                             IMPT 00000000   2013 
_ADD_SUB                                  IMPT 00000000   1696 
_AMRG_CHG                        P        EXPT 000003DC   2052  3070*
_AMRG_CODE                                IMPT 00000000   1777  3075  3076 
_AMRG_CODE_END                            IMPT 00000000   1778  3075 
_ANDL_CHG                        P        EXPT 000008DC   2093  4087*
_ANDL_CODE                                IMPT 00000000   1972  4092  4093  4094 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    72

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ANDL_CODE_END                            IMPT 00000000   1975  4092 
_ANDN_CHG                        P        EXPT 00000D18   2037  4908*
_ANDN_CODE                                IMPT 00000000   1728  4913  4914  4915 
_ANDN_CODE_END                            IMPT 00000000   1732  4913 
_ANDWI_CHG                       P        EXPT 00000BB4   2094  4639*
_ANDWI_CODE                               IMPT 00000000   1977  4644  4645  4646 
_ANDWI_CODE_END                           IMPT 00000000   1980  4644 
_ANDW_CHG                        P        EXPT 000008B0   2092  4054*
_ANDW_CODE                                IMPT 00000000   1967  4059  4060  4061 
_ANDW_CODE_END                            IMPT 00000000   1970  4059 
_ANDW_SUB                                 IMPT 00000000   1693 
_AND_CHG                         P        EXPT 00000CE8   2036  4874*
_AND_CODE                                 IMPT 00000000   1722  4879  4880  4881 
_AND_CODE_END                             IMPT 00000000   1726  4879 
_CB_BAKUP_CMD1                            EQU  00005678    118*
_CB_BAKUP_CMD2                            EQU  00001234    119*
_CB_BAK_SUM_COD1                          EQU  5AA51234    116*
_CB_BAK_SUM_COD2                          EQU  A55A4321    117*
_CB_ERR_INFO_MEM                          EQU  00000080    142*
_CB_ERR_INFO_PSIZE                        EQU  00000008    143*
_CB_STS_BUF_1BLK                          EQU  00000040    121*  123 
_CB_STS_BUF_BLKMAX                        EQU  00000008    122*  123 
_CB_STS_BUF_MAX                           EQU  00000200    123*
_CB_TRD_BEFORE                            EQU  00000060    131*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    135*
_CB_TRD_BUF_MAX                           EQU  00000800    132*
_CB_TRD_DP_1CNT                           EQU  00000008    134*
_CB_TRD_DP_CH                             EQU  00000004    127*
_CB_TRD_SMP_CNT                           EQU  00000080    130*
_CHG1_C80                        P             00000A1C   4275  4284  4324*
_CHG2_C80                        P             00000C7C   4750  4788*
_CHG3_C80                        P             00000E94   5112  5121  5176*
_CHG4_C80                        P             00000F44   5227  5236  5306*
_CHG5_C80                        P             00000FE4   5357  5366  5424*
_CHG6_C80                        P             00001088   5475  5484  5544*
_CHG7_C80                        P             0000110C   5595  5604  5660*
_CHG8_C80                        P             000011D4   5720  5827*
_CHG9_C80                        P             0000122C   5876  5918*
_CLR_CHG                         P        EXPT 00000500   2050  3337*
_CLR_CODE                                 IMPT 00000000   1800  3342  3343  3344 
_CLR_CODE_END                             IMPT 00000000   1803  3342 
_CLR_SUB                                  IMPT 00000000   1682 
_DI_X_TOP1                                IMPT 00000000   1647 
_DI_X_TOP2                                IMPT 00000000   1648 
_DO_Y_TOP1                                IMPT 00000000   1649 
_DO_Y_TOP2                                IMPT 00000000   1650 
_DSETLI_CHG                      P        EXPT 00001236   2102  5935*
_DSETLI_CODE                              IMPT 00000000   2021  5950  5951  5960 
_DSETLI_CODE_END                          IMPT 00000000   2026  5950 
_DSETWI_CHG                      P        EXPT 00000A28   2051  4342*
_DSETWI_CODE                              IMPT 00000000   1795  4347  4348  4349 
_DSETWI_CODE_END                          IMPT 00000000   1798  4347 
_DUMMY_SUM_CODE                           EQU  5AA53CC3    109*
_ENDNRG_CHG                      P        EXPT 0000047C   2057  3215*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    73

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ENDNRG_CODE                              IMPT 00000000   1792  3220  3221 
_ENDNRG_CODE_END                          IMPT 00000000   1793  3220 
_END_CHG                         P        EXPT 0000049C   2058  3244*
_END_CODE                                 IMPT 00000000   2018  3249  3250 
_END_CODE_END                             IMPT 00000000   2019  3249 
_END_SUB                                  IMPT 00000000   1698 
_EQL_CHG                         P        EXPT 00000608   2066  3535*
_EQL_CODE                                 IMPT 00000000   1852  3540  3541  3542 
_EQL_CODE_END                             IMPT 00000000   1855  3540 
_EQWI_CHG                        P        EXPT 00000A54   2067  4375*
_EQWI_CODE                                IMPT 00000000   1857  4380  4381  4382 
_EQWI_CODE_END                            IMPT 00000000   1860  4380 
_EQW_CHG                         P        EXPT 000005DC   2065  3502*
_EQW_CODE                                 IMPT 00000000   1847  3507  3508  3509 
_EQW_CODE_END                             IMPT 00000000   1850  3507 
_EQ_SUB                                   IMPT 00000000   1689 
_GEL_CHG                         P        EXPT 00000710   2075  3733*
_GEL_CODE                                 IMPT 00000000   1897  3738  3739  3740 
_GEL_CODE_END                             IMPT 00000000   1900  3738 
_GEWI_CHG                        P        EXPT 00000AD8   2076  4474*
_GEWI_CODE                                IMPT 00000000   1902  4479  4480  4481 
_GEWI_CODE_END                            IMPT 00000000   1905  4479 
_GEW_CHG                         P        EXPT 000006E4   2074  3700*
_GEW_CODE                                 IMPT 00000000   1892  3705  3706  3707 
_GEW_CODE_END                             IMPT 00000000   1895  3705 
_GTL_CHG                         P        EXPT 000006B8   2072  3667*
_GTL_CODE                                 IMPT 00000000   1882  3672  3673  3674 
_GTL_CODE_END                             IMPT 00000000   1885  3672 
_GTWI_CHG                        P        EXPT 00000AAC   2073  4441*
_GTWI_CODE                                IMPT 00000000   1887  4446  4447  4448 
_GTWI_CODE_END                            IMPT 00000000   1890  4446 
_GTW_CHG                         P        EXPT 0000068C   2071  3634*
_GTW_CODE                                 IMPT 00000000   1877  3639  3640  3641 
_GTW_CODE_END                             IMPT 00000000   1880  3639 
_GT_SUB                                   IMPT 00000000   1691 
_LDL_CHG                         P        EXPT 00000558   2061  3403*
_LDL_CODE                                 IMPT 00000000   1832  3408  3409  3410 
_LDL_CODE_END                             IMPT 00000000   1835  3408 
_LDNRG_CHG                       P        EXPT 0000045C   2056  3186*
_LDNRG_CODE                               IMPT 00000000   1789  3191  3192 
_LDNRG_CODE_END                           IMPT 00000000   1790  3191 
_LDN_CHG                         P        EXPT 00000CB8   2035  4840*
_LDN_CODE                                 IMPT 00000000   1716  4845  4846  4847 
_LDN_CODE_END                             IMPT 00000000   1720  4845 
_LDON_CHG                        P        EXPT 000003BC   2033  3041*
_LDON_CODE                                IMPT 00000000   1707  3046  3047 
_LDON_CODE_END                            IMPT 00000000   1708  3046 
_LDW_CHG                         P        EXPT 0000052C   2060  3370*
_LDW_CODE                                 IMPT 00000000   1827  3375  3376  3377 
_LDW_CODE_END                             IMPT 00000000   1830  3375 
_LDW_SUB                                  IMPT 00000000   1687 
_LD_CHG                          P        EXPT 00000C88   2034  4806*
_LD_CODE                                  IMPT 00000000   1710  4811  4812  4813 
_LD_CODE_END                              IMPT 00000000   1714  4811 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    74

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_LEL_CHG                         P        EXPT 000007D4   2082  3889*
_LEL_CODE                                 IMPT 00000000   1927  3894  3895  3896 
_LEL_CODE_END                             IMPT 00000000   1930  3894 
_LEWI_CHG                        P        EXPT 00000B30   2083  4540*
_LEWI_CODE                                IMPT 00000000   1932  4545  4546  4547 
_LEWI_CODE_END                            IMPT 00000000   1935  4545 
_LEW_CHG                         P        EXPT 000007A8   2081  3856*
_LEW_CODE                                 IMPT 00000000   1922  3861  3862  3863 
_LEW_CODE_END                             IMPT 00000000   1925  3861 
_LE_SUB                                   IMPT 00000000   1692 
_LTL_CHG                         P        EXPT 0000077C   2079  3823*
_LTL_CODE                                 IMPT 00000000   1912  3828  3829  3830 
_LTL_CODE_END                             IMPT 00000000   1915  3828 
_LTWI_CHG                        P        EXPT 00000B04   2080  4507*
_LTWI_CODE                                IMPT 00000000   1917  4512  4513  4514 
_LTWI_CODE_END                            IMPT 00000000   1920  4512 
_LTW_CHG                         P        EXPT 00000750   2078  3790*
_LTW_CODE                                 IMPT 00000000   1907  3795  3796  3797 
_LTW_CODE_END                             IMPT 00000000   1910  3795 
_MKIND_A                                  EQU  00000040   2243*
_MKIND_A_ADR                              EQU  00001610   2242*
_MKIND_C                                  EQU  00000040   2225* 2226 
_MKIND_CD                                 EQU  00000400   2229* 2230 
_MKIND_CD_ADR                             EQU  00000900   2228* 2230 
_MKIND_C_ADR                              EQU  000004C0   2224* 2226 
_MKIND_F                                  EQU  00000110   2239* 2240 
_MKIND_F_ADR                              EQU  00000D00   2238* 2240 
_MKIND_L                                  EQU  00000040   2221* 2222 
_MKIND_L_ADR                              EQU  00000440   2220* 2222 
_MKIND_M                                  EQU  00000400   2219* 2220 
_MKIND_M_ADR                              EQU  00000040   2218* 2220 
_MKIND_S                                  EQU  00000800   2241* 2242 
_MKIND_S_ADR                              EQU  00000E10   2240* 2242 
_MKIND_T                                  EQU  00000040   2223* 2224 
_MKIND_TBL                                IMPT 00000000   2132  4270  5107  5222  5352  5470  5590 
_MKIND_TBL_TOP                            IMPT 00000000   2133  4260  5086  5201  5331  5449  5569 
_MKIND_TD                                 EQU  00000400   2227* 2228 
_MKIND_TD_ADR                             EQU  00000500   2226* 2228 
_MKIND_T_ADR                              EQU  00000480   2222* 2224 
_MKIND_W0                                 EQU  00000000   2213* 2214 
_MKIND_W0_ADR                             EQU  00000000   2212*
_MKIND_W1                                 EQU  00000000   2231* 2232 
_MKIND_W1_ADR                             EQU  00000D00   2230* 2232 
_MKIND_W2                                 EQU  00000000   2233* 2234 
_MKIND_W2_ADR                             EQU  00000D00   2232* 2234 
_MKIND_W3                                 EQU  00000000   2235* 2236 
_MKIND_W3_ADR                             EQU  00000D00   2234* 2236 
_MKIND_W4                                 EQU  00000000   2237* 2238 
_MKIND_W4_ADR                             EQU  00000D00   2236* 2238 
_MKIND_X                                  EQU  00000020   2215* 2216 
_MKIND_X_ADR                              EQU  00000000   2214* 2216 
_MKIND_Y                                  EQU  00000020   2217* 2218 
_MKIND_Y_ADR                              EQU  00000020   2216* 2218 
_NEL_CHG                         P        EXPT 00000660   2069  3601*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    75

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_NEL_CODE                                 IMPT 00000000   1867  3606  3607  3608 
_NEL_CODE_END                             IMPT 00000000   1870  3606 
_NEWI_CHG                        P        EXPT 00000A80   2070  4408*
_NEWI_CODE                                IMPT 00000000   1872  4413  4414  4415 
_NEWI_CODE_END                            IMPT 00000000   1875  4413 
_NEW_CHG                         P        EXPT 00000634   2068  3568*
_NEW_CODE                                 IMPT 00000000   1862  3573  3574  3575 
_NEW_CODE_END                             IMPT 00000000   1865  3573 
_NE_SUB                                   IMPT 00000000   1690 
_NOP_CHG                         P        EXPT 0000039C   2032  3012*
_NOP_CODE                                 IMPT 00000000   1704  3017  3018 
_NOP_CODE_END                             IMPT 00000000   1705  3017 
_OMRG_CHG                        P        EXPT 000003FC   2053  3099*
_OMRG_CODE                                IMPT 00000000   1780  3104  3105 
_OMRG_CODE_END                            IMPT 00000000   1781  3104 
_ORL_CHG                         P        EXPT 00000934   2096  4153*
_ORL_CODE                                 IMPT 00000000   1987  4158  4159  4160 
_ORL_CODE_END                             IMPT 00000000   1990  4158 
_ORN_CHG                         P        EXPT 00000D78   2039  4976*
_ORN_CODE                                 IMPT 00000000   1740  4981  4982  4983 
_ORN_CODE_END                             IMPT 00000000   1744  4981 
_ORWI_CHG                        P        EXPT 00000BE0   2097  4672*
_ORWI_CODE                                IMPT 00000000   1992  4677  4678  4679 
_ORWI_CODE_END                            IMPT 00000000   1995  4677 
_ORW_CHG                         P        EXPT 00000908   2095  4120*
_ORW_CODE                                 IMPT 00000000   1982  4125  4126  4127 
_ORW_CODE_END                             IMPT 00000000   1985  4125 
_ORW_SUB                                  IMPT 00000000   1694 
_OR_CHG                          P        EXPT 00000D48   2038  4942*
_OR_CODE                                  IMPT 00000000   1734  4947  4948  4949 
_OR_CODE_END                              IMPT 00000000   1738  4947 
_PLF_CHG                         P        EXPT 00000DD8   2041  5044*
_PLF_CODE                                 IMPT 00000000   1771  5049  5050  5051 
_PLF_CODE_END                             IMPT 00000000   1775  5049 
_PLF_SUB                                  IMPT 00000000   1681 
_PLS_CHG                         P        EXPT 00000DA8   2040  5010*
_PLS_CODE                                 IMPT 00000000   1765  5015  5016  5017 
_PLS_CODE_END                             IMPT 00000000   1769  5015 
_PLS_SUB                                  IMPT 00000000   1680 
_POP_CHG                         P        EXPT 0000043C   2055  3157*
_POP_CODE                                 IMPT 00000000   1786  3162  3163 
_POP_CODE_END                             IMPT 00000000   1787  3162 
_PUSH_CHG                        P        EXPT 0000041C   2054  3128*
_PUSH_CODE                                IMPT 00000000   1783  3133  3134 
_PUSH_CODE_END                            IMPT 00000000   1784  3133 
_PVP_SQ_COM_ADR                           IMPT 00000000   2320  2352  2448  2544 
_PVP_SQ_COM_ERR                           IMPT 00000000   2321  2354  2450  2546 
_RST_CHG                         P        EXPT 00000FEE   2045  5441*
_RST_CODE                                 IMPT 00000000   1759  5486  5487  5496 
_RST_CODE_END                             IMPT 00000000   1763  5486 
_SEQ_ARG1_DATA                            IMPT 00000000   1628  2383 
_SEQ_ARG2_DATA                            IMPT 00000000   1635  2479 
_SEQ_ARG3_DATA                            IMPT 00000000   1642  2575 
_SEQ_ASM_RAM_TOP                          IMPT 00000000   1606 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    76

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_A_SET                                EQU  00000020   2182* 2243 
_SEQ_BBIT_CHG_TBL                         IMPT 00000000   2113  5150  5267  5397  5515 
_SEQ_CARD_MAX                             EQU  00000C00   2183* 4282  4748  5119  5234  5364  5482  5602  5718  5874 
_SEQ_CARD_RAM                             IMPT 00000000   1620 
_SEQ_CD_BLOCK_MV_EXIT            P             000012B8   6022  6037*
_SEQ_CD_SET                               EQU  00000200   2175* 2229 
_SEQ_CHG10_EX                    P             00001298   5990  6001*
_SEQ_CHG2_EX                     P             00000C7E   4778  4791*
_SEQ_CHG3_EX                     P             00000E96   5161  5179*
_SEQ_CHG4_EX                     P             00000F46   5289  5309*
_SEQ_CHG5_EX                     P             00000FE6   5408  5427*
_SEQ_CHG6_EX                     P             0000108A   5528  5547*
_SEQ_CHG7_EX                     P             0000110E   5646  5663*
_SEQ_CHG8_EX                     P             000011D6   5818  5830*
_SEQ_CHG9_EX                     P             0000122E   5907  5921*
_SEQ_CHG_TBL0                             IMPT 00000000   2109  2657  2790  2921 
_SEQ_CMP_ERR1                             IMPT 00000000   1626  2358 
_SEQ_CMP_ERR2                             IMPT 00000000   1633  2454 
_SEQ_CMP_ERR3                             IMPT 00000000   1640  2550 
_SEQ_CMP_ERR_ADR1                         IMPT 00000000   1627  2348 
_SEQ_CMP_ERR_ADR2                         IMPT 00000000   1634  2444 
_SEQ_CMP_ERR_ADR3                         IMPT 00000000   1641  2540 
_SEQ_CMP_START                            IMPT 00000000   1654 
_SEQ_CODE_BLOCK_LOOP             P             000012A0   6020* 6031 
_SEQ_CODE_BLOCK_MV               P             0000129E   3284  4289  4755  5126  5243  5373  5491  5611  5727  5883  5955  6015*
_SEQ_COM1_TOP                             IMPT 00000000   2291  2616 
_SEQ_COM2_TOP                             IMPT 00000000   2292  2749 
_SEQ_COM3_TOP                             IMPT 00000000   2293  2880 
_SEQ_CTR_DATA                             IMPT 00000000   1623 
_SEQ_C_SET                                EQU  00000020   2173* 2175  2225 
_SEQ_DATA_CHG0                   P             000004C0   3020  3049  3078  3107  3136  3165  3194  3223  3252  3276*
_SEQ_DATA_CHG0_EX                P             000004CA   3289*
_SEQ_DATA_CHG1_1                 P             0000073C   3314  3347  3380  3413  3446  3479  3512  3545  3578  3611  3644  3677 
                                                          3710  3743  3766*
_SEQ_DATA_CHG1_2                 P             000009B8   3771  3800  3833  3866  3899  3932  3965  3998  4031  4064  4097  4130 
                                                          4163  4196  4229  4252*
_SEQ_DATA_CHG1_EX                P             00000A1E   4312  4327*
_SEQ_DATA_CHG2                   P             00000C38   4352  4385  4418  4451  4484  4517  4550  4583  4616  4649  4682  4715 
                                                          4738*
_SEQ_DATA_CHG3                   P             00000E08   4817  4851  4885  4919  4953  4987  5021  5055  5078*
_SEQ_DRG1_DATA                            IMPT 00000000   1631 
_SEQ_DRG2_DATA                            IMPT 00000000   1638 
_SEQ_DRG3_DATA                            IMPT 00000000   1645 
_SEQ_END_CODE                    P             00000004   2306* 2365  2461  2557 
_SEQ_F_SET                                EQU  00000088   2180* 2239 
_SEQ_LD_TIMOUT                            IMPT 00000000   1662 
_SEQ_L_SET                                EQU  00000020   2171* 2221 
_SEQ_MAX_BYTE                             EQU  0000001E   2206* 2622  2755  2886 
_SEQ_MRG1_DATA                            IMPT 00000000   1629  2385 
_SEQ_MRG2_DATA                            IMPT 00000000   1636  2481 
_SEQ_MRG3_DATA                            IMPT 00000000   1643  2577 
_SEQ_M_SET                                EQU  00000200   2170* 2219 
_SEQ_NRG1_DATA                            IMPT 00000000   1630  2388 
_SEQ_NRG2_DATA                            IMPT 00000000   1637  2484 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    77

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_NRG3_DATA                            IMPT 00000000   1644  2580 
_SEQ_POU_SET                              EQU  00004000   2207*
_SEQ_RUN1                                 IMPT 00000000   1609  2619 
_SEQ_RUN1_END                             IMPT 00000000   1610  2620 
_SEQ_RUN1_TOP                             IMPT 00000000   1608  2333 
_SEQ_RUN2                                 IMPT 00000000   1613  2752 
_SEQ_RUN2_END                             IMPT 00000000   1614  2753 
_SEQ_RUN2_TOP                             IMPT 00000000   1612  2429 
_SEQ_RUN3                                 IMPT 00000000   1617  2883 
_SEQ_RUN3_END                             IMPT 00000000   1618  2884 
_SEQ_RUN3_TOP                             IMPT 00000000   1616  2525 
_SEQ_RUN_CHG1                    P             000001BC   2344  2611*
_SEQ_RUN_CHG1_100                P             000001CE   2626* 2711 
_SEQ_RUN_CHG1_300                P             000001EE   2654*
_SEQ_RUN_CHG1_4BYTE              P             0000022C   2664  2685*
_SEQ_RUN_CHG1_800                P             00000240   2694  2706*
_SEQ_RUN_CHG1_DSETLI             P             00000224   2662  2679*
_SEQ_RUN_CHG1_END                P             0000024A   2697  2717*
_SEQ_RUN_CHG1_ERR_END            P        EXPT 00000250   2090  2637  2699  2724*
_SEQ_RUN_CHG1_EXIT               P             00000252   2721  2727*
_SEQ_RUN_CHG1_MAIN               P        EXPT 0000000C   2295  2327*
_SEQ_RUN_CHG2                    P             0000025C   2440  2744*
_SEQ_RUN_CHG2_100                P             0000026E   2759* 2842 
_SEQ_RUN_CHG2_300                P             0000028E   2787*
_SEQ_RUN_CHG2_4BYTE              P             000002CC   2797  2818*
_SEQ_RUN_CHG2_800                P             000002E0   2827  2838*
_SEQ_RUN_CHG2_DSETLI             P             000002C4   2795  2812*
_SEQ_RUN_CHG2_END                P             000002EA   2830  2848*
_SEQ_RUN_CHG2_ERR_END            P             000002F0   2770  2832  2855*
_SEQ_RUN_CHG2_EXIT               P             000002F2   2852  2858*
_SEQ_RUN_CHG2_MAIN               P        EXPT 0000009C   2296  2423*
_SEQ_RUN_CHG2_MAIN020            P             000000E4   2458  2475*
_SEQ_RUN_CHG3                    P             000002FC   2536  2875*
_SEQ_RUN_CHG3_100                P             0000030E   2890* 2973 
_SEQ_RUN_CHG3_300                P             0000032E   2918*
_SEQ_RUN_CHG3_4BYTE              P             0000036C   2928  2949*
_SEQ_RUN_CHG3_800                P             00000380   2958  2969*
_SEQ_RUN_CHG3_BIT_H              P             00000E20   5098  5102*
_SEQ_RUN_CHG3_DSETLI             P             00000364   2926  2943*
_SEQ_RUN_CHG3_END                P             0000038A   2961  2979*
_SEQ_RUN_CHG3_ERR_END            P             00000390   2901  2963  2986*
_SEQ_RUN_CHG3_EXIT               P             00000392   2983  2989*
_SEQ_RUN_CHG3_MAIN               P        EXPT 0000012C   2297  2519*
_SEQ_RUN_CHG3_MAIN020            P             00000174   2554  2571*
_SEQ_RUN_CHG4_BIT_H              P             00000EB6   5213  5217*
_SEQ_RUN_CHG5_BIT_H              P             00000F66   5343  5347*
_SEQ_RUN_CHG6_BIT_H              P             00001006   5461  5465*
_SEQ_RUN_CHG_MAIN020             P             00000054   2362  2379*
_SEQ_SR_FLG                               IMPT 00000000   1624 
_SEQ_START_CODE                  P             00000000   2300* 2334  2430  2526 
_SEQ_S_SET                                EQU  00000400   2181* 2241 
_SEQ_TD_SET                               EQU  00000200   2174* 2227 
_SEQ_TIM_DGT_END                 P             000011BE   5761  5778  5790  5802  5812*
_SEQ_TIM_DGT_SEL0                P             000011A4   5787  5796*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    78

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_TIM_DGT_SEL1                P             00001154   5755*
_SEQ_TIM_DGT_SEL2                P             0000117C   5758  5772*
_SEQ_TIM_DGT_SEL3                P             00001190   5775  5784*
_SEQ_TIM_DGT_SEL5                P             000011B8   5799  5808*
_SEQ_TIM_WK1000M                          IMPT 00000000   1665 
_SEQ_TIM_WK100M                           IMPT 00000000   1664 
_SEQ_TMR_DATA                             IMPT 00000000   1622 
_SEQ_T_SET                                EQU  00000020   2172* 2174  2223 
_SEQ_W0_SET                               EQU  00000000   2167* 2213 
_SEQ_W1_SET                               EQU  00000000   2176* 2231 
_SEQ_W2_SET                               EQU  00000000   2177* 2233 
_SEQ_W3_SET                               EQU  00000000   2178* 2235 
_SEQ_W4_SET                               EQU  00000000   2179* 2237 
_SEQ_X_SET                                EQU  00000010   2168* 2215 
_SEQ_Y_SET                                EQU  00000010   2169* 2217 
_SET_CHG                         P        EXPT 00000F4E   2044  5323*
_SET_CODE                                 IMPT 00000000   1753  5368  5369  5378 
_SET_CODE_END                             IMPT 00000000   1757  5368 
_SQ_ERR_END                               EQU  0000FF00   2160* 2725  2856  2987  4325  4789  5177  5307  5425  5545  5661  5828 
                                                          5919 
_SQ_NML_COD                               EQU  00000000   2158* 2693  2826  2957  4310  4776  5159  5287  5406  5526  5644  5816 
                                                          5905  5988 
_SQ_NML_END                               EQU  00000055   2159* 2696  2829  2960  3256 
_START_ACK_COD                            EQU  00004321    217*
_START_REQ_COD                            EQU  00009876    216*
_STL_CHG                         P        EXPT 000005B0   2063  3469*
_STL_CODE                                 IMPT 00000000   1842  3474  3475  3476 
_STL_CODE_END                             IMPT 00000000   1845  3474 
_STW_CHG                         P        EXPT 00000584   2062  3436*
_STW_CODE                                 IMPT 00000000   1837  3441  3442  3443 
_STW_CODE_END                             IMPT 00000000   1840  3441 
_STW_SUB                                  IMPT 00000000   1688 
_ST_CHG                          P        EXPT 00000E9E   2042  5193*
_ST_CODE                                  IMPT 00000000   1746  5238  5239  5248 
_ST_CODE_END                              IMPT 00000000   1751  5238 
_SUBL_CHG                        P        EXPT 00000884   2088  4021*
_SUBL_CODE                                IMPT 00000000   1957  4026  4027  4028 
_SUBL_CODE_END                            IMPT 00000000   1960  4026 
_SUBWI_CHG                       P        EXPT 00000B88   2089  4606*
_SUBWI_CODE                               IMPT 00000000   1962  4611  4612  4613 
_SUBWI_CODE_END                           IMPT 00000000   1965  4611 
_SUBW_CHG                        P        EXPT 00000858   2087  3988*
_SUBW_CODE                                IMPT 00000000   1952  3993  3994  3995 
_SUBW_CODE_END                            IMPT 00000000   1955  3993 
_SUB_CODE                                 IMPT 00000000   2015 
_SUB_CODE_END                             IMPT 00000000   2016 
_SUB_SUB                                  IMPT 00000000   1697 
_SeqLd_MKIND_TBL_TOP                      IMPT 00000000   2134 
_SeqSysStat                               IMPT 00000000   1656 
_T_0001HR_CNT                             EQU  00000020   2262*
_T_0001HR_TOP                             EQU  000001E0   2261*
_T_0001MS_CNT                             EQU  00000040   2260* 2261 
_T_0001MS_TOP                             EQU  000001A0   2259* 2261 
_T_0010MS_CNT                             EQU  00000100   2254* 2255 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    79

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_T_0010MS_TOP                             EQU  00000000   2253* 2255 
_T_0100MS_CNT                             EQU  00000080   2256* 2257 
_T_0100MS_TOP                             EQU  00000100   2255* 2257 
_T_1000MS_CNT                             EQU  00000020   2258* 2259 
_T_1000MS_TOP                             EQU  00000180   2257* 2259 
_VUPCHECK_EQU                             EQU  11AB3739    102*
_WCTR_CHG                        P        EXPT 000011DE   2048  5844*
_WCTR_CODE                                IMPT 00000000   1811  5878  5879  5889 
_WCTR_CODE_END                            IMPT 00000000   1814  5878 
_WCTR_SUB                                 IMPT 00000000   1684 
_WSC_CHG                         P        EXPT 00001092   2043  5561*
_WSC_CODE                                 IMPT 00000000   1816  5606  5607  5616 
_WSC_CODE_END                             IMPT 00000000   1820  5606 
_WSC_SUB                                  IMPT 00000000   1685 
_WSR_CHG                         P        EXPT 000004D4   2049  3304*
_WSR_CODE                                 IMPT 00000000   1822  3309  3310  3311 
_WSR_CODE_END                             IMPT 00000000   1825  3309 
_WSR_SUB                                  IMPT 00000000   1686 
_WTMR_CHG                        P        EXPT 00001116   2047  5677*
_WTMR_CODE                                IMPT 00000000   1805  5722  5723  5732 
_WTMR_CODE_END                            IMPT 00000000   1809  5722 
_WTMR_SUB                                 IMPT 00000000   1683 
_XORL_CHG                        P        EXPT 0000098C   2099  4219*
_XORL_CODE                                IMPT 00000000   2002  4224  4225  4226 
_XORL_CODE_END                            IMPT 00000000   2005  4224 
_XORWI_CHG                       P        EXPT 00000C0C   2100  4705*
_XORWI_CODE                               IMPT 00000000   2007  4710  4711  4712 
_XORWI_CODE_END                           IMPT 00000000   2010  4710 
_XORW_CHG                        P        EXPT 00000960   2098  4186*
_XORW_CODE                                IMPT 00000000   1997  4191  4192  4193 
_XORW_CODE_END                            IMPT 00000000   2000  4191 
_XORW_SUB                                 IMPT 00000000   1695 
_X_PUSH_TOP1                              IMPT 00000000   1651 
_X_PUSH_TOP2                              IMPT 00000000   1652 
__TMCT_FLG                                EQU  00000008   2251*
__TMCT_PV                                 EQU  00000000   2249*
__TMCT_ST_CNT                             EQU  0000000C   2248*
__TMCT_SV                                 EQU  00000004   2250*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 19:29:13                                                  PAGE    80

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000012BE        
