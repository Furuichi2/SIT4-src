*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;------------------------------------------------------------------------
    2                               2     ;                                                                       |
    3                               3     ;   FILE        :resetprg.src                                           |
    4                               4     ;   DATE        :Sun, Jul 16, 2006                                      |
    5                               5     ;   DESCRIPTION :Reset Program                                          |
    6                               6     ;   CPU TYPE    :Other                                                  |
    7                               7     ;                                                                       |
    8                               8     ;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
    9                               9     ;                                                                       |
   10                              10     ;------------------------------------------------------------------------
   11                              11             .include        "vect.inc"
   12                               1 I1  ;------------------------------------------------------------------------
   13                               2 I1  ;                                                                       |
   14                               3 I1  ;   FILE        :vect.inc                                               |
   15                               4 I1  ;   DATE        :Fri, Nov 22, 2013                                      |
   16                               5 I1  ;   DESCRIPTION :Definition of Vector                                   |
   17                               6 I1  ;   CPU TYPE    :SH7727                                                 |
   18                               7 I1  ;                                                                       |
   19                               8 I1  ;   This file is generated by Renesas Project Generator (Ver.4.19).     |
   20                               9 I1  ;   NOTE:THIS IS A TYPICAL EXAMPLE.                                     |
   21                              10 I1  ;------------------------------------------------------------------------
   22                              11 I1  
   23                              12 I1  
   24                              13 I1  ;;SR_Init:      .equ    B'01100000000000000000000011110000
   25          40000010            14 I1  SR_Init:        .equ    B'01000000000000000000000000010000      ;// ëSäÑçûÇ›ãñâ¬
   26          400000F0            15 I1  SR_Init_DI:     .equ    B'01000000000000000000000011110000      ;// ëSäÑçûÇ›ã÷é~
   27          400000D0            16 I1  SR_Init_SCIEI   .equ    B'01000000000000000000000011010000      ;// ≤∆º¨ŸéûÇÃ ﬁ∞ºﬁÆ›UPë“Çø
                                          éû(SCI(E)ÇæÇØãñâ¬)
   28                              17 I1  
   29                              18 I1  
   30                              19 I1  ;<<VECTOR DATA START (POWER ON RESET)>>
   31                              20 I1          ;H'000 Power On Reset (H-UDI RESET)
   32                              21 I1          .global _PowerON_Reset
                                          
   33                              22 I1  ;<<VECTOR DATA END (POWER ON RESET)>>
   34                              23 I1  ;<<VECTOR DATA START (MANUAL RESET)>>
   35                              24 I1          ;H'020 Manual Reset
   36                              25 I1          .global _Manual_Reset
                                          
   37                              26 I1  ;<<VECTOR DATA END (MANUAL RESET)>>
   38                              27 I1          ;H'040 TLB miss/invalid (load)
   39                              28 I1          .global     _INT_TLBMiss_Load
   40                              29 I1          ;H'060 TLB miss/invalid (store)
   41                              30 I1          .global     _INT_TLBMiss_Store
   42                              31 I1          ;H'070 TBL exception/CPU Address error in repeat loop
   43                              32 I1          .global     _INT_TLBCPU_ADERR
   44                              33 I1          ;H'080 Initial page write
   45                              34 I1          .global     _INT_TLBInitial_Page
   46                              35 I1          ;H'0A0 TLB protect (load)
   47                              36 I1          .global     _INT_TLBProtect_Load
   48                              37 I1          ;H'0C0 TLB protect (store)
   49                              38 I1          .global     _INT_TLBProtect_Store
   50                              39 I1          ;H'0D0 TLB protect in repeat loop
   51                              40 I1          .global     _INT_TLBProtect_Loop
   52                              41 I1          ;H'0E0 Address error (load)
   53                              42 I1          .global     _INT_Address_load
   54                              43 I1          ;H'100 Address error (store)
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     2
PROGRAM NAME =

   55                              44 I1          .global     _INT_Address_store
   56                              45 I1          ;H'120 Reserved
   57                              46 I1          .global     _INT_Reserved1
   58                              47 I1          ;H'140 Reserved
   59                              48 I1          .global     _INT_Reserved2
   60                              49 I1          ;H'160 TRAPA
   61                              50 I1          .global     _INT_TRAPA
   62                              51 I1          ;H'180 Illegal code
   63                              52 I1          .global     _INT_Illegal_code
   64                              53 I1          ;H'1A0 Illegal slot
   65                              54 I1          .global     _INT_Illegal_slot
   66                              55 I1          ;H'1C0 Nonmaskable interrupt
   67                              56 I1          .global     _INT_NMI
   68                              57 I1          ;H'1E0 User breakpoint trap
   69                              58 I1          .global     _INT_User_Break
   70                              59 I1          ;H'200 External hardware interrupt
   71                              60 I1          .global     _INT_Extern_0000
   72                              61 I1          ;H'220 External hardware interrupt
   73                              62 I1          .global     _INT_Extern_0001
   74                              63 I1          ;H'240 External hardware interrupt
   75                              64 I1          .global     _INT_Extern_0010
   76                              65 I1          ;H'260 External hardware interrupt
   77                              66 I1          .global     _INT_Extern_0011
   78                              67 I1          ;H'280 External hardware interrupt
   79                              68 I1          .global     _INT_Extern_0100
   80                              69 I1          ;H'2A0 External hardware interrupt
   81                              70 I1          .global     _INT_Extern_0101
   82                              71 I1          ;H'2C0 External hardware interrupt
   83                              72 I1          .global     _INT_Extern_0110
   84                              73 I1          ;H'2E0 External hardware interrupt
   85                              74 I1          .global     _INT_Extern_0111
   86                              75 I1          ;H'300 External hardware interrupt
   87                              76 I1          .global     _INT_Extern_1000
   88                              77 I1          ;H'320 External hardware interrupt
   89                              78 I1          .global     _INT_Extern_1001
   90                              79 I1          ;H'340 External hardware interrupt
   91                              80 I1          .global     _INT_Extern_1010
   92                              81 I1          ;H'360 External hardware interrupt
   93                              82 I1          .global     _INT_Extern_1011
   94                              83 I1          ;H'380 External hardware interrupt
   95                              84 I1          .global     _INT_Extern_1100
   96                              85 I1          ;H'3A0 External hardware interrupt
   97                              86 I1          .global     _INT_Extern_1101
   98                              87 I1          ;H'3C0 External hardware interrupt
   99                              88 I1          .global     _INT_Extern_1110
  100                              89 I1          ;H'3E0 Reserved
  101                              90 I1          .global     _INT_Reserved3E0
  102                              91 I1          ;H'400 TMU TUNI0
  103                              92 I1          .global     _INT_TMU_TUNI0
  104                              93 I1          ;H'420 TMU TUNI1
  105                              94 I1          .global     _INT_TMU_TUNI1
  106                              95 I1          ;H'440 TMU TUNI2
  107                              96 I1          .global     _INT_TMU_TUNI2
  108                              97 I1          ;H'460 TMU TICPI2
  109                              98 I1          .global     _INT_TMU_TICPI2
  110                              99 I1          ;H'480 RTC ATI
  111                             100 I1          .global     _INT_RTC_ATI
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     3
PROGRAM NAME =

  112                             101 I1          ;H'4A0 RTC PRI
  113                             102 I1          .global     _INT_RTC_PRI
  114                             103 I1          ;H'4C0 RTC CUI
  115                             104 I1          .global     _INT_RTC_CUI
  116                             105 I1          ;H'4E0 SCI ERI
  117                             106 I1          .global     _INT_SCI_ERI
  118                             107 I1          ;H'500 SCI RXI
  119                             108 I1          .global     _INT_SCI_RXI
  120                             109 I1          ;H'520 SCI TXI
  121                             110 I1          .global     _INT_SCI_TXI
  122                             111 I1          ;H'540 SCI TEI
  123                             112 I1          .global     _INT_SCI_TEI
  124                             113 I1          ;H'560 CPG ITI
  125                             114 I1          .global     _INT_CPG_ITI
  126                             115 I1          ;H'580 BSC RCMI
  127                             116 I1          .global     _INT_BSC_RCMI
  128                             117 I1          ;H'5A0 BSC ROVI
  129                             118 I1          .global     _INT_BSC_ROVI
  130                             119 I1          ;H'5C0 Reserved
  131                             120 I1          .global     _INT_Reserved5C0
  132                             121 I1          ;H'5E0 H-UDI
  133                             122 I1          .global     _INT_H_UDI
  134                             123 I1          ;H'600 IRQ0
  135                             124 I1          .global     _INT_IRQ0
  136                             125 I1          ;H'620 IRQ1
  137                             126 I1          .global     _INT_IRQ1
  138                             127 I1          ;H'640 IRQ2
  139                             128 I1          .global     _INT_IRQ2
  140                             129 I1          ;H'660 IRQ3
  141                             130 I1          .global     _INT_IRQ3
  142                             131 I1          ;H'680 IRQ4
  143                             132 I1          .global     _INT_IRQ4
  144                             133 I1          ;H'6A0 IRQ5
  145                             134 I1          .global     _INT_IRQ5
  146                             135 I1          ;H'6C0 Reserved
  147                             136 I1          .global     _INT_Reserved6C0
  148                             137 I1          ;H'6E0 Reserved
  149                             138 I1          .global     _INT_Reserved6E0
  150                             139 I1          ;H'700 PINT0_7
  151                             140 I1          .global     _INT_PINT0_7
  152                             141 I1          ;H'720 PINT8_15
  153                             142 I1          .global     _INT_PINT8_15
  154                             143 I1          ;H'740 Reserved
  155                             144 I1          .global     _INT_Reserved740
  156                             145 I1          ;H'760 Reserved
  157                             146 I1          .global     _INT_Reserved760
  158                             147 I1          ;H'780 Reserved
  159                             148 I1          .global     _INT_Reserved780
  160                             149 I1          ;H'7A0 Reserved
  161                             150 I1          .global     _INT_Reserved7A0
  162                             151 I1          ;H'7C0 Reserved
  163                             152 I1          .global     _INT_Reserved7C0
  164                             153 I1          ;H'7E0 Reserved
  165                             154 I1          .global     _INT_Reserved7E0
  166                             155 I1          ;H'800 DMAC DEI0
  167                             156 I1          .global     _INT_DMAC_DEI0
  168                             157 I1          ;H'820 DMAC DEI1
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     4
PROGRAM NAME =

  169                             158 I1          .global     _INT_DMAC_DEI1
  170                             159 I1          ;H'840 DMAC DEI2
  171                             160 I1          .global     _INT_DMAC_DEI2
  172                             161 I1          ;H'860 DMAC DEI3
  173                             162 I1          .global     _INT_DMAC_DEI3
  174                             163 I1          ;H'880 Reserved
  175                             164 I1          .global     _INT_Reserved880
  176                             165 I1          ;H'8A0 Reserved
  177                             166 I1          .global     _INT_Reserved8A0
  178                             167 I1          ;H'8C0 Reserved
  179                             168 I1          .global     _INT_Reserved8C0
  180                             169 I1          ;H'8E0 Reserved
  181                             170 I1          .global     _INT_Reserved8E0
  182                             171 I1          ;H'900 SCIF ERI2
  183                             172 I1          .global     _INT_SCIF_ERI2
  184                             173 I1          ;H'920 SCIF RXI2
  185                             174 I1          .global     _INT_SCIF_RXI2
  186                             175 I1          ;H'940 SCIF BRI2
  187                             176 I1          .global     _INT_SCIF_BRI2
  188                             177 I1          ;H'960 SCIF TXI2
  189                             178 I1          .global     _INT_SCIF_TXI2
  190                             179 I1          ;H'980 ADC ADI
  191                             180 I1          .global     _INT_ADC_ADI
  192                             181 I1          ;H'9A0 LCDC LCDCI
  193                             182 I1          .global     _INT_LCDC_LCDCI
  194                             183 I1          ;H'9C0 PCC0
  195                             184 I1          .global     _INT_PCC0
  196                             185 I1          ;H'9E0 Reserved
  197                             186 I1          .global     _INT_Reserved9E0
  198                             187 I1          ;H'A00 USBH USBHI
  199                             188 I1          .global     _INT_USBH_USBHI
  200                             189 I1          ;H'A20 USBF USBFI0
  201                             190 I1          .global     _INT_USBF_USBFI0
  202                             191 I1          ;H'A40 USBF USBFI1
  203                             192 I1          .global     _INT_USBF_USBFI1
  204                             193 I1          ;H'A60 AFEIF AFEIFI
  205                             194 I1          .global     _INT_AFEIF_AFEIFI
  206                             195 I1          ;H'A80 Reserved
  207                             196 I1          .global     _INT_ReservedA80
  208                             197 I1          ;H'AA0 Reserved
  209                             198 I1          .global     _INT_ReservedAA0
  210                             199 I1          ;H'AC0 Reserved
  211                             200 I1          .global     _INT_ReservedAC0
  212                             201 I1          ;H'AE0 Reserved
  213                             202 I1          .global     _INT_ReservedAE0
  214                             203 I1          ;H'B00 SIOF SIFERI
  215                             204 I1          .global     _INT_SIOF_SIFERI
  216                             205 I1          ;H'B20 SIOF SIFTXI
  217                             206 I1          .global     _INT_SIOF_SIFTXI
  218                             207 I1          ;H'B40 SIOF SIFRXI
  219                             208 I1          .global     _INT_SIOF_SIFRXI
  220                             209 I1          ;H'B60 SIOF SIFCCI
  221                             210 I1          .global     _INT_SIOF_SIFCCI
  222                             211 I1          ; dummy
  223                             212 I1          .global     _DUMMY
  224                             213 I1  
  225                              12             .include        "cm_equ1.equ"
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     5
PROGRAM NAME =

  226                               1 I1  ;       ***************************
  227                               2 I1  ;       ***     CONST           ***
  228                               3 I1  ;       ***************************
  229                               4 I1  
  230                               5 I1  ;       *****   ÉrÉbÉg   *****
  231          00000001             6 I1  BIT0            .EQU    B'00000001      ;01H
  232          00000002             7 I1  BIT1            .EQU    B'00000010      ;02H
  233          00000004             8 I1  BIT2            .EQU    B'00000100      ;04H
  234          00000008             9 I1  BIT3            .EQU    B'00001000      ;08H
  235          00000010            10 I1  BIT4            .EQU    B'00010000      ;10H
  236          00000020            11 I1  BIT5            .EQU    B'00100000      ;20H
  237          00000040            12 I1  BIT6            .EQU    B'01000000      ;40H
  238          00000080            13 I1  BIT7            .EQU    B'10000000      ;80H
  239          00000100            14 I1  BIT8            .EQU    B'0000000100000000      ;0100H
  240          00000200            15 I1  BIT9            .EQU    B'0000001000000000      ;0200H
  241          00000400            16 I1  BIT10           .EQU    B'0000010000000000      ;0400H
  242          00000800            17 I1  BIT11           .EQU    B'0000100000000000      ;0800H
  243          00001000            18 I1  BIT12           .EQU    B'0001000000000000      ;1000H
  244          00002000            19 I1  BIT13           .EQU    B'0010000000000000      ;2000H
  245          00004000            20 I1  BIT14           .EQU    B'0100000000000000      ;4000H
  246          00008000            21 I1  BIT15           .EQU    B'1000000000000000      ;8000H
  247          00010000            22 I1  BIT16           .EQU    H'00010000
  248          00020000            23 I1  BIT17           .EQU    H'00020000
  249          00040000            24 I1  BIT18           .EQU    H'00040000
  250          00080000            25 I1  BIT19           .EQU    H'00080000
  251          00100000            26 I1  BIT20           .EQU    H'00100000
  252          00200000            27 I1  BIT21           .EQU    H'00200000
  253          00400000            28 I1  BIT22           .EQU    H'00400000
  254          00800000            29 I1  BIT23           .EQU    H'00800000
  255          01000000            30 I1  BIT24           .EQU    H'01000000
  256          02000000            31 I1  BIT25           .EQU    H'02000000
  257          04000000            32 I1  BIT26           .EQU    H'04000000
  258          08000000            33 I1  BIT27           .EQU    H'08000000
  259          10000000            34 I1  BIT28           .EQU    H'10000000
  260          20000000            35 I1  BIT29           .EQU    H'20000000
  261          40000000            36 I1  BIT30           .EQU    H'40000000
  262          80000000            37 I1  BIT31           .EQU    H'80000000
  263                              38 I1  
  264                              39 I1  ;       *****   ÉrÉbÉg   *****
  265          000000FE            40 I1  NBIT0           .EQU    B'11111110              ;NOT 01H
  266          000000FD            41 I1  NBIT1           .EQU    B'11111101              ;02H
  267          000000FB            42 I1  NBIT2           .EQU    B'11111011              ;04H
  268          000000F7            43 I1  NBIT3           .EQU    B'11110111              ;08H
  269          000000EF            44 I1  NBIT4           .EQU    B'11101111              ;10H
  270          000000DF            45 I1  NBIT5           .EQU    B'11011111              ;20H
  271          000000BF            46 I1  NBIT6           .EQU    B'10111111              ;40H
  272          0000007F            47 I1  NBIT7           .EQU    B'01111111              ;80H
  273                              48 I1  
  274          0000FEFF            49 I1  NBIT8           .EQU    B'1111111011111111      ;NOT 01H
  275          0000FDFF            50 I1  NBIT9           .EQU    B'1111110111111111      ;02H
  276          0000FBFF            51 I1  NBIT10          .EQU    B'1111101111111111      ;04H
  277          0000F7FF            52 I1  NBIT11          .EQU    B'1111011111111111      ;08H
  278          0000EFFF            53 I1  NBIT12          .EQU    B'1110111111111111      ;10H
  279          0000DFFF            54 I1  NBIT13          .EQU    B'1101111111111111      ;20H
  280          0000BFFF            55 I1  NBIT14          .EQU    B'1011111111111111      ;40H
  281          00007FFF            56 I1  NBIT15          .EQU    B'0111111111111111      ;80H
  282                              57 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     6
PROGRAM NAME =

  283                              58 I1  ;       **** ÉrÉbÉgëÄçÏñΩóﬂ *****
  284          00000000            59 I1  XBIT0           .EQU    D'0             ;
  285          00000001            60 I1  XBIT1           .EQU    D'1             ;
  286          00000002            61 I1  XBIT2           .EQU    D'2             ;
  287          00000003            62 I1  XBIT3           .EQU    D'3             ;
  288          00000004            63 I1  XBIT4           .EQU    D'4             ;
  289          00000005            64 I1  XBIT5           .EQU    D'5             ;
  290          00000006            65 I1  XBIT6           .EQU    D'6             ;
  291          00000007            66 I1  XBIT7           .EQU    D'7             ;
  292                              67 I1  
  293                              68 I1  ;       *******************************************
  294                              69 I1  ;       ***             sh2/sh3                 ***
  295                              70 I1  ;       *******************************************
  296                              71 I1  ;       ================ WORD ±∏æΩ// ﬁ≤ƒ±∏æΩêÿë÷ =========
  297          00000001            72 I1  L_BYTE          .EQU    1               ;
  298          00000000            73 I1  H_BYTE          .EQU    0               ;
  299                              74 I1  
  300                              75 I1  ;/*     =================================       */
  301                              76 I1  
  302                              77 I1  _CMPILE_YES     .DEFINE         "1"
  303                              78 I1  _CMPILE_NO      .DEFINE         "0"
  304                              79 I1  
  305                              80 I1  _Debug_YES      .DEFINE         "1"     ;"_Debug_NO"
  306                              81 I1  _Debug_NO       .DEFINE         "0"     ;yes then abs //no then inc "_Debug_NO"
  307                              82 I1  
  308                              83 I1  
  309                              84 I1  ;       ***************************************************
  310                              85 I1  ;       ***                                             ***
  311                              86 I1  ;       ***              ﬁ∞ºﬁÆ›UPäÆóπ¡™Ø∏√ﬁ∞¿           ***
  312                              87 I1  ;       ***                                             ***
  313                              88 I1  ;       ***************************************************
  314          11AB3739            89 I1  _VUPCHECK_EQU           .EQU    D'0296433465
  315                              90 I1  
  316                              91 I1  ;/*     ***********************************     */
  317                              92 I1  ;/*     ***                             ***     */
  318                              93 I1  ;/*     ***     ROM SUM_CODE            ***     */
  319                              94 I1  ;/*     ***                             ***     */
  320                              95 I1  ;/*     ***********************************     */
  321          5AA53CC3            96 I1  _DUMMY_SUM_CODE         .EQU    H'5AA53CC3
  322                              97 I1  
  323                              98 I1  
  324                              99 I1  
  325                             100 I1  ;       *******************************************
  326                             101 I1  ;       ***     2003-07-01 C/B BAKUP            ***
  327                             102 I1  ;       *******************************************
  328          5AA51234           103 I1  _CB_BAK_SUM_COD1        .EQU    H'5AA51234
  329          A55A4321           104 I1  _CB_BAK_SUM_COD2        .EQU    H'A55A4321
  330          00005678           105 I1  _CB_BAKUP_CMD1          .EQU    H'5678  ;BAKUP
  331          00001234           106 I1  _CB_BAKUP_CMD2          .EQU    H'1234  ;1BLK MOVE
  332                             107 I1  
  333          00000040           108 I1  _CB_STS_BUF_1BLK        .EQU    64                                      ;1BLK=64byte
  334          00000008           109 I1  _CB_STS_BUF_BLKMAX      .EQU    8                                       ;8BLK
  335          00000200           110 I1  _CB_STS_BUF_MAX         .EQU    _CB_STS_BUF_1BLK*_CB_STS_BUF_BLKMAX     ;512byte 64*8
  336                             111 I1  
  337                             112 I1  
  338                             113 I1  ;;_CB_TRD_DT_LNG                .EQU    4               ;DATA LENGTH
  339          00000004           114 I1  _CB_TRD_DP_CH                   .EQU    4               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     7
PROGRAM NAME =

  340                             115 I1  
  341                             116 I1  
  342          00000080           117 I1  _CB_TRD_SMP_CNT         .EQU    128             ;å¬êî
  343          00000060           118 I1  _CB_TRD_BEFORE          .EQU    96              ;96ì_Ç™ëO
  344          00000800           119 I1  _CB_TRD_BUF_MAX         .EQU    4*4*128         ;2048byte 4byte*4ch*128å¬
  345                             120 I1  
  346          00000008           121 I1  _CB_TRD_DP_1CNT         .EQU    8               ;8å¬ 128/16
  347          00000080           122 I1  _CB_TRD_BUF_DP_MAX      .EQU    4*4*8           ;128byte 4byte*4CH*8å¬
  348                             123 I1  
  349                             124 I1  ;       === 2003-07-14 ===
  350                             125 I1  ;;;_TRD_WORK_1CH_BUF    .EQU    _CB_TRD_BUF_MAX ;1CH Ç≈2048 ﬁ≤ƒÇ‹Ç≈ämï€
  351                             126 I1  
  352                             127 I1  ;       ==== 2004-01-27 ===
  353                             128 I1  ;;2018-11-11 _CB_ERR_INFO_MEM   .EQU    64              ;64byte
  354          00000080           129 I1  _CB_ERR_INFO_MEM        .EQU    128             ;2018-11-11 128byte
  355          00000008           130 I1  _CB_ERR_INFO_PSIZE      .EQU    8               ;8 PAGE 2018-11-11
  356                             131 I1  
  357                             132 I1  ;       ***************************
  358                             133 I1  ;       ***     2004-02-19      ***
  359                             134 I1  ;       ***************************
  360                             135 I1  ;       êªïièoâ◊éûÇÕYESÇ…Ç∑ÇÈÇ±Ç∆
  361                             136 I1  ;       ïsãÔçáçƒåªééå±ópÇ…NOÇ…Ç∑ÇÈ
  362                             137 I1  ;
  363                             138 I1  ;;;;_PLSI_WR_WT_CHG             .DEFINE         "0"     ;YES:WR WAIT 4CLK(NO 3CLK)
  364                             139 I1  
  365                             140 I1  ;       ===== èoâ◊YES =====
  366                             141 I1  _PLSI_WR_WT_CHG         .DEFINE         "1"     ;YES:WR WAIT 4CLK(NO 3CLK)
  367                             142 I1  _PLSI_WRITE_WORD        .DEFINE         "1"     ;YES:LSI WORD(NO LONG)
  368                             143 I1  _PLSI_ERR_CHK1          .DEFINE         "1"     ;YES:à íuåàÇﬂLSIàŸèÌåüímóLå¯
  369                             144 I1  _PLSI_ERR_CHK2          .DEFINE         "1"     ;YES:à íuåàÇﬂââéZàŸèÌåüímóLå¯
  370                             145 I1  _PLSI_ERR_STOP1         .DEFINE         "1"     ;YES:êVãKàŸèÌåüímóLå¯(OVER RUN)
  371                             146 I1  
  372                             147 I1  
  373                             148 I1  ;       ====    èoâ◊éûYES 2004-03-29====
  374                             149 I1  _REST_PLS_MODFY         .DEFINE         "1"     ;YES:CPUAÇ…éc ﬂŸΩÇÇ†ÇÌÇπÇÈ,àŸèÌ
  375                             150 I1  ;;;;;_MOTION_ERR_CPU_B  .DEFINE         "1"     ;YES:CPU-BÇÃ”∞ºÆ›àŸèÌä÷òA(1ëŒ1Ç…Ç∑ÇÈ)
  376                             151 I1  
  377                             152 I1  
  378                             153 I1  
  379                             154 I1  ;       ====    èoâ◊éûïKÇ∏ÅEê‚ëŒ "NO" 2004-04-14(ê‚ëŒNOÇ≈èoâ◊)====
  380                             155 I1  _CPU_A_ERR_STOP         .DEFINE         "0"     ;YES:CPU-AàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBBÇÃ√ﬁ ﬁØ∏óp
  381                             156 I1  ;;;;;0          .DEFINE         "1"     ;YES:CPU-AàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBBÇÃ√ﬁ ﬁØ∏óp
  382                             157 I1  
  383                             158 I1  
  384                             159 I1  ;       ====    èoâ◊éûïKÇ∏ÅEê‚ëŒ "NO" 2004-12-20(ê‚ëŒNOÇ≈èoâ◊)====
  385                             160 I1  _CPU_B_ERR_STOP         .DEFINE         "0"     ;YES:CPU-BàŸèÌåüèoÇÇ‚ÇﬂÇÈÅBAÇÃ√ﬁ ﬁØ∏óp
  386                             161 I1  _CPU_B_CTRL_STOP        .DEFINE         "0"     ;YES:CPU-Bêßå‰ÇÇ‚ÇﬂÇÈÅBAÇÃ√ﬁ ﬁØ∏óp
  387                             162 I1  
  388                             163 I1  ;       ==== Ç«Ç§ÇµÇƒÇ‡âÒîÇ≈Ç´Ç»Ç¢àŸèÌ====
  389                             164 I1  _CPUAB_ERR_STOP_CNT     .DEFINE         "1"     ;
  390                             165 I1  
  391                             166 I1  ;       ***************************
  392                             167 I1  ;       ***                     ***
  393                             168 I1  ;       ***     2006-09-19      ***
  394                             169 I1  ;       ***                     ***
  395                             170 I1  ;       ***************************
  396                             171 I1  _LSI_SOFT_CAL_ENB       .DEFINE         "1"
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     8
PROGRAM NAME =

  397                             172 I1  ;;1     .DEFINE         "0"
  398                             173 I1  
  399                             174 I1  
  400                             175 I1  
  401                             176 I1  ;       ***************************
  402                             177 I1  ;       ***                     ***
  403                             178 I1  ;       ***     2008-09-16      ***
  404                             179 I1  ;       ***                     ***
  405                             180 I1  ;       ***************************
  406                             181 I1  _EMG_MINI               .DEFINE         "1"     ;YES:EMGèàóùÇÃä»ó™âª
  407                             182 I1  
  408                             183 I1  
  409                             184 I1  ;       ***************************
  410                             185 I1  ;       ***                     ***
  411                             186 I1  ;       ***                     ***
  412                             187 I1  ;       ***                     ***
  413                             188 I1  ;       ***************************
  414                             189 I1  _CPUB_TBLCURV           .DEFINE         "1"     ;YES:ã»ê¸√∞ÃﬁŸ(CPUAÇ∆ìØÇ∂) NO:íºê¸É^ÉCÉv
  415                             190 I1  ;;1             .DEFINE         "0"     ;YES:ã»ê¸√∞ÃﬁŸ(CPUAÇ∆ìØÇ∂) NO:íºê¸É^ÉCÉv
  416                             191 I1  
  417                             192 I1  
  418                             193 I1  
  419                             194 I1  
  420                             195 I1  ;       ***************************
  421                             196 I1  ;       ***                     ***
  422                             197 I1  ;       ***     2013-12-05      ***
  423                             198 I1  ;       ***                     ***
  424                             199 I1  ;       ***************************
  425                             200 I1  _MC_FUNC1_NO            .DEFINE         "0"     ;NO!:àŸèÌìôÇÃã@î\ÇÇÕÇ∏Ç∑
  426                             201 I1  
  427                             202 I1  
  428          00009876           203 I1  _START_REQ_COD          .EQU    H'9876  ;CPUD=>CPUA
  429          00004321           204 I1  _START_ACK_COD          .EQU    H'4321  ;
  430                             205 I1  
  431                             206 I1  
  432                             207 I1  
  433                             208 I1  
  434                             209 I1  ;       ***************************
  435                             210 I1  ;       ***                     ***
  436                             211 I1  ;       ***     2014-03-20      ***
  437                             212 I1  ;       ***                     ***
  438                             213 I1  ;       ***************************
  439                             214 I1  _KJYU_CLS               .DEFINE         "1"     ;YES:îΩì]”∞ƒﬁÇ≈â◊èdÇ≈ÇÃ∏€∞ΩﬁÇçsÇ§
  440                             215 I1  
  441                             216 I1  
  442                             217 I1  ;//     ***************************
  443                             218 I1  ;//     ***     2016-10-31      ***
  444                             219 I1  ;//     ***************************
  445                             220 I1  ;//     ïœçXâ”èäämîFóp  CE2ÇÃ2èdâÒòHëŒçÙÇÃèCê≥â”èäÇÃMCÇ÷ÇÃà⁄êA
  446                             221 I1  _PROC_CMPERR_CHG2016    .DEFINE         "1"
  447                             222 I1  
  448                             223 I1  ;//     ***********************************
  449                             224 I1  ;//     ***     2016-10-31(2016-07-28)  ***
  450                             225 I1  ;//     ***********************************
  451                             226 I1  ;       [çsíˆàŸèÌåüímÇ…ÇÊÇÈìÒèdâÒòHàŸèÌÅ@ëÅÇﬂÇÃåüím]
  452                             227 I1  ;;;_DEBUG_CMPERR_DEBUG  .DEFINE         "1"     ;èoâ◊éûÇÕïKÇ∏NO!
  453                             228 I1  _DEBUG_CMPERR_DEBUG     .DEFINE         "0"     ;èoâ◊éûÇÕïKÇ∏NO!
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE     9
PROGRAM NAME =

  454                             229 I1  
  455                             230 I1  ;//     ***********************************
  456                             231 I1  ;//     ***     2016-10-31(2016-07-28)  ***
  457                             232 I1  ;//     ***********************************
  458                             233 I1  ;;;_DEBUG_AUTO_START    .DEFINE         "1"     ;èoâ◊éûÇÕÇ≈Ç´ÇÍÇŒnoÇ∆Ç∑ÇÈ
  459                             234 I1  _DEBUG_AUTO_START       .DEFINE         "0"     ;èoâ◊éûÇÕÇ≈Ç´ÇÍÇŒnoÇ∆Ç∑ÇÈ
  460                             235 I1  
  461                             236 I1  ;//     ***************************
  462                             237 I1  ;//     ***     2015-07-08      ***
  463                             238 I1  ;//     ***************************
  464                             239 I1  ;;_DEBUG_SERVO_PLS_OFF  .DEFINE         "1"     ;èoâ◊éûÇÕïKÇ∏NO!
  465                             240 I1  _DEBUG_SERVO_PLS_OFF    .DEFINE         "0"     ;èoâ◊éûÇÕïKÇ∏NO!
  466                             241 I1  
  467                             242 I1  
  468                             243 I1  
  469                             244 I1  ;       ***************************************************
  470                             245 I1  ;       ***     èoâ◊ÇµÇƒÇÕÇ¢ÇØÇ»Ç¢ÉfÉoÉbÉNèÓïÒ          ***
  471                             246 I1  ;       ***     ÉoÅ[ÉWÉáÉìï\é¶ÇÇÌÇ¥Ç∆ïœÇ…Ç∑ÇÈ          ***
  472                             247 I1  ;       ***************************************************
  473                             248 I1  ;       MC:S01a ->X
  474                             249 I1  
  475                             250 I1   .AIF   0 EQ 1  ;èoâ◊éûÇÕïKÇ∏NO!
  476                             251     _DEBUG_SET_ERR_VER      .DEFINE         "1"     ;àŸèÌ
  477                             252      .AELSE
  478                             253 C       .AIF        0 EQ 1  ;èoâ◊éûÇÕÇ≈Ç´ÇÍÇŒno
  479                             254     _DEBUG_SET_ERR_VER      .DEFINE         "1"     ;àŸèÌ
  480                             255         .AELSE
  481                             256 C           .AIF    0 EQ 1  ;èoâ◊éûïKÇ∏NO
  482                             257     _DEBUG_SET_ERR_VER      .DEFINE         "1"     ;àŸèÌ
  483                             258             .AELSE
  484                             259 C   _DEBUG_SET_ERR_VER      .DEFINE         "0"
  485                             260 C           .AENDI
  486                             261 C       .AENDI
  487                             262 C   
  488                             263 C   
  489                             264 I1   .AENDI
  490                             265 I1  
  491                             266 I1  
  492                             267 I1  
  493                             268 I1  ;       ***************************************************
  494                             269 I1  ;       ***                                             ***
  495                             270 I1  ;       ***     ∫“›ƒÇÃÇΩÇﬂÇÃEQU                         ***
  496                             271 I1  ;       ***     êUÇËéq100íiÇ≈Ç‡10íiÇ‹Ç≈ÇÕâ¡å∏ë¨óL       ***
  497                             272 I1  ;       ***                                             ***
  498                             273 I1  ;       ***************************************************
  499                             274 I1  _CHG_DNM_20170225       .DEFINE         "1"     ;
  500                              13             .INCLUDE        "shn_cmd1.MAC"          ;
  501                               1 I1  ;       ***********************************
  502                               2 I1  ;       ***     ñΩóﬂíuä∑É}ÉNÉç sh2/sh3  ***
  503                               3 I1  ;       ***********************************
  504                               4 I1  
  505                               5 I1  ;       ***********************************
  506                               6 I1  ;       ***     ñ≥èåèºÆ∞ƒJUMP          ***
  507                               7 I1  ;       ***********************************
  508                               8 I1          .MACRO  M_BRA   JMP_LABEL
  509                               9 I1          BRA     \JMP_LABEL
  510                              10 I1          NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    10
PROGRAM NAME =

  511                              11 I1          .ENDM
  512                              12 I1  
  513                              13 I1  ;       ***********************************
  514                              14 I1  ;       ***     ñ≥èåèºÆ∞ƒJUMP          ***
  515                              15 I1  ;       ***********************************
  516                              16 I1          .MACRO  X_BRA   JMP_LABEL
  517                              17 I1          BRA     \JMP_LABEL
  518                              18 I1          .ENDM
  519                              19 I1  
  520                              20 I1  ;       ***********************************
  521                              21 I1  ;       ***     LONG JUMP               ***
  522                              22 I1  ;       ***********************************
  523                              23 I1          .MACRO  M_JMP   JMP_LABEL,WKREG
  524                              24 I1          MOV.L   \JMP_LABEL,\WKREG
  525                              25 I1          JMP     @\WKREG
  526                              26 I1          NOP
  527                              27 I1          .ENDM
  528                              28 I1  
  529                              29 I1          .MACRO  REG_JMP WKREG
  530                              30 I1          JMP     @\WKREG
  531                              31 I1          NOP
  532                              32 I1          .ENDM
  533                              33 I1  
  534                              34 I1  
  535                              35 I1  
  536                              36 I1  ;       ***************************
  537                              37 I1  ;       ***     JMP COMMAND     ***
  538                              38 I1  ;       ***************************
  539                              39 I1          .MACRO  JMP_LMEM MEM_ADR,WKREG1
  540                              40 I1          MOV.L   \MEM_ADR,\WKREG1                        ;
  541                              41 I1          JMP     @\WKREG1
  542                              42 I1          NOP
  543                              43 I1          .ENDM
  544                              44 I1  
  545                              45 I1  
  546                              46 I1  ;       ***************************
  547                              47 I1  ;       ***     PUSH REG        ***
  548                              48 I1  ;       ***************************
  549                              49 I1  ;       REG --->(R15)[STACK]
  550                              50 I1  ;                R15=R15+4
  551                              51 I1  
  552                              52 I1          .MACRO  PUSH_REG1       WKREG1
  553                              53 I1          MOV.L   \WKREG1,@-R15           ;PUSH=SP-4
  554                              54 I1                                          ;REG=>[SP]
  555                              55 I1                                          ;"-4" FF,FF,FF,FC
  556                              56 I1          .ENDM
  557                              57 I1  ;       ***************************
  558                              58 I1  ;       ***     POP REG         ***
  559                              59 I1  ;       ***************************
  560                              60 I1          .MACRO  POP_REG1        WKREG1
  561                              61 I1                                  ; RE"+4" 00,00,00,04
  562                              62 I1          MOV.L   @R15+,\WKREG1        ;
  563                              63 I1          .ENDM
  564                              64 I1  
  565                              65 I1  
  566                              66 I1  ;       ======= SYSTEM REGISTER :PR,MACL,MACH =====
  567                              67 I1  ;       ***************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    11
PROGRAM NAME =

  568                              68 I1  ;       ***     PR-->STACK      ***
  569                              69 I1  ;       ***************************
  570                              70 I1          .MACRO  PUSH_PR
  571                              71 I1          STS.L   PR,@-R15
  572                              72 I1          .ENDM
  573                              73 I1  
  574                              74 I1  ;       ***************************
  575                              75 I1  ;       ***     PR<--STACK      ***
  576                              76 I1  ;       ***************************
  577                              77 I1          .MACRO  POP_PR
  578                              78 I1          LDS.L   @R15+,PR
  579                              79 I1          .ENDM
  580                              80 I1  
  581                              81 I1  ;       ***************************
  582                              82 I1  ;       ***     PR-->STACK      ***
  583                              83 I1  ;       ***************************
  584                              84 I1          .MACRO  INT_PUSH_PR
  585                              85 I1          STS.L   PR,@-R15
  586                              86 I1          .ENDM
  587                              87 I1  
  588                              88 I1  ;       ***************************
  589                              89 I1  ;       ***     PR<--STACK      ***
  590                              90 I1  ;       ***************************
  591                              91 I1          .MACRO  INT_POP_PR
  592                              92 I1          LDS.L   @R15+,PR
  593                              93 I1          .ENDM
  594                              94 I1  
  595                              95 I1  ;       ***************************
  596                              96 I1  ;       ***     MACHL-->STACK   ***
  597                              97 I1  ;       ***************************
  598                              98 I1          .MACRO  PUSH_MACHL
  599                              99 I1          STS.L   MACH,@-R15
  600                             100 I1          STS.L   MACL,@-R15
  601                             101 I1          .ENDM
  602                             102 I1  
  603                             103 I1  ;       ***************************
  604                             104 I1  ;       ***     MACHL<--STACK   ***
  605                             105 I1  ;       ***************************
  606                             106 I1          .MACRO  POP_MACHL
  607                             107 I1          LDS.L   @R15+,MACL
  608                             108 I1          LDS.L   @R15+,MACH
  609                             109 I1          .ENDM
  610                             110 I1  
  611                             111 I1  
  612                             112 I1  ;       *******************************************
  613                             113 I1  ;       ***     PUSH,POP SYSTEM CTRL REG        ***
  614                             114 I1  ;       *******************************************
  615                             115 I1          .MACRO  PUSH_SYS_REG    WKREG
  616                             116 I1          STC.L   \WKREG,@-R15
  617                             117 I1          .ENDM
  618                             118 I1  
  619                             119 I1          .MACRO  POP_SYS_REG     WKREG
  620                             120 I1          LDC.L   @R15+,\WKREG
  621                             121 I1          .ENDM
  622                             122 I1  
  623                             123 I1  ;       ***********************************
  624                             124 I1  ;       ***     ªÃﬁŸ∞¡›Ω¿∞ƒ             ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    12
PROGRAM NAME =

  625                             125 I1  ;       ***********************************
  626                             126 I1          .MACRO  SUB_START
  627                             127 I1          STS.L   PR,@-R15                ;[ïKóv]
  628                             128 I1  ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
  629                             129 I1          .ENDM
  630                             130 I1  
  631                             131 I1  ;       ***********************************
  632                             132 I1  ;       ***     ªÃﬁŸ∞¡›END              ***
  633                             133 I1  ;       ***********************************
  634                             134 I1          .MACRO  SUB_END                 ;
  635                             135 I1  ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
  636                             136 I1          LDS.L   @R15+,PR                ;[ïKóv]
  637                             137 I1          .ENDM
  638                             138 I1  
  639                             139 I1  ;       ***********************************
  640                             140 I1  ;       ***     RET                     ***
  641                             141 I1  ;       ***********************************
  642                             142 I1          .MACRO  M_RTS
  643                             143 I1          RTS                             ;RTSÇÃå„ÇÎÇÃ
  644                             144 I1          NOP                             ;@R15+,PRÇÕ¿ﬁ“
  645                             145 I1          .ENDM
  646                             146 I1  
  647                             147 I1  ;       *******************************************
  648                             148 I1  ;       ***     FAR CALL ASM-->C COMMAND        ***
  649                             149 I1  ;       *******************************************
  650                             150 I1          .MACRO  FAR_JSR MEM_ADR,WKREG1
  651                             151 I1          MOV.L   \MEM_ADR,\WKREG1                ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
  652                             152 I1          JSR     @\WKREG1                        ;
  653                             153 I1          NOP                                     ;
  654                             154 I1          .ENDM
  655                             155 I1  
  656                             156 I1          .MACRO  JSR_REG WKREG1
  657                             157 I1          JSR     @\WKREG1                        ;
  658                             158 I1          NOP                                     ;
  659                             159 I1          .ENDM
  660                             160 I1  
  661                             161 I1  ;       ***********************************
  662                             162 I1  ;       ***     NEAR CALL COMMAND       ***
  663                             163 I1  ;       ***********************************
  664                             164 I1          .MACRO  NEAR_BSR        CALL_LABEL              ;
  665                             165 I1          BSR     \CALL_LABEL                             ;
  666                             166 I1          NOP
  667                             167 I1          .ENDM
  668                             168 I1  
  669                             169 I1  ;       ***********************************
  670                             170 I1  ;       ***     äÑçûRETUNR              ***
  671                             171 I1  ;       ***********************************
  672                             172 I1          .MACRO  M_RTE
  673                             173 I1          RTE
  674                             174 I1          NOP
  675                             175 I1          .ENDM
  676                             176 I1  
  677                             177 I1  
  678                             178 I1  
  679                             179 I1  
  680                             180 I1  ;       ***************************
  681                             181 I1  ;       ***     DI              ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    13
PROGRAM NAME =

  682                             182 I1  ;       ***************************
  683                             183 I1  ;;;;égópã÷é~    .MACRO  DI_PUSH_SR      WK_REG
  684                             184 I1  ;;;;            MOV     #B'11110000,\WK_REG             ;
  685                             185 I1  ;;;;            EXTU.B  \WK_REG,\WK_REG                 ;0 CLR BIT15~BIT8
  686                             186 I1  ;;;;            STC.L   SR,@-R15                        ;PUSH SR
  687                             187 I1  ;;;;            LDC     \WK_REG,SR                      ;äÑçûã÷é~Åi15Åj
  688                             188 I1  ;;;;            .ENDM
  689                             189 I1  
  690                             190 I1  ;       ***************************
  691                             191 I1  ;       ***     EI              ***
  692                             192 I1  ;       ***************************
  693                             193 I1  ;;;;égópã÷é~    .MACRO  EI_POP_SR                       ;
  694                             194 I1  ;;;;            LDC.L   @R15+,SR                        ;POP SR
  695                             195 I1  ;;;;            .ENDM
  696                             196 I1  
  697                             197 I1  
  698                             198 I1  
  699                             199 I1  ;       *******************************************
  700                             200 I1  ;       ***     TSTñΩóﬂéûÇÃBT,BFÇÃíuÇ´ä∑Ç¶      ***
  701                             201 I1  ;       ******************************************
  702                             202 I1          .MACRO  TST_BIT_ON      JMP_LABEL
  703                             203 I1          BF      \JMP_LABEL
  704                             204 I1          .ENDM
  705                             205 I1  
  706                             206 I1          .MACRO  TST_BIT_OF      JMP_LABEL
  707                             207 I1          BT      \JMP_LABEL
  708                             208 I1          .ENDM
  709                             209 I1  
  710                             210 I1  ;       *******************************************
  711                             211 I1  ;       ***     TSTñΩóﬂéûÇÃBT,BFÇÃíuÇ´ä∑Ç¶      ***
  712                             212 I1  ;       *******************************************
  713                             213 I1          .MACRO  TST_BITON_DLY   JMP_LABEL
  714                             214 I1          BF/S    \JMP_LABEL
  715                             215 I1          .ENDM
  716                             216 I1  
  717                             217 I1          .MACRO  TST_BITOF_DLY   JMP_LABEL
  718                             218 I1          BT/S    \JMP_LABEL
  719                             219 I1          .ENDM
  720                             220 I1  
  721                             221 I1  ;       ***********************************
  722                             222 I1  ;       ***                             ***
  723                             223 I1  ;       ***     ïÇìÆè¨êîì_push/pop      ***
  724                             224 I1  ;       ***                             ***
  725                             225 I1  ;       ***                             ***
  726                             226 I1  ;       ***********************************
  727                             227 I1          .MACRO  PUSH_SYS_FPU
  728                             228 I1          STS.L   FPUL,@-R15
  729                             229 I1          STS.L   FPSCR,@-R15
  730                             230 I1          .ENDM
  731                             231 I1  
  732                             232 I1          .MACRO  POP_SYS_FPU
  733                             233 I1          LDS.L   @R15+,FPSCR
  734                             234 I1          LDS.L   @R15+,FPUL
  735                             235 I1          .ENDM
  736                             236 I1  
  737                             237 I1  
  738                             238 I1          .MACRO  PUSH_FPU_REG1 WKREG
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    14
PROGRAM NAME =

  739                             239 I1          FMOV.S  \WKREG,@-R15
  740                             240 I1          .ENDM
  741                             241 I1  
  742                             242 I1          .MACRO  POP_FPU_REG1 WKREG
  743                             243 I1          FMOV.S  @R15+,\WKREG
  744                             244 I1          .ENDM
  745                             245 I1  
  746                             246 I1          .MACRO  PUSH_FPU_ALL
  747                             247 I1                  PUSH_SYS_FPU            ;2001-07-08 koma add
  748                             248 I1                  PUSH_FPU_REG1 FR0       ;
  749                             249 I1                  PUSH_FPU_REG1 FR1       ;
  750                             250 I1                  PUSH_FPU_REG1 FR2       ;
  751                             251 I1                  PUSH_FPU_REG1 FR3       ;
  752                             252 I1                  PUSH_FPU_REG1 FR4       ;
  753                             253 I1          .ENDM
  754                             254 I1  
  755                             255 I1          .MACRO  POP_FPU_ALL
  756                             256 I1                  POP_FPU_REG1 FR4        ;2001-07-08 koma add
  757                             257 I1                  POP_FPU_REG1 FR3        ;
  758                             258 I1                  POP_FPU_REG1 FR2        ;
  759                             259 I1                  POP_FPU_REG1 FR1        ;
  760                             260 I1                  POP_FPU_REG1 FR0        ;
  761                             261 I1                  POP_SYS_FPU             ;
  762                             262 I1          .ENDM
  763                             263 I1  
  764                             264 I1  
  765                             265 I1  
  766                             266 I1  ;       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  767                             267 I1  ;       ~~~     êÍópœ∏€         ~~~
  768                             268 I1  ;       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  769                             269 I1          .MACRO  PUSH_ALL
  770                             270 I1          PUSH_REG1       R0      ;
  771                             271 I1          PUSH_REG1       R1      ;
  772                             272 I1          PUSH_REG1       R2      ;
  773                             273 I1          PUSH_REG1       R3      ;
  774                             274 I1          PUSH_REG1       R4      ;
  775                             275 I1          PUSH_REG1       R5      ;
  776                             276 I1          PUSH_REG1       R6      ;
  777                             277 I1          PUSH_REG1       R7      ;
  778                             278 I1          PUSH_REG1       R8      ;
  779                             279 I1          PUSH_REG1       R9      ;
  780                             280 I1          PUSH_REG1       R10     ;
  781                             281 I1          PUSH_REG1       R11     ;
  782                             282 I1          PUSH_REG1       R12     ;
  783                             283 I1          PUSH_REG1       R13     ;
  784                             284 I1          PUSH_REG1       R14     ;
  785                             285 I1          PUSH_MACHL              ;
  786                             286 I1          PUSH_SYS_REG    GBR     ;
  787                             287 I1          .AIF    _SIT_CPU_SEL EQ _SIT4_CPUB
  788                             288 I1          .AELSE
  789                             289 I1          PUSH_FPU_ALL            ;2001-07-08
  790                             290 I1          .AENDI
  791                             291 I1          .ENDM
  792                             292 I1  
  793                             293 I1  
  794                             294 I1          .MACRO  POP_ALL         ;
  795                             295 I1          .AIF    _SIT_CPU_SEL EQ _SIT4_CPUB
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    15
PROGRAM NAME =

  796                             296 I1          .AELSE
  797                             297 I1          POP_FPU_ALL             ;2001-07-08
  798                             298 I1          .AENDI
  799                             299 I1          POP_SYS_REG     GBR     ;
  800                             300 I1          POP_MACHL               ;
  801                             301 I1          POP_REG1        R14     ;
  802                             302 I1          POP_REG1        R13     ;
  803                             303 I1          POP_REG1        R12     ;
  804                             304 I1          POP_REG1        R11     ;
  805                             305 I1          POP_REG1        R10     ;
  806                             306 I1          POP_REG1        R9      ;
  807                             307 I1          POP_REG1        R8      ;
  808                             308 I1          POP_REG1        R7      ;
  809                             309 I1          POP_REG1        R6      ;
  810                             310 I1          POP_REG1        R5      ;
  811                             311 I1          POP_REG1        R4      ;
  812                             312 I1          POP_REG1        R3      ;
  813                             313 I1          POP_REG1        R2      ;
  814                             314 I1          POP_REG1        R1      ;
  815                             315 I1          POP_REG1        R0      ;
  816                             316 I1          .ENDM
  817                             317 I1  
  818                             318 I1  ;       *******************************************
  819                             319 I1  ;       ***                                     ***
  820                             320 I1  ;       ***                                     ***
  821                             321 I1  ;       ***             SH3êÍópœ∏€              ***
  822                             322 I1  ;       ***                                     ***
  823                             323 I1  ;       *******************************************
  824                             324 I1  ;       ***************************
  825                             325 I1  ;       ***     SSR-->STACK     ***
  826                             326 I1  ;       ***************************
  827                             327 I1  ;       sr-->ssr
  828                             328 I1          .MACRO  PUSH_SSR
  829                             329 I1          STS.L   SSR,@-R15
  830                             330 I1          .ENDM
  831                             331 I1  
  832                             332 I1  ;       ***************************
  833                             333 I1  ;       ***     SSR<--STACK     ***
  834                             334 I1  ;       ***************************
  835                             335 I1          .MACRO  POP_SSR
  836                             336 I1          LDS.L   @R15+,SSR
  837                             337 I1          .ENDM
  838                             338 I1  
  839                             339 I1  
  840                             340 I1  ;       ***************************
  841                             341 I1  ;       ***     SSR-->STACK     ***
  842                             342 I1  ;       ***************************
  843                             343 I1  ;       sr-->SSR
  844                             344 I1          .MACRO  PUSH_SPC
  845                             345 I1          STS.L   SPC,@-R15
  846                             346 I1          .ENDM
  847                             347 I1  
  848                             348 I1  ;       ***************************
  849                             349 I1  ;       ***     SSR<--STACK     ***
  850                             350 I1  ;       ***************************
  851                             351 I1          .MACRO  POP_SPC
  852                             352 I1          LDS.L   @R15+,SPC
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    16
PROGRAM NAME =

  853                             353 I1          .ENDM
  854                             354 I1  
  855                             355 I1  
  856                             356 I1  ;;;égópã÷é~     .MACRO  PUSH_ALL_SH3
  857                             357 I1  ;;;     PUSH_REG1       R0      ;
  858                             358 I1  ;;;     PUSH_REG1       R1      ;
  859                             359 I1  ;;;     PUSH_REG1       R2      ;
  860                             360 I1  ;;;     PUSH_REG1       R3      ;
  861                             361 I1  ;;;     PUSH_REG1       R4      ;
  862                             362 I1  ;;;     PUSH_REG1       R5      ;
  863                             363 I1  ;;;     PUSH_REG1       R6      ;
  864                             364 I1  ;;;     PUSH_REG1       R7      ;
  865                             365 I1  ;;;     PUSH_REG1       R8      ;
  866                             366 I1  ;;;     PUSH_REG1       R9      ;
  867                             367 I1  ;;;     PUSH_REG1       R10     ;
  868                             368 I1  ;;;     PUSH_REG1       R11     ;
  869                             369 I1  ;;;     PUSH_REG1       R12     ;
  870                             370 I1  ;;;     PUSH_REG1       R13     ;
  871                             371 I1  ;;;     PUSH_REG1       R14     ;
  872                             372 I1  ;;;     PUSH_MACHL              ;
  873                             373 I1  ;;;     PUSH_SYS_REG    GBR     ;
  874                             374 I1  ;;;     .ENDM
  875                             375 I1  
  876                             376 I1  
  877                             377 I1  ;;;égópã÷é~     .MACRO  POP_ALL_SH3
  878                             378 I1  ;;;     POP_SYS_REG     GBR     ;
  879                             379 I1  ;;;     POP_MACHL               ;
  880                             380 I1  ;;;     POP_REG1        R14     ;
  881                             381 I1  ;;;     POP_REG1        R13     ;
  882                             382 I1  ;;;     POP_REG1        R12     ;
  883                             383 I1  ;;;     POP_REG1        R11     ;
  884                             384 I1  ;;;     POP_REG1        R10     ;
  885                             385 I1  ;;;     POP_REG1        R9      ;
  886                             386 I1  ;;;     POP_REG1        R8      ;
  887                             387 I1  ;;;     POP_REG1        R7      ;
  888                             388 I1  ;;;     POP_REG1        R6      ;
  889                             389 I1  ;;;     POP_REG1        R5      ;
  890                             390 I1  ;;;     POP_REG1        R4      ;
  891                             391 I1  ;;;     POP_REG1        R3      ;
  892                             392 I1  ;;;     POP_REG1        R2      ;
  893                             393 I1  ;;;     POP_REG1        R1      ;
  894                             394 I1  ;;;     POP_REG1        R0      ;
  895                             395 I1  ;;;     .ENDM
  896                             396 I1  
  897                             397 I1  
  898                             398 I1          .MACRO  PUSH_INT_SYSREG                 ;
  899                             399 I1          PUSH_SPC                                ;PC->SPC->STACK
  900                             400 I1          PUSH_SSR                                ;SR->ssr->STACK
  901                             401 I1          PUSH_PR                                 ;RET _ADRESS ->PR->STACK
  902                             402 I1          .ENDM                                   ;
  903                             403 I1  
  904                             404 I1          .MACRO  POP_INT_SYSREG                  ;
  905                             405 I1          POP_PR                                  ;PR
  906                             406 I1          POP_SSR                                 ;ssr
  907                             407 I1          POP_SPC                                 ;SPC
  908                             408 I1          .ENDM                                   ;
  909                             409 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    17
PROGRAM NAME =

  910                             410 I1  
  911                             411 I1  
  912                             412 I1  
  913                             413 I1  
  914                             414 I1  ;       ***************************
  915                             415 I1  ;       ***     DI              ***
  916                             416 I1  ;       ***************************
  917                             417 I1          .MACRO  DI_PUSH_SR_SH3  WK_REG1,WK_REG2
  918                             418 I1          STC     SR,\WK_REG1                     ;
  919                             419 I1          MOV.W   #H'000000F0,\WK_REG2            ;
  920                             420 I1          OR      \WK_REG2,\WK_REG1               ;INT15
  921                             421 I1          STC.L   SR,@-R15                        ;PUSH SR
  922                             422 I1          LDC     \WK_REG1,SR                     ;äÑçûã÷é~Åi15Åj
  923                             423 I1          .ENDM
  924                             424 I1  
  925                             425 I1  ;       ***************************
  926                             426 I1  ;       ***     EI              ***
  927                             427 I1  ;       ***************************
  928                             428 I1          .MACRO  EI_POP_SR_SH3                   ;
  929                             429 I1          LDC.L   @R15+,SR                        ;POP SR
  930                             430 I1          .ENDM
  931                             431 I1  
  932                             432 I1  
  933                             433 I1  
  934                             434 I1  
  935                             435 I1  
  936                             436 I1  ;       *******************************************
  937                             437 I1  ;       ***                                     ***
  938                             438 I1  ;       ***                                     ***
  939                             439 I1  ;       ***                                     ***
  940                             440 I1  ;       ***                                     ***
  941                             441 I1  ;       ***                                     ***
  942                             442 I1  ;       ***                                     ***
  943                             443 I1  ;       ***                                     ***
  944                             444 I1  ;       ***                                     ***
  945                             445 I1  ;       *******************************************
  946                             446 I1  ;       ***************************************************
  947                             447 I1  ;       ****    64BIT DATA ÇÃïÑçÜîΩì] WORKïKóv          ***
  948                             448 I1  ;       ***************************************************
  949                             449 I1          .MACRO  NEG1_64 H_REG,L_REG,WKREG
  950                             450 I1          NOT     \L_REG,\L_REG                           ;
  951                             451 I1          NOT     \H_REG,\H_REG                           ;
  952                             452 I1          XOR     \WKREG,\WKREG                           ;
  953                             453 I1          SETT
  954                             454 I1          ADDC    \WKREG,\L_REG                           ;0+1+R2
  955                             455 I1          ADDC    \WKREG,\H_REG                           ;
  956                             456 I1          .ENDM
  957                             457 I1  
  958                             458 I1  ;       ***********************************
  959                             459 I1  ;       ***     DWORD +MAX~ -MIN CHK    ***
  960                             460 I1  ;       ***********************************
  961                             461 I1  ;       åãâ ÇÕÿ–Øƒ√ﬁ∞¿ÇÃîΩì]Çï‘Ç∑
  962                             462 I1          .MACRO  REG_PMAX_MMIN   DATA_REG,MAX_MIN_REG
  963                             463 I1          CMP/GE  \DATA_REG,\MAX_MIN_REG          ;
  964                             464 I1          BT      JMP01\@                         ;DATA =< MAX
  965                             465 I1          MOV     \MAX_MIN_REG,\DATA_REG          ;MAX LIMIT
  966                             466 I1  JMP01\@:                                        ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    18
PROGRAM NAME =

  967                             467 I1          NEG     \MAX_MIN_REG,\MAX_MIN_REG       ;
  968                             468 I1          CMP/GE  \MAX_MIN_REG,\DATA_REG          ;
  969                             469 I1          BT      JMP02\@                         ;MIN =< DATA
  970                             470 I1          MOV     \MAX_MIN_REG,\DATA_REG          ;MIN LIMIT
  971                             471 I1  JMP02\@:                                        ;
  972                             472 I1          NEG     \MAX_MIN_REG,\MAX_MIN_REG       ;
  973                             473 I1          .ENDM                                   ;
  974                             474 I1  
  975                             475 I1  ;       ***********************************
  976                             476 I1  ;       ***     DWORD +MAX~0 CHK        ***
  977                             477 I1  ;       ***********************************
  978                             478 I1          .MACRO  REG_PMAX_0_LMT  DATA_REG,MAX_REG
  979                             479 I1          CMP/PZ  \DATA_REG                       ;
  980                             480 I1          BT      JMP01\@                         ; data >=
  981                             481 I1          XOR     \DATA_REG,\DATA_REG             ;
  982                             482 I1  JMP01\@:                                        ;
  983                             483 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
  984                             484 I1          BT      JMP02\@                         ;DATA =< MAX
  985                             485 I1          MOV     \MAX_REG,\DATA_REG              ;
  986                             486 I1  JMP02\@:                                        ;
  987                             487 I1          .ENDM
  988                             488 I1  
  989                             489 I1  ;       ***********************************
  990                             490 I1  ;       ***     DWORD îÕàÕ¡™Ø∏ LMT      ***
  991                             491 I1  ;       ***********************************
  992                             492 I1  ;
  993                             493 I1          .MACRO  REG_PMAX_MMIN_LMT       DATA_REG,MAX_REG,MIN_REG
  994                             494 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
  995                             495 I1          BT      JMP01\@                         ;DATA =< MAX
  996                             496 I1          MOV     \MAX_REG,\DATA_REG              ;"+" MAX
  997                             497 I1          M_BRA   JMP02\@                         ;
  998                             498 I1  
  999                             499 I1  JMP01\@:                                        ;
 1000                             500 I1          CMP/GE  \MIN_REG,\DATA_REG              ;
 1001                             501 I1          BT      JMP02\@                         ;MIN =< DATA
 1002                             502 I1          MOV     \MIN_REG,\DATA_REG              ;"-" MAX
 1003                             503 I1  JMP02\@:                                        ;
 1004                             504 I1          .ENDM
 1005                             505 I1  
 1006                             506 I1  ;       ***********************************
 1007                             507 I1  ;       ***     DWORD îÕàÕ¡™Ø∏ CHK      ***
 1008                             508 I1  ;       ***********************************
 1009                             509 I1  ;
 1010                             510 I1  ;
 1011                             511 I1          .MACRO  REG_PMAX_MMIN_CHK       ANS_REG,DATA_REG,MAX_REG,MIN_REG
 1012                             512 I1          XOR     \ANS_REG,\ANS_REG               ;
 1013                             513 I1          CMP/GE  \DATA_REG,\MAX_REG              ;
 1014                             514 I1          BT      JMP01\@                         ;DATA =< MAX
 1015                             515 I1          MOV     #BIT0,\ANS_REG                  ;"+" MAX
 1016                             516 I1          M_BRA   JMP02\@                         ;
 1017                             517 I1  
 1018                             518 I1  JMP01\@:                                        ;
 1019                             519 I1          CMP/GE  \MIN_REG,\DATA_REG              ;
 1020                             520 I1          BT      JMP02\@                         ;MIN =< DATA
 1021                             521 I1          MOV     #BIT1,\ANS_REG                  ;"-"
 1022                             522 I1  JMP02\@:                                        ;
 1023                             523 I1          .ENDM
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    19
PROGRAM NAME =

 1024                             524 I1  ;       ***********************************
 1025                             525 I1  ;       ***     IF "-" THEN 0           ***
 1026                             526 I1  ;       ***********************************
 1027                             527 I1          .MACRO  IF_REG_MINS_THEN_0 DATA_REG
 1028                             528 I1          CMP/PL  \DATA_REG                       ;
 1029                             529 I1          BT      JMP01\@                         ;
 1030                             530 I1          XOR     \DATA_REG,\DATA_REG             ;
 1031                             531 I1  JMP01\@:                                        ;
 1032                             532 I1          .ENDM
 1033                             533 I1  
 1034                             534 I1  
 1035                             535 I1  ;       *******************************************
 1036                             536 I1  ;       ***     IF  REG >= MAX THEN MAX LIMIT   ***
 1037                             537 I1  ;       *******************************************
 1038                             538 I1  ;       IF R0 >= R1 THEN LIMIT R0<--R1  //REG1_CMP_REG2_LMT R0,GE,R1,R1,TO,R0   ;
 1039                             539 I1  ;       IF R0 =< R1 THEN LIMIT R0<--R1  //REG1_CMP_REG2_LMT R1,GE,R0,R1,TO,R0   ;
 1040                             540 I1          .MACRO  REG1_CMP_REG2_LMT REG1,CF,REG2,LMTREG,MEMO,ANSREG
 1041                             541 I1                                          ;MEMO
 1042                             542 I1          CMP/\CF \REG2,\REG1             ;REG1 >= REG2
 1043                             543 I1          BF      JMP01\@                 ;
 1044                             544 I1          MOV     \LMTREG,\ANSREG         ;
 1045                             545 I1  JMP01\@:                                ;
 1046                             546 I1                                          ;
 1047                             547 I1          .ENDM
 1048                             548 I1  
 1049                             549 I1  
 1050                             550 I1  ;       ***************************************************
 1051                             551 I1  ;       ***                                             ***
 1052                             552 I1  ;       ***                                             ***
 1053                             553 I1  ;       ***                                             ***
 1054                             554 I1  ;       ***             î‰är ⁄ºﬁΩ¿⁄ÕﬁŸ                  ***
 1055                             555 I1  ;       ***                                             ***
 1056                             556 I1  ;       ***                                             ***
 1057                             557 I1  ;       ***                                             ***
 1058                             558 I1  ;       ***************************************************
 1059                             559 I1  ;       *******************************************
 1060                             560 I1  ;       ***             à íu,à≥óÕî‰är           ***
 1061                             561 I1  ;       *******************************************
 1062                             562 I1          .MACRO  REG1_CMP_REG2_ROTL REG1,CF,REG2,ANS_REG         ;
 1063                             563 I1          CMP/\CF \REG2,\REG1                                     ;REG1 >= REG2
 1064                             564 I1          ROTCL   \ANS_REG                                        ;IF "0" ç∂
 1065                             565 I1          .ENDM                                                   ;
 1066                             566 I1  
 1067                             567 I1  ;       *******************************************
 1068                             568 I1  ;       ***             à íu,à≥óÕî‰är           ***
 1069                             569 I1  ;       *******************************************
 1070                             570 I1  ;       ANS."Tbit"
 1071                             571 I1          .MACRO  R1_AREA_R2_PV_ROTL  UP_REG,DN_REG,PV_REG                        ;
 1072                             572 I1          CMP/GE  \DN_REG,\PV_REG                                                 ;PV >= MIN
 1073                             573 I1          BF      JMPED\@                                                         ;"T=0"
 1074                             574 I1          CMP/GE  \PV_REG,\UP_REG                                                 ;
 1075                             575 I1          BF      JMPED\@                                                         ;"T=0"
 1076                             576 I1  JMPED\@:                                                                        ;
 1077                             577 I1          .ENDM                                                                   ;ANS."T"
 1078                             578 I1  
 1079                             579 I1  
 1080                             580 I1  ;       ***************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    20
PROGRAM NAME =

 1081                             581 I1  ;       ***     ÀΩ√ÿºΩïtÇ´î‰är                          ***
 1082                             582 I1  ;       ***************************************************
 1083                             583 I1  ;       å∏è≠ï˚å¸Ç…ÀΩ√ÿºΩÇì¸ÇÍÇÈ[å^äJäÆóπ,ëùà≥äÆóπ]
 1084                             584 I1  ;       data1  å≥ê›íË
 1085                             585 I1  ;       data2  [data1-HIS] data
 1086                             586 I1  ;       IF data1 < PV THEN "1"
 1087                             587 I1  ;       IF data2 > PV THEN "0"
 1088                             588 I1  ;       else Keep
 1089                             589 I1          .MACRO  UP1_HIS_DN_PV_ROTL  UP_REG,DN_REG,PV_REG,CF,OLDSQ,OLDBIT,CHKWKREG       ;G
                                          E or GT
 1090                             590 I1          CMP/\CF \UP_REG,\PV_REG                                                         ;P
                                          V >= UP THEN 1
 1091                             591 I1          BT      JMPED\@                                                                 ;"
                                          T=1"
 1092                             592 I1                                                                                          ;
 1093                             593 I1          CMP/\CF \DN_REG,\PV_REG                                                 ;PV >= DN
                                          NO THEN "0"
 1094                             594 I1          BF      JMPED\@                                                         ;PV < DN
 1095                             595 I1  
 1096                             596 I1  ;       --------- KEEP [REG BIT-->TÀﬁØƒ]---------
 1097                             597 I1          MOV.L   #\OLDBIT,\CHKWKREG                                              ;
 1098                             598 I1          TST     \CHKWKREG,\OLDSQ                                                ;"1" THEN
                                          T=0
 1099                             599 I1          MOVT    \CHKWKREG                                                       ;T-->reg
                                          [îΩì]]
 1100                             600 I1          TST     \CHKWKREG,\CHKWKREG                                             ;REG=0 THE
                                          N T=1   [îΩì]]
 1101                             601 I1  JMPED\@:                                                                        ;
 1102                             602 I1          .ENDM                                                                   ;ANS."T"
 1103                             603 I1  
 1104                             604 I1  
 1105                             605 I1  
 1106                             606 I1  ;       ëùâ¡ï˚å¸Ç…ÀΩ√ÿºΩÇì¸ÇÍÇÈ[à≥î≤äÆóπ]
 1107                             607 I1  ;       data1  å≥ê›íË
 1108                             608 I1  ;       data2  [data1+HIS] data
 1109                             609 I1  ;       IF data1 > PV THEN "1"
 1110                             610 I1  ;       IF data2 < PV THEN "0"
 1111                             611 I1  ;       else Keep
 1112                             612 I1  
 1113                             613 I1          .MACRO  DN1_HIS_UP_PV_ROTL  UP_REG,DN_REG,PV_REG,CF,OLDSQ,OLDBIT,CHKWKREG       ;G
                                          E or GT
 1114                             614 I1          CMP/\CF \UP_REG,\PV_REG                                                 ;PV >= UP
                                          THEN 1
 1115                             615 I1          BT      JMP1\@                                                          ;"T=1" ---
                                          -> neg "0"
 1116                             616 I1  
 1117                             617 I1          CMP/\CF \PV_REG,\DN_REG                                         ;DN >= PV  PV < DN
 1118                             618 I1          BT      JMPED\@                                                 ;NO "T=0"  "T=1"
 1119                             619 I1  
 1120                             620 I1  ;       --------- KEEP ---------
 1121                             621 I1          MOV.L   #\OLDBIT,\CHKWKREG                                      ;
 1122                             622 I1          TST     \CHKWKREG,\OLDSQ                                        ;"1" THEN T=0
 1123                             623 I1  JMP1\@:                                                                 ;
 1124                             624 I1  ;       --------- [TÀﬁØƒÇÃîΩì]]---------
 1125                             625 I1          MOVT    \CHKWKREG                                               ;T-->reg        [
                                          îΩì]]
 1126                             626 I1          TST     \CHKWKREG,\CHKWKREG                                     ;REG=0 THEN T=1 [
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    21
PROGRAM NAME =

                                          îΩì]]
 1127                             627 I1  JMPED\@:                                                                ;NO "T=0"  "T=1"
 1128                             628 I1  
 1129                             629 I1          .ENDM                                                                   ;ANS."T"
 1130                             630 I1  
 1131                             631 I1  
 1132                             632 I1  
 1133                             633 I1  
 1134                             634 I1  
 1135                             635 I1  
 1136                             636 I1  
 1137                             637 I1  ;       ***************************************************
 1138                             638 I1  ;       ***                                             ***
 1139                             639 I1  ;       ***             î‰är“”ÿ⁄ÕﬁŸ                     ***
 1140                             640 I1  ;       ***                                             ***
 1141                             641 I1  ;       ***************************************************
 1142                             642 I1  
 1143                             643 I1  
 1144                             644 I1  ;       ***************************************************
 1145                             645 I1  ;       ***                                             ***
 1146                             646 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1147                             647 I1  ;       ***                                             ***
 1148                             648 I1  ;       ***************************************************
 1149                             649 I1          .MACRO  MEM_CMP_REG_ROTL1 MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF,REG2,ANS_REG
 1150                             650 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1151                             651 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
 1152                             652 I1          .AIF    \CHG EQ 1                               ;
 1153                             653 I1          EXTU.W  \REGX,\REGX                             ;
 1154                             654 I1          .AENDI                                          ;
 1155                             655 I1          REG1_CMP_REG2_ROTL \REG1,\CF,\REG2,\ANS_REG     ;
 1156                             656 I1          .ENDM                                           ;
 1157                             657 I1  
 1158                             658 I1  ;       ***************************************************
 1159                             659 I1  ;       ***                                             ***
 1160                             660 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1161                             661 I1  ;       ***             ê›íËÅ{ADD√ﬁ∞¿                   ***
 1162                             662 I1  ;       ***                                             ***
 1163                             663 I1  ;       ***************************************************
 1164                             664 I1          .MACRO  MEM_CMP_REG_RL1AD MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF,REG2,ANS_REG,ADD_DT
 1165                             665 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1166                             666 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
 1167                             667 I1          .AIF    \CHG EQ 1                               ;
 1168                             668 I1          EXTU.W  \REGX,\REGX                             ;
 1169                             669 I1          .AENDI                                          ;
 1170                             670 I1          ADD     \ADD_DT,\REGX                           ;
 1171                             671 I1          REG1_CMP_REG2_ROTL \REG1,\CF,\REG2,\ANS_REG     ;
 1172                             672 I1          .ENDM                                           ;
 1173                             673 I1  
 1174                             674 I1  ;       ***************************************************
 1175                             675 I1  ;       ***             à íuî‰är/à≥óÕî‰är               ***
 1176                             676 I1  ;       ***************************************************
 1177                             677 I1  ;
 1178                             678 I1  ;       R0:î‰ärï˚ñ@êÿë÷
 1179                             679 I1  ;
 1180                             680 I1          .MACRO  MEM_CMP_REG_ROTL2 MEM_ADR,WKMEMRG,LG,REGX,CHG,REG1,CF1,REG2,ANS_REG,CHGBIT
 1181                             681 I1          MOV.L   #\MEM_ADR,\WKMEMRG                      ;
 1182                             682 I1          MOV.\LG @\WKMEMRG,\REGX                         ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    22
PROGRAM NAME =

 1183                             683 I1          .AIF    \CHG EQ 1                               ;
 1184                             684 I1          EXTU.W  \REGX,\REGX                             ;
 1185                             685 I1          .AENDI                                          ;
 1186                             686 I1          TST     #\CHGBIT,R0                             ;
 1187                             687 I1          TST_BIT_ON JMP1\@                               ;
 1188                             688 I1          REG1_CMP_REG2_ROTL \REG1,\CF1,\REG2,\ANS_REG    ;
 1189                             689 I1          M_BRA   JMP2\@                                  ;
 1190                             690 I1  
 1191                             691 I1  JMP1\@:
 1192                             692 I1          REG1_CMP_REG2_ROTL \REG2,\CF1,\REG1,\ANS_REG    ;
 1193                             693 I1  JMP2\@:                                                 ;
 1194                             694 I1          .ENDM                                           ;
 1195                             695 I1  
 1196                             696 I1  
 1197                             697 I1  
 1198                             698 I1  
 1199                             699 I1  
 1200                             700 I1  
 1201                             701 I1  
 1202                             702 I1  ;       ***********************************************************
 1203                             703 I1  ;       ***     SX 2WORD DATA -->LOAD + ON/OFF EDGE ,MAKE       ***
 1204                             704 I1  ;       ***********************************************************
 1205                             705 I1  ;       PLC 16+16-->16BIT DATAï¿Ç—ë÷Ç¶óLÇË
 1206                             706 I1  ;       R0~R3 USED
 1207                             707 I1  
 1208                             708 I1          .MACRO  WD_WD_LOAD_EDGE_MK      IN_SX_ADR,SQ_ADR,ON_ADR,OF_ADR
 1209                             709 I1          MOV.L   #\IN_SX_ADR,R0          ;
 1210                             710 I1          MOV.W   @R0,R2                  ;NEW LOAD
 1211                             711 I1          MOV.L   #\SQ_ADR,R3             ;
 1212                             712 I1          MOV.W   @R3,R1                  ;OLD LOAD
 1213                             713 I1          MOV.W   R2,@R3                  ;REFLASH R2:NEW R1:OLD
 1214                             714 I1  
 1215                             715 I1          MOV     R2,R3                   ;
 1216                             716 I1          XOR     R1,R2                   ;R2:EDGE
 1217                             717 I1  
 1218                             718 I1          MOV.L   #\ON_ADR,R0             ;
 1219                             719 I1          AND     R2,R3                   ;ON EDGE
 1220                             720 I1          MOV.W   R3,@R0                  ;ON EDGE SAVE
 1221                             721 I1          AND     R2,R1                   ;
 1222                             722 I1          MOV.L   #\OF_ADR,R0             ;
 1223                             723 I1          MOV.W   R1,@R0                  ;OFF EDGE SAVE
 1224                             724 I1          .ENDM
 1225                             725 I1  
 1226                             726 I1  
 1227                             727 I1  ;       ======= INPUT R2:NOW SEQ=======
 1228                             728 I1          .MACRO  WD_WD_LOAD_EDGE_MKREG   SQ_ADR,ON_ADR,OF_ADR
 1229                             729 I1          MOV.L   #\SQ_ADR,R3             ;
 1230                             730 I1          MOV.W   @R3,R1                  ;OLD LOAD
 1231                             731 I1          MOV.W   R2,@R3                  ;REFLASH R2:NEW R1:OLD
 1232                             732 I1  
 1233                             733 I1          MOV     R2,R3                   ;
 1234                             734 I1          XOR     R1,R2                   ;R2:EDGE
 1235                             735 I1  
 1236                             736 I1          MOV.L   #\ON_ADR,R0             ;
 1237                             737 I1          AND     R2,R3                   ;ON EDGE
 1238                             738 I1          MOV.W   R3,@R0                  ;ON EDGE SAVE
 1239                             739 I1          AND     R2,R1                   ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    23
PROGRAM NAME =

 1240                             740 I1          MOV.L   #\OF_ADR,R0             ;
 1241                             741 I1          MOV.W   R1,@R0                  ;OFF EDGE SAVE
 1242                             742 I1          .ENDM
 1243                             743 I1  
 1244                             744 I1  
 1245                             745 I1  
 1246                             746 I1  
 1247                             747 I1  
 1248                             748 I1  ;       ***********************************
 1249                             749 I1  ;       ***     R32/R16-->R16           ***
 1250                             750 I1  ;       ***     R2/R1-->R1              ***
 1251                             751 I1  ;       ***     REG2/REG1-->REG1        ***
 1252                             752 I1  ;       ***     0CHKóLÇË                ***
 1253                             753 I1  ;       ***     OVER FLOWóLÇË           ***
 1254                             754 I1  ;       ***********************************
 1255                             755 I1          .MACRO  MAC_DIVU_32REG2_16REG1_16REG2 REG1,REG2
 1256                             756 I1          SHLL16  \REG1                   ;BIT0~15-->BIT16~31
 1257                             757 I1          TST     \REG1,\REG1             ;
 1258                             758 I1          BT      DIVU1_ZERO_DIV\@        ;ZERO DIV        ANS.MAX
 1259                             759 I1          CMP/HS  \REG1,\REG2             ;UNSHIN R2[Rn] >= R1[Rm] ANS.0...R1
 1260                             760 I1          BT      DIVU1_ZERO_DIV\@        ;OVER FLOW
 1261                             761 I1  ;       ============================================
 1262                             762 I1          DIV0U                           ;FLAG M=Q=T=0
 1263                             763 I1  
 1264                             764 I1          .arepeat        16              ;åJï‘ìWäJ
 1265                             765 I1          DIV1    \REG1,\REG2             ;SHIFT 1 R1-R2 -->Q
 1266                             766 I1          .aendr                          ;
 1267                             767 I1  
 1268                             768 I1          ROTCL   \REG2                   ;T<--R2<--T
 1269                             769 I1  
 1270                             770 I1          EXTU.W  \REG2,\REG2             ;BIT31~BIT16 0 CLR
 1271                             771 I1          M_BRA   DIVU1_EXT\@             ;
 1272                             772 I1  
 1273                             773 I1  ;       ============================================
 1274                             774 I1  DIVU1_ZERO_DIV\@:
 1275                             775 I1          MOV.L   #H'0000FFFF,\REG2       ;MAX SET
 1276                             776 I1  DIVU1_EXT\@:                            ;
 1277                             777 I1          .ENDM
 1278                             778 I1  
 1279                             779 I1  
 1280                             780 I1  
 1281                             781 I1  
 1282                             782 I1  ;       ***********************************
 1283                             783 I1  ;       ***     R32/R16-->R16           ***
 1284                             784 I1  ;       ***     R2/R1-->R1              ***
 1285                             785 I1  ;       ***     REG2/REG1-->REG1        ***
 1286                             786 I1  ;       ***     0CHKóLÇË                ***
 1287                             787 I1  ;       ***     OVER FLOWóLÇË           ***
 1288                             788 I1  ;       ***********************************
 1289                             789 I1  ;       REG2/REG1-->REG2
 1290                             790 I1  ;       ***************************************************
 1291                             791 I1  ;       ***     REG2/REG1-->REG1                        ***
 1292                             792 I1  ;       ***************************************************
 1293                             793 I1  ;       REG1ï€éù
 1294                             794 I1  ;       WKREG1:îjâÛ
 1295                             795 I1  ;       WKREG2:îjâÛ
 1296                             796 I1  ;       REG2:ANS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    24
PROGRAM NAME =

 1297                             797 I1  
 1298                             798 I1          .MACRO  MAC_DIVS_32REG2_32REG1_32REG2 REG1,REG2,WKREG1,WKREG2
 1299                             799 I1          TST     \REG1,\REG1             ;
 1300                             800 I1          TST_BIT_OF DIVS21_ZERO\@        ;
 1301                             801 I1  
 1302                             802 I1          MOV     \REG2,\WKREG1           ;
 1303                             803 I1          ROTCL   \WKREG1                 ;
 1304                             804 I1          SUBC    \WKREG2,\WKREG2         ;ïÑçÜägí£64ÀﬁØƒ R4,R2
 1305                             805 I1          XOR     \WKREG1,\WKREG1         ;R3=0
 1306                             806 I1          SUBC    \WKREG1,\REG2           ;
 1307                             807 I1          DIV0S   \REG1,\WKREG2           ;
 1308                             808 I1          .arepeat        32              ;åJï‘ìWäJ
 1309                             809 I1          ROTCL   \REG2
 1310                             810 I1          DIV1    \REG1,\WKREG2           ;SHIFT 1 R1-R2 -->Q
 1311                             811 I1          .aendr                          ;
 1312                             812 I1          ROTCL   \REG2                   ;
 1313                             813 I1          ADDC    \WKREG1,\REG2           ;
 1314                             814 I1          M_BRA   DIVS21_EXT\@            ;
 1315                             815 I1  
 1316                             816 I1  DIVS21_ZERO\@:                          ;R3/R1-->R2 IF R1=0 THEN R2=7FFF FFFF // 8000 0000
                                          Ç™ñ{óàÇ©?
 1317                             817 I1          XOR     \REG2,\REG2             ;
 1318                             818 I1  DIVS21_EXT\@:                           ;
 1319                             819 I1          .ENDM
 1320                             820 I1  
 1321                             821 I1  ;       ***********************************************************
 1322                             822 I1  ;       ***                                                     ***
 1323                             823 I1  ;       ***             REG2[32]/REG1[16]-->REG2[16]            ***
 1324                             824 I1  ;       ***                                                     ***
 1325                             825 I1  ;       ***********************************************************
 1326                             826 I1  ;       REG1:KEEP
 1327                             827 I1  ;       REG2:ANS
 1328                             828 I1  ;       ========== REG1 KEEP =====
 1329                             829 I1          .MACRO  MAC_DIVS_32REG2_16REG1_16REG2 REG1,REG2
 1330                             830 I1          PUSH_REG1       \REG1                   ;
 1331                             831 I1          PUSH_REG1       \REG2                   ;
 1332                             832 I1          EXTS.W  \REG1,\REG1                     ;
 1333                             833 I1          CMP/PZ  \REG1                           ;
 1334                             834 I1          BT      DIVS1_020\@                     ;
 1335                             835 I1          NEG     \REG1,\REG1                     ;
 1336                             836 I1  DIVS1_020\@:
 1337                             837 I1          CMP/PZ  \REG2                           ;
 1338                             838 I1          BT      DIVS1_040\@                     ;
 1339                             839 I1          NEG     \REG2,\REG2                     ;
 1340                             840 I1  DIVS1_040\@:
 1341                             841 I1  
 1342                             842 I1          MAC_DIVU_32REG2_16REG1_16REG2 \REG1,\REG2
 1343                             843 I1  
 1344                             844 I1  
 1345                             845 I1          MOV.W   #H'7FFF,\REG1                   ;
 1346                             846 I1          CMP/HS  \REG2,\REG1                     ;7FFF >= data
 1347                             847 I1          BT      DIVS1_060\@                     ;
 1348                             848 I1          MOV     \REG1,\REG2                     ;7FFF >= data
 1349                             849 I1  DIVS1_060\@:                                    ;
 1350                             850 I1  
 1351                             851 I1          POP_REG1 \REG1                          ;
 1352                             852 I1          CMP/PZ  \REG1                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    25
PROGRAM NAME =

 1353                             853 I1          BT      DIVS1_080\@                     ;
 1354                             854 I1          NEG     \REG2,\REG2                     ;
 1355                             855 I1  DIVS1_080\@:                                    ;
 1356                             856 I1          POP_REG1 \REG1                          ;
 1357                             857 I1          CMP/PZ  \REG1                           ;
 1358                             858 I1          BT      DIVS1_100\@                     ;
 1359                             859 I1          NEG     \REG2,\REG2                     ;
 1360                             860 I1  DIVS1_100\@:                                    ;
 1361                             861 I1  
 1362                             862 I1          .ENDM
 1363                             863 I1  
 1364                             864 I1  
 1365                             865 I1  ;       *******************************************
 1366                             866 I1  ;       ***                                     ***
 1367                             867 I1  ;       ***             Ãﬁ€Ø∏ì]ëó               ***
 1368                             868 I1  ;       ***                                     ***
 1369                             869 I1  ;       *******************************************
 1370                             870 I1          .MACRO  BLOCK_MOV1      LG,AD_DT,SRC_REG,DST_REG,DATA_REG,CNT_REG
 1371                             871 I1  JMP0\@:                                 ;
 1372                             872 I1          TST     \CNT_REG,\CNT_REG       ;
 1373                             873 I1          TST_BIT_OF JMP1\@               ;
 1374                             874 I1          MOV.\LG @\SRC_REG+,\DATA_REG    ;
 1375                             875 I1          MOV.\LG \DATA_REG,@\DST_REG     ;
 1376                             876 I1          ADD     #\AD_DT,\DST_REG        ;
 1377                             877 I1          ADD     #H'FF,\CNT_REG          ;
 1378                             878 I1          M_BRA   JMP0\@                  ;
 1379                             879 I1  JMP1\@:                                 ;
 1380                             880 I1          .ENDM
 1381                             881 I1  
 1382                             882 I1  
 1383                             883 I1  ;       ***************************************************
 1384                             884 I1  ;       ***             ÉfÅ[É^ïœä∑      2001-07-08      ***
 1385                             885 I1  ;       ***************************************************
 1386                             886 I1          .MACRO  INTEL_WORD REG1,REG2
 1387                             887 I1          SWAP.B  \REG1,\REG2
 1388                             888 I1          .ENDM
 1389                             889 I1  
 1390                             890 I1  
 1391                             891 I1  ;       ***************************************************
 1392                             892 I1  ;       ***             4byte read      2001-07-08      ***
 1393                             893 I1  ;       ***************************************************
 1394                             894 I1          .MACRO  plc_2w_rd ADR_REG1,ANSREG,WKREG1
 1395                             895 I1          MOV.W   @\ADR_REG1+,\ANSREG             ;ML(56).LL(78) R2
 1396                             896 I1          MOV.W   @\ADR_REG1+,\WKREG1             ;HH(12).MH(34) R3
 1397                             897 I1          SWAP.W  \ANSREG,\ANSREG                 ;
 1398                             898 I1          XTRCT   \WKREG1,\ANSREG                 ;
 1399                             899 I1          .ENDM
 1400                             900 I1  
 1401                             901 I1  ;       ***************************************************
 1402                             902 I1  ;       ***             2byte read      2001-07-08      ***
 1403                             903 I1  ;       ***************************************************
 1404                             904 I1          .MACRO  plc_1w_rd ADR_REG1,ANSREG
 1405                             905 I1          MOV.W   @\ADR_REG1+,\ANSREG             ;
 1406                             906 I1  ;;;;;;; SWAP.B  \ANSREG,\ANSREG                 ;ML.LL
 1407                             907 I1  ;;;;;;; EXTS.W  \ANSREG,\ANSREG                 ;ïÑçÜägí£
 1408                             908 I1          .ENDM
 1409                             909 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    26
PROGRAM NAME =

 1410                             910 I1  
 1411                             911 I1  
 1412                             912 I1  ;       ***************************************************
 1413                             913 I1  ;       ***             4byte write     2001-07-08      ***
 1414                             914 I1  ;       ***************************************************
 1415                             915 I1  ;       ansreg:-->adr_reg
 1416                             916 I1          .MACRO  plc_2w_wr ADR_REG1,ANSREG,WKREG1        ;HH,MH,ML,LL
 1417                             917 I1          MOV.W   \ANSREG,@\ADR_REG1                      ;
 1418                             918 I1          SWAP.W  \ANSREG,\WKREG1                         ;
 1419                             919 I1          ADD     #2,\ADR_REG1                            ;
 1420                             920 I1          MOV.W   \WKREG1,@\ADR_REG1                      ;
 1421                             921 I1          ADD     #2,\ADR_REG1                            ;
 1422                             922 I1          .ENDM
 1423                             923 I1  
 1424                             924 I1  ;       ***************************************************
 1425                             925 I1  ;       ***             2byte write     2001-07-08      ***
 1426                             926 I1  ;       ***************************************************
 1427                             927 I1  ;       ansreg:-->adr_reg
 1428                             928 I1          .MACRO  plc_1w_wr ADR_REG1,ANSREG               ;
 1429                             929 I1  ;;;;;;  SWAP.B  \ANSREG,\ANSREG                 ;
 1430                             930 I1          MOV.W   \ANSREG,@\ADR_REG1              ;
 1431                             931 I1          ADD     #2,\ADR_REG1                    ;
 1432                             932 I1          .ENDM
 1433                             933 I1  
 1434                             934 I1  
 1435                             935 I1  ;       *******************************************
 1436                             936 I1  ;       ***                                     ***
 1437                             937 I1  ;       ***     ⁄ºﬁΩ¿->“”ÿ√ﬁÃ´ŸƒæØƒ             ***
 1438                             938 I1  ;       ***                                     ***
 1439                             939 I1  ;       *******************************************
 1440                             940 I1          .MACRO  BLOCK_SET1      LG,AD_DT,DST_REG,DATA_REG,CNT_REG
 1441                             941 I1  JMP0\@:                                 ;
 1442                             942 I1          TST     \CNT_REG,\CNT_REG       ;
 1443                             943 I1          TST_BIT_OF JMP1\@               ;
 1444                             944 I1          MOV.\LG \DATA_REG,@\DST_REG     ;
 1445                             945 I1          ADD     #\AD_DT,\DST_REG        ;
 1446                             946 I1          ADD     #H'FF,\CNT_REG          ;
 1447                             947 I1          M_BRA   JMP0\@                  ;
 1448                             948 I1  JMP1\@:                                 ;
 1449                             949 I1          .ENDM
 1450                             950 I1  
 1451                             951 I1  ;       *******************************************
 1452                             952 I1  ;       ***                                     ***
 1453                             953 I1  ;       ***             MEM BLOCK               ***
 1454                             954 I1  ;       ***                                     ***
 1455                             955 I1  ;       *******************************************
 1456                             956 I1          .MACRO  MEM_WORD_BLOCK_MOV1     SRC_ADR,DST_ADR,CNT_DAT,DT_REG,CNT_REG
 1457                             957 I1          MOV.L   #\SRC_ADR,R10                   ;
 1458                             958 I1          MOV.L   #\DST_ADR,R11                   ;
 1459                             959 I1          MOV.W   #\CNT_DAT,\CNT_REG              ;
 1460                             960 I1          BLOCK_MOV1      W,2,R10,R11,\DT_REG,\CNT_REG
 1461                             961 I1          .ENDM
 1462                             962 I1  
 1463                             963 I1  
 1464                             964 I1          .MACRO  MEM_LONG_BLOCK_MOV1     SRC_ADR,DST_ADR,CNT_DAT,DT_REG,CNT_REG
 1465                             965 I1          MOV.L   #\SRC_ADR,R10                   ;
 1466                             966 I1          MOV.L   #\DST_ADR,R11                   ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    27
PROGRAM NAME =

 1467                             967 I1          MOV.W   #\CNT_DAT,\CNT_REG              ;
 1468                             968 I1          BLOCK_MOV1      L,4,R10,R11,\DT_REG,\CNT_REG
 1469                             969 I1          .ENDM
 1470                             970 I1  
 1471                             971 I1  ;       ***********************************
 1472                             972 I1  ;       ***     MEM => MEM MOV          ***
 1473                             973 I1  ;       ***********************************
 1474                             974 I1          .MACRO  MEM_MOV_TO_MEM  SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3
 1475                             975 I1          MOV.L   #\SRC_ADR,\WKREG1
 1476                             976 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1477                             977 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1478                             978 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1479                             979 I1          .ENDM
 1480                             980 I1  
 1481                             981 I1  
 1482                             982 I1  ;       ***********************************
 1483                             983 I1  ;       ***     REG => MEM MOV          ***
 1484                             984 I1  ;       ***********************************
 1485                             985 I1          .MACRO  REG_MOV_TO_MEM  DST_ADR,L1,DT_REG,WKREG1
 1486                             986 I1          MOV.L   #\DST_ADR,\WKREG1       ;DST_ADR
 1487                             987 I1          MOV.\L1 \DT_REG,@\WKREG1        ;DST_ADR
 1488                             988 I1          .ENDM
 1489                             989 I1  
 1490                             990 I1  
 1491                             991 I1  ;       ***********************************
 1492                             992 I1  ;       ***     MEM => MEM MOV          ***
 1493                             993 I1  ;       ***********************************
 1494                             994 I1          .MACRO  MEM_MOV_TO_MEM_ALMT     SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3,ANDLMT
 1495                             995 I1          MOV.L   #\SRC_ADR,\WKREG1
 1496                             996 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1497                             997 I1          MOV.L   #\ANDLMT,\WKREG1        ;
 1498                             998 I1          AND     \WKREG1,\WKREG2         ;
 1499                             999 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1500                            1000 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1501                            1001 I1          .ENDM
 1502                            1002 I1  
 1503                            1003 I1  ;       ***********************************
 1504                            1004 I1  ;       ***     MEM => CALL=>MEM MOV    ***
 1505                            1005 I1  ;       ***     2008-10-15              ***
 1506                            1006 I1  ;       ***********************************
 1507                            1007 I1          .MACRO  MEM_MOV_TO_MEM_CALL     SRC_ADR,L1,DST_ADR,L2,WKREG1,WKREG2,WKREG3,CALL
 1508                            1008 I1          MOV.L   #\SRC_ADR,\WKREG1
 1509                            1009 I1          MOV.\L1 @\WKREG1,\WKREG2        ;WK1=SRC_ADR WK2=data
 1510                            1010 I1          FAR_JSR #\CALL,\WKREG3
 1511                            1011 I1          MOV.L   #\DST_ADR,\WKREG3       ;DST_ADR
 1512                            1012 I1          MOV.\L2 \WKREG2,@\WKREG3        ;DST_ADR
 1513                            1013 I1          .ENDM
 1514                            1014 I1  
 1515                            1015 I1  ;       ***********************************
 1516                            1016 I1  ;       ***                             ***
 1517                            1017 I1  ;       ***     DOWN TIMER              ***
 1518                            1018 I1  ;       ***     TIME USED MACRO         ***
 1519                            1019 I1  ;       ***                             ***
 1520                            1020 I1  ;       ***********************************
 1521                            1021 I1          .MACRO  DN_TIME LG,MEM_ADR,WKREG1,WKREG2
 1522                            1022 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1523                            1023 I1          MOV.\LG @\WKREG1,\WKREG2                ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    28
PROGRAM NAME =

 1524                            1024 I1          TST     \WKREG2,\WKREG2                 ;
 1525                            1025 I1          BT      JMP_01\@                        ;ZERO THEN JUMP
 1526                            1026 I1          DT      \WKREG2                         ;
 1527                            1027 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1528                            1028 I1  JMP_01\@:
 1529                            1029 I1          .ENDM
 1530                            1030 I1  
 1531                            1031 I1  ;       ***********************************
 1532                            1032 I1  ;       ***                             ***
 1533                            1033 I1  ;       ***     UP TIME USED MACRO      ***
 1534                            1034 I1  ;       ***     0~FFFF(0~FFFFFFFF)      ***
 1535                            1035 I1  ;       ***********************************
 1536                            1036 I1          .MACRO  UP_TIME LG,MEM_ADR,WKREG1,WKREG2
 1537                            1037 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1538                            1038 I1          MOV.\LG @\WKREG1,\WKREG2                ;
 1539                            1039 I1          ADD     #1,\WKREG2                      ;
 1540                            1040 I1          TST     \WKREG2,\WKREG2                 ;
 1541                            1041 I1          TST_BIT_OF JMP_01\@                     ;ZERO THEN JUMP
 1542                            1042 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1543                            1043 I1  JMP_01\@:                                       ;
 1544                            1044 I1          .ENDM                                   ;
 1545                            1045 I1  
 1546                            1046 I1          .MACRO  SCAN_TIM_REF_4B SCAN_TIM1,OLDCNT,CNTDLT
 1547                            1047 I1          MOV.L   #\SCAN_TIM1,R10                 ;
 1548                            1048 I1          MOV.L   #\OLDCNT,R11                    ;
 1549                            1049 I1          MOV.L   @R10,R0                         ;R2,R0 NEW
 1550                            1050 I1          MOV     R0,R2                           ;
 1551                            1051 I1          MOV.L   @R11,R1                         ;R1:OLD
 1552                            1052 I1          MOV.L   #\CNTDLT,R10                    ;
 1553                            1053 I1          MOV.L   R0,@R11                         ;REFLASH
 1554                            1054 I1          SUB     R1,R2                           ;
 1555                            1055 I1          MOV.L   R2,@R10                         ;
 1556                            1056 I1          .ENDM
 1557                            1057 I1  
 1558                            1058 I1  ;       ***********************************
 1559                            1059 I1  ;       ***                             ***
 1560                            1060 I1  ;       ***     ÿ›∏ﬁ¿ﬁ≥›CNT             ***
 1561                            1061 I1  ;       ***     DEBUG USED              ***
 1562                            1062 I1  ;       ***                             ***
 1563                            1063 I1  ;       ***********************************
 1564                            1064 I1  ;       ***********************************
 1565                            1065 I1  ;       ***                             ***
 1566                            1066 I1  ;       ***     ÿ›∏ﬁUP-CNT              ***
 1567                            1067 I1  ;       ***     DEBUG USED              ***
 1568                            1068 I1  ;       ***                             ***
 1569                            1069 I1  ;       ***********************************
 1570                            1070 I1  ;       LATE=1~127,-1~-128
 1571                            1071 I1          .MACRO  UP_DN_LATE_CNT LG,MEM_ADR,WKREG1,WKREG2,LATE
 1572                            1072 I1          MOV.L   #\MEM_ADR,\WKREG1               ;SORCE ADRESS SET
 1573                            1073 I1          MOV.\LG @\WKREG1,\WKREG2                ;
 1574                            1074 I1          ADD     #\LATE,\WKREG2                  ;
 1575                            1075 I1          MOV.\LG \WKREG2,@\WKREG1                ;STORE
 1576                            1076 I1          .ENDM                                   ;
 1577                            1077 I1  
 1578                            1078 I1  ;       ***********************************
 1579                            1079 I1  ;       ***     DWORD --> CHG1 CHANGE   ***
 1580                            1080 I1  ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    29
PROGRAM NAME =

 1581                            1081 I1  ;       0~31
 1582                            1082 I1  ;       DT_REG KEEP
 1583                            1083 I1  ;
 1584                            1084 I1          .MACRO  DWORD_TBL_CHG1  DT_REG,WKREG,TBL_ADR
 1585                            1085 I1          MOV.L   #\TBL_ADR,\WKREG                ;*4
 1586                            1086 I1          SHLL2   \DT_REG                         ;
 1587                            1087 I1          ADD     \DT_REG,\WKREG                  ;
 1588                            1088 I1          SHLR2   \DT_REG                         ;
 1589                            1089 I1          .ENDM
 1590                            1090 I1  
 1591                            1091 I1  ;       ***********************************
 1592                            1092 I1  ;       ***     TABLE CALL              ***
 1593                            1093 I1  ;       ***     Input NO. REG           ***
 1594                            1094 I1  ;       ***********************************
 1595                            1095 I1  ;;      .MACRO TABLE_JUMP_MEM   NUMBER_REG,TABLE_MEM,WKREG1
 1596                            1096 I1  ;;      SHLL2   \NUMBER_REG             ;*2
 1597                            1097 I1  ;;      MOV.L   #\TABLE_MEM,\WKREG1     ;
 1598                            1098 I1  ;;      ADD     \WKREG1,\NUMBER_REG     ;
 1599                            1099 I1  ;;      MOV.L   @\NUMBER_REG,\WKREG1    ;
 1600                            1100 I1  ;;      JSR_REG \WKREG1                 ;
 1601                            1101 I1  ;;      .ENDM
 1602                            1102 I1  
 1603                            1103 I1          .MACRO TABLE_CALL_MEM   NUMBER_REG,TABLE_MEM,WKREG1
 1604                            1104 I1          SHLL2   \NUMBER_REG             ;*2
 1605                            1105 I1          MOV.L   #\TABLE_MEM,\WKREG1     ;
 1606                            1106 I1          ADD     \WKREG1,\NUMBER_REG     ;
 1607                            1107 I1          MOV.L   @\NUMBER_REG,\WKREG1    ;
 1608                            1108 I1          JSR_REG \WKREG1                 ;
 1609                            1109 I1          .ENDM
 1610                            1110 I1  
 1611                            1111 I1  
 1612                            1112 I1  
 1613                            1113 I1  ;       ***************************************************
 1614                            1114 I1  ;       ***             í èÌêßå‰Å{ÉpÅ[ÉWêßå‰            ***
 1615                            1115 I1  ;       ***************************************************
 1616                            1116 I1  ;       R0,R4,R10,R11
 1617                            1117 I1  ;       ACTFLG=1WORD íAÇµ BIT7~BIT0Ç‹Ç≈ÇµÇ©égópïsâ¬:í èÌBIT0
 1618                            1118 I1  
 1619                            1119 I1          .MACRO  PAT_LEVEL_CTL1 STRSB,DATSB,ACTSB,ENDSB,ELSESB,ACTFLG,SEQ_DT,FLGTBT,SQBIT,F
                                          LGSBT
 1620                            1120 I1          MOV.L   #\ACTFLG,R10                    ;
 1621                            1121 I1          MOV.L   #\SEQ_DT,R11                    ;
 1622                            1122 I1          MOV.W   @R10,R0                         ;FLAG LOAD
 1623                            1123 I1          TST     #\FLGTBT,R0                     ;ENABLE?
 1624                            1124 I1          TST_BIT_ON JMP_ACT01\@                  ;ON THEN FLAG ACTIVE JUMP
 1625                            1125 I1  
 1626                            1126 I1  ;       ------- FLAG OFF ---------
 1627                            1127 I1          MOV.W   @R11,R0                         ;SEQ
 1628                            1128 I1          MOV.W   #\SQBIT,R4                      ;
 1629                            1129 I1          TST     R4,R0                           ;
 1630                            1130 I1          TST_BIT_OF JMP_EXIT\@                   ;
 1631                            1131 I1  
 1632                            1132 I1  ;       ------- SEQ ON START -----
 1633                            1133 I1          MOV.W   @R10,R0                         ;
 1634                            1134 I1          OR      #\FLGSBT,R0                     ;
 1635                            1135 I1          MOV.W   R0,@R10                         ;FLAG BIT SET
 1636                            1136 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    30
PROGRAM NAME =

 1637                            1137 I1          FAR_JSR #\STRSB,R10                     ;ANS.REG_CTL_FLG1
 1638                            1138 I1  
 1639                            1139 I1          M_BRA   JMP_ACT02\@                     ;
 1640                            1140 I1  
 1641                            1141 I1  ;       -----------------------------
 1642                            1142 I1  ;       ---------- ACTIVE -----------
 1643                            1143 I1  ;       -----------------------------
 1644                            1144 I1          .ALIGN  4                               ;
 1645                            1145 I1  
 1646                            1146 I1  JMP_ACT01\@:                                    ;
 1647                            1147 I1  
 1648                            1148 I1          MOV.W   @R11,R0                         ;SEQ
 1649                            1149 I1          MOV.W   #\SQBIT,R4
 1650                            1150 I1          TST     R4,R0                           ;
 1651                            1151 I1          TST_BIT_ON JMP_ACT02\@                  ;ACITIVE CONTINUE
 1652                            1152 I1  
 1653                            1153 I1          MOV.L   #\ACTFLG,R10                    ;
 1654                            1154 I1          MOV.W   @R10,R0                         ;
 1655                            1155 I1          AND     #LOW ~\FLGSBT,R0                ;
 1656                            1156 I1          MOV.W   R0,@R10                         ;FLAG CLR
 1657                            1157 I1  
 1658                            1158 I1          FAR_JSR #\ELSESB,R10                    ;êœï™STOPìôÇÃELSEªÃﬁŸ∞¡›
 1659                            1159 I1          FAR_JSR #\ENDSB,R10                     ;
 1660                            1160 I1          M_BRA   JMP_EXIT\@                      ;
 1661                            1161 I1  
 1662                            1162 I1  JMP_ACT02\@:                                    ;
 1663                            1163 I1  
 1664                            1164 I1          FAR_JSR #\DATSB,R10                     ;data æ⁄∏ƒ
 1665                            1165 I1          FAR_JSR #\ACTSB,R10                     ;
 1666                            1166 I1  JMP_EXIT\@:                                     ;
 1667                            1167 I1          .ENDM
 1668                            1168 I1  
 1669                            1169 I1  
 1670                            1170 I1  
 1671                            1171 I1  ;       ***********************************
 1672                            1172 I1  ;       ***                             ***
 1673                            1173 I1  ;       ***                             ***
 1674                            1174 I1  ;       ***                             ***
 1675                            1175 I1  ;       ***********************************
 1676                            1176 I1          .MACRO  INT_CTRL_ALL_STOP1 MAIN_CMD,INT_STS_FLG
 1677                            1177 I1          XOR     R0,R0
 1678                            1178 I1          MOV.L   #\MAIN_CMD,R1                                   ;
 1679                            1179 I1          MOV.W   R0,@R1                                          ;
 1680                            1180 I1          MOV.L   #\INT_STS_FLG,R1                                ;
 1681                            1181 I1          MOV.W   R0,@R1                                          ;
 1682                            1182 I1          .ENDM
 1683                            1183 I1  
 1684                            1184 I1  
 1685                            1185 I1  
 1686                            1186 I1  ;       ===================================
 1687                            1187 I1  ;       ===     äƒéã√ﬁ∞¿∏ÿ±+SAVE        ===
 1688                            1188 I1  ;       ===================================
 1689                            1189 I1  ;       R8,R9ÇÕâÛÇ≥Ç»Ç¢éñÇï€èÿÇ∑ÇÈ
 1690                            1190 I1          .MACRO KS_UP_DN_CLR1 SQ_UP,SQ_DN,CLR_REG
 1691                            1191 I1          MOV.L   #\SQ_UP,R13             ;ADR LOAD
 1692                            1192 I1          MOV.W   @R13,R0                 ;DATA LOAD
 1693                            1193 I1          AND     \CLR_REG,R0             ;CLR
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    31
PROGRAM NAME =

 1694                            1194 I1          MOV.W   R0,@R13                 ;
 1695                            1195 I1  
 1696                            1196 I1          MOV.L   #\SQ_DN,R14             ;ADR LOAD
 1697                            1197 I1          MOV.W   @R14,R0                 ;
 1698                            1198 I1          AND     \CLR_REG,R0             ;CLR
 1699                            1199 I1          MOV.W   R0,@R14                 ;
 1700                            1200 I1          .ENDM
 1701                            1201 I1  
 1702                            1202 I1  ;       ===================================
 1703                            1203 I1  ;       ===     äƒéã                    ===
 1704                            1204 I1  ;       ===================================
 1705                            1205 I1  
 1706                            1206 I1  ;       ***********************************
 1707                            1207 I1  ;       ***     äƒéãW/Lã§í œ∏€          ***
 1708                            1208 I1  ;       ***********************************
 1709                            1209 I1  ;       äƒéã√ﬁ∞¿ "R1=é¿ë™"
 1710                            1210 I1  ;       R0,R11~R14,R4,R5,R6 USED
 1711                            1211 I1  ;
 1712                            1212 I1  ;       "R7,R8,R9ÇÕâÛÇ≥Ç»Ç¢éñÇï€èÿÇ∑ÇÈ"
 1713                            1213 I1  ;
 1714                            1214 I1  ;       LGW_U=1 WORD æﬁ€ägí£
 1715                            1215 I1  ;
 1716                            1216 I1  
 1717                            1217 I1          .MACRO  KS_UP_DN_CHK1   SQ_UP,SQ_DN,SET_BIT,SV_UP,SV_DN,LG,LGW_U
 1718                            1218 I1          MOV.L   \SQ_UP,R13                              ;221 UP "*"
 1719                            1219 I1          MOV.L   \SQ_DN,R14                              ;223 DN "*"R0,R13,R14
 1720                            1220 I1          MOV.L   \SV_UP,R11                              ;
 1721                            1221 I1          MOV.L   \SV_DN,R12                              ;
 1722                            1222 I1  
 1723                            1223 I1          .AIF    \LGW_U  EQ      0                       ;‹∞ƒﬁÇÃ0ägí£
 1724                            1224 I1          MOV.\LG @R11,R4                                 ;
 1725                            1225 I1          EXTU.W  R4,R4                                   ;
 1726                            1226 I1          MOV.\LG @R12,R5                                 ;
 1727                            1227 I1          EXTU.W  R5,R5                                   ;
 1728                            1228 I1          .AELSE                                          ;
 1729                            1229 I1          MOV.\LG @R11,R4                                 ;
 1730                            1230 I1          MOV.\LG @R12,R5                                 ;
 1731                            1231 I1          .AENDI                                          ;
 1732                            1232 I1  
 1733                            1233 I1          CMP/GE  R1,R4                           ;R1[PV] =< R5[SV] UP THEN NOMAL
 1734                            1234 I1          BT      KANSHI_020\@                    ;
 1735                            1235 I1          MOV.W   #\SET_BIT,R6                    ;
 1736                            1236 I1          MOV.W   @R13,R0                         ;R0 WORK
 1737                            1237 I1          OR      R6,R0                           ;PV > SV UP BIT
 1738                            1238 I1          MOV.W   R0,@R13                         ;
 1739                            1239 I1  
 1740                            1240 I1          NOT     R6,R6                           ;
 1741                            1241 I1          MOV.W   @R14,R0                         ;R0 WORK
 1742                            1242 I1          AND     R6,R0                           ;
 1743                            1243 I1          MOV.W   R0,@R14                         ;
 1744                            1244 I1          M_BRA   KANSHI_EXT\@                    ;
 1745                            1245 I1  
 1746                            1246 I1  KANSHI_020\@:
 1747                            1247 I1          CMP/GE  R5,R1                   ;LIMIT =< PV
 1748                            1248 I1          BT      KANSHI_040\@            ;NOMAL
 1749                            1249 I1  
 1750                            1250 I1          MOV.W   #\SET_BIT,R6            ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    32
PROGRAM NAME =

 1751                            1251 I1          MOV.W   @R14,R0                 ;R0 WORK
 1752                            1252 I1          OR      R6,R0                   ;
 1753                            1253 I1          MOV.W   R0,@R14                 ;
 1754                            1254 I1  
 1755                            1255 I1          NOT     R6,R6                   ;
 1756                            1256 I1          MOV.W   @R13,R0                 ;R0 WORK
 1757                            1257 I1          AND     R6,R0                   ;
 1758                            1258 I1          MOV.W   R0,@R13                 ;
 1759                            1259 I1          M_BRA   KANSHI_EXT\@            ;
 1760                            1260 I1  
 1761                            1261 I1  ;       ------ NOMAL -----
 1762                            1262 I1  KANSHI_040\@:                           ;
 1763                            1263 I1          MOV.W   #\SET_BIT,R6            ;
 1764                            1264 I1          NOT     R6,R6                   ;
 1765                            1265 I1  
 1766                            1266 I1          MOV.W   @R13,R0                 ;R0 WORK
 1767                            1267 I1          AND     R6,R0   ;
 1768                            1268 I1          MOV.W   R0,@R13                 ;
 1769                            1269 I1  
 1770                            1270 I1          MOV.W   @R14,R0                 ;R0 WORK
 1771                            1271 I1          AND     R6,R0           ;
 1772                            1272 I1          MOV.W   R0,@R14                 ;
 1773                            1273 I1  
 1774                            1274 I1  KANSHI_EXT\@:
 1775                            1275 I1          .ENDM                                           ;
 1776                            1276 I1  
 1777                            1277 I1  ;       ***********************************************************
 1778                            1278 I1  ;       ***                                                     ***
 1779                            1279 I1  ;       ***     10000-->30000 *SH_CALC_LATE/H8_CALC_LATE        ***
 1780                            1280 I1  ;       ***     Ç≈ÇÕÇ»Ç≠ÅA10000*3Ç…ïœçX                         ***
 1781                            1281 I1  ;       ***                                                     ***
 1782                            1282 I1  ;       ***********************************************************
 1783                            1283 I1  ;       IN_OUT_REGÇ∆WKREGÇÕàŸÇ»ÇÈéñ
 1784                            1284 I1          .MACRO  CHG_H8LATE_TO_SHLATE IN_OUT_REG,WKREG
 1785                            1285 I1          MOV     \IN_OUT_REG,\WKREG              ;
 1786                            1286 I1          ADD     \WKREG,\WKREG                   ;*2
 1787                            1287 I1          ADD     \WKREG,\IN_OUT_REG              ;+1
 1788                            1288 I1          .ENDM
 1789                            1289 I1  
 1790                            1290 I1  
 1791                            1291 I1  
 1792                            1292 I1  
 1793                            1293 I1  
 1794                            1294 I1  ;       ***********************************
 1795                            1295 I1  ;       ***                             ***
 1796                            1296 I1  ;       ***     “”ÿ0∏ÿ±K                ***
 1797                            1297 I1  ;       ***     2014-05-30              ***
 1798                            1298 I1  ;       ***********************************
 1799                            1299 I1          .MACRO  MEM_0CLR_R0_R1  MEM,LG
 1800                            1300 I1          XOR     R0,R0           ;
 1801                            1301 I1          MOV.L   #\MEM,R1        ;
 1802                            1302 I1          MOV.\LG R0,@R1          ;
 1803                            1303 I1          .ENDM
 1804                            1304 I1  
 1805                            1305 I1  
 1806                            1306 I1  
 1807                            1307 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    33
PROGRAM NAME =

 1808                            1308 I1  
 1809                            1309 I1  
 1810                            1310 I1  
 1811                            1311 I1  
 1812                            1312 I1  
 1813                            1313 I1  
 1814                              14             .INCLUDE        "CPU_REG.ext"           ;
 1815                               1 I1  ;       ***************************************************
 1816                               2 I1  ;       ***             SH7727 ⁄ºﬁΩ¿                    ***
 1817                               3 I1  ;       ***************************************************
 1818                               4 I1          .INCLUDE        "SH7727RG.EXT"
 1819                               1 I2  ;       ***************************************************
 1820                               2 I2  ;       ***             SH7727 ⁄ºﬁΩ¿                    ***
 1821                               3 I2  ;       ***************************************************
 1822                               4 I2  
 1823                               5 I2          .GLOBAL         _INTEVT2        ; .SRES 4                       ; A4000000
 1824                               6 I2          .GLOBAL         _IRR0           ; .SRES 2                       ; A4000004
 1825                               7 I2          .GLOBAL         _IRR1           ; .SRES 2                       ; A4000006
 1826                               8 I2          .GLOBAL         _IRR2           ; .SRES 2                       ; A4000008
 1827                               9 I2          .GLOBAL         _ICR1           ; .SRES 2                       ; A4000010
 1828                              10 I2          .GLOBAL         _ICR2           ; .SRES 2                       ; A4000012
 1829                              11 I2          .GLOBAL         _PINTER         ; .SRES 2                       ; A4000014
 1830                              12 I2          .GLOBAL         _IPRC           ; .SRES 2                       ; A4000016
 1831                              13 I2          .GLOBAL         _IPRD           ; .SRES 2                       ; A4000018
 1832                              14 I2          .GLOBAL         _IPRE           ; .SRES 2                       ; A400001A
 1833                              15 I2          .GLOBAL         _SAR0           ; .SRES 4                       ; A4000020
 1834                              16 I2          .GLOBAL         _DAR0           ; .SRES 4                       ; A4000024
 1835                              17 I2          .GLOBAL         _DMATCR0        ; .SRES 4                       ; A4000028
 1836                              18 I2          .GLOBAL         _CHCR0          ; .SRES 4                       ; A400002C
 1837                              19 I2          .GLOBAL         _SAR1           ; .SRES 4                       ; A4000030
 1838                              20 I2          .GLOBAL         _DAR1           ; .SRES 4                       ; A4000034
 1839                              21 I2          .GLOBAL         _DMATCR1        ; .SRES 4                       ; A4000038
 1840                              22 I2          .GLOBAL         _CHCR1          ; .SRES 4                       ; A400003C
 1841                              23 I2          .GLOBAL         _SAR2           ; .SRES 4                       ; A4000040
 1842                              24 I2          .GLOBAL         _DAR2           ; .SRES 4                       ; A4000044
 1843                              25 I2          .GLOBAL         _DMATCR2        ; .SRES 4                       ; A4000048
 1844                              26 I2          .GLOBAL         _CHCR2          ; .SRES 4                       ; A400004C
 1845                              27 I2          .GLOBAL         _SAR3           ; .SRES 4                       ; A4000050
 1846                              28 I2          .GLOBAL         _DAR3           ; .SRES 4                       ; A4000054
 1847                              29 I2          .GLOBAL         _DMATCR3        ; .SRES 4                       ; A4000058
 1848                              30 I2          .GLOBAL         _CHCR3          ; .SRES 4                       ; A400005C
 1849                              31 I2          .GLOBAL         _DMAOR          ; .SRES 2                       ; A4000060
 1850                              32 I2          .GLOBAL         _CMSTR          ; .SRES 2                       ; A4000070
 1851                              33 I2          .GLOBAL         _CMCSR          ; .SRES 2                       ; A4000072
 1852                              34 I2          .GLOBAL         _CMCNT          ; .SRES 2                       ; A4000074
 1853                              35 I2          .GLOBAL         _CMCOR          ; .SRES 2                       ; A4000076
 1854                              36 I2          .GLOBAL         _ADDRAH         ; .SRES 1                       ; A4000080
 1855                              37 I2          .GLOBAL         _ADDRAL         ; .SRES 1                       ; A4000082
 1856                              38 I2          .GLOBAL         _ADDRBH         ; .SRES 1                       ; A4000084
 1857                              39 I2          .GLOBAL         _ADDRBL         ; .SRES 1                       ; A4000086
 1858                              40 I2          .GLOBAL         _ADDRCH         ; .SRES 1                       ; A4000088
 1859                              41 I2          .GLOBAL         _ADDRCL         ; .SRES 1                       ; A400008A
 1860                              42 I2          .GLOBAL         _ADDRDH         ; .SRES 1                       ; A400008C
 1861                              43 I2          .GLOBAL         _ADDRDL         ; .SRES 1                       ; A400008E
 1862                              44 I2          .GLOBAL         _ADCSR          ; .SRES 1                       ; A4000090
 1863                              45 I2          .GLOBAL         _ADCR           ; .SRES 1                       ; A4000092
 1864                              46 I2          .GLOBAL         _DADR0          ; .SRES 1                       ; A40000A0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    34
PROGRAM NAME =

 1865                              47 I2          .GLOBAL         _DADR1          ; .SRES 1                       ; A40000A2
 1866                              48 I2          .GLOBAL         _DACR1          ; .SRES 1                       ; A40000A4
 1867                              49 I2          .GLOBAL         _CCR2           ; .SRES 4                       ; A40000B0
 1868                              50 I2          .GLOBAL         _SIMDR          ; .SRES 2                       ; A40000C0
 1869                              51 I2          .GLOBAL         _SISCR          ; .SRES 2                       ; A40000C2
 1870                              52 I2          .GLOBAL         _SITDAR         ; .SRES 2                       ; A40000C4
 1871                              53 I2          .GLOBAL         _SIRDAR         ; .SRES 2                       ; A40000C6
 1872                              54 I2          .GLOBAL         _SICDAR         ; .SRES 2                       ; A40000C8
 1873                              55 I2          .GLOBAL         _SICTR          ; .SRES 2                       ; A40000CC
 1874                              56 I2          .GLOBAL         _SIFCTR         ; .SRES 2                       ; A40000D0
 1875                              57 I2          .GLOBAL         _SISTR          ; .SRES 2                       ; A40000D4
 1876                              58 I2          .GLOBAL         _SIIER          ; .SRES 2                       ; A40000D6
 1877                              59 I2          .GLOBAL         _SITDR          ; .SRES 4                       ; A40000E0
 1878                              60 I2          .GLOBAL         _SIRDR          ; .SRES 4                       ; A40000E4
 1879                              61 I2          .GLOBAL         _SITCR          ; .SRES 4                       ; A40000E8
 1880                              62 I2          .GLOBAL         _SIRCR          ; .SRES 4                       ; A40000EC
 1881                              63 I2          .GLOBAL         _SITMR          ; .SRES 2                       ; A40000FC
 1882                              64 I2          .GLOBAL         _SIFPR          ; .SRES 2                       ; A40000FE
 1883                              65 I2          .GLOBAL         _PACR           ; .SRES 2                       ; A4000100
 1884                              66 I2          .GLOBAL         _PBCR           ; .SRES 2                       ; A4000102
 1885                              67 I2          .GLOBAL         _PCCR           ; .SRES 2                       ; A4000104
 1886                              68 I2          .GLOBAL         _PDCR           ; .SRES 2                       ; A4000106
 1887                              69 I2          .GLOBAL         _PECR           ; .SRES 2                       ; A4000108
 1888                              70 I2          .GLOBAL         _PFCR           ; .SRES 2                       ; A400010A
 1889                              71 I2          .GLOBAL         _PGCR           ; .SRES 2                       ; A400010C
 1890                              72 I2          .GLOBAL         _PHCR           ; .SRES 2                       ; A400010E
 1891                              73 I2          .GLOBAL         _PJCR           ; .SRES 2                       ; A4000110
 1892                              74 I2          .GLOBAL         _PKCR           ; .SRES 2                       ; A4000112
 1893                              75 I2          .GLOBAL         _PLCR           ; .SRES 2                       ; A4000114
 1894                              76 I2          .GLOBAL         _SCPCR          ; .SRES 2                       ; A4000116
 1895                              77 I2          .GLOBAL         _PMCR           ; .SRES 2                       ; A4000118
 1896                              78 I2          .GLOBAL         _PADR           ; .SRES 1                       ; A4000120
 1897                              79 I2          .GLOBAL         _PBDR           ; .SRES 1                       ; A4000122
 1898                              80 I2          .GLOBAL         _PCDR           ; .SRES 1                       ; A4000124
 1899                              81 I2          .GLOBAL         _PDDR           ; .SRES 1                       ; A4000126
 1900                              82 I2          .GLOBAL         _PEDR           ; .SRES 1                       ; A4000128
 1901                              83 I2          .GLOBAL         _PFDR           ; .SRES 1                       ; A400012A
 1902                              84 I2          .GLOBAL         _PGDR           ; .SRES 1                       ; A400012C
 1903                              85 I2          .GLOBAL         _PHDR           ; .SRES 1                       ; A400012E
 1904                              86 I2          .GLOBAL         _PJDR           ; .SRES 1                       ; A4000130
 1905                              87 I2          .GLOBAL         _PKDR           ; .SRES 1                       ; A4000132
 1906                              88 I2          .GLOBAL         _PLDR           ; .SRES 1                       ; A4000134
 1907                              89 I2          .GLOBAL         _SCPDR          ; .SRES 1                       ; A4000136
 1908                              90 I2          .GLOBAL         _PMDR           ; .SRES 1                       ; A4000138
 1909                              91 I2          .GLOBAL         _SCSMR2         ; .SRES 1                       ; A4000150
 1910                              92 I2          .GLOBAL         _SCBRR2         ; .SRES 1                       ; A4000152
 1911                              93 I2          .GLOBAL         _SCSCR2         ; .SRES 1                       ; A4000154
 1912                              94 I2          .GLOBAL         _SCFTDR2        ; .SRES 1                       ; A4000156
 1913                              95 I2          .GLOBAL         _SCSSR2         ; .SRES 2                       ; A4000158
 1914                              96 I2          .GLOBAL         _SCFRDR2        ; .SRES 1                       ; A400015A
 1915                              97 I2          .GLOBAL         _SCFCR2         ; .SRES 1                       ; A400015C
 1916                              98 I2          .GLOBAL         _SCFDR2         ; .SRES 2                       ; A400015E
 1917                              99 I2          .GLOBAL         _PCC0ISR        ; .SRES 1                       ; A4000160
 1918                             100 I2          .GLOBAL         _PCC0GCR        ; .SRES 1                       ; A4000162
 1919                             101 I2          .GLOBAL         _PCC0CSCR       ; .SRES 1                       ; A4000164
 1920                             102 I2          .GLOBAL         _PCC0CSCIER     ; .SRES 1                       ; A4000166
 1921                             103 I2          .GLOBAL         _ACTR1          ; .SRES 2                       ; A4000180
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    35
PROGRAM NAME =

 1922                             104 I2          .GLOBAL         _ACTR2          ; .SRES 2                       ; A4000182
 1923                             105 I2          .GLOBAL         _ASTR1          ; .SRES 2                       ; A4000184
 1924                             106 I2          .GLOBAL         _ASTR2          ; .SRES 2                       ; A4000186
 1925                             107 I2          .GLOBAL         _MRCR           ; .SRES 2                       ; A4000188
 1926                             108 I2          .GLOBAL         _MPCR           ; .SRES 2                       ; A400018A
 1927                             109 I2          .GLOBAL         _DPNQ           ; .SRES 2                       ; A400018C
 1928                             110 I2          .GLOBAL         _RCNT           ; .SRES 2                       ; A400018E
 1929                             111 I2          .GLOBAL         _ACDR           ; .SRES 2                       ; A4000190
 1930                             112 I2          .GLOBAL         _ASDR           ; .SRES 2                       ; A4000192
 1931                             113 I2          .GLOBAL         _TDFP           ; .SRES 2                       ; A4000194
 1932                             114 I2          .GLOBAL         _RDFP           ; .SRES 2                       ; A4000198
 1933                             115 I2          .GLOBAL         _SDIR           ; .SRES 2                       ; A4000200
 1934                             116 I2          .GLOBAL         _SDDR_SDDRH     ; .SRES 4                       ; A4000208
 1935                             117 I2          .GLOBAL         _SDDRL          ; .SRES 2                       ; A400020A
 1936                             118 I2          .GLOBAL         _IPRF           ; .SRES 2                       ; A4000220
 1937                             119 I2          .GLOBAL         _IPRG           ; .SRES 2                       ; A4000222
 1938                             120 I2          .GLOBAL         _IPR3           ; .SRES 2                       ; A4000224
 1939                             121 I2          .GLOBAL         _IPR4           ; .SRES 2                       ; A4000226
 1940                             122 I2          .GLOBAL         _ICR3           ; .SRES 2                       ; A4000228
 1941                             123 I2          .GLOBAL         _CHRAR          ; .SRES 2                       ; A400022A
 1942                             124 I2          .GLOBAL         _STBCR3         ; .SRES 1                       ; A4000230
 1943                             125 I2          .GLOBAL         _SRSTR          ; .SRES 1                       ; A4000232
 1944                             126 I2          .GLOBAL         _EXPFC          ; .SRES 2                       ; A4000234
 1945                             127 I2          .GLOBAL         _EXCPGCR        ; .SRES 1                       ; A4000236
 1946                             128 I2          .GLOBAL         _CKIO2CR        ; .SRES 1                       ; A400023A
 1947                             129 I2          .GLOBAL         _USBIFR0        ; .SRES 1                       ; A4000240
 1948                             130 I2          .GLOBAL         _USBIFR1        ; .SRES 1                       ; A4000241
 1949                             131 I2          .GLOBAL         _USBEPDR0I      ; .SRES 1                       ; A4000242
 1950                             132 I2          .GLOBAL         _USBEPDR0O      ; .SRES 1                       ; A4000243
 1951                             133 I2          .GLOBAL         _USBTFG         ; .SRES 1                       ; A4000244
 1952                             134 I2          .GLOBAL         _USBFCLR        ; .SRES 1                       ; A4000245
 1953                             135 I2          .GLOBAL         _USBEPSZ0O      ; .SRES 1                       ; A4000246
 1954                             136 I2          .GLOBAL         _USBEPDR0S      ; .SRES 1                       ; A4000247
 1955                             137 I2          .GLOBAL         _USBDASTS       ; .SRES 1                       ; A4000248
 1956                             138 I2          .GLOBAL         _USBEPDR2       ; .SRES 1                       ; A4000249
 1957                             139 I2          .GLOBAL         _USBISR0        ; .SRES 1                       ; A400024A
 1958                             140 I2          .GLOBAL         _USBEPSTL       ; .SRES 1                       ; A400024B
 1959                             141 I2          .GLOBAL         _USBIER0        ; .SRES 1                       ; A400024C
 1960                             142 I2          .GLOBAL         _USBIER1        ; .SRES 1                       ; A400024D
 1961                             143 I2          .GLOBAL         _USBEPDR1       ; .SRES 1                       ; A400024E
 1962                             144 I2          .GLOBAL         _USBEPSZ1       ; .SRES 1                       ; A400024F
 1963                             145 I2          .GLOBAL         _USBISR1        ; .SRES 1                       ; A4000250
 1964                             146 I2          .GLOBAL         _USBDMA         ; .SRES 1                       ; A4000251
 1965                             147 I2          .GLOBAL         _USBEPDR3       ; .SRES 1                       ; A4000252
 1966                             148 I2          .GLOBAL         _USBHR          ; .SRES 4                       ; A4000400
 1967                             149 I2          .GLOBAL         _USBHC          ; .SRES 4                       ; A4000404
 1968                             150 I2          .GLOBAL         _USBHCS         ; .SRES 4                       ; A4000408
 1969                             151 I2          .GLOBAL         _USBHIS         ; .SRES 4                       ; A400040C
 1970                             152 I2          .GLOBAL         _USBHIE         ; .SRES 4                       ; A4000410
 1971                             153 I2          .GLOBAL         _USBHID         ; .SRES 4                       ; A4000414
 1972                             154 I2          .GLOBAL         _USBHHCCA       ; .SRES 4                       ; A4000418
 1973                             155 I2          .GLOBAL         _USBHPCED       ; .SRES 4                       ; A400041C
 1974                             156 I2          .GLOBAL         _USBHCHED       ; .SRES 4                       ; A4000420
 1975                             157 I2          .GLOBAL         _USBHCCED       ; .SRES 4                       ; A4000424
 1976                             158 I2          .GLOBAL         _USBHBHED       ; .SRES 4                       ; A4000428
 1977                             159 I2          .GLOBAL         _USBHBCED       ; .SRES 4                       ; A400042C
 1978                             160 I2          .GLOBAL         _USBHDHED       ; .SRES 4                       ; A4000430
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    36
PROGRAM NAME =

 1979                             161 I2          .GLOBAL         _USBHFI         ; .SRES 4                       ; A4000434
 1980                             162 I2          .GLOBAL         _USBHFR         ; .SRES 4                       ; A4000438
 1981                             163 I2          .GLOBAL         _USBHFN         ; .SRES 4                       ; A400043C
 1982                             164 I2          .GLOBAL         _USBHPS         ; .SRES 4                       ; A4000440
 1983                             165 I2          .GLOBAL         _USBHLST        ; .SRES 4                       ; A4000444
 1984                             166 I2          .GLOBAL         _USBHRDA        ; .SRES 4                       ; A4000448
 1985                             167 I2          .GLOBAL         _USBHRDB        ; .SRES 4                       ; A400044C
 1986                             168 I2          .GLOBAL         _USBHRS         ; .SRES 4                       ; A4000450
 1987                             169 I2          .GLOBAL         _USBHRPS1       ; .SRES 4                       ; A4000454
 1988                             170 I2          .GLOBAL         _USBHRPS2       ; .SRES 4                       ; A4000458
 1989                             171 I2          .GLOBAL         _LDPR00         ; .SRES 4                       ; A4000800
 1990                             172 I2          .GLOBAL         _LDICKR         ; .SRES 2                       ; A4000C00
 1991                             173 I2          .GLOBAL         _LDMTR          ; .SRES 2                       ; A4000C02
 1992                             174 I2          .GLOBAL         _LDDFR          ; .SRES 2                       ; A4000C04
 1993                             175 I2          .GLOBAL         _LDSMR          ; .SRES 2                       ; A4000C06
 1994                             176 I2          .GLOBAL         _LDSARU         ; .SRES 4                       ; A4000C08
 1995                             177 I2          .GLOBAL         _LDSARL         ; .SRES 4                       ; A4000C0C
 1996                             178 I2          .GLOBAL         _LDLAOR         ; .SRES 2                       ; A4000C10
 1997                             179 I2          .GLOBAL         _LDPALCR        ; .SRES 2                       ; A4000C12
 1998                             180 I2          .GLOBAL         _LDHCNR         ; .SRES 2                       ; A4000C14
 1999                             181 I2          .GLOBAL         _LDHSYNR        ; .SRES 2                       ; A4000C16
 2000                             182 I2          .GLOBAL         _LDVDLNR        ; .SRES 2                       ; A4000C18
 2001                             183 I2          .GLOBAL         _LDVTLNR        ; .SRES 2                       ; A4000C1A
 2002                             184 I2          .GLOBAL         _LDVSYNR        ; .SRES 2                       ; A4000C1C
 2003                             185 I2          .GLOBAL         _LDACLNR        ; .SRES 2                       ; A4000C1E
 2004                             186 I2          .GLOBAL         _LDINTR         ; .SRES 2                       ; A4000C20
 2005                             187 I2          .GLOBAL         _LDPMMR         ; .SRES 2                       ; A4000C24
 2006                             188 I2          .GLOBAL         _LDPSPR         ; .SRES 2                       ; A4000C26
 2007                             189 I2          .GLOBAL         _LDCNTR         ; .SRES 2                       ; A4000C28
 2008                             190 I2          .GLOBAL         _SMR0           ; .SRES 1                       ; FFFFFE80
 2009                             191 I2          .GLOBAL         _BRR0           ; .SRES 1                       ; FFFFFE82
 2010                             192 I2          .GLOBAL         _SCR0           ; .SRES 1                       ; FFFFFE84
 2011                             193 I2          .GLOBAL         _TDR0           ; .SRES 1                       ; FFFFFE86
 2012                             194 I2          .GLOBAL         _SSR0           ; .SRES 1                       ; FFFFFE88
 2013                             195 I2          .GLOBAL         _RDR0           ; .SRES 1                       ; FFFFFE8A
 2014                             196 I2          .GLOBAL         _SCSCMR         ; .SRES 1                       ; FFFFFE8C
 2015                             197 I2          .GLOBAL         _TSTR           ; .SRES 1                       ; FFFFFE92
 2016                             198 I2          .GLOBAL         _TCOR0          ; .SRES 4                       ; FFFFFE94
 2017                             199 I2          .GLOBAL         _TCNT0          ; .SRES 4                       ; FFFFFE98
 2018                             200 I2          .GLOBAL         _TCR0           ; .SRES 2                       ; FFFFFE9C
 2019                             201 I2          .GLOBAL         _TCOR1          ; .SRES 4                       ; FFFFFEA0
 2020                             202 I2          .GLOBAL         _TCNT1          ; .SRES 4                       ; FFFFFEA4
 2021                             203 I2          .GLOBAL         _TCR1           ; .SRES 2                       ; FFFFFEA8
 2022                             204 I2          .GLOBAL         _TCOR2          ; .SRES 4                       ; FFFFFEAC
 2023                             205 I2          .GLOBAL         _TCNT2          ; .SRES 4                       ; FFFFFEB0
 2024                             206 I2          .GLOBAL         _TCR2           ; .SRES 2                       ; FFFFFEB4
 2025                             207 I2          .GLOBAL         _R64CNT         ; .SRES 1                       ; FFFFFEC0
 2026                             208 I2          .GLOBAL         _RSECCNT        ; .SRES 1                       ; FFFFFEC2
 2027                             209 I2          .GLOBAL         _RMINCNT        ; .SRES 1                       ; FFFFFEC4
 2028                             210 I2          .GLOBAL         _RHRCNT         ; .SRES 1                       ; FFFFFEC6
 2029                             211 I2          .GLOBAL         _RWKCNT         ; .SRES 1                       ; FFFFFEC8
 2030                             212 I2          .GLOBAL         _RDAYCNT        ; .SRES 1                       ; FFFFFECA
 2031                             213 I2          .GLOBAL         _RMONCNT        ; .SRES 1                       ; FFFFFECC
 2032                             214 I2          .GLOBAL         _RYRCNT         ; .SRES 1                       ; FFFFFECE
 2033                             215 I2          .GLOBAL         _RSECAR         ; .SRES 1                       ; FFFFFED0
 2034                             216 I2          .GLOBAL         _RMINAR         ; .SRES 1                       ; FFFFFED2
 2035                             217 I2          .GLOBAL         _RHRAR          ; .SRES 1                       ; FFFFFED4
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    37
PROGRAM NAME =

 2036                             218 I2          .GLOBAL         _RWKAR          ; .SRES 1                       ; FFFFFED6
 2037                             219 I2          .GLOBAL         _RDAYAR         ; .SRES 1                       ; FFFFFED8
 2038                             220 I2          .GLOBAL         _RMONAR         ; .SRES 1                       ; FFFFFEDA
 2039                             221 I2          .GLOBAL         _RCR1           ; .SRES 1                       ; FFFFFEDC
 2040                             222 I2          .GLOBAL         _RCR2           ; .SRES 1                       ; FFFFFEDE
 2041                             223 I2          .GLOBAL         _ICR0           ; .SRES 2                       ; FFFFFEE0
 2042                             224 I2          .GLOBAL         _IPRA           ; .SRES 2                       ; FFFFFEE2
 2043                             225 I2          .GLOBAL         _IPRB           ; .SRES 2                       ; FFFFFEE4
 2044                             226 I2          .GLOBAL         _BCR1           ; .SRES 2                       ; FFFFFF60
 2045                             227 I2          .GLOBAL         _BCR2           ; .SRES 2                       ; FFFFFF62
 2046                             228 I2          .GLOBAL         _WCR1           ; .SRES 2                       ; FFFFFF64
 2047                             229 I2          .GLOBAL         _WCR2           ; .SRES 2                       ; FFFFFF66
 2048                             230 I2          .GLOBAL         _MCR            ; .SRES 2                       ; FFFFFF68
 2049                             231 I2          .GLOBAL         _PCR            ; .SRES 2                       ; FFFFFF6C
 2050                             232 I2          .GLOBAL         _RTCSR          ; .SRES 2                       ; FFFFFF6E
 2051                             233 I2          .GLOBAL         _RTCNT          ; .SRES 2                       ; FFFFFF70
 2052                             234 I2          .GLOBAL         _RTCOR          ; .SRES 2                       ; FFFFFF72
 2053                             235 I2          .GLOBAL         _RFCR           ; .SRES 2                       ; FFFFFF74
 2054                             236 I2          .GLOBAL         _FRQCR          ; .SRES 2                       ; FFFFFF80
 2055                             237 I2          .GLOBAL         _STBCR          ; .SRES 1                       ; FFFFFF82
 2056                             238 I2          .GLOBAL         _WTCNT          ; .SRES 1                       ; FFFFFF84
 2057                             239 I2          .GLOBAL         _WTCSR          ; .SRES 1                       ; FFFFFF86
 2058                             240 I2          .GLOBAL         _STBCR2         ; .SRES 1                       ; FFFFFF88
 2059                             241 I2          .GLOBAL         _BDRB           ; .SRES 4                       ; FFFFFF90
 2060                             242 I2          .GLOBAL         _BDMRB          ; .SRES 4                       ; FFFFFF94
 2061                             243 I2          .GLOBAL         _BRCR           ; .SRES 4                       ; FFFFFF98
 2062                             244 I2          .GLOBAL         _BETR           ; .SRES 2                       ; FFFFFF9C
 2063                             245 I2          .GLOBAL         _BARB           ; .SRES 4                       ; FFFFFFA0
 2064                             246 I2          .GLOBAL         _BAMRB          ; .SRES 4                       ; FFFFFFA4
 2065                             247 I2          .GLOBAL         _BBRB           ; .SRES 2                       ; FFFFFFA8
 2066                             248 I2          .GLOBAL         _BRSR           ; .SRES 4                       ; FFFFFFAC
 2067                             249 I2          .GLOBAL         _BARA           ; .SRES 4                       ; FFFFFFB0
 2068                             250 I2          .GLOBAL         _BAMRA          ; .SRES 4                       ; FFFFFFB4
 2069                             251 I2          .GLOBAL         _BBRA           ; .SRES 2                       ; FFFFFFB8
 2070                             252 I2          .GLOBAL         _BRDR           ; .SRES 4                       ; FFFFFFBC
 2071                             253 I2          .GLOBAL         _TRA            ; .SRES 4                       ; FFFFFFD0
 2072                             254 I2          .GLOBAL         _EXPEVT         ; .SRES 4                       ; FFFFFFD4
 2073                             255 I2          .GLOBAL         _INTEVT         ; .SRES 4                       ; FFFFFFD8
 2074                             256 I2          .GLOBAL         _MMUCR          ; .SRES 4                       ; FFFFFFE0
 2075                             257 I2          .GLOBAL         _BASRA          ; .SRES 1                       ; FFFFFFE4
 2076                             258 I2          .GLOBAL         _BASRB          ; .SRES 1                       ; FFFFFFE8
 2077                             259 I2          .GLOBAL         _CCR            ; .SRES 4                       ; FFFFFFEC
 2078                             260 I2          .GLOBAL         _PTEH           ; .SRES 4                       ; FFFFFFF0
 2079                             261 I2          .GLOBAL         _PTEL           ; .SRES 4                       ; FFFFFFF4
 2080                             262 I2          .GLOBAL         _TTB            ; .SRES 4                       ; FFFFFFF8
 2081                             263 I2          .GLOBAL         _TEA            ; .SRES 4                       ; FFFFFFFC
 2082                               5 I1  
 2083                              15             .include        "ssa_ver1.equ"
 2084                               1 I1  ;       ***********************************
 2085                               2 I1  ;       ***                             ***
 2086                               3 I1  ;       ***     SIT3/4ÇÃ ∞ƒﬁä÷åWø∞Ωêÿï™ ***
 2087                               4 I1  ;       ***                             ***
 2088                               5 I1  ;       ***********************************
 2089                               6 I1  _TYPE_SIT3      .DEFINE         "0"             ;
 2090                               7 I1  _TYPE_SIT4      .DEFINE         "1"             ;
 2091                               8 I1  ;;_SIT_TYPE_SEL .DEFINE         "0"     ;
 2092                               9 I1  _SIT_TYPE_SEL   .DEFINE         "1"     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    38
PROGRAM NAME =

 2093                              10 I1  
 2094                              11 I1  ;       ***********************************
 2095                              12 I1  ;       ***                             ***
 2096                              13 I1  ;       ***     C/BÇÃ ∞ƒﬁä÷åWø∞Ωêÿï™    ***
 2097                              14 I1  ;       ***                             ***
 2098                              15 I1  ;       ***********************************
 2099                              16 I1  _CB_CPUA        .DEFINE         "0"             ;
 2100                              17 I1  _CB_CPUB        .DEFINE         "1"             ;
 2101                              18 I1  ;;_CB_CPU_SEL   .DEFINE         "0"     ;
 2102                              19 I1  _CB_CPU_SEL     .DEFINE         "1"     ;CPUB=CPUDÇÃà”ñ°
 2103                              20 I1          .AIF    1 EQ    0
 2104                              21     ;       === CPUA ===
 2105                              22             .AELSE
 2106                              23 C   ;       === CPUB ===
 2107                              24 I1          .AENDI
 2108                              25 I1  
 2109                              26 I1  _SIT3_CPUA      .DEFINE         "0"             ;
 2110                              27 I1  _SIT3_CPUB      .DEFINE         "1"             ;
 2111                              28 I1  _SIT4_CPUA      .DEFINE         "2"             ;
 2112                              29 I1  _SIT4_CPUB      .DEFINE         "3"             ;
 2113                              30 I1  
 2114                              31 I1          .AIF    1 EQ 0
 2115                              32     
 2116                              33                     .AIF    1 EQ    0
 2117                              34     
 2118                              35     _SIT_CPU_SEL    .DEFINE         "0"     ;
 2119                              36     
 2120                              37                     .AELSE
 2121                              38     
 2122                              39     _SIT_CPU_SEL    .DEFINE         "1"     ;
 2123                              40     
 2124                              41                     .AENDI
 2125                              42             .AELSE
 2126                              43 C                   .AIF    1 EQ    0
 2127                              44     
 2128                              45     _SIT_CPU_SEL    .DEFINE         "2"     ;
 2129                              46     
 2130                              47                     .AELSE
 2131                              48 C   
 2132                              49 C   _SIT_CPU_SEL    .DEFINE         "3"     ;
 2133                              50 C   
 2134                              51 C                   .AENDI
 2135                              52 I1          .AENDI
 2136                              16             .include        "ssa_com1.mac"
 2137                               1 I1  
 2138                               2 I1  ;       ====================================
 2139                               3 I1  ;       -------------- WDT CLR -------------
 2140                               4 I1  ;       ====================================
 2141                               5 I1          .MACRO  _WDT_CLR
 2142                               6 I1          PUSH_REG1 R0
 2143                               7 I1          PUSH_REG1 R10
 2144                               8 I1          PUSH_REG1 R14
 2145                               9 I1  
 2146                              10 I1          MOV.L   #_PJDR,R10                              ;
 2147                              11 I1          MOV.B   @R10,R0
 2148                              12 I1          OR      #BIT4,R0
 2149                              13 I1          MOV.B   R0,@R10
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    39
PROGRAM NAME =

 2150                              14 I1          AND     #NBIT4,R0
 2151                              15 I1          MOV.B   R0,@R10
 2152                              16 I1  
 2153                              17 I1          ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2154                              18 I1          MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2155                              19 I1          MOV.W   @R10,R0                                 ;
 2156                              20 I1          MOV.W   #BIT0,R14                               ;
 2157                              21 I1          OR      R14,R0                                  ;
 2158                              22 I1          MOV.W   R0,@R10                                 ; WORK
 2159                              23 I1  
 2160                              24 I1  ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2161                              25 I1  ;;      MOV.W   @R10,R0                                 ;
 2162                              26 I1          MOV.W   #_IO2B_P5EX,R14                         ;
 2163                              27 I1          XOR     R14,R0                                  ;
 2164                              28 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2165                              29 I1          MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2166                              30 I1  
 2167                              31 I1          MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2168                              32 I1          MOV.W   @R10,R0                                 ;
 2169                              33 I1          MOV.W   #NBIT0,R14                              ;
 2170                              34 I1          AND     R14,R0                                  ;
 2171                              35 I1          MOV.W   R0,@R10                                 ; WORK
 2172                              36 I1  
 2173                              37 I1  ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2174                              38 I1  ;;      MOV.W   @R10,R0                                 ;
 2175                              39 I1          MOV.W   #_IO2B_P5EX,R14                         ;
 2176                              40 I1          XOR     R14,R0                                  ;
 2177                              41 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2178                              42 I1          MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2179                              43 I1  
 2180                              44 I1          M_BRA   AAA\@
 2181                              45 I1  AAA\@:
 2182                              46 I1          POP_REG1 R14
 2183                              47 I1          POP_REG1 R10
 2184                              48 I1          POP_REG1 R0
 2185                              49 I1          .ENDM
 2186                              50 I1  
 2187                              51 I1  
 2188                              52 I1  ;       ====================================
 2189                              53 I1  ;       -------------- WDT CLR -------------
 2190                              54 I1  ;       ====================================
 2191                              55 I1          .MACRO  _WDT_CLR_MEMCHK
 2192                              56 I1          MOV.L   #_PJDR,R10                              ;
 2193                              57 I1          MOV.B   @R10,R0
 2194                              58 I1          XOR     #BIT4,R0
 2195                              59 I1          MOV.B   R0,@R10
 2196                              60 I1  
 2197                              61 I1          ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2198                              62 I1          MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2199                              63 I1          MOV.W   @R10,R0                                 ;
 2200                              64 I1          XOR     #BIT0,R0                                ;
 2201                              65 I1          MOV.W   R0,@R10                                 ; WORK
 2202                              66 I1          .ENDM
 2203                              67 I1  
 2204                              68 I1  
 2205                              17             .include        "ssa_had1.equ"
 2206                               1 I1  ;/*     ***********************************     */
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    40
PROGRAM NAME =

 2207                               2 I1  ;/*     ***                             ***     */
 2208                               3 I1  ;/*     ***     íËé¸ä˙äÑçûÇ›äÓñ{TIME    ***     */
 2209                               4 I1  ;/*     ***                             ***     */
 2210                               5 I1  ;/*     ***********************************     */
 2211          000007D0             6 I1  _TIM100US       .EQU    2000                            ;PÉ”/1ÇÃèÍçá
 2212          000009C4             7 I1  _TIM1MS         .EQU    2500                            ;PÉ”/8ÇÃèÍçá
 2213                               8 I1  
 2214                               9 I1  
 2215                              10 I1  ;/*     ***********************************     */
 2216                              11 I1  ;/*     ***                             ***     */
 2217                              12 I1  ;/*     ***     äeÉÅÉÇÉä                ***     */
 2218                              13 I1  ;/*     ***                             ***     */
 2219                              14 I1  ;/*     ***********************************     */
 2220          AC000000            15 I1  _SRAM_TOP       .EQU    H'AC000000
 2221          001FFFFF            16 I1  _SRAM_SIZE      .EQU    H'001FFFFF              ; SIT4-MC
 2222          FFFF6000            17 I1  _IRAM_TOP       .EQU    H'FFFF6000              ;
 2223          00007FFF            18 I1  _IRAM_SIZE      .EQU    H'00007FFF
 2224          00003FFF            19 I1  _DPRAM_SIZE     .EQU    H'00003FFF
 2225                              20 I1  
 2226                              21 I1  
 2227                              22 I1  ;/*     ***********************************     */
 2228                              23 I1  ;/*     ***                             ***     */
 2229                              24 I1  ;/*     ***             IOGA            ***     */
 2230                              25 I1  ;/*     ***                             ***     */
 2231                              26 I1  ;/*     ***********************************     */
 2232          00000000            27 I1  _IOGAi_PA               .equ    0*2     ;//
 2233          00000002            28 I1  _IOGAi_PB               .equ    1*2     ;//
 2234          00000004            29 I1  _IOGAi_PC               .equ    2*2     ;//
 2235          00000006            30 I1  _IOGAi_PD               .equ    3*2     ;//
 2236          00000008            31 I1  _IOGAo_PE               .equ    4*2     ;//
 2237          0000000A            32 I1  _IOGAo_PF               .equ    5*2     ;//
 2238          0000000C            33 I1  _IOGAo_PG               .equ    6*2     ;//
 2239          0000000E            34 I1  _IOGAo_PH               .equ    7*2     ;//
 2240                              35 I1  
 2241          00000000            36 I1  _IOGA_P0                .equ    0*2     ;//
 2242          00000002            37 I1  _IOGA_P1                .equ    1*2     ;//
 2243          00000004            38 I1  _IOGA_P2                .equ    2*2     ;//
 2244          00000006            39 I1  _IOGA_P3                .equ    3*2     ;//
 2245          00000008            40 I1  _IOGA_P4                .equ    4*2     ;//
 2246          0000000A            41 I1  _IOGA_P5                .equ    5*2     ;//
 2247          0000000C            42 I1  _IOGA_P6                .equ    6*2     ;//
 2248          0000000E            43 I1  _IOGA_P7                .equ    7*2     ;//
 2249                              44 I1  
 2250                              45 I1  ;/*     ***********************************     */
 2251                              46 I1  ;/*     ***                             ***     */
 2252                              47 I1  ;/*     ***     óßâ‘IOGA(SIT-4)         ***     */
 2253                              48 I1  ;/*     ***                             ***     */
 2254                              49 I1  ;/*     ***********************************     */
 2255                              50 I1  ;       √ﬁ∞¿⁄ºﬁΩ¿
 2256          00000000            51 I1  _IOGA_PDR0              .equ    0*2*2           ;//
 2257          00000004            52 I1  _IOGA_PDR1              .equ    1*2*2           ;//
 2258          00000008            53 I1  _IOGA_PDR2              .equ    2*2*2           ;//
 2259          0000000C            54 I1  _IOGA_PDR3              .equ    3*2*2           ;//
 2260          00000010            55 I1  _IOGA_PDR4              .equ    4*2*2           ;//
 2261          00000014            56 I1  _IOGA_PDR5              .equ    5*2*2           ;//
 2262          00000018            57 I1  _IOGA_PDR6              .equ    6*2*2           ;//
 2263          0000001C            58 I1  _IOGA_PDR7              .equ    7*2*2           ;// BIT0~3
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    41
PROGRAM NAME =

 2264                              59 I1  
 2265                              60 I1  ;       ï˚å¸⁄ºﬁΩ¿
 2266          00000002            61 I1  _IOGA_PDIR0             .equ    0*2*2+2         ;//
 2267          00000006            62 I1  _IOGA_PDIR1             .equ    1*2*2+2         ;//
 2268          0000000A            63 I1  _IOGA_PDIR2             .equ    2*2*2+2         ;//
 2269          0000000E            64 I1  _IOGA_PDIR3             .equ    3*2*2+2         ;//
 2270          00000012            65 I1  _IOGA_PDIR4             .equ    4*2*2+2         ;//
 2271          00000016            66 I1  _IOGA_PDIR5             .equ    5*2*2+2         ;//
 2272          0000001A            67 I1  _IOGA_PDIR6             .equ    6*2*2+2         ;//
 2273          0000001C            68 I1  _IOGA_PDIR7             .equ    7*2*2           ;// BIT4~7
 2274                              69 I1  
 2275                              70 I1  
 2276                              71 I1  ;/*     ***********************************     */
 2277                              72 I1  ;/*     ***                             ***     */
 2278                              73 I1  ;/*     ***     óßâ‘IOGA(SIT-4)         ***     */
 2279                              74 I1  ;/*     ***                             ***     */
 2280                              75 I1  ;/*     ***********************************     */
 2281                              76 I1  ;       IC7
 2282          00000000            77 I1  _IO1A_P4EX              .EQU    H'00            ;//
 2283          0000007B            78 I1  _IO1A_P5EX              .EQU    H'7B            ;//
 2284          00000000            79 I1  _IO1A_P6EX              .EQU    H'00            ;//
 2285          00000000            80 I1  _IO1A_P7EX              .EQU    H'00            ;//
 2286                              81 I1  ;       IC8
 2287          0000002F            82 I1  _IO2A_P5EX              .EQU    H'2F            ;//
 2288          0000009C            83 I1  _IO2A_P6EX              .EQU    H'9C            ;//FCYCL/RCYCLÇÕê≥ò_óù 2006-08-05
 2289          00000000            84 I1  _IO2A_P7EX              .EQU    H'00            ;//
 2290                              85 I1  
 2291                              86 I1  ;       IC21
 2292          000000FF            87 I1  _IO1B_P4EX              .EQU    H'FF            ;//
 2293          00000070            88 I1  _IO1B_P5EX              .EQU    H'70            ;//
 2294          00000000            89 I1  _IO1B_P6EX              .EQU    H'00            ;//
 2295          00000000            90 I1  _IO1B_P7EX              .EQU    H'00            ;//
 2296                              91 I1  ;       IC22
 2297                              92 I1  ;;_IO2B_P5EX            .EQU    H'2F            ;//
 2298          00000000            93 I1  _IO2B_P5EX              .EQU    H'0             ;//2006-10-19 SAITO
 2299          0000009C            94 I1  _IO2B_P6EX              .EQU    H'9C            ;//FCYCL/RCYCLÇÕê≥ò_óù 2006-08-05
 2300          00000000            95 I1  _IO2B_P7EX              .EQU    H'00            ;//
 2301                              96 I1  
 2302                              97 I1  
 2303                              98 I1  ;/*     ***********************************     */
 2304                              99 I1  ;/*     ***                             ***     */
 2305                             100 I1  ;/*     ***     à íuåàÇﬂLSI             ***     */
 2306                             101 I1  ;/*     ***                             ***     */
 2307                             102 I1  ;/*     ***********************************     */
 2308          00000000           103 I1  _PLSiCH1                .equ    0
 2309          00000030           104 I1  _PLSiCH2                .equ    h'30
 2310                             105 I1  
 2311          00000000           106 I1  _PL_BitComdL            .equ    h'0
 2312          00000002           107 I1  _PL_BitComdH            .equ    h'2
 2313          00000004           108 I1  _PL_BitInfoL            .equ    h'4
 2314          00000006           109 I1  _PL_BitInfoH            .equ    h'6
 2315          00000024           110 I1  _PL_NowPos1L            .equ    h'24
 2316          00000026           111 I1  _PL_NowPos1H            .equ    h'26
 2317          00000028           112 I1  _PL_NowPos2             .equ    h'28
 2318          0000002A           113 I1  _PL_CtrlReg             .equ    h'2A
 2319                             114 I1  
 2320                             115 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    42
PROGRAM NAME =

 2321                             116 I1  _DEBUG_DIS              .DEFINE         "0"
 2322                             117 I1  _DEBUG_ENB              .DEFINE         "1"
 2323                             118 I1  ;;_SCAN_DEBUG_ENB               .DEFINE         "1"
 2324                             119 I1  _SCAN_DEBUG_ENB         .DEFINE         "0"
 2325                              18             .include        "ssa_wrmy.ext"
 2326                               1 I1  ;       ***********************************
 2327                               2 I1  ;       ***                             ***
 2328                               3 I1  ;       ***             ramíËã`         ***
 2329                               4 I1  ;       ***                             ***
 2330                               5 I1  ;       ***********************************
 2331                               6 I1  ;       Ç≈Ç´ÇÈå¿ÇËssc_wrm*.c/ssc_wrm*.hë§Ç…íËã`Ç∑ÇÈéñ
 2332                               7 I1  ;       ssc_wrm*.h ÇÃexternï∂ÇÉAÉZÉìÉuÉâÇ≈éQè∆Ç∑ÇÈèÍçáÇÕÇ±Ç±Ç…ì¸ÇÍÇÈ
 2333                               8 I1  ;       ===========================================
 2334                               9 I1  ;       ===     ssa_wrmy.src ÇÃexternï∂         ===
 2335                              10 I1  ;       ===========================================
 2336                              11 I1          .GLOBAL _SAITO_ASM_RAM_TOP      ;
 2337                              12 I1  
 2338                              13 I1  ;//     ***********************************
 2339                              14 I1  ;//     ***     éÛêMàŸèÌ                ***
 2340                              15 I1  ;//     ***********************************
 2341                              16 I1          .global _rcv2_err_hard_INTflg1; //  ∞ƒﬁàŸèÌ
 2342                              17 I1          .global _rcv2_err_hard_INTflg2; //  ∞ƒﬁàŸèÌ
 2343                              18 I1          .global _rcv2_err_hard_INTflg3; //  ∞ƒﬁàŸèÌ
 2344                              19 I1          .global _rcv2_err_data_flg1;    // √ﬁ∞¿àŸèÌ(ñ¢égóp)
 2345                              20 I1          .global _rcv2_err_hard_sts1;    // è⁄ç◊ àŸèÌì‡óe
 2346                              21 I1          .global _rcv2_err_hard_sts2;    // è⁄ç◊ àŸèÌì‡óe
 2347                              22 I1          .global _rcv2_err_hard_sts3;    //
 2348                              23 I1          .global _rcv2_err_data_sts1;    //(ñ¢égóp)
 2349                              24 I1          .global _rcv2_err_OverRunCnt;   //
 2350                              25 I1          .global _rcv2_err_FRPRErrCnt;   //Ã⁄∞—ÅE ﬂÿ√®
 2351                              26 I1          .global _rcv2_err_elseErrCnt;   //Ã⁄∞—ÅE ﬂÿ√®
 2352                              27 I1  
 2353                              28 I1  ;//     ***********************************
 2354                              29 I1  ;//     ***     ê≥èÌéÛêM                ***
 2355                              30 I1  ;//     ***********************************
 2356                              31 I1          .global _rcv2_data_INcnt;//éÛêM√ﬁ∞¿êî éÛêM ﬁÃßÅ®å¬êî
 2357                              32 I1          .global _rcv2_data_cnt;//èàóùÇ∑Ç◊Ç´∂≥›¿êîÿ–ØƒÇÇ©ÇØÇΩÇ‡ÇÒÇo
 2358                              33 I1          .global _rcv2_data_buf;[32];
 2359                              34 I1  
 2360                              35 I1  ;//     ***********************************
 2361                              36 I1  ;//     ***     ëóêM                    ***
 2362                              37 I1  ;//     ***********************************
 2363                              38 I1          .global _send2_data_buf;[32];
 2364                              39 I1  ;//     ***********************************
 2365                              40 I1  ;//     ***     ëóéÛêMä«óù              ***
 2366                              41 I1  ;//     ***********************************
 2367                              42 I1          .global _rcv2_event_flg;        //main-->bit0=1  2ms:bit1(èàóùäJén),bit7(äÆóπ)
 2368                              43 I1          .global _send2_event_flg;//main-->bit0=1  2ms:bit1(èàóùäJén),bit7(äÆóπ)
 2369                              44 I1  
 2370                              45 I1          .global _PV1_SCRW_POS;                  //;@égópsh->H8 ->ï\é¶   [âÒëóóLÇË1CH ÇÃÇ›]
 2371                              46 I1  
 2372                              47 I1          .global _PV0_SCRW_POS;                  //;@égópsh->H8 ->ï\é¶   [âÒëóóLÇË1CH ÇÃÇ›]
 2373                              48 I1  
 2374                              49 I1  
 2375                              50 I1  ;//     *******************************************
 2376                              51 I1  ;//     ***     àŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl          ***
 2377                              52 I1  ;//     *******************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    43
PROGRAM NAME =

 2378                              53 I1  
 2379                              54 I1          .global _ERR_CHK_OK_FLG                 ;//àŸèÌèàóùäJénÃ◊∏ﬁ
 2380                              55 I1  
 2381                              56 I1          .global _ER_SQRAM_WK1                   ;//
 2382                              57 I1          .global _ER_SQRAM_WK2                   ;//
 2383                              58 I1          .global _SH4_SQERRAM                    ;// SH4 -> SH2
 2384                              59 I1          .global _DBG_ERRCHK_NASI                ;// ¡™Ø∏Ç»Çµ
 2385                              60 I1  
 2386                              61 I1          .global _ER_SFTSW_CHG_OLD               ;//
 2387                              62 I1  
 2388                              63 I1          .global _FROM_SUMCHK_CODE               ;// FROM SUM CODE
 2389                              64 I1  
 2390                              65 I1          .global _SFTSW_ERR_TM                   ;//
 2391                              66 I1          .global _BTNER_ERR_TM                   ;//
 2392                              67 I1          .global _NCHSW_ERR_TM1                  ;//
 2393                              68 I1          .global _NCHSW_ERR_TM2                  ;//
 2394                              69 I1          .global _VLVER11_ERR_TM                 ;//
 2395                              70 I1          .global _VLVER12_ERR_TM                 ;//
 2396                              71 I1          .global _VLVER21_ERR_TM                 ;//
 2397                              72 I1          .global _VLVER22_ERR_TM                 ;//
 2398                              73 I1          .global _VLVER31_ERR_TM                 ;//
 2399                              74 I1          .global _VLVER32_ERR_TM                 ;//
 2400                              75 I1          .global _CMP2_ERR_TM2                   ;//
 2401                              76 I1          .global _FSFT_TRERR_TM                  ;//
 2402                              77 I1          .global _RSFT_TRERR_TM                  ;//
 2403                              78 I1  
 2404                              79 I1  
 2405                              80 I1          .global _WPAR1_SFTSWER_TM               ;//
 2406                              81 I1          .global _WPAR1_BTNER_TM                 ;//
 2407                              82 I1          .global _WPAR1_MODSER_TM1               ;//
 2408                              83 I1          .global _WPAR1_MODSER_TM2               ;//
 2409                              84 I1          .global _WPAR1_VLVER11_TM1              ;//
 2410                              85 I1          .global _WPAR1_VLVER12_TM1              ;//
 2411                              86 I1          .global _WPAR1_VLVER21_TM1              ;//
 2412                              87 I1          .global _WPAR1_VLVER22_TM1              ;//
 2413                              88 I1          .global _WPAR1_VLVER31_TM1              ;//
 2414                              89 I1          .global _WPAR1_VLVER32_TM1              ;//
 2415                              90 I1          .global _WPAR1_CMPER2_TM                ;//
 2416                              91 I1          .global _WPAR1_FSFTTRER_TM              ;//
 2417                              92 I1          .global _WPAR1_RSFTTRER_TM              ;//
 2418                              93 I1  
 2419                              94 I1  
 2420                              95 I1          .global _REMOTE_ERR_CHKTM               ;//
 2421                              96 I1  
 2422                              97 I1          .global _ROM_SYSPAR_ERRADR              ;//
 2423                              98 I1  
 2424                              99 I1  
 2425                             100 I1  
 2426                             101 I1  ;//     ***************************************************
 2427                             102 I1  ;//     ***     ÉZÉãÉtÉ`ÉFÉbÉNä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl        ***
 2428                             103 I1  ;//     ***************************************************
 2429                             104 I1          .global _SELF_CHK_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2430                             105 I1          .global _SELF_ACT_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2431                             106 I1  
 2432                             107 I1  
 2433                             108 I1          .global _SELF_HAND_FLG1                 ; é©ï™ÇÃèÛë‘Ã◊∏ﬁ SRAM
 2434                             109 I1          .global _SELF_HAND_FLG2                 ; ëäéËÇÃèÛë‘Ã◊∏ﬁ SRAM
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    44
PROGRAM NAME =

 2435                             110 I1  
 2436                             111 I1          .global _SELF_FSTY_USE                  ;//;ëOà¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2437                             112 I1          .global _SELF_RSTY_USE                  ;//;å„à¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2438                             113 I1  
 2439                             114 I1          .global _SELF_CHK_TIMER                 ;//;ÉZÉãÉtÉ`ÉFÉbÉNÉ^ÉCÉ}
 2440                             115 I1  
 2441                             116 I1  ;       *** AD CONVERTER WORK RAM ***
 2442                             117 I1          .global _AD_CNV_DT0                     ; 8BIT A/D
 2443                             118 I1  
 2444                             119 I1          .global _AD_BUFCNT                      ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2445                             120 I1          .global _AD_AVG_BUF                     ;// ïΩãœBAFTOP
 2446                             121 I1          .global _AD_AVG_TOTAL                   ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2447                             122 I1          .global _PV_AD_DATA                     ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩå„ÇÃAD DATA
 2448                             123 I1  
 2449                             124 I1  ;       -----------------2014-02-14 -----------
 2450                             125 I1          .global _AD2_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2451                             126 I1          .global _AD2_AVG_BUF                    ;// ïΩãœBAFTOP
 2452                             127 I1          .global _AD2_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2453                             128 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD2_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2454                             129 I1          .global _AD2CNV_IN_DATA                 ;
 2455                             130 I1  
 2456                             131 I1          .global _AD3_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2457                             132 I1          .global _AD3_AVG_BUF                    ;// ïΩãœBAFTOP
 2458                             133 I1          .global _AD3_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2459                             134 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD3_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2460                             135 I1          .global _AD3CNV_IN_DATA                 ;
 2461                             136 I1  
 2462                             137 I1          .global _AD4_BUFCNT                     ;// à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2463                             138 I1          .global _AD4_AVG_BUF                    ;// ïΩãœBAFTOP
 2464                             139 I1          .global _AD4_AVG_TOTAL                  ;// ÇWâÒï™ÇÃ√ﬁ∞¿
 2465                             140 I1  ;//2014-10-11 DPRAMÇ…à⁄ìÆ       .global _PV_AD4_DATA                    ;// à⁄ìÆïΩãœÇ∆Ç¡ÇΩ
                                          å„ÇÃAD DATA
 2466                             141 I1          .global _AD4CNV_IN_DATA                 ;
 2467                             142 I1  
 2468                             143 I1          .global _ADCNV_SEL                      ;
 2469                             144 I1  
 2470                             145 I1  
 2471                             146 I1  
 2472                             147 I1  ;//     ***************************************
 2473                             148 I1  ;//     ***     ìÒèdâÒòHàŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl  ***
 2474                             149 I1  ;//     ***************************************
 2475                             150 I1          .global _CPUN_2CMP_DATA                 ;// ëäéËÇbÇoÇtÇÃî‰ärÉfÅ[É^
 2476                             151 I1          .global _CMP2_ERR_FIRST                 ;// èâÇﬂÇƒìÒèdâÒòHàŸèÌî≠ê∂
 2477                             152 I1  
 2478                             153 I1          .global _CPUN_2CMP_LATCH2               ;// ëäéËìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2479                             154 I1          .global _CPUN_2CMP_LATCH1               ;// é©ï™ìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2480                             155 I1  
 2481                             156 I1  
 2482                             157 I1  ;//     *** à¿ëSëïíuä÷åW ***
 2483                             158 I1  
 2484                             159 I1          .global _FACT_IN_DATA                   ;//
 2485                             160 I1          .global _RACT_IN_DATA                   ;//
 2486                             161 I1          .global _FDEV_IN_DATA                   ;//
 2487                             162 I1          .global _RDEV_IN_DATA                   ;//
 2488                             163 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    45
PROGRAM NAME =

 2489                             164 I1  
 2490                             165 I1  ;       ===========================================
 2491                             166 I1  ;       ===     ssc_wrmy.c ÇÃexternï∂           ===
 2492                             167 I1  ;       ===========================================
 2493                             168 I1  
 2494                             169 I1          .GLOBAL         _TINT3_10MS_CNT                 ;
 2495                             170 I1  
 2496                             171 I1  
 2497                             172 I1  ;//     í êMä÷òA 2004-04-14
 2498                             173 I1          .global _WK_RCV_SCLSR2;//2004-04-12
 2499                             174 I1          .global _WK_RCV_SCFSR2;//2004-04-12
 2500                             175 I1          .global _WK_RCV_SCFDR2  ;//2004-04-12
 2501                             176 I1  
 2502                             177 I1  ;//     ===================
 2503                             178 I1  ;//     ===             ===
 2504                             179 I1  ;//     ===================
 2505                             180 I1  ;//     === 2004-04-14 ====
 2506                             181 I1          .global _IN_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA
                                          -FORM),,
 2507                             182 I1          .global _IN_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2508                             183 I1          .global _RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA-FO
                                          RM),,
 2509                             184 I1          .global _RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2510                             185 I1          .global _LT_RNA_REF_ERR_FLG1;//BIT0,BIT1,BIT2(HARD),BIT3CMD,BIT4(RNA-SYS),BIT5(RNA
                                          -FORM),,
 2511                             186 I1          .global _LT_RNA_REF_ERR_FLG2;//BIT0~BIT7 ALM.BIT8
 2512                             187 I1  
 2513                             188 I1          .global _RNA_CMD_VERIFY_CNT;//00,01à»äOÇ™î≠ê∂
 2514                             189 I1          .global _RNA_CMD_VERIFY_DAT;//àŸèÌéûÇÃç≈êV√ﬁ∞¿
 2515                             190 I1          .global _RNA_STS_SYSERR_CNT;//BIT0=1
 2516                             191 I1          .global _RNA_STS_REQERR_CNT;//BIT2=1
 2517                             192 I1          .global _RNA_STS_ERR_DAT;//àŸèÌéûÇÃç≈êV√ﬁ∞¿
 2518                             193 I1          .global _RNA_ALM_BIT0_CNT;//
 2519                             194 I1          .global _RNA_ALM_BIT1_CNT;//
 2520                             195 I1          .global _RNA_ALM_BIT2_CNT;//
 2521                             196 I1          .global _RNA_ALM_BIT3_CNT;//
 2522                             197 I1          .global _RNA_ALM_BIT4_CNT;//
 2523                             198 I1          .global _RNA_ALM_BIT5_CNT;//
 2524                             199 I1          .global _RNA_ALM_BIT6_CNT;//
 2525                             200 I1          .global _RNA_ALM_BIT7_CNT;//
 2526                             201 I1          .global _RNA_ALM_CNT;//
 2527                             202 I1          .global _RNA_ALM_DAT;//
 2528                             203 I1          .global _RNA_REF1_CNT;//èàóùÇ™ê≥èÌÇ…ìÆçÏÇµÇƒÇ¢ÇÈÇ©
 2529                             204 I1          .global _RNA_REF2_CNT;//èàóùÇ™ê≥èÌÇ…ìÆçÏÇµÇƒÇ¢ÇÈÇ©
 2530                             205 I1  
 2531                             206 I1          .global _DSET_SW_FLG;
 2532                             207 I1  
 2533                             208 I1  
 2534                             209 I1  
 2535                             210 I1  
 2536                             211 I1  
 2537                             212 I1  
 2538                             213 I1  
 2539                             214 I1  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ;;;;;;;;;;;;;;;;;;;;;;;;;
 2540                             215 I1  
 2541                             216 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    46
PROGRAM NAME =

 2542                             217 I1  
 2543                             218 I1  
 2544                             219 I1  ;       ***********************************
 2545                             220 I1  ;       ***                             ***
 2546                             221 I1  ;       ***             ramíËã`         ***
 2547                             222 I1  ;       ***                             ***
 2548                             223 I1  ;       ***********************************
 2549                             224 I1  ;       Ç≈Ç´ÇÈå¿ÇËssc_wrm*.c/ssc_wrm*.hë§Ç…íËã`Ç∑ÇÈéñ
 2550                             225 I1  ;       ssc_wrm*.h ÇÃexternï∂ÇÉAÉZÉìÉuÉâÇ≈éQè∆Ç∑ÇÈèÍçáÇÕÇ±Ç±Ç…ì¸ÇÍÇÈ
 2551                             226 I1  ;       ===========================================
 2552                             227 I1  ;       ===     ssa_wrmy.src ÇÃexternï∂         ===
 2553                             228 I1  ;       ===========================================
 2554                             229 I1  ;20060725 SAITO .GLOBAL _SAITO_ASM_RAM_TOP      ;
 2555                             230 I1  
 2556                             231 I1          .global         _SQ_CBWK_TOP            ;//
 2557                             232 I1          .global         _CPUA_EMG_IN_FLG        ;//
 2558                             233 I1  
 2559                             234 I1  
 2560                             235 I1  ;//     *** INP1 PORT ***
 2561                             236 I1          .global         _REAL_INP1_DATA                 ; ç°âÒíl
 2562                             237 I1          .global         _REAL_INP1_DT_OLD1              ; 1âÒëO
 2563                             238 I1          .global         _REAL_INP1_DT_OLD2              ; 2âÒëO
 2564                             239 I1  
 2565                             240 I1  ;//     *** PB PORT ***
 2566                             241 I1          .global         _PB_PORT_CTL_DATA               ; ç°âÒíl
 2567                             242 I1          .global         _PB_INDT_OLD1                   ; 1âÒëO
 2568                             243 I1          .global         _PB_INDT_OLD2                   ; 2âÒëO
 2569                             244 I1  
 2570                             245 I1  ;//;    *** PJ PORT ***
 2571                             246 I1          .global         _PJ_PORT_CTL_DATA               ; ç°âÒíl
 2572                             247 I1          .global         _PJ_INDT_OLD1                   ; 1âÒëO
 2573                             248 I1          .global         _PJ_INDT_OLD2                   ; 2âÒëO
 2574                             249 I1  
 2575                             250 I1  ;//     *** PK PORT ***
 2576                             251 I1          .global         _PK_PORT_CTL_DATA               ; ç°âÒíl
 2577                             252 I1          .global         _PK_INDT_OLD1                   ; 1âÒëO
 2578                             253 I1          .global         _PK_INDT_OLD2                   ; 2âÒëO
 2579                             254 I1  
 2580                             255 I1  ;//     *** PL PORT ***
 2581                             256 I1          .global         _PL_PORT_CTL_DATA               ; ç°âÒíl
 2582                             257 I1          .global         _PL_INDT_OLD1                   ; 1âÒëO
 2583                             258 I1          .global         _PL_INDT_OLD2                   ; 2âÒëO
 2584                             259 I1  
 2585                             260 I1  ;//     *******************************************
 2586                             261 I1  ;//     ***     àŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl          ***
 2587                             262 I1  ;//     *******************************************
 2588                             263 I1  
 2589                             264 I1  ;20060725 SAITO .global _ERR_CHK_OK_FLG                 ;//àŸèÌèàóùäJénÃ◊∏ﬁ
 2590                             265 I1  
 2591                             266 I1  ;20060725 SAITO .global _ER_SQRAM_WK1                   ;//
 2592                             267 I1  ;20060725 SAITO .global _ER_SQRAM_WK2                   ;//
 2593                             268 I1  ;20060725 SAITO .global _SH4_SQERRAM                    ;// SH4 -> SH2
 2594                             269 I1  ;20060725 SAITO .global _DBG_ERRCHK_NASI                ;// ¡™Ø∏Ç»Çµ
 2595                             270 I1  
 2596                             271 I1  ;20060725 SAITO .global _ER_SFTSW_CHG_OLD               ;//
 2597                             272 I1  
 2598                             273 I1  ;20060725 SAITO .global _SFTSW_ERR_TM                   ;//
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    47
PROGRAM NAME =

 2599                             274 I1  ;20060725 SAITO .global _BTNER_ERR_TM                   ;//
 2600                             275 I1  ;20060725 SAITO .global _NCHSW_ERR_TM1                  ;//
 2601                             276 I1  ;20060725 SAITO .global _NCHSW_ERR_TM2                  ;//
 2602                             277 I1  ;20060725 SAITO .global _VLVER11_ERR_TM                 ;//
 2603                             278 I1  ;20060725 SAITO .global _VLVER12_ERR_TM                 ;//
 2604                             279 I1  ;20060725 SAITO .global _VLVER21_ERR_TM                 ;//
 2605                             280 I1  ;20060725 SAITO .global _VLVER22_ERR_TM                 ;//
 2606                             281 I1  ;20060725 SAITO .global _VLVER31_ERR_TM                 ;//
 2607                             282 I1  ;20060725 SAITO .global _VLVER32_ERR_TM                 ;//
 2608                             283 I1  ;20060725 SAITO .global _CMP2_ERR_TM2                   ;//
 2609                             284 I1  ;20060725 SAITO .global _FSFT_TRERR_TM                  ;//
 2610                             285 I1  ;20060725 SAITO .global _RSFT_TRERR_TM                  ;//
 2611                             286 I1  
 2612                             287 I1  ;20060725 SAITO .global _WPAR1_SFTSWER_TM               ;//
 2613                             288 I1  ;20060725 SAITO .global _WPAR1_BTNER_TM                 ;//
 2614                             289 I1  ;20060725 SAITO .global _WPAR1_MODSER_TM1               ;//
 2615                             290 I1  ;20060725 SAITO .global _WPAR1_MODSER_TM2               ;//
 2616                             291 I1  ;20060725 SAITO .global _WPAR1_VLVER11_TM1              ;//
 2617                             292 I1  ;20060725 SAITO .global _WPAR1_VLVER12_TM1              ;//
 2618                             293 I1  ;20060725 SAITO .global _WPAR1_VLVER21_TM1              ;//
 2619                             294 I1  ;20060725 SAITO .global _WPAR1_VLVER22_TM1              ;//
 2620                             295 I1  ;20060725 SAITO .global _WPAR1_VLVER31_TM1              ;//
 2621                             296 I1  ;20060725 SAITO .global _WPAR1_VLVER32_TM1              ;//
 2622                             297 I1  ;20060725 SAITO .global _WPAR1_CMPER2_TM                ;//
 2623                             298 I1  ;20060725 SAITO .global _WPAR1_FSFTTRER_TM              ;//
 2624                             299 I1  ;20060725 SAITO .global _WPAR1_RSFTTRER_TM              ;//
 2625                             300 I1  
 2626                             301 I1  
 2627                             302 I1          .global _KEEPRY_BKUP_ERR                ;//
 2628                             303 I1  
 2629                             304 I1  
 2630                             305 I1  ;//     ***************************************************
 2631                             306 I1  ;//     ***     ÉZÉãÉtÉ`ÉFÉbÉNä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl        ***
 2632                             307 I1  ;//     ***************************************************
 2633                             308 I1  ;20060725 SAITO .global _SELF_CHK_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2634                             309 I1  ;20060725 SAITO .global _SELF_ACT_FLG                   ;æŸÃ¡™Ø∏íÜ CHECK
 2635                             310 I1  
 2636                             311 I1  ;20060725 SAITO .global _SELF_HAND_FLG1                 ; é©ï™ÇÃèÛë‘Ã◊∏ﬁ SRAM
 2637                             312 I1  ;20060725 SAITO .global _SELF_HAND_FLG2                 ; ëäéËÇÃèÛë‘Ã◊∏ﬁ SRAM
 2638                             313 I1  
 2639                             314 I1  ;20060725 SAITO .global _SELF_FSTY_USE                  ;//;ëOà¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2640                             315 I1  ;20060725 SAITO .global _SELF_RSTY_USE                  ;//;å„à¿ëSëïíuÉ`ÉFÉbÉNÇ∑ÇÈÅEÇµÇ»Ç¢
 2641                             316 I1  
 2642                             317 I1  ;20060725 SAITO .global _SELF_CHK_TIMER                 ;//;ÉZÉãÉtÉ`ÉFÉbÉNÉ^ÉCÉ}
 2643                             318 I1  
 2644                             319 I1  ;//     *** AD CONVERTER WORK RAM ***
 2645                             320 I1  ;20060725 SAITO .global _AD_CNV_DT0                     ; 8BIT A/D
 2646                             321 I1  
 2647                             322 I1  ;20060725 SAITO .global _AD_BUFCNT                      ; à⁄ìÆïΩãœ ﬁØÃß∂≥›¿
 2648                             323 I1  ;20060725 SAITO .global _AD_AVG_BUF                     ; ïΩãœBAFTOP
 2649                             324 I1  ;20060725 SAITO .global _AD_AVG_TOTAL                   ; ÇWâÒï™ÇÃ√ﬁ∞¿
 2650                             325 I1  ;20060725 SAITO .global _PV_AD_DATA                     ; à⁄ìÆïΩãœÇ∆Ç¡ÇΩå„ÇÃAD DATA
 2651                             326 I1  
 2652                             327 I1  
 2653                             328 I1  
 2654                             329 I1  
 2655                             330 I1  ;//     ***************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    48
PROGRAM NAME =

 2656                             331 I1  ;//     ***     ìÒèdâÒòHàŸèÌä÷åWÇÃÉèÅ[ÉNÇqÇ`Çl  ***
 2657                             332 I1  ;//     ***************************************
 2658                             333 I1  ;20060725 SAITO .global _CPUN_2CMP_DATA                 ;// ëäéËÇbÇoÇtÇÃî‰ärÉfÅ[É^
 2659                             334 I1  ;20060725 SAITO .global _CMP2_ERR_FIRST                 ;// èâÇﬂÇƒìÒèdâÒòHàŸèÌî≠ê∂
 2660                             335 I1  
 2661                             336 I1  ;20060725 SAITO .global _CPUN_2CMP_LATCH2               ;// ëäéËìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2662                             337 I1  ;20060725 SAITO .global _CPUN_2CMP_LATCH1               ;// é©ï™ìÒèdâÒòHàŸèÌ√ﬁ∞¿◊Ø¡
 2663                             338 I1  
 2664                             339 I1  
 2665                             340 I1  
 2666                             341 I1  ;//     *** à¿ëSëïíuä÷åW ***
 2667                             342 I1  
 2668                             343 I1  ;20060725 SAITO .global _FACT_IN_DATA                   ;//
 2669                             344 I1  ;20060725 SAITO .global _RACT_IN_DATA                   ;//
 2670                             345 I1  ;20060725 SAITO .global _FDEV_IN_DATA                   ;//
 2671                             346 I1  ;20060725 SAITO .global _RDEV_IN_DATA                   ;//
 2672                             347 I1  
 2673                             348 I1  
 2674                             349 I1  
 2675                             350 I1  ;//     IOGA    ä÷åWÅ@ÇrÇhÇsÅ|ÇSóp 2006-07-16
 2676                             351 I1  
 2677                             352 I1  ;//;    *** IO-GA WORK ***
 2678                             353 I1          .global _IOGA1_CTRL_DAT1                ;       //.SRES 2*8             ; GA-PA,PB
                                          ,PC,PD,PE ì¸óÕPORT
 2679                             354 I1                                                  ;//;    PF,PG,PH èoóÕPORT
 2680                             355 I1          .global _IOGA2_CTRL_DAT1                ;       //.SRES 2*8             ; GA-PA,PB
                                          ,PC,PD,PE ì¸óÕPORT
 2681                             356 I1                                                  ;//;    PF,PG,PH èoóÕPORT
 2682                             357 I1  ;//;    *** IOGA INPUT WORK RAM ***
 2683                             358 I1          .global _IOGA1_PA_DT_OLD1               ;       // 1âÒëO
 2684                             359 I1          .global _IOGA1_PB_DT_OLD1               ;       // 1âÒëO
 2685                             360 I1          .global _IOGA1_PC_DT_OLD1               ;       // 1âÒëO
 2686                             361 I1          .global _IOGA1_PD_DT_OLD1               ;       // 1âÒëO
 2687                             362 I1          .global _IOGA1_PE_DT_OLD1               ;       // 1âÒëO
 2688                             363 I1  
 2689                             364 I1          .global _IOGA1_PA_DT_OLD2               ;       // 2âÒëO
 2690                             365 I1          .global _IOGA1_PB_DT_OLD2               ;       // 2âÒëO
 2691                             366 I1          .global _IOGA1_PC_DT_OLD2               ;       // 2âÒëO
 2692                             367 I1          .global _IOGA1_PD_DT_OLD2               ;       // 2âÒëO
 2693                             368 I1          .global _IOGA1_PE_DT_OLD2               ;       // 2âÒëO
 2694                             369 I1  
 2695                             370 I1          .global _IOGA2_PA_DT_OLD1               ;       // 1âÒëO
 2696                             371 I1          .global _IOGA2_PB_DT_OLD1               ;       // 1âÒëO
 2697                             372 I1          .global _IOGA2_PC_DT_OLD1               ;       // 1âÒëO
 2698                             373 I1          .global _IOGA2_PD_DT_OLD1               ;       // 1âÒëO
 2699                             374 I1          .global _IOGA2_PE_DT_OLD1               ;       // 1âÒëO
 2700                             375 I1  
 2701                             376 I1          .global _IOGA2_PA_DT_OLD2               ;       // 2âÒëO
 2702                             377 I1          .global _IOGA2_PB_DT_OLD2               ;       // 2âÒëO
 2703                             378 I1          .global _IOGA2_PC_DT_OLD2               ;       // 2âÒëO
 2704                             379 I1          .global _IOGA2_PD_DT_OLD2               ;       // 2âÒëO
 2705                             380 I1          .global _IOGA2_PE_DT_OLD2               ;       // 2âÒëO
 2706                             381 I1  
 2707                             382 I1  
 2708                             383 I1  ;20060725 SAITO .global _DSET_SW_FLG;
 2709                             384 I1  
 2710                             385 I1  
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    49
PROGRAM NAME =

 2711                             386 I1  
 2712                             387 I1  
 2713                             388 I1  
 2714                             389 I1  
 2715                             390 I1  
 2716                             391 I1  
 2717                             392 I1  
 2718                             393 I1  
 2719                             394 I1  
 2720                             395 I1  
 2721                             396 I1  
 2722                             397 I1  
 2723                             398 I1  
 2724                              19     
 2725                              20     
 2726                              21     ;;_ROM_SUM_SEL  .DEFINE         "1"             ; èoâ◊éû
 2727                              22     _ROM_SUM_SEL    .DEFINE         "0"             ; √ﬁ ﬁØ∏ﬁéû
 2728                              23     
 2729                              24     
 2730                              25             .import _PowerON_Reset_SP
 2731                              26             .import _INTHandlerPRG
 2732                              27             .import __INITSCT
 2733                              28             .import _main
 2734                              29     
 2735                              30     ;       .import __INIT_IOLIB            ; Remove the comment when you use SIM I/O
 2736                              31     ;       .import __CLOSEALL
 2737                              32     
 2738                              33     ;       .import __INIT_OTHERLIB         ; Remove the comment when you use rand(),strtok()
 2739                              34     
 2740                              35     ;       .import _HardwareSetup          ; Remove the comment when you use Hardware Setup
 2741                              36     
 2742                              37     ;       .import __call_init                     ; Remove the comment when you use __call_i
                                          nit
 2743                              38     ;       .import __call_end                      ; Remove the comment when you use __call_e
                                          nd
 2744                              39     
 2745                              40     
 2746                              41             .import         _HardwareSetup1;
 2747                              42             .import         _HardwareSetup2;
 2748                              43             .import         _IRAM_CLEAR;
 2749                              44             .import         _WORK_MEM_CHK2;
 2750                              45             .import         _DP_MEM_CHK                     ;cpud-aä‘
 2751                              46             .import         _DP2_MEM_CHK                    ;cpud-bä‘
 2752                              47     
 2753                              48             .import         _ROM_SUM_CHK;
 2754                              49             .import         _SCI_VUP_MAIN;
 2755                              50             .import         _SCI0_PRO_ROM_TO_RAM;
 2756                              51             .import         _INTHdlr_TO_RAM;
 2757                              52             .import         _init_LCD;
 2758                              53             .import         _init_DISP;
 2759                              54             .import         _vup_mesG_disp;
 2760                              55     
 2761                              56             .import         _VUPCHECK_DATA;
 2762                              57             .import         _CASH_ENB
 2763                              58             .import         _P_TO_PRAM_COPY                 ; P -> PRAM
 2764                              59             .import         _PC_TO_PCRAM_COPY               ; Pcall -> PcallRAM
 2765                              60             .import         _PH_TO_PHRAM_COPY               ; Pcall -> PcallRAM
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    50
PROGRAM NAME =

 2766                              61             .import         _INTDI_SCI_EXCEPT
 2767                              62     
 2768                              63             .import         _GAM_INF_TBL
 2769                              64             .import         _GAM_INF_TBL2                   ; V06
 2770                              65     
 2771                              66             .import         _dio_top1                       ; 2006-10-19 SAITO
 2772                              67             .import         _dio_top2                       ; 2006-10-19 SAITO
 2773                              68     
 2774                              69             .IMPORT         _KJ_CHK_CNT0
 2775                              70     
 2776                              71     
 2777 00000000                     72                     .section ResetPRG,code
 2778 00000000                     73     _PowerON_Reset:
 2779 00000000                     74     _Manual_Reset:
 2780 00000000 DF17                75                     mov.l   #_PowerON_Reset_SP, R15  ; Initialize SP
 2781 00000002 D018                76                     mov.l   #_INTHandlerPRG,r0
 2782 00000004 D118                77                     mov.l   #H'100,r1
 2783 00000006 3018                78                     sub.l   r1,r0
 2784 00000008 402E                79                     ldc             r0,vbr                  ; VBR addr set
 2785                              80     
 2786                              81     ;//             mov.l   #__INITSCT,r1
 2787                              82     ;//             jsr     @r1
 2788                              83     ;//             nop
 2789                              84     
 2790                              85     ;               mov.l   #__INIT_IOLIB,r1                ; Remove the comment when you use
                                          SIM I/O
 2791                              86     ;               jsr     @r1
 2792                              87     ;               nop
 2793                              88     
 2794                              89     ;               mov.l   #__INIT_OTHERLIB,r1             ; Remove the comment when you use
                                          rand(),strtok()
 2795                              90     ;               jsr     @r1
 2796                              91     ;               nop
 2797                              92     
 2798                              93     ;               mov.l   #_HardwareSetup,r1              ; Remove the comment when you use
                                          Hardware Setup
 2799                              94     ;               jsr     @r1
 2800                              95     ;               nop
 2801                              96     
 2802                              97     ;               mov.l   #__call_init,r1                 ; Remove the comment when you use
                                          global class object
 2803                              98     ;               jsr     @r1                                             ; See initsct.c an
                                          d dbsct.src
 2804                              99     ;               nop
 2805                             100     
 2806                             101     ;//             mov.l   #SR_Init,r0
 2807                             102     ;//             mov.l   #_main,r8
 2808                             103     ;//             ldc             r0,sr                                   ; SR set (User AP
                                          mode)
 2809                             104     ;//             jsr             @r8
 2810                             105     ;//             nop
 2811                             106     
 2812                             107     ;               mov.l   #__call_end,r1                  ; Remove the comment when you use
                                          global class object
 2813                             108     ;               jsr     @r1                                             ; See initsct.c an
                                          d dbsct.src
 2814                             109     ;               nop
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    51
PROGRAM NAME =

 2815                             110     
 2816                             111     ;               mov.l   #__CLOSEALL,r1                  ; Remove the comment when you use
                                          SIM I/O
 2817                             112     ;               jsr     @r1
 2818                             113     ;               nop
 2819                             114     
 2820                             115     
 2821 0000000A D118               116             mov.l   #_HardwareSetup1,r1     ; Use Hardware Setup
 2822 0000000C 410B               117             jsr     @r1
 2823 0000000E 0009               118             nop
 2824                             119     
 2825 00000010 D117               120             mov.l   #_IRAM_CLEAR,r1                         ; ì‡ëüRAM∏ÿ±    2006/12/26 V05
 2826 00000012 410B               121             jsr     @r1
 2827 00000014 0009               122             nop
 2828                             123     
 2829                             124     ;       =========== WDT CLEARÇÃÇΩÇﬂÇ…óßâ‘LSIÇÉCÉjÉVÉÉÉãÇ∑ÇÈ 2006-10-19 SAITO ============
 2830 00000016 D117               125             MOV.L   #_dio_top2+_IOGA_PDIR5,R1               ; IC7 IC21 PORT5
 2831 00000018 901D               126             MOV.W   #H'00FF,R0                              ;
 2832 0000001A 2101               127             MOV.W   R0,@R1                                  ; BIT0~7 OUTPUT
 2833                             128     ;       ==================================================================================
 2834                             129     
 2835                             130             _WDT_CLR
 2836                                 M           PUSH_REG1 R0
 2837 0000001C 2F06                   M           MOV.L   R0,@-R15                ;PUSH=SP-4
 2838                                 M                                           ;REG=>[SP]
 2839                                 M                                           ;"-4" FF,FF,FF,FC
 2840                                 M           PUSH_REG1 R10
 2841 0000001E 2FA6                   M           MOV.L   R10,@-R15               ;PUSH=SP-4
 2842                                 M                                           ;REG=>[SP]
 2843                                 M                                           ;"-4" FF,FF,FF,FC
 2844                                 M           PUSH_REG1 R14
 2845 00000020 2FE6                   M           MOV.L   R14,@-R15               ;PUSH=SP-4
 2846                                 M                                           ;REG=>[SP]
 2847                                 M                                           ;"-4" FF,FF,FF,FC
 2848                                 M   
 2849 00000022 DA15                   M           MOV.L   #_PJDR,R10                              ;
 2850 00000024 60A0                   M           MOV.B   @R10,R0
 2851 00000026 CB10                   M           OR      #BIT4,R0
 2852 00000028 2A00                   M           MOV.B   R0,@R10
 2853 0000002A C9EF                   M           AND     #NBIT4,R0
 2854 0000002C 2A00                   M           MOV.B   R0,@R10
 2855                                 M   
 2856                                 M           ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2857 0000002E DA13                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2858 00000030 60A1                   M           MOV.W   @R10,R0                                 ;
 2859 00000032 9E11                   M           MOV.W   #BIT0,R14                               ;
 2860 00000034 20EB                   M           OR      R14,R0                                  ;
 2861 00000036 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2862                                 M   
 2863                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2864                                 M   ;;      MOV.W   @R10,R0                                 ;
 2865 00000038 9E0F                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2866 0000003A 20EA                   M           XOR     R14,R0                                  ;
 2867 0000003C DA10                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2868 0000003E 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2869                                 M   
 2870 00000040 DA0E                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    52
PROGRAM NAME =

 2871 00000042 60A1                   M           MOV.W   @R10,R0                                 ;
 2872 00000044 9E0A                   M           MOV.W   #NBIT0,R14                              ;
 2873 00000046 20E9                   M           AND     R14,R0                                  ;
 2874 00000048 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2875                                 M   
 2876                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2877                                 M   ;;      MOV.W   @R10,R0                                 ;
 2878 0000004A 9E06                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2879 0000004C 20EA                   M           XOR     R14,R0                                  ;
 2880 0000004E DA0C                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2881 00000050 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2882                                 M   
 2883                                 M           M_BRA   AAA00000
 2884 00000052 A017                   M           BRA     AAA00000
 2885 00000054 0009                   M           NOP
 2886                                 M   ***** BEGIN-POOL *****
 2887 00000056 00FF                   M   DATA FOR SOURCE-LINE 126
 2888 00000058 0001                   M   DATA FOR SOURCE-LINE 130
 2889 0000005A 0000                   M   DATA FOR SOURCE-LINE 130,130
 2890 0000005C 00FE                   M   DATA FOR SOURCE-LINE 130
 2891 0000005E 0000                   M   ALIGNMENT CODE
 2892 00000060 00000000               M   DATA FOR SOURCE-LINE 75
 2893 00000064 00000000               M   DATA FOR SOURCE-LINE 76
 2894 00000068 00000100               M   DATA FOR SOURCE-LINE 77
 2895 0000006C 00000000               M   DATA FOR SOURCE-LINE 116
 2896 00000070 00000000               M   DATA FOR SOURCE-LINE 120
 2897 00000074 00000000               M   DATA FOR SOURCE-LINE 125
 2898 00000078 00000000               M   DATA FOR SOURCE-LINE 130
 2899 0000007C 00000000               M   DATA FOR SOURCE-LINE 130,130
 2900 00000080 00000000               M   DATA FOR SOURCE-LINE 130,130
 2901                                 M   ***** END-POOL *****
 2902 00000084                        M   AAA00000:
 2903                                 M           POP_REG1 R14
 2904                                 M                                   ; RE"+4" 00,00,00,04
 2905 00000084 6EF6                   M           MOV.L   @R15+,R14        ;
 2906                                 M           POP_REG1 R10
 2907                                 M                                   ; RE"+4" 00,00,00,04
 2908 00000086 6AF6                   M           MOV.L   @R15+,R10        ;
 2909                                 M           POP_REG1 R0
 2910                                 M                                   ; RE"+4" 00,00,00,04
 2911 00000088 60F6                   M           MOV.L   @R15+,R0        ;
 2912                             131     
 2913 0000008A D113               132             mov.l   #_init_LCD,r1                           ; ÇkÇbÇcÉVÉXÉeÉÄÉVÉjÉVÉÉÉâÉCÉY
 2914 0000008C 410B               133             jsr     @r1
 2915 0000008E 0009               134             nop
 2916                             135     
 2917 00000090 D112               136             mov.l   #_init_DISP,r1                          ; ≤∆º¨ŸíÜâÊñ ï\é¶
 2918 00000092 410B               137             jsr     @r1
 2919 00000094 0009               138             nop
 2920                             139     
 2921                             140             _WDT_CLR
 2922                                 M           PUSH_REG1 R0
 2923 00000096 2F06                   M           MOV.L   R0,@-R15                ;PUSH=SP-4
 2924                                 M                                           ;REG=>[SP]
 2925                                 M                                           ;"-4" FF,FF,FF,FC
 2926                                 M           PUSH_REG1 R10
 2927 00000098 2FA6                   M           MOV.L   R10,@-R15               ;PUSH=SP-4
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    53
PROGRAM NAME =

 2928                                 M                                           ;REG=>[SP]
 2929                                 M                                           ;"-4" FF,FF,FF,FC
 2930                                 M           PUSH_REG1 R14
 2931 0000009A 2FE6                   M           MOV.L   R14,@-R15               ;PUSH=SP-4
 2932                                 M                                           ;REG=>[SP]
 2933                                 M                                           ;"-4" FF,FF,FF,FC
 2934                                 M   
 2935 0000009C DA10                   M           MOV.L   #_PJDR,R10                              ;
 2936 0000009E 60A0                   M           MOV.B   @R10,R0
 2937 000000A0 CB10                   M           OR      #BIT4,R0
 2938 000000A2 2A00                   M           MOV.B   R0,@R10
 2939 000000A4 C9EF                   M           AND     #NBIT4,R0
 2940 000000A6 2A00                   M           MOV.B   R0,@R10
 2941                                 M   
 2942                                 M           ;====== 2006-10-19 SAITO í«â¡Å@WDTŒﬂ∞ƒïœçX ======
 2943 000000A8 DA0E                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2944 000000AA 60A1                   M           MOV.W   @R10,R0                                 ;
 2945 000000AC 9E10                   M           MOV.W   #BIT0,R14                               ;
 2946 000000AE 20EB                   M           OR      R14,R0                                  ;
 2947 000000B0 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2948                                 M   
 2949                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2950                                 M   ;;      MOV.W   @R10,R0                                 ;
 2951 000000B2 9E0E                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2952 000000B4 20EA                   M           XOR     R14,R0                                  ;
 2953 000000B6 DA0C                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2954 000000B8 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2955                                 M   
 2956 000000BA DA0A                   M           MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10          ;
 2957 000000BC 60A1                   M           MOV.W   @R10,R0                                 ;
 2958 000000BE 9E09                   M           MOV.W   #NBIT0,R14                              ;
 2959 000000C0 20E9                   M           AND     R14,R0                                  ;
 2960 000000C2 2A01                   M           MOV.W   R0,@R10                                 ; WORK
 2961                                 M   
 2962                                 M   ;;      MOV.L   #_IOGA2_CTRL_DAT1+_IOGA_P5,R10  ; WORK ADDRESS
 2963                                 M   ;;      MOV.W   @R10,R0                                 ;
 2964 000000C4 9E05                   M           MOV.W   #_IO2B_P5EX,R14                         ;
 2965 000000C6 20EA                   M           XOR     R14,R0                                  ;
 2966 000000C8 DA07                   M           MOV.L   #_dio_top2+_IOGA_PDR5,R10               ; IOGA PF ADDRESS
 2967 000000CA 2A01                   M           MOV.W   R0,@R10                                 ; é¿èoóÕSET
 2968                                 M   
 2969                                 M           M_BRA   AAA00001
 2970 000000CC A00E                   M           BRA     AAA00001
 2971 000000CE 0009                   M           NOP
 2972                                 M   ***** BEGIN-POOL *****
 2973 000000D0 0001                   M   DATA FOR SOURCE-LINE 140
 2974 000000D2 0000                   M   DATA FOR SOURCE-LINE 140,140
 2975 000000D4 00FE                   M   DATA FOR SOURCE-LINE 140
 2976 000000D6 0000                   M   ALIGNMENT CODE
 2977 000000D8 00000000               M   DATA FOR SOURCE-LINE 132
 2978 000000DC 00000000               M   DATA FOR SOURCE-LINE 136
 2979 000000E0 00000000               M   DATA FOR SOURCE-LINE 140
 2980 000000E4 00000000               M   DATA FOR SOURCE-LINE 140,140
 2981 000000E8 00000000               M   DATA FOR SOURCE-LINE 140,140
 2982                                 M   ***** END-POOL *****
 2983 000000EC                        M   AAA00001:
 2984                                 M           POP_REG1 R14
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    54
PROGRAM NAME =

 2985                                 M                                   ; RE"+4" 00,00,00,04
 2986 000000EC 6EF6                   M           MOV.L   @R15+,R14        ;
 2987                                 M           POP_REG1 R10
 2988                                 M                                   ; RE"+4" 00,00,00,04
 2989 000000EE 6AF6                   M           MOV.L   @R15+,R10        ;
 2990                                 M           POP_REG1 R0
 2991                                 M                                   ; RE"+4" 00,00,00,04
 2992 000000F0 60F6                   M           MOV.L   @R15+,R0        ;
 2993                             141     
 2994 000000F2 D110               142             mov.l   #_WORK_MEM_CHK2,r1                      ; SRAM∏ÿ±
 2995 000000F4 410B               143             jsr     @r1
 2996 000000F6 0009               144             nop
 2997                             145     
 2998 000000F8 D10F               146             mov.l   #_DP_MEM_CHK,r1                         ;cpud-aä‘
 2999 000000FA 410B               147             jsr     @r1
 3000 000000FC 0009               148             nop
 3001                             149     
 3002 000000FE D10F               150             mov.l   #_DP2_MEM_CHK,r1                        ;cpud-bä‘
 3003 00000100 410B               151             jsr     @r1
 3004 00000102 0009               152             nop
 3005                             153     
 3006                             154     
 3007                             155     
 3008                             156             .AIF    0 EQ 1
 3009                             157             mov.l   #_ROM_SUM_CHK,r1                        ; ROM SUM CHECK         2006/12/26
                                           V05
 3010                             158             jsr     @r1
 3011                             159             nop
 3012                             160             .AENDI
 3013                             161     
 3014 00000104 D10E               162             mov.l   #_INTHdlr_TO_RAM,r1             ;
 3015 00000106 410B               163             jsr     @r1
 3016 00000108 0009               164             nop
 3017                             165     
 3018 0000010A D10E               166             mov.l   #_SCI0_PRO_ROM_TO_RAM,r1                ;
 3019 0000010C 410B               167             jsr     @r1
 3020 0000010E 0009               168             nop
 3021                             169     
 3022                             170     
 3023                             171     
 3024                             172     ;//     *********************************************************************
 3025                             173     ;//     *****   ç≈èIæ∏ºÆ›Ç…å≈íË√ﬁ∞¿Ç™ì¸Ç¡ÇƒÇ¢ÇÈÇ©Ç«Ç§Ç©ämîF             *****
 3026                             174     ;//     *****   ì¸Ç¡ÇƒÇ¢Ç»ÇØÇÍÇŒ ﬁ∞ºﬁÆ›UPë“ÇøèÛë‘Ç…Ç∑ÇÈÅB               *****
 3027                             175     ;//     *****    ﬁ∞ºﬁÆ›UPÇ∑ÇÈéûÇÕÅAïKÇ∏ç≈èâÇ…ç≈èIæ∏ºÆ›Çè¡ãé            *****
 3028                             176     ;//     *********************************************************************
 3029                             177     ;//SIT4-MC  2014/04/17
 3030 00000110 DA0D               178             MOV.L   #_PFDR,R10
 3031 00000112 60A0               179             MOV.B   @R10,R0
 3032 00000114 6007               180             NOT     R0,R0
 3033 00000116 D20D               181             MOV.L   #H'0F,R2
 3034 00000118 2029               182             AND     R2,R0
 3035 0000011A DA0D               183             MOV.L   #_PMDR,R10
 3036 0000011C 61A0               184             MOV.B   @R10,R1
 3037 0000011E 6117               185             NOT     R1,R1
 3038 00000120 D20C               186             MOV.L   #H'0F0,R2
 3039 00000122 2129               187             AND     R2,R1
 3040 00000124 201B               188             OR      R1,R0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    55
PROGRAM NAME =

 3041                             189     
 3042 00000126 600C               190             EXTU.B  R0,R0
 3043 00000128 E281               191             MOV.B   #H'81,R2
 3044 0000012A 622C               192             EXTU.B  R2,R2
 3045 0000012C 3020               193             CMP/EQ  R2,R0
 3046 0000012E 8B13               194             BF      _PONR_000                               ;
 3047                             195             M_BRA   _PONR_030                               ; SW-1,8ÇæÇØONÇ»ÇÁ ﬁ∞ºﬁÆ›UPÇ÷
 3048 00000130 A066                   M           BRA     _PONR_030
 3049 00000132 0009                   M           NOP
 3050                             196     
 3051                                     ***** BEGIN-POOL *****
 3052 00000134 00000000                   DATA FOR SOURCE-LINE 142
 3053 00000138 00000000                   DATA FOR SOURCE-LINE 146
 3054 0000013C 00000000                   DATA FOR SOURCE-LINE 150
 3055 00000140 00000000                   DATA FOR SOURCE-LINE 162
 3056 00000144 00000000                   DATA FOR SOURCE-LINE 166
 3057 00000148 00000000                   DATA FOR SOURCE-LINE 178
 3058 0000014C 0000000F                   DATA FOR SOURCE-LINE 181
 3059 00000150 00000000                   DATA FOR SOURCE-LINE 183
 3060 00000154 000000F0                   DATA FOR SOURCE-LINE 186
 3061                                     ***** END-POOL *****
 3062 00000158                    197     _PONR_000:
 3063 00000158 D103               198             MOV.L   #_VUPCHECK_DATA,R1
 3064 0000015A 6012               199             MOV.L   @R1,R0
 3065 0000015C D103               200             MOV.L   #_VUPCHECK_EQU,R1
 3066 0000015E 3010               201             CMP/EQ  R1,R0                                   ; ëOâÒÇÃÃﬂ€∏ﬁ◊— ﬁ∞ºﬁÆ›UPÇÕê≥èÌÅH
 3067 00000160 8906               202             BT      _PONR_002
 3068                             203             M_BRA   _PONR_030                               ; Ç¢Ç¢Ç¶         ﬁ∞ºﬁÆ›UPÇ÷
 3069 00000162 A04D                   M           BRA     _PONR_030
 3070 00000164 0009                   M           NOP
 3071                             204     
 3072                                     ***** BEGIN-POOL *****
 3073 00000166 0000                       ALIGNMENT CODE
 3074 00000168 00000000                   DATA FOR SOURCE-LINE 198
 3075 0000016C 11AB3739                   DATA FOR SOURCE-LINE 200
 3076                                     ***** END-POOL *****
 3077 00000170                    205     _PONR_002:
 3078                             206     
 3079                             207     ;       ================================================================ V06 âÊñ ÉfÅ[É^êV
                                          óÃàÊëŒâû
 3080 00000170 D105               208             MOV.L   #_GAM_INF_TBL2+512,R1                   ; V06
 3081 00000172 6011               209             MOV.W   @R1,R0
 3082 00000174 D205               210             MOV.L   #H'0FF00,R2
 3083 00000176 2029               211             AND     R2,R0
 3084 00000178 D205               212             MOV.L   #H'05A00,R2
 3085 0000017A 3020               213             CMP/EQ  R2,R0
 3086 0000017C 890C               214             BT      _PONR_004                               ; âÊñ √ﬁ∞¿ÇÃç≈å„Ç…5AÇ™ì¸Ç¡ÇƒÇ¢ÇÍÇŒ
                                          OK
 3087                             215     ;//V06m M_BRA   _PONR_008
 3088                             216             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3089 0000017E D105                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3090 00000180 410B                   M           JSR     @R1                     ;
 3091 00000182 0009                   M           NOP                                     ;
 3092                             217             M_BRA   _PONR_030
 3093 00000184 A03C                   M           BRA     _PONR_030
 3094 00000186 0009                   M           NOP
 3095                             218     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    56
PROGRAM NAME =

 3096                                     ***** BEGIN-POOL *****
 3097 00000188 00000000                   DATA FOR SOURCE-LINE 208
 3098 0000018C 0000FF00                   DATA FOR SOURCE-LINE 210
 3099 00000190 00005A00                   DATA FOR SOURCE-LINE 212
 3100 00000194 00000000                   DATA FOR SOURCE-LINE 216
 3101                                     ***** END-POOL *****
 3102 00000198                    219     _PONR_004:
 3103 00000198 D104               220             MOV.L   #_GAM_INF_TBL2+(3-1)*4,R1               ;
 3104 0000019A 6012               221             MOV.L   @R1,R0
 3105 0000019C 8800               222             CMP/EQ  #0,R0                                   ; âÊñ No.3Ç…√ﬁ∞¿Ç†ÇÈÅH  Ç†ÇÈÇ»ÇÁª∞
                                          ŒﬁópÇÃâÊñ √ﬁ∞¿ÅI
 3106 0000019E 8B09               223             BF      _PONR_006                               ; Ç†ÇÈ
 3107                             224             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3108 000001A0 D103                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3109 000001A2 410B                   M           JSR     @R1                     ;
 3110 000001A4 0009                   M           NOP                                     ;
 3111                             225             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3112 000001A6 A02B                   M           BRA     _PONR_030
 3113 000001A8 0009                   M           NOP
 3114                             226     
 3115                                     ***** BEGIN-POOL *****
 3116 000001AA 0000                       ALIGNMENT CODE
 3117 000001AC 00000000                   DATA FOR SOURCE-LINE 220
 3118 000001B0 00000000                   DATA FOR SOURCE-LINE 224
 3119                                     ***** END-POOL *****
 3120 000001B4                    227     _PONR_006:
 3121                             228             M_BRA   _PONR_020
 3122 000001B4 A022                   M           BRA     _PONR_020
 3123 000001B6 0009                   M           NOP
 3124                             229     ;       ==================================================================
 3125                             230     
 3126                             231     
 3127 000001B8                    232     _PONR_008:
 3128 000001B8 D105               233             MOV.L   #_GAM_INF_TBL+512,R1
 3129 000001BA 6011               234             MOV.W   @R1,R0
 3130 000001BC D205               235             MOV.L   #H'0FF00,R2
 3131 000001BE 2029               236             AND     R2,R0
 3132 000001C0 D205               237             MOV.L   #H'05A00,R2
 3133 000001C2 3020               238             CMP/EQ  R2,R0
 3134 000001C4 890C               239             BT      _PONR_010                               ; âÊñ √ﬁ∞¿ÇÃç≈å„Ç…5AÇ™ì¸Ç¡ÇƒÇ¢ÇÍÇŒ
                                          OK
 3135                             240             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3136 000001C6 D105                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3137 000001C8 410B                   M           JSR     @R1                     ;
 3138 000001CA 0009                   M           NOP                                     ;
 3139                             241             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3140 000001CC A018                   M           BRA     _PONR_030
 3141 000001CE 0009                   M           NOP
 3142                             242     
 3143                                     ***** BEGIN-POOL *****
 3144 000001D0 00000000                   DATA FOR SOURCE-LINE 233
 3145 000001D4 0000FF00                   DATA FOR SOURCE-LINE 235
 3146 000001D8 00005A00                   DATA FOR SOURCE-LINE 237
 3147 000001DC 00000000                   DATA FOR SOURCE-LINE 240
 3148                                     ***** END-POOL *****
 3149 000001E0                    243     _PONR_010:
 3150 000001E0 D104               244             MOV.L   #_GAM_INF_TBL+(3-1)*4,R1                ; V05i
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    57
PROGRAM NAME =

 3151 000001E2 6012               245             MOV.L   @R1,R0
 3152 000001E4 8800               246             CMP/EQ  #0,R0                                   ; âÊñ No.3Ç…√ﬁ∞¿Ç†ÇÈÅH  Ç†ÇÈÇ»ÇÁª∞
                                          ŒﬁópÇÃâÊñ √ﬁ∞¿ÅI
 3153 000001E6 8B09               247             BF      _PONR_020                               ; Ç†ÇÈ
 3154                             248             FAR_JSR #_vup_mesG_disp,R1                      ; Åu ﬁ∞ºﬁÆ›UPÇµÇƒÇÀÅv“Øæ∞ºﬁï\é¶
 3155 000001E8 D103                   M           MOV.L   #_vup_mesG_disp,R1              ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3156 000001EA 410B                   M           JSR     @R1                     ;
 3157 000001EC 0009                   M           NOP                                     ;
 3158                             249             M_BRA   _PONR_030                               ;  ﬁ∞ºﬁÆ›UPÇ÷
 3159 000001EE A007                   M           BRA     _PONR_030
 3160 000001F0 0009                   M           NOP
 3161                             250     
 3162                                     ***** BEGIN-POOL *****
 3163 000001F2 0000                       ALIGNMENT CODE
 3164 000001F4 00000000                   DATA FOR SOURCE-LINE 244
 3165 000001F8 00000000                   DATA FOR SOURCE-LINE 248
 3166                                     ***** END-POOL *****
 3167 000001FC                    251     _PONR_020:
 3168                             252             M_BRA   _PONR_100
 3169 000001FC A00C                   M           BRA     _PONR_100
 3170 000001FE 0009                   M           NOP
 3171                             253     
 3172                             254     
 3173                             255     
 3174 00000200                    256     _PONR_030:
 3175 00000200 D003               257             mov.l   #SR_Init_SCIEI,r0
 3176 00000202 400E               258             ldc     r0,sr                                   ; SR set (SCIäÑçûÇ›(E)ÇæÇØãñâ¬)
 3177 00000204 0009               259             NOP
 3178                             260     
 3179 00000206                    261     _PONR_050:
 3180                             262             FAR_JSR #_SCI_VUP_MAIN,R0
 3181 00000206 D003                   M           MOV.L   #_SCI_VUP_MAIN,R0               ;√∞ÃﬁŸ±ƒﬁ⁄ΩÇÃì‡óeÇREGÇ÷
 3182 00000208 400B                   M           JSR     @R0                     ;
 3183 0000020A 0009                   M           NOP                                     ;
 3184                             263             M_BRA   _PONR_050
 3185 0000020C AFFB                   M           BRA     _PONR_050
 3186 0000020E 0009                   M           NOP
 3187                             264     
 3188                             265     
 3189                             266     
 3190                                     ***** BEGIN-POOL *****
 3191 00000210 400000D0                   DATA FOR SOURCE-LINE 257
 3192 00000214 00000000                   DATA FOR SOURCE-LINE 262
 3193                                     ***** END-POOL *****
 3194 00000218                    267     _PONR_100:
 3195 00000218 D103               268             MOV.L   #_PRG_start,R1
 3196 0000021A 410B               269             JSR     @R1
 3197 0000021C 0009               270             NOP
 3198                             271     
 3199                             272     
 3200 0000021E 001B               273                     sleep
 3201 00000220 0009               274                     nop
 3202                             275                     .pool
 3203                                     ***** BEGIN-POOL *****
 3204 00000222 A003                       BRA TO END-POOL
 3205 00000224 0009                       NOP
 3206 00000226 0000                       ALIGNMENT CODE
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    58
PROGRAM NAME =

 3207 00000228 00000000                   DATA FOR SOURCE-LINE 268
 3208                                     ***** END-POOL *****
 3209                             276     
 3210                             277     
 3211 00000000                    278             .section        Pstart,code
 3212 00000000                    279     _PRG_start:
 3213                             280             SUB_START
 3214 00000000 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3215                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3216                             281     
 3217 00000002 D10B               282             mov.l   #__INITSCT,r1
 3218 00000004 410B               283             jsr     @r1
 3219 00000006 0009               284             nop
 3220                             285     
 3221                             286     ;//debug060716  mov.l   #_HardwareSetup2,r1                     ; Use Hardware Setup
 3222                             287     ;//debug060716  jsr     @r1
 3223                             288     ;//debug060716  nop
 3224                             289     
 3225                             290     ;//SHIMA        mov.l   #__INIT_IOLIB,r1        ; Use SIM I/O
 3226                             291     ;//SHIMA        jsr     @r1
 3227                             292     ;//SHIMA        nop
 3228                             293     
 3229                             294     
 3230 00000008 D10A               295             MOV.L   #_CASH_ENB,R1                   ;
 3231 0000000A 410B               296             jsr     @r1
 3232 0000000C 0009               297             nop
 3233                             298     
 3234 0000000E D10A               299             mov.l   #_P_TO_PRAM_COPY,r1             ; P -> PRAM
 3235 00000010 410B               300             jsr     @r1
 3236 00000012 0009               301             nop
 3237                             302     
 3238 00000014 D109               303             mov.l   #_PC_TO_PCRAM_COPY,r1           ; Pcall -> PcallRAM
 3239 00000016 410B               304             jsr     @r1
 3240 00000018 0009               305             nop
 3241                             306     
 3242 0000001A D109               307             mov.l   #_PH_TO_PHRAM_COPY,r1           ; PHiROM -> PHiRAM      V06b
 3243 0000001C 410B               308             jsr     @r1
 3244 0000001E 0009               309             nop
 3245                             310     
 3246                             311     ;       mov.l   #__call_init,r1         ; Remove the comment when you use global class obj
                                          ect
 3247                             312     ;       jsr     @r1                                     ; See initsct.c and dbsct.src
 3248                             313     ;       nop
 3249                             314     
 3250 00000020                    315     _start000:
 3251 00000020 D808               316             mov.l   #_main,r8
 3252 00000022 480B               317             jsr     @r8
 3253 00000024 0009               318             nop
 3254                             319     
 3255                             320     ;       mov.l   #__call_end,r1          ; Remove the comment when you use global class obj
                                          ect
 3256                             321     ;       jsr     @r1                                     ; See initsct.c and dbsct.src
 3257                             322     ;       nop
 3258                             323     
 3259                             324     ;//SHIMA        mov.l   #__CLOSEALL,r1          ; Use SIM I/O
 3260                             325     ;//SHIMA        jsr     @r1
 3261                             326     ;//SHIMA        nop
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    59
PROGRAM NAME =

 3262                             327     
 3263 00000026 001B               328             sleep
 3264 00000028 0009               329             nop
 3265                             330             .pool
 3266                                     ***** BEGIN-POOL *****
 3267 0000002A A00D                       BRA TO END-POOL
 3268 0000002C 0009                       NOP
 3269 0000002E 0000                       ALIGNMENT CODE
 3270 00000030 00000000                   DATA FOR SOURCE-LINE 282
 3271 00000034 00000000                   DATA FOR SOURCE-LINE 295
 3272 00000038 00000000                   DATA FOR SOURCE-LINE 299
 3273 0000003C 00000000                   DATA FOR SOURCE-LINE 303
 3274 00000040 00000000                   DATA FOR SOURCE-LINE 307
 3275 00000044 00000000                   DATA FOR SOURCE-LINE 316
 3276                                     ***** END-POOL *****
 3277                             331     
 3278                             332     
 3279 00000048                    333     VUP_TEST:
 3280 00000048 1234567887654321   334             .DATA.L         H'12345678, H'87654321, H'5A5AA5A5, H'A5A55A5A
      00000050 5A5AA5A5A5A55A5A
 3281 00000058 00000000FFFFFFFF   335             .DATA.L         H'00000000, H'FFFFFFFF, H'55555555, H'AAAAAAAA
      00000060 55555555AAAAAAAA
 3282 00000068 1234567887654321   336             .DATA.L         H'12345678, H'87654321, H'5A5AA5A5, H'A5A55A5A
      00000070 5A5AA5A5A5A55A5A
 3283                             337     
 3284                             338                     .end
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    60

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

AAA00000                         ResetPRG      00000084   2884  2902*
AAA00001                         ResetPRG      000000EC   2970  2983*
BIT0                                      EQU  00000001    231* 2859  2945 
BIT1                                      EQU  00000002    232*
BIT10                                     EQU  00000400    241*
BIT11                                     EQU  00000800    242*
BIT12                                     EQU  00001000    243*
BIT13                                     EQU  00002000    244*
BIT14                                     EQU  00004000    245*
BIT15                                     EQU  00008000    246*
BIT16                                     EQU  00010000    247*
BIT17                                     EQU  00020000    248*
BIT18                                     EQU  00040000    249*
BIT19                                     EQU  00080000    250*
BIT2                                      EQU  00000004    233*
BIT20                                     EQU  00100000    251*
BIT21                                     EQU  00200000    252*
BIT22                                     EQU  00400000    253*
BIT23                                     EQU  00800000    254*
BIT24                                     EQU  01000000    255*
BIT25                                     EQU  02000000    256*
BIT26                                     EQU  04000000    257*
BIT27                                     EQU  08000000    258*
BIT28                                     EQU  10000000    259*
BIT29                                     EQU  20000000    260*
BIT3                                      EQU  00000008    234*
BIT30                                     EQU  40000000    261*
BIT31                                     EQU  80000000    262*
BIT4                                      EQU  00000010    235* 2851  2937 
BIT5                                      EQU  00000020    236*
BIT6                                      EQU  00000040    237*
BIT7                                      EQU  00000080    238*
BIT8                                      EQU  00000100    239*
BIT9                                      EQU  00000200    240*
H_BYTE                                    EQU  00000000    298*
L_BYTE                                    EQU  00000001    297*
NBIT0                                     EQU  000000FE    265* 2872  2958 
NBIT1                                     EQU  000000FD    266*
NBIT10                                    EQU  0000FBFF    276*
NBIT11                                    EQU  0000F7FF    277*
NBIT12                                    EQU  0000EFFF    278*
NBIT13                                    EQU  0000DFFF    279*
NBIT14                                    EQU  0000BFFF    280*
NBIT15                                    EQU  00007FFF    281*
NBIT2                                     EQU  000000FB    267*
NBIT3                                     EQU  000000F7    268*
NBIT4                                     EQU  000000EF    269* 2853  2939 
NBIT5                                     EQU  000000DF    270*
NBIT6                                     EQU  000000BF    271*
NBIT7                                     EQU  0000007F    272*
NBIT8                                     EQU  0000FEFF    274*
NBIT9                                     EQU  0000FDFF    275*
Pstart                           Pstart   SCT  00000000   3211*
ResetPRG                         ResetPRG SCT  00000000   2777*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    61

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

SR_Init                                   EQU  40000010     25*
SR_Init_DI                                EQU  400000F0     26*
SR_Init_SCIEI                             EQU  400000D0     27* 3175 
VUP_TEST                         Pstart        00000048   3279*
XBIT0                                     EQU  00000000    284*
XBIT1                                     EQU  00000001    285*
XBIT2                                     EQU  00000002    286*
XBIT3                                     EQU  00000003    287*
XBIT4                                     EQU  00000004    288*
XBIT5                                     EQU  00000005    289*
XBIT6                                     EQU  00000006    290*
XBIT7                                     EQU  00000007    291*
_ACDR                                     IMPT 00000000   1929 
_ACTR1                                    IMPT 00000000   1921 
_ACTR2                                    IMPT 00000000   1922 
_AD2CNV_IN_DATA                           IMPT 00000000   2454 
_AD2_AVG_BUF                              IMPT 00000000   2451 
_AD2_AVG_TOTAL                            IMPT 00000000   2452 
_AD2_BUFCNT                               IMPT 00000000   2450 
_AD3CNV_IN_DATA                           IMPT 00000000   2460 
_AD3_AVG_BUF                              IMPT 00000000   2457 
_AD3_AVG_TOTAL                            IMPT 00000000   2458 
_AD3_BUFCNT                               IMPT 00000000   2456 
_AD4CNV_IN_DATA                           IMPT 00000000   2466 
_AD4_AVG_BUF                              IMPT 00000000   2463 
_AD4_AVG_TOTAL                            IMPT 00000000   2464 
_AD4_BUFCNT                               IMPT 00000000   2462 
_ADCNV_SEL                                IMPT 00000000   2468 
_ADCR                                     IMPT 00000000   1863 
_ADCSR                                    IMPT 00000000   1862 
_ADDRAH                                   IMPT 00000000   1854 
_ADDRAL                                   IMPT 00000000   1855 
_ADDRBH                                   IMPT 00000000   1856 
_ADDRBL                                   IMPT 00000000   1857 
_ADDRCH                                   IMPT 00000000   1858 
_ADDRCL                                   IMPT 00000000   1859 
_ADDRDH                                   IMPT 00000000   1860 
_ADDRDL                                   IMPT 00000000   1861 
_AD_AVG_BUF                               IMPT 00000000   2445 
_AD_AVG_TOTAL                             IMPT 00000000   2446 
_AD_BUFCNT                                IMPT 00000000   2444 
_AD_CNV_DT0                               IMPT 00000000   2442 
_ASDR                                     IMPT 00000000   1930 
_ASTR1                                    IMPT 00000000   1923 
_ASTR2                                    IMPT 00000000   1924 
_BAMRA                                    IMPT 00000000   2068 
_BAMRB                                    IMPT 00000000   2064 
_BARA                                     IMPT 00000000   2067 
_BARB                                     IMPT 00000000   2063 
_BASRA                                    IMPT 00000000   2075 
_BASRB                                    IMPT 00000000   2076 
_BBRA                                     IMPT 00000000   2069 
_BBRB                                     IMPT 00000000   2065 
_BCR1                                     IMPT 00000000   2044 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    62

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_BCR2                                     IMPT 00000000   2045 
_BDMRB                                    IMPT 00000000   2060 
_BDRB                                     IMPT 00000000   2059 
_BETR                                     IMPT 00000000   2062 
_BRCR                                     IMPT 00000000   2061 
_BRDR                                     IMPT 00000000   2070 
_BRR0                                     IMPT 00000000   2009 
_BRSR                                     IMPT 00000000   2066 
_BTNER_ERR_TM                             IMPT 00000000   2391 
_CASH_ENB                                 IMPT 00000000   2762  3230 
_CB_BAKUP_CMD1                            EQU  00005678    330*
_CB_BAKUP_CMD2                            EQU  00001234    331*
_CB_BAK_SUM_COD1                          EQU  5AA51234    328*
_CB_BAK_SUM_COD2                          EQU  A55A4321    329*
_CB_ERR_INFO_MEM                          EQU  00000080    354*
_CB_ERR_INFO_PSIZE                        EQU  00000008    355*
_CB_STS_BUF_1BLK                          EQU  00000040    333*  335 
_CB_STS_BUF_BLKMAX                        EQU  00000008    334*  335 
_CB_STS_BUF_MAX                           EQU  00000200    335*
_CB_TRD_BEFORE                            EQU  00000060    343*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    347*
_CB_TRD_BUF_MAX                           EQU  00000800    344*
_CB_TRD_DP_1CNT                           EQU  00000008    346*
_CB_TRD_DP_CH                             EQU  00000004    339*
_CB_TRD_SMP_CNT                           EQU  00000080    342*
_CCR                                      IMPT 00000000   2077 
_CCR2                                     IMPT 00000000   1867 
_CHCR0                                    IMPT 00000000   1836 
_CHCR1                                    IMPT 00000000   1840 
_CHCR2                                    IMPT 00000000   1844 
_CHCR3                                    IMPT 00000000   1848 
_CHRAR                                    IMPT 00000000   1941 
_CKIO2CR                                  IMPT 00000000   1946 
_CMCNT                                    IMPT 00000000   1852 
_CMCOR                                    IMPT 00000000   1853 
_CMCSR                                    IMPT 00000000   1851 
_CMP2_ERR_FIRST                           IMPT 00000000   2476 
_CMP2_ERR_TM2                             IMPT 00000000   2400 
_CMSTR                                    IMPT 00000000   1850 
_CPUA_EMG_IN_FLG                          IMPT 00000000   2557 
_CPUN_2CMP_DATA                           IMPT 00000000   2475 
_CPUN_2CMP_LATCH1                         IMPT 00000000   2479 
_CPUN_2CMP_LATCH2                         IMPT 00000000   2478 
_DACR1                                    IMPT 00000000   1866 
_DADR0                                    IMPT 00000000   1864 
_DADR1                                    IMPT 00000000   1865 
_DAR0                                     IMPT 00000000   1834 
_DAR1                                     IMPT 00000000   1838 
_DAR2                                     IMPT 00000000   1842 
_DAR3                                     IMPT 00000000   1846 
_DBG_ERRCHK_NASI                          IMPT 00000000   2384 
_DMAOR                                    IMPT 00000000   1849 
_DMATCR0                                  IMPT 00000000   1835 
_DMATCR1                                  IMPT 00000000   1839 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    63

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_DMATCR2                                  IMPT 00000000   1843 
_DMATCR3                                  IMPT 00000000   1847 
_DP2_MEM_CHK                              IMPT 00000000   2751  3002 
_DPNQ                                     IMPT 00000000   1927 
_DPRAM_SIZE                               EQU  00003FFF   2224*
_DP_MEM_CHK                               IMPT 00000000   2750  2998 
_DSET_SW_FLG                              IMPT 00000000   2531 
_DUMMY                                    IMPT 00000000    223 
_DUMMY_SUM_CODE                           EQU  5AA53CC3    321*
_ERR_CHK_OK_FLG                           IMPT 00000000   2379 
_ER_SFTSW_CHG_OLD                         IMPT 00000000   2386 
_ER_SQRAM_WK1                             IMPT 00000000   2381 
_ER_SQRAM_WK2                             IMPT 00000000   2382 
_EXCPGCR                                  IMPT 00000000   1945 
_EXPEVT                                   IMPT 00000000   2072 
_EXPFC                                    IMPT 00000000   1944 
_FACT_IN_DATA                             IMPT 00000000   2484 
_FDEV_IN_DATA                             IMPT 00000000   2486 
_FROM_SUMCHK_CODE                         IMPT 00000000   2388 
_FRQCR                                    IMPT 00000000   2054 
_FSFT_TRERR_TM                            IMPT 00000000   2401 
_GAM_INF_TBL                              IMPT 00000000   2768  3128  3150 
_GAM_INF_TBL2                             IMPT 00000000   2769  3080  3103 
_HardwareSetup1                           IMPT 00000000   2746  2821 
_HardwareSetup2                           IMPT 00000000   2747 
_ICR0                                     IMPT 00000000   2041 
_ICR1                                     IMPT 00000000   1827 
_ICR2                                     IMPT 00000000   1828 
_ICR3                                     IMPT 00000000   1940 
_INTDI_SCI_EXCEPT                         IMPT 00000000   2766 
_INTEVT                                   IMPT 00000000   2073 
_INTEVT2                                  IMPT 00000000   1823 
_INTHandlerPRG                            IMPT 00000000   2731  2781 
_INTHdlr_TO_RAM                           IMPT 00000000   2756  3014 
_INT_ADC_ADI                              IMPT 00000000    191 
_INT_AFEIF_AFEIFI                         IMPT 00000000    205 
_INT_Address_load                         IMPT 00000000     53 
_INT_Address_store                        IMPT 00000000     55 
_INT_BSC_RCMI                             IMPT 00000000    127 
_INT_BSC_ROVI                             IMPT 00000000    129 
_INT_CPG_ITI                              IMPT 00000000    125 
_INT_DMAC_DEI0                            IMPT 00000000    167 
_INT_DMAC_DEI1                            IMPT 00000000    169 
_INT_DMAC_DEI2                            IMPT 00000000    171 
_INT_DMAC_DEI3                            IMPT 00000000    173 
_INT_Extern_0000                          IMPT 00000000     71 
_INT_Extern_0001                          IMPT 00000000     73 
_INT_Extern_0010                          IMPT 00000000     75 
_INT_Extern_0011                          IMPT 00000000     77 
_INT_Extern_0100                          IMPT 00000000     79 
_INT_Extern_0101                          IMPT 00000000     81 
_INT_Extern_0110                          IMPT 00000000     83 
_INT_Extern_0111                          IMPT 00000000     85 
_INT_Extern_1000                          IMPT 00000000     87 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    64

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_Extern_1001                          IMPT 00000000     89 
_INT_Extern_1010                          IMPT 00000000     91 
_INT_Extern_1011                          IMPT 00000000     93 
_INT_Extern_1100                          IMPT 00000000     95 
_INT_Extern_1101                          IMPT 00000000     97 
_INT_Extern_1110                          IMPT 00000000     99 
_INT_H_UDI                                IMPT 00000000    133 
_INT_IRQ0                                 IMPT 00000000    135 
_INT_IRQ1                                 IMPT 00000000    137 
_INT_IRQ2                                 IMPT 00000000    139 
_INT_IRQ3                                 IMPT 00000000    141 
_INT_IRQ4                                 IMPT 00000000    143 
_INT_IRQ5                                 IMPT 00000000    145 
_INT_Illegal_code                         IMPT 00000000     63 
_INT_Illegal_slot                         IMPT 00000000     65 
_INT_LCDC_LCDCI                           IMPT 00000000    193 
_INT_NMI                                  IMPT 00000000     67 
_INT_PCC0                                 IMPT 00000000    195 
_INT_PINT0_7                              IMPT 00000000    151 
_INT_PINT8_15                             IMPT 00000000    153 
_INT_RTC_ATI                              IMPT 00000000    111 
_INT_RTC_CUI                              IMPT 00000000    115 
_INT_RTC_PRI                              IMPT 00000000    113 
_INT_Reserved1                            IMPT 00000000     57 
_INT_Reserved2                            IMPT 00000000     59 
_INT_Reserved3E0                          IMPT 00000000    101 
_INT_Reserved5C0                          IMPT 00000000    131 
_INT_Reserved6C0                          IMPT 00000000    147 
_INT_Reserved6E0                          IMPT 00000000    149 
_INT_Reserved740                          IMPT 00000000    155 
_INT_Reserved760                          IMPT 00000000    157 
_INT_Reserved780                          IMPT 00000000    159 
_INT_Reserved7A0                          IMPT 00000000    161 
_INT_Reserved7C0                          IMPT 00000000    163 
_INT_Reserved7E0                          IMPT 00000000    165 
_INT_Reserved880                          IMPT 00000000    175 
_INT_Reserved8A0                          IMPT 00000000    177 
_INT_Reserved8C0                          IMPT 00000000    179 
_INT_Reserved8E0                          IMPT 00000000    181 
_INT_Reserved9E0                          IMPT 00000000    197 
_INT_ReservedA80                          IMPT 00000000    207 
_INT_ReservedAA0                          IMPT 00000000    209 
_INT_ReservedAC0                          IMPT 00000000    211 
_INT_ReservedAE0                          IMPT 00000000    213 
_INT_SCIF_BRI2                            IMPT 00000000    187 
_INT_SCIF_ERI2                            IMPT 00000000    183 
_INT_SCIF_RXI2                            IMPT 00000000    185 
_INT_SCIF_TXI2                            IMPT 00000000    189 
_INT_SCI_ERI                              IMPT 00000000    117 
_INT_SCI_RXI                              IMPT 00000000    119 
_INT_SCI_TEI                              IMPT 00000000    123 
_INT_SCI_TXI                              IMPT 00000000    121 
_INT_SIOF_SIFCCI                          IMPT 00000000    221 
_INT_SIOF_SIFERI                          IMPT 00000000    215 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    65

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_SIOF_SIFRXI                          IMPT 00000000    219 
_INT_SIOF_SIFTXI                          IMPT 00000000    217 
_INT_TLBCPU_ADERR                         IMPT 00000000     43 
_INT_TLBInitial_Page                      IMPT 00000000     45 
_INT_TLBMiss_Load                         IMPT 00000000     39 
_INT_TLBMiss_Store                        IMPT 00000000     41 
_INT_TLBProtect_Load                      IMPT 00000000     47 
_INT_TLBProtect_Loop                      IMPT 00000000     51 
_INT_TLBProtect_Store                     IMPT 00000000     49 
_INT_TMU_TICPI2                           IMPT 00000000    109 
_INT_TMU_TUNI0                            IMPT 00000000    103 
_INT_TMU_TUNI1                            IMPT 00000000    105 
_INT_TMU_TUNI2                            IMPT 00000000    107 
_INT_TRAPA                                IMPT 00000000     61 
_INT_USBF_USBFI0                          IMPT 00000000    201 
_INT_USBF_USBFI1                          IMPT 00000000    203 
_INT_USBH_USBHI                           IMPT 00000000    199 
_INT_User_Break                           IMPT 00000000     69 
_IN_RNA_REF_ERR_FLG1                      IMPT 00000000   2506 
_IN_RNA_REF_ERR_FLG2                      IMPT 00000000   2507 
_IO1A_P4EX                                EQU  00000000   2282*
_IO1A_P5EX                                EQU  0000007B   2283*
_IO1A_P6EX                                EQU  00000000   2284*
_IO1A_P7EX                                EQU  00000000   2285*
_IO1B_P4EX                                EQU  000000FF   2292*
_IO1B_P5EX                                EQU  00000070   2293*
_IO1B_P6EX                                EQU  00000000   2294*
_IO1B_P7EX                                EQU  00000000   2295*
_IO2A_P5EX                                EQU  0000002F   2287*
_IO2A_P6EX                                EQU  0000009C   2288*
_IO2A_P7EX                                EQU  00000000   2289*
_IO2B_P5EX                                EQU  00000000   2298* 2865  2878  2951  2964 
_IO2B_P6EX                                EQU  0000009C   2299*
_IO2B_P7EX                                EQU  00000000   2300*
_IOGA1_CTRL_DAT1                          IMPT 00000000   2678 
_IOGA1_PA_DT_OLD1                         IMPT 00000000   2683 
_IOGA1_PA_DT_OLD2                         IMPT 00000000   2689 
_IOGA1_PB_DT_OLD1                         IMPT 00000000   2684 
_IOGA1_PB_DT_OLD2                         IMPT 00000000   2690 
_IOGA1_PC_DT_OLD1                         IMPT 00000000   2685 
_IOGA1_PC_DT_OLD2                         IMPT 00000000   2691 
_IOGA1_PD_DT_OLD1                         IMPT 00000000   2686 
_IOGA1_PD_DT_OLD2                         IMPT 00000000   2692 
_IOGA1_PE_DT_OLD1                         IMPT 00000000   2687 
_IOGA1_PE_DT_OLD2                         IMPT 00000000   2693 
_IOGA2_CTRL_DAT1                          IMPT 00000000   2680  2857  2870  2943  2956 
_IOGA2_PA_DT_OLD1                         IMPT 00000000   2695 
_IOGA2_PA_DT_OLD2                         IMPT 00000000   2701 
_IOGA2_PB_DT_OLD1                         IMPT 00000000   2696 
_IOGA2_PB_DT_OLD2                         IMPT 00000000   2702 
_IOGA2_PC_DT_OLD1                         IMPT 00000000   2697 
_IOGA2_PC_DT_OLD2                         IMPT 00000000   2703 
_IOGA2_PD_DT_OLD1                         IMPT 00000000   2698 
_IOGA2_PD_DT_OLD2                         IMPT 00000000   2704 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    66

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_IOGA2_PE_DT_OLD1                         IMPT 00000000   2699 
_IOGA2_PE_DT_OLD2                         IMPT 00000000   2705 
_IOGA_P0                                  EQU  00000000   2241*
_IOGA_P1                                  EQU  00000002   2242*
_IOGA_P2                                  EQU  00000004   2243*
_IOGA_P3                                  EQU  00000006   2244*
_IOGA_P4                                  EQU  00000008   2245*
_IOGA_P5                                  EQU  0000000A   2246* 2857  2870  2943  2956 
_IOGA_P6                                  EQU  0000000C   2247*
_IOGA_P7                                  EQU  0000000E   2248*
_IOGA_PDIR0                               EQU  00000002   2266*
_IOGA_PDIR1                               EQU  00000006   2267*
_IOGA_PDIR2                               EQU  0000000A   2268*
_IOGA_PDIR3                               EQU  0000000E   2269*
_IOGA_PDIR4                               EQU  00000012   2270*
_IOGA_PDIR5                               EQU  00000016   2271* 2830 
_IOGA_PDIR6                               EQU  0000001A   2272*
_IOGA_PDIR7                               EQU  0000001C   2273*
_IOGA_PDR0                                EQU  00000000   2256*
_IOGA_PDR1                                EQU  00000004   2257*
_IOGA_PDR2                                EQU  00000008   2258*
_IOGA_PDR3                                EQU  0000000C   2259*
_IOGA_PDR4                                EQU  00000010   2260*
_IOGA_PDR5                                EQU  00000014   2261* 2867  2880  2953  2966 
_IOGA_PDR6                                EQU  00000018   2262*
_IOGA_PDR7                                EQU  0000001C   2263*
_IOGAi_PA                                 EQU  00000000   2232*
_IOGAi_PB                                 EQU  00000002   2233*
_IOGAi_PC                                 EQU  00000004   2234*
_IOGAi_PD                                 EQU  00000006   2235*
_IOGAo_PE                                 EQU  00000008   2236*
_IOGAo_PF                                 EQU  0000000A   2237*
_IOGAo_PG                                 EQU  0000000C   2238*
_IOGAo_PH                                 EQU  0000000E   2239*
_IPR3                                     IMPT 00000000   1938 
_IPR4                                     IMPT 00000000   1939 
_IPRA                                     IMPT 00000000   2042 
_IPRB                                     IMPT 00000000   2043 
_IPRC                                     IMPT 00000000   1830 
_IPRD                                     IMPT 00000000   1831 
_IPRE                                     IMPT 00000000   1832 
_IPRF                                     IMPT 00000000   1936 
_IPRG                                     IMPT 00000000   1937 
_IRAM_CLEAR                               IMPT 00000000   2748  2825 
_IRAM_SIZE                                EQU  00007FFF   2223*
_IRAM_TOP                                 EQU  FFFF6000   2222*
_IRR0                                     IMPT 00000000   1824 
_IRR1                                     IMPT 00000000   1825 
_IRR2                                     IMPT 00000000   1826 
_KEEPRY_BKUP_ERR                          IMPT 00000000   2627 
_KJ_CHK_CNT0                              IMPT 00000000   2774 
_LDACLNR                                  IMPT 00000000   2003 
_LDCNTR                                   IMPT 00000000   2007 
_LDDFR                                    IMPT 00000000   1992 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    67

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_LDHCNR                                   IMPT 00000000   1998 
_LDHSYNR                                  IMPT 00000000   1999 
_LDICKR                                   IMPT 00000000   1990 
_LDINTR                                   IMPT 00000000   2004 
_LDLAOR                                   IMPT 00000000   1996 
_LDMTR                                    IMPT 00000000   1991 
_LDPALCR                                  IMPT 00000000   1997 
_LDPMMR                                   IMPT 00000000   2005 
_LDPR00                                   IMPT 00000000   1989 
_LDPSPR                                   IMPT 00000000   2006 
_LDSARL                                   IMPT 00000000   1995 
_LDSARU                                   IMPT 00000000   1994 
_LDSMR                                    IMPT 00000000   1993 
_LDVDLNR                                  IMPT 00000000   2000 
_LDVSYNR                                  IMPT 00000000   2002 
_LDVTLNR                                  IMPT 00000000   2001 
_LT_RNA_REF_ERR_FLG1                      IMPT 00000000   2510 
_LT_RNA_REF_ERR_FLG2                      IMPT 00000000   2511 
_MCR                                      IMPT 00000000   2048 
_MMUCR                                    IMPT 00000000   2074 
_MPCR                                     IMPT 00000000   1926 
_MRCR                                     IMPT 00000000   1925 
_Manual_Reset                    ResetPRG EXPT 00000000     36  2779*
_NCHSW_ERR_TM1                            IMPT 00000000   2392 
_NCHSW_ERR_TM2                            IMPT 00000000   2393 
_PACR                                     IMPT 00000000   1883 
_PADR                                     IMPT 00000000   1896 
_PBCR                                     IMPT 00000000   1884 
_PBDR                                     IMPT 00000000   1897 
_PB_INDT_OLD1                             IMPT 00000000   2567 
_PB_INDT_OLD2                             IMPT 00000000   2568 
_PB_PORT_CTL_DATA                         IMPT 00000000   2566 
_PCC0CSCIER                               IMPT 00000000   1920 
_PCC0CSCR                                 IMPT 00000000   1919 
_PCC0GCR                                  IMPT 00000000   1918 
_PCC0ISR                                  IMPT 00000000   1917 
_PCCR                                     IMPT 00000000   1885 
_PCDR                                     IMPT 00000000   1898 
_PCR                                      IMPT 00000000   2049 
_PC_TO_PCRAM_COPY                         IMPT 00000000   2764  3238 
_PDCR                                     IMPT 00000000   1886 
_PDDR                                     IMPT 00000000   1899 
_PECR                                     IMPT 00000000   1887 
_PEDR                                     IMPT 00000000   1900 
_PFCR                                     IMPT 00000000   1888 
_PFDR                                     IMPT 00000000   1901  3030 
_PGCR                                     IMPT 00000000   1889 
_PGDR                                     IMPT 00000000   1902 
_PHCR                                     IMPT 00000000   1890 
_PHDR                                     IMPT 00000000   1903 
_PH_TO_PHRAM_COPY                         IMPT 00000000   2765  3242 
_PINTER                                   IMPT 00000000   1829 
_PJCR                                     IMPT 00000000   1891 
_PJDR                                     IMPT 00000000   1904  2849  2935 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    68

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_PJ_INDT_OLD1                             IMPT 00000000   2572 
_PJ_INDT_OLD2                             IMPT 00000000   2573 
_PJ_PORT_CTL_DATA                         IMPT 00000000   2571 
_PKCR                                     IMPT 00000000   1892 
_PKDR                                     IMPT 00000000   1905 
_PK_INDT_OLD1                             IMPT 00000000   2577 
_PK_INDT_OLD2                             IMPT 00000000   2578 
_PK_PORT_CTL_DATA                         IMPT 00000000   2576 
_PLCR                                     IMPT 00000000   1893 
_PLDR                                     IMPT 00000000   1906 
_PLSiCH1                                  EQU  00000000   2308*
_PLSiCH2                                  EQU  00000030   2309*
_PL_BitComdH                              EQU  00000002   2312*
_PL_BitComdL                              EQU  00000000   2311*
_PL_BitInfoH                              EQU  00000006   2314*
_PL_BitInfoL                              EQU  00000004   2313*
_PL_CtrlReg                               EQU  0000002A   2318*
_PL_INDT_OLD1                             IMPT 00000000   2582 
_PL_INDT_OLD2                             IMPT 00000000   2583 
_PL_NowPos1H                              EQU  00000026   2316*
_PL_NowPos1L                              EQU  00000024   2315*
_PL_NowPos2                               EQU  00000028   2317*
_PL_PORT_CTL_DATA                         IMPT 00000000   2581 
_PMCR                                     IMPT 00000000   1895 
_PMDR                                     IMPT 00000000   1908  3035 
_PONR_000                        ResetPRG      00000158   3046  3062*
_PONR_002                        ResetPRG      00000170   3067  3077*
_PONR_004                        ResetPRG      00000198   3086  3102*
_PONR_006                        ResetPRG      000001B4   3106  3120*
_PONR_008                        ResetPRG      000001B8   3127*
_PONR_010                        ResetPRG      000001E0   3134  3149*
_PONR_020                        ResetPRG      000001FC   3122  3153  3167*
_PONR_030                        ResetPRG      00000200   3048  3069  3093  3112  3140  3159  3174*
_PONR_050                        ResetPRG      00000206   3179* 3185 
_PONR_100                        ResetPRG      00000218   3169  3194*
_PRG_start                       Pstart        00000000   3195  3212*
_PTEH                                     IMPT 00000000   2078 
_PTEL                                     IMPT 00000000   2079 
_PV0_SCRW_POS                             IMPT 00000000   2372 
_PV1_SCRW_POS                             IMPT 00000000   2370 
_PV_AD_DATA                               IMPT 00000000   2447 
_P_TO_PRAM_COPY                           IMPT 00000000   2763  3234 
_PowerON_Reset                   ResetPRG EXPT 00000000     32  2778*
_PowerON_Reset_SP                         IMPT 00000000   2730  2780 
_R64CNT                                   IMPT 00000000   2025 
_RACT_IN_DATA                             IMPT 00000000   2485 
_RCNT                                     IMPT 00000000   1928 
_RCR1                                     IMPT 00000000   2039 
_RCR2                                     IMPT 00000000   2040 
_RDAYAR                                   IMPT 00000000   2037 
_RDAYCNT                                  IMPT 00000000   2030 
_RDEV_IN_DATA                             IMPT 00000000   2487 
_RDFP                                     IMPT 00000000   1932 
_RDR0                                     IMPT 00000000   2013 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    69

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_REAL_INP1_DATA                           IMPT 00000000   2561 
_REAL_INP1_DT_OLD1                        IMPT 00000000   2562 
_REAL_INP1_DT_OLD2                        IMPT 00000000   2563 
_REMOTE_ERR_CHKTM                         IMPT 00000000   2420 
_RFCR                                     IMPT 00000000   2053 
_RHRAR                                    IMPT 00000000   2035 
_RHRCNT                                   IMPT 00000000   2028 
_RMINAR                                   IMPT 00000000   2034 
_RMINCNT                                  IMPT 00000000   2027 
_RMONAR                                   IMPT 00000000   2038 
_RMONCNT                                  IMPT 00000000   2031 
_RNA_ALM_BIT0_CNT                         IMPT 00000000   2518 
_RNA_ALM_BIT1_CNT                         IMPT 00000000   2519 
_RNA_ALM_BIT2_CNT                         IMPT 00000000   2520 
_RNA_ALM_BIT3_CNT                         IMPT 00000000   2521 
_RNA_ALM_BIT4_CNT                         IMPT 00000000   2522 
_RNA_ALM_BIT5_CNT                         IMPT 00000000   2523 
_RNA_ALM_BIT6_CNT                         IMPT 00000000   2524 
_RNA_ALM_BIT7_CNT                         IMPT 00000000   2525 
_RNA_ALM_CNT                              IMPT 00000000   2526 
_RNA_ALM_DAT                              IMPT 00000000   2527 
_RNA_CMD_VERIFY_CNT                       IMPT 00000000   2513 
_RNA_CMD_VERIFY_DAT                       IMPT 00000000   2514 
_RNA_REF1_CNT                             IMPT 00000000   2528 
_RNA_REF2_CNT                             IMPT 00000000   2529 
_RNA_REF_ERR_FLG1                         IMPT 00000000   2508 
_RNA_REF_ERR_FLG2                         IMPT 00000000   2509 
_RNA_STS_ERR_DAT                          IMPT 00000000   2517 
_RNA_STS_REQERR_CNT                       IMPT 00000000   2516 
_RNA_STS_SYSERR_CNT                       IMPT 00000000   2515 
_ROM_SUM_CHK                              IMPT 00000000   2753 
_ROM_SYSPAR_ERRADR                        IMPT 00000000   2422 
_RSECAR                                   IMPT 00000000   2033 
_RSECCNT                                  IMPT 00000000   2026 
_RSFT_TRERR_TM                            IMPT 00000000   2402 
_RTCNT                                    IMPT 00000000   2051 
_RTCOR                                    IMPT 00000000   2052 
_RTCSR                                    IMPT 00000000   2050 
_RWKAR                                    IMPT 00000000   2036 
_RWKCNT                                   IMPT 00000000   2029 
_RYRCNT                                   IMPT 00000000   2032 
_SAITO_ASM_RAM_TOP                        IMPT 00000000   2336 
_SAR0                                     IMPT 00000000   1833 
_SAR1                                     IMPT 00000000   1837 
_SAR2                                     IMPT 00000000   1841 
_SAR3                                     IMPT 00000000   1845 
_SCBRR2                                   IMPT 00000000   1910 
_SCFCR2                                   IMPT 00000000   1915 
_SCFDR2                                   IMPT 00000000   1916 
_SCFRDR2                                  IMPT 00000000   1914 
_SCFTDR2                                  IMPT 00000000   1912 
_SCI0_PRO_ROM_TO_RAM                      IMPT 00000000   2755  3018 
_SCI_VUP_MAIN                             IMPT 00000000   2754  3181 
_SCPCR                                    IMPT 00000000   1894 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    70

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SCPDR                                    IMPT 00000000   1907 
_SCR0                                     IMPT 00000000   2010 
_SCSCMR                                   IMPT 00000000   2014 
_SCSCR2                                   IMPT 00000000   1911 
_SCSMR2                                   IMPT 00000000   1909 
_SCSSR2                                   IMPT 00000000   1913 
_SDDRL                                    IMPT 00000000   1935 
_SDDR_SDDRH                               IMPT 00000000   1934 
_SDIR                                     IMPT 00000000   1933 
_SELF_ACT_FLG                             IMPT 00000000   2430 
_SELF_CHK_FLG                             IMPT 00000000   2429 
_SELF_CHK_TIMER                           IMPT 00000000   2439 
_SELF_FSTY_USE                            IMPT 00000000   2436 
_SELF_HAND_FLG1                           IMPT 00000000   2433 
_SELF_HAND_FLG2                           IMPT 00000000   2434 
_SELF_RSTY_USE                            IMPT 00000000   2437 
_SFTSW_ERR_TM                             IMPT 00000000   2390 
_SH4_SQERRAM                              IMPT 00000000   2383 
_SICDAR                                   IMPT 00000000   1872 
_SICTR                                    IMPT 00000000   1873 
_SIFCTR                                   IMPT 00000000   1874 
_SIFPR                                    IMPT 00000000   1882 
_SIIER                                    IMPT 00000000   1876 
_SIMDR                                    IMPT 00000000   1868 
_SIRCR                                    IMPT 00000000   1880 
_SIRDAR                                   IMPT 00000000   1871 
_SIRDR                                    IMPT 00000000   1878 
_SISCR                                    IMPT 00000000   1869 
_SISTR                                    IMPT 00000000   1875 
_SITCR                                    IMPT 00000000   1879 
_SITDAR                                   IMPT 00000000   1870 
_SITDR                                    IMPT 00000000   1877 
_SITMR                                    IMPT 00000000   1881 
_SMR0                                     IMPT 00000000   2008 
_SQ_CBWK_TOP                              IMPT 00000000   2556 
_SRAM_SIZE                                EQU  001FFFFF   2221*
_SRAM_TOP                                 EQU  AC000000   2220*
_SRSTR                                    IMPT 00000000   1943 
_SSR0                                     IMPT 00000000   2012 
_START_ACK_COD                            EQU  00004321    429*
_START_REQ_COD                            EQU  00009876    428*
_STBCR                                    IMPT 00000000   2055 
_STBCR2                                   IMPT 00000000   2058 
_STBCR3                                   IMPT 00000000   1942 
_TCNT0                                    IMPT 00000000   2017 
_TCNT1                                    IMPT 00000000   2020 
_TCNT2                                    IMPT 00000000   2023 
_TCOR0                                    IMPT 00000000   2016 
_TCOR1                                    IMPT 00000000   2019 
_TCOR2                                    IMPT 00000000   2022 
_TCR0                                     IMPT 00000000   2018 
_TCR1                                     IMPT 00000000   2021 
_TCR2                                     IMPT 00000000   2024 
_TDFP                                     IMPT 00000000   1931 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    71

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_TDR0                                     IMPT 00000000   2011 
_TEA                                      IMPT 00000000   2081 
_TIM100US                                 EQU  000007D0   2211*
_TIM1MS                                   EQU  000009C4   2212*
_TINT3_10MS_CNT                           IMPT 00000000   2494 
_TRA                                      IMPT 00000000   2071 
_TSTR                                     IMPT 00000000   2015 
_TTB                                      IMPT 00000000   2080 
_USBDASTS                                 IMPT 00000000   1955 
_USBDMA                                   IMPT 00000000   1964 
_USBEPDR0I                                IMPT 00000000   1949 
_USBEPDR0O                                IMPT 00000000   1950 
_USBEPDR0S                                IMPT 00000000   1954 
_USBEPDR1                                 IMPT 00000000   1961 
_USBEPDR2                                 IMPT 00000000   1956 
_USBEPDR3                                 IMPT 00000000   1965 
_USBEPSTL                                 IMPT 00000000   1958 
_USBEPSZ0O                                IMPT 00000000   1953 
_USBEPSZ1                                 IMPT 00000000   1962 
_USBFCLR                                  IMPT 00000000   1952 
_USBHBCED                                 IMPT 00000000   1977 
_USBHBHED                                 IMPT 00000000   1976 
_USBHC                                    IMPT 00000000   1967 
_USBHCCED                                 IMPT 00000000   1975 
_USBHCHED                                 IMPT 00000000   1974 
_USBHCS                                   IMPT 00000000   1968 
_USBHDHED                                 IMPT 00000000   1978 
_USBHFI                                   IMPT 00000000   1979 
_USBHFN                                   IMPT 00000000   1981 
_USBHFR                                   IMPT 00000000   1980 
_USBHHCCA                                 IMPT 00000000   1972 
_USBHID                                   IMPT 00000000   1971 
_USBHIE                                   IMPT 00000000   1970 
_USBHIS                                   IMPT 00000000   1969 
_USBHLST                                  IMPT 00000000   1983 
_USBHPCED                                 IMPT 00000000   1973 
_USBHPS                                   IMPT 00000000   1982 
_USBHR                                    IMPT 00000000   1966 
_USBHRDA                                  IMPT 00000000   1984 
_USBHRDB                                  IMPT 00000000   1985 
_USBHRPS1                                 IMPT 00000000   1987 
_USBHRPS2                                 IMPT 00000000   1988 
_USBHRS                                   IMPT 00000000   1986 
_USBIER0                                  IMPT 00000000   1959 
_USBIER1                                  IMPT 00000000   1960 
_USBIFR0                                  IMPT 00000000   1947 
_USBIFR1                                  IMPT 00000000   1948 
_USBISR0                                  IMPT 00000000   1957 
_USBISR1                                  IMPT 00000000   1963 
_USBTFG                                   IMPT 00000000   1951 
_VLVER11_ERR_TM                           IMPT 00000000   2394 
_VLVER12_ERR_TM                           IMPT 00000000   2395 
_VLVER21_ERR_TM                           IMPT 00000000   2396 
_VLVER22_ERR_TM                           IMPT 00000000   2397 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    72

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_VLVER31_ERR_TM                           IMPT 00000000   2398 
_VLVER32_ERR_TM                           IMPT 00000000   2399 
_VUPCHECK_DATA                            IMPT 00000000   2761  3063 
_VUPCHECK_EQU                             EQU  11AB3739    314* 3065 
_WCR1                                     IMPT 00000000   2046 
_WCR2                                     IMPT 00000000   2047 
_WK_RCV_SCFDR2                            IMPT 00000000   2500 
_WK_RCV_SCFSR2                            IMPT 00000000   2499 
_WK_RCV_SCLSR2                            IMPT 00000000   2498 
_WORK_MEM_CHK2                            IMPT 00000000   2749  2994 
_WPAR1_BTNER_TM                           IMPT 00000000   2406 
_WPAR1_CMPER2_TM                          IMPT 00000000   2415 
_WPAR1_FSFTTRER_TM                        IMPT 00000000   2416 
_WPAR1_MODSER_TM1                         IMPT 00000000   2407 
_WPAR1_MODSER_TM2                         IMPT 00000000   2408 
_WPAR1_RSFTTRER_TM                        IMPT 00000000   2417 
_WPAR1_SFTSWER_TM                         IMPT 00000000   2405 
_WPAR1_VLVER11_TM1                        IMPT 00000000   2409 
_WPAR1_VLVER12_TM1                        IMPT 00000000   2410 
_WPAR1_VLVER21_TM1                        IMPT 00000000   2411 
_WPAR1_VLVER22_TM1                        IMPT 00000000   2412 
_WPAR1_VLVER31_TM1                        IMPT 00000000   2413 
_WPAR1_VLVER32_TM1                        IMPT 00000000   2414 
_WTCNT                                    IMPT 00000000   2056 
_WTCSR                                    IMPT 00000000   2057 
__INITSCT                                 IMPT 00000000   2732  3217 
_dio_top1                                 IMPT 00000000   2771 
_dio_top2                                 IMPT 00000000   2772  2830  2867  2880  2953  2966 
_init_DISP                                IMPT 00000000   2758  2917 
_init_LCD                                 IMPT 00000000   2757  2913 
_main                                     IMPT 00000000   2733  3251 
_rcv2_data_INcnt                          IMPT 00000000   2356 
_rcv2_data_buf                            IMPT 00000000   2358 
_rcv2_data_cnt                            IMPT 00000000   2357 
_rcv2_err_FRPRErrCnt                      IMPT 00000000   2350 
_rcv2_err_OverRunCnt                      IMPT 00000000   2349 
_rcv2_err_data_flg1                       IMPT 00000000   2344 
_rcv2_err_data_sts1                       IMPT 00000000   2348 
_rcv2_err_elseErrCnt                      IMPT 00000000   2351 
_rcv2_err_hard_INTflg1                    IMPT 00000000   2341 
_rcv2_err_hard_INTflg2                    IMPT 00000000   2342 
_rcv2_err_hard_INTflg3                    IMPT 00000000   2343 
_rcv2_err_hard_sts1                       IMPT 00000000   2345 
_rcv2_err_hard_sts2                       IMPT 00000000   2346 
_rcv2_err_hard_sts3                       IMPT 00000000   2347 
_rcv2_event_flg                           IMPT 00000000   2367 
_send2_data_buf                           IMPT 00000000   2363 
_send2_event_flg                          IMPT 00000000   2368 
_start000                        Pstart        00000020   3250*
_vup_mesG_disp                            IMPT 00000000   2759  3089  3108  3136  3155 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:17                                                  PAGE    73

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

ResetPRG                         REL-CODE    00000022C        
Pstart                           REL-CODE    000000078        
