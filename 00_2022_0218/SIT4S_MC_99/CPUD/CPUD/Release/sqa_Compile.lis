*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;****************************************************************************************
    2                               2     ;* File Name    : ssa_Compile.src
    3                               3     ;* Function     : シーケンス コンパイル処理
    4                               4     ;* Author       : Designed by T.Akiba, Coded by T.Akiba
    5                               5     ;* Date         : 2009-11-20 Akiba
    6                               6     ;* Update       : 2010-08-11 Y.Kobayashi(コード整理)
    7                               7     ;****************************************************************************************
    8                               8     
    9                               9     ;********************************************************************
   10                              10     ;* INCLUDE
   11                              11     ;********************************************************************
 2292                              19     
 2293 00000000                     20             .SECTION        P,CODE
 2294                              21     
 2295                              22     ;********************************************************************
 2296                              23     ;* EXTERN 宣言 MEMORY,HARD
 2297                              24     ;********************************************************************
 2298                              25             .IMPORT _SEQ_COM1_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2299                              26             .IMPORT _SEQ_COM2_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2300                              27             .IMPORT _SEQ_COM3_TOP                   ; SEQUENCE COMMAND AREA TOP ADR.   (ssa_me
                                          m1.srcがﾏｽﾀ)
 2301                              28     
 2302                              29             .EXPORT _SEQ_RUN_CHG1_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2303                              30             .EXPORT _SEQ_RUN_CHG2_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2304                              31             .EXPORT _SEQ_RUN_CHG3_MAIN              ; ｼｰｹﾝｽFROM->SDRAM命令変換
 2305                              32     
 2306                              33     
 2307 00000000                     34     _SEQ_START_CODE:
 2308                              35             SUB_START
 2309 00000000 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2310                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2311 00000002 0009                36             NOP
 2312                              37     
 2313 00000004                     38     _SEQ_END_CODE:
 2314                              39             SUB_END
 2315                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2316 00000004 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2317                              40             M_RTS
 2318 00000006 000B                   M           RTS                             ;RTSの後ろの
 2319 00000008 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2320                              41     
 2321                              42     
 2322                              43     ;********************************************************************
 2323                              44     ;* FUNCTION     : シーケンスコマンド変換 1
 2324                              45     ;* DATE         : 09/11/20 Akiba
 2325                              46     ;* UPDATE       :
 2326                              47     ;********************************************************************
 2327                              48             .IMPORT _PVP_SQ_COM_ADR                 ;word
 2328                              49             .IMPORT _PVP_SQ_COM_ERR                 ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2329                              50     
 2330                              51     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2331                              52     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2332                              53     
 2333 0000000C                     54             .ALIGN  4
 2334 0000000C                     55     _SEQ_RUN_CHG1_MAIN:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     2
PROGRAM NAME =

 2335                              56             SUB_START
 2336 0000000C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2337                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2338                              57     
 2339                              58     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2340 0000000E DD17                59             MOV.L   #_SEQ_RUN1_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2341 00000010 DC17                60             MOV.L   #_SEQ_START_CODE,R12            ;
 2342 00000012 60C1                61             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2343 00000014 2D01                62             MOV.W   R0,@R13                         ;
 2344 00000016 D017                63             MOV.L   #2,R0                           ;
 2345 00000018 3D0C                64             ADD     R0,R13                          ; ADDRESS INC
 2346 0000001A 3C0C                65             ADD     R0,R12                          ; ADDRESS INC
 2347 0000001C 60C1                66             MOV.W   @R12,R0                         ;
 2348 0000001E 2D01                67             MOV.W   R0,@R13                         ; NOP CODE SET
 2349                              68     
 2350                              69             FAR_JSR #_SEQ_RUN_CHG1,R1               ;
 2351 00000020 D115                   M           MOV.L   #_SEQ_RUN_CHG1,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2352 00000022 410B                   M           JSR     @R1                     ;
 2353 00000024 0009                   M           NOP                                     ;
 2354                              70     
 2355 00000026 D115                71             MOV.L   #_SEQ_CMP_ERR_ADR1,R1           ;
 2356 00000028 2172                72             MOV.L   R7,@R1                          ; compile error adr set
 2357                              73     
 2358                              74     ;       ===========================
 2359 0000002A D115                75             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2360 0000002C 2171                76             MOV.W   R7,@R1                          ;
 2361 0000002E D115                77             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2362 00000030 2101                78             MOV.W   R0,@R1                          ;
 2363                              79     ;       ============================
 2364                              80     
 2365 00000032 D115                81             MOV.L   #_SEQ_CMP_ERR1,R1               ;
 2366 00000034 2101                82             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2367                              83     
 2368 00000036 2008                84             TST     R0,R0                           ;
 2369 00000038 890C                85             BT      _SEQ_RUN_CHG_MAIN020            ;
 2370                              86     
 2371                              87     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2372 0000003A DC14                88             MOV.L   #_SEQ_END_CODE,R12              ;
 2373 0000003C 60C1                89             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2374 0000003E 2D01                90             MOV.W   R0,@R13                         ;
 2375 00000040 D00C                91             MOV.L   #2,R0                           ;
 2376 00000042 3D0C                92             ADD     R0,R13                          ; ADDRESS INC
 2377 00000044 3C0C                93             ADD     R0,R12                          ; ADDRESS INC
 2378 00000046 60C1                94             MOV.W   @R12,R0                         ;
 2379 00000048 2D01                95             MOV.W   R0,@R13                         ; M_RTS SET
 2380 0000004A D00A                96             MOV.L   #2,R0                           ;
 2381 0000004C 3D0C                97             ADD     R0,R13                          ; ADDRESS INC
 2382 0000004E 3C0C                98             ADD     R0,R12                          ; ADDRESS INC
 2383 00000050 60C1                99             MOV.W   @R12,R0                         ;
 2384 00000052 2D01               100             MOV.W   R0,@R13                         ; M_RTS SET
 2385                             101     
 2386 00000054                    102     _SEQ_RUN_CHG_MAIN020:
 2387                             103     
 2388 00000054 222A               104             XOR     R2,R2                           ;
 2389                             105     
 2390 00000056 D10E               106             MOV.L   #_SEQ_ARG1_DATA,R1              ; ARG clear
 2391 00000058 2121               107             MOV.W   R2,@R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     3
PROGRAM NAME =

 2392 0000005A D10E               108             MOV.L   #_SEQ_MRG1_DATA,R1              ; MRG clear
 2393 0000005C 2121               109             MOV.W   R2,@R1                          ;
 2394 0000005E 9204               110             MOV.W   #H'01,R2                        ; NRG 1 set
 2395 00000060 D10D               111             MOV.L   #_SEQ_NRG1_DATA,R1              ;
 2396 00000062 2121               112             MOV.W   R2,@R1                          ;
 2397                             113     
 2398                             114             SUB_END
 2399                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2400 00000064 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2401                             115             M_RTS
 2402 00000066 000B                   M           RTS                             ;RTSの後ろの
 2403 00000068 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2404                             116     
 2405                             117     ;********************************************************************
 2406                             118     ;* FUNCTION     : シーケンスコマンド変換 2
 2407                             119     ;* DATE         : 09/11/20 Akiba
 2408                             120     ;* UPDATE       :
 2409                             121     ;********************************************************************
 2410                             122     
 2411                             123     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2412                             124     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2413                             125     
 2414                                     ***** BEGIN-POOL *****
 2415 0000006A 0001                       DATA FOR SOURCE-LINE 110
 2416 0000006C 00000000                   DATA FOR SOURCE-LINE 59
 2417 00000070 00000000                   DATA FOR SOURCE-LINE 60
 2418 00000074 00000002                   DATA FOR SOURCE-LINE 63,91,96
 2419 00000078 00000000                   DATA FOR SOURCE-LINE 69
 2420 0000007C 00000000                   DATA FOR SOURCE-LINE 71
 2421 00000080 00000000                   DATA FOR SOURCE-LINE 75
 2422 00000084 00000000                   DATA FOR SOURCE-LINE 77
 2423 00000088 00000000                   DATA FOR SOURCE-LINE 81
 2424 0000008C 00000000                   DATA FOR SOURCE-LINE 88
 2425 00000090 00000000                   DATA FOR SOURCE-LINE 106
 2426 00000094 00000000                   DATA FOR SOURCE-LINE 108
 2427 00000098 00000000                   DATA FOR SOURCE-LINE 111
 2428                                     ***** END-POOL *****
 2429 0000009C                    126             .ALIGN  4
 2430 0000009C                    127     _SEQ_RUN_CHG2_MAIN:
 2431                             128             SUB_START
 2432 0000009C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2433                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2434                             129     
 2435                             130     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2436 0000009E DD17               131             MOV.L   #_SEQ_RUN2_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2437 000000A0 DC17               132             MOV.L   #_SEQ_START_CODE,R12            ;
 2438 000000A2 60C1               133             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2439 000000A4 2D01               134             MOV.W   R0,@R13                         ;
 2440 000000A6 D017               135             MOV.L   #2,R0                           ;
 2441 000000A8 3D0C               136             ADD     R0,R13                          ; ADDRESS INC
 2442 000000AA 3C0C               137             ADD     R0,R12                          ; ADDRESS INC
 2443 000000AC 60C1               138             MOV.W   @R12,R0                         ;
 2444 000000AE 2D01               139             MOV.W   R0,@R13                         ; NOP CODE SET
 2445                             140     
 2446                             141             FAR_JSR #_SEQ_RUN_CHG2,R1               ;
 2447 000000B0 D115                   M           MOV.L   #_SEQ_RUN_CHG2,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2448 000000B2 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     4
PROGRAM NAME =

 2449 000000B4 0009                   M           NOP                                     ;
 2450                             142     
 2451 000000B6 D115               143             MOV.L   #_SEQ_CMP_ERR_ADR2,R1           ;
 2452 000000B8 2172               144             MOV.L   R7,@R1                          ; compile error adr set
 2453                             145     
 2454                             146     ;       ===========================
 2455 000000BA D115               147             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2456 000000BC 2171               148             MOV.W   R7,@R1                          ;
 2457 000000BE D115               149             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2458 000000C0 2101               150             MOV.W   R0,@R1                          ;
 2459                             151     ;       ============================
 2460                             152     
 2461 000000C2 D115               153             MOV.L   #_SEQ_CMP_ERR2,R1               ;
 2462 000000C4 2101               154             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2463                             155     
 2464 000000C6 2008               156             TST     R0,R0                           ;
 2465 000000C8 890C               157             BT      _SEQ_RUN_CHG2_MAIN020           ;
 2466                             158     
 2467                             159     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2468 000000CA DC14               160             MOV.L   #_SEQ_END_CODE,R12              ;
 2469 000000CC 60C1               161             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2470 000000CE 2D01               162             MOV.W   R0,@R13                         ;
 2471 000000D0 D00C               163             MOV.L   #2,R0                           ;
 2472 000000D2 3D0C               164             ADD     R0,R13                          ; ADDRESS INC
 2473 000000D4 3C0C               165             ADD     R0,R12                          ; ADDRESS INC
 2474 000000D6 60C1               166             MOV.W   @R12,R0                         ;
 2475 000000D8 2D01               167             MOV.W   R0,@R13                         ; M_RTS SET
 2476 000000DA D00A               168             MOV.L   #2,R0                           ;
 2477 000000DC 3D0C               169             ADD     R0,R13                          ; ADDRESS INC
 2478 000000DE 3C0C               170             ADD     R0,R12                          ; ADDRESS INC
 2479 000000E0 60C1               171             MOV.W   @R12,R0                         ;
 2480 000000E2 2D01               172             MOV.W   R0,@R13                         ; M_RTS SET
 2481                             173     
 2482 000000E4                    174     _SEQ_RUN_CHG2_MAIN020:
 2483                             175     
 2484 000000E4 222A               176             XOR     R2,R2                           ;
 2485                             177     
 2486 000000E6 D10E               178             MOV.L   #_SEQ_ARG2_DATA,R1              ; ARG clear
 2487 000000E8 2121               179             MOV.W   R2,@R1                          ;
 2488 000000EA D10E               180             MOV.L   #_SEQ_MRG2_DATA,R1              ; MRG clear
 2489 000000EC 2121               181             MOV.W   R2,@R1                          ;
 2490 000000EE 9204               182             MOV.W   #H'01,R2                        ; NRG 1 set
 2491 000000F0 D10D               183             MOV.L   #_SEQ_NRG2_DATA,R1              ;
 2492 000000F2 2121               184             MOV.W   R2,@R1                          ;
 2493                             185     
 2494                             186             SUB_END
 2495                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2496 000000F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2497                             187             M_RTS
 2498 000000F6 000B                   M           RTS                             ;RTSの後ろの
 2499 000000F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2500                             188     
 2501                             189     ;********************************************************************
 2502                             190     ;* FUNCTION     : シーケンスコマンド変換 3
 2503                             191     ;* DATE         : 09/11/20 Akiba
 2504                             192     ;* UPDATE       :
 2505                             193     ;********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     5
PROGRAM NAME =

 2506                             194     
 2507                             195     ;SEQ_COMPILE :FLAG IF data  ==0 THEN MAIN-SEQ 0~4000?[EQU=MAIN_SEQ_STP] STEP
 2508                             196     ;                  IF data  !=0 THEN INT -SEQ 0~100? [EQU=INT_SEQ_STP] STEP
 2509                             197     
 2510                                     ***** BEGIN-POOL *****
 2511 000000FA 0001                       DATA FOR SOURCE-LINE 182
 2512 000000FC 00000000                   DATA FOR SOURCE-LINE 131
 2513 00000100 00000000                   DATA FOR SOURCE-LINE 132
 2514 00000104 00000002                   DATA FOR SOURCE-LINE 135,163,168
 2515 00000108 00000000                   DATA FOR SOURCE-LINE 141
 2516 0000010C 00000000                   DATA FOR SOURCE-LINE 143
 2517 00000110 00000000                   DATA FOR SOURCE-LINE 147
 2518 00000114 00000000                   DATA FOR SOURCE-LINE 149
 2519 00000118 00000000                   DATA FOR SOURCE-LINE 153
 2520 0000011C 00000000                   DATA FOR SOURCE-LINE 160
 2521 00000120 00000000                   DATA FOR SOURCE-LINE 178
 2522 00000124 00000000                   DATA FOR SOURCE-LINE 180
 2523 00000128 00000000                   DATA FOR SOURCE-LINE 183
 2524                                     ***** END-POOL *****
 2525 0000012C                    198             .ALIGN  4
 2526 0000012C                    199     _SEQ_RUN_CHG3_MAIN:
 2527                             200             SUB_START
 2528 0000012C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2529                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2530                             201     
 2531                             202     ;       *** ｼｰｹﾝｽの始まりはSUB_STARTを入れる ***
 2532 0000012E DD17               203             MOV.L   #_SEQ_RUN3_TOP,R13              ; RUN COMMAND STORE AREA TOP ADR.
 2533 00000130 DC17               204             MOV.L   #_SEQ_START_CODE,R12            ;
 2534 00000132 60C1               205             MOV.W   @R12,R0                         ; SUB_START CODE SET
 2535 00000134 2D01               206             MOV.W   R0,@R13                         ;
 2536 00000136 D017               207             MOV.L   #2,R0                           ;
 2537 00000138 3D0C               208             ADD     R0,R13                          ; ADDRESS INC
 2538 0000013A 3C0C               209             ADD     R0,R12                          ; ADDRESS INC
 2539 0000013C 60C1               210             MOV.W   @R12,R0                         ;
 2540 0000013E 2D01               211             MOV.W   R0,@R13                         ; NOP CODE SET
 2541                             212     
 2542                             213             FAR_JSR #_SEQ_RUN_CHG3,R1               ;
 2543 00000140 D115                   M           MOV.L   #_SEQ_RUN_CHG3,R1               ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 2544 00000142 410B                   M           JSR     @R1                     ;
 2545 00000144 0009                   M           NOP                                     ;
 2546                             214     
 2547 00000146 D115               215             MOV.L   #_SEQ_CMP_ERR_ADR3,R1           ;
 2548 00000148 2172               216             MOV.L   R7,@R1                          ; compile error adr set
 2549                             217     
 2550                             218     ;       ===========================
 2551 0000014A D115               219             MOV.L   #_PVP_SQ_COM_ADR,R1             ;word
 2552 0000014C 2171               220             MOV.W   R7,@R1                          ;
 2553 0000014E D115               221             MOV.L   #_PVP_SQ_COM_ERR,R1             ;ｺﾝﾊﾟｲﾙ異常有り／無し
 2554 00000150 2101               222             MOV.W   R0,@R1                          ;
 2555                             223     ;       ============================
 2556                             224     
 2557 00000152 D115               225             MOV.L   #_SEQ_CMP_ERR3,R1               ;
 2558 00000154 2101               226             MOV.W   R0,@R1                          ; CMP OK = R0:0000 , CMP NG = R0:FFFF
 2559                             227     
 2560 00000156 2008               228             TST     R0,R0                           ;
 2561 00000158 890C               229             BT      _SEQ_RUN_CHG3_MAIN020           ;
 2562                             230     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     6
PROGRAM NAME =

 2563                             231     ;       *** 異常終了時はSUB_END,M_RTSをつける ***
 2564 0000015A DC14               232             MOV.L   #_SEQ_END_CODE,R12              ;
 2565 0000015C 60C1               233             MOV.W   @R12,R0                         ; SUB_END CODE SET
 2566 0000015E 2D01               234             MOV.W   R0,@R13                         ;
 2567 00000160 D00C               235             MOV.L   #2,R0                           ;
 2568 00000162 3D0C               236             ADD     R0,R13                          ; ADDRESS INC
 2569 00000164 3C0C               237             ADD     R0,R12                          ; ADDRESS INC
 2570 00000166 60C1               238             MOV.W   @R12,R0                         ;
 2571 00000168 2D01               239             MOV.W   R0,@R13                         ; M_RTS SET
 2572 0000016A D00A               240             MOV.L   #2,R0                           ;
 2573 0000016C 3D0C               241             ADD     R0,R13                          ; ADDRESS INC
 2574 0000016E 3C0C               242             ADD     R0,R12                          ; ADDRESS INC
 2575 00000170 60C1               243             MOV.W   @R12,R0                         ;
 2576 00000172 2D01               244             MOV.W   R0,@R13                         ; M_RTS SET
 2577                             245     
 2578 00000174                    246     _SEQ_RUN_CHG3_MAIN020:
 2579                             247     
 2580 00000174 222A               248             XOR     R2,R2                           ;
 2581                             249     
 2582 00000176 D10E               250             MOV.L   #_SEQ_ARG3_DATA,R1              ; ARG clear
 2583 00000178 2121               251             MOV.W   R2,@R1                          ;
 2584 0000017A D10E               252             MOV.L   #_SEQ_MRG3_DATA,R1              ; MRG clear
 2585 0000017C 2121               253             MOV.W   R2,@R1                          ;
 2586 0000017E 9204               254             MOV.W   #H'01,R2                        ; NRG 1 set
 2587 00000180 D10D               255             MOV.L   #_SEQ_NRG3_DATA,R1              ;
 2588 00000182 2121               256             MOV.W   R2,@R1                          ;
 2589                             257     
 2590                             258             SUB_END
 2591                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2592 00000184 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2593                             259             M_RTS
 2594 00000186 000B                   M           RTS                             ;RTSの後ろの
 2595 00000188 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2596                             260     
 2597                             261     ;********************************************************************
 2598                             262     ;* FUNCTION     : コンパイルサブルーチン 1
 2599                             263     ;* DATE         : 09/11/20 Akiba
 2600                             264     ;* UPDATE       :
 2601                             265     ;********************************************************************
 2602                                     ***** BEGIN-POOL *****
 2603 0000018A 0001                       DATA FOR SOURCE-LINE 254
 2604 0000018C 00000000                   DATA FOR SOURCE-LINE 203
 2605 00000190 00000000                   DATA FOR SOURCE-LINE 204
 2606 00000194 00000002                   DATA FOR SOURCE-LINE 207,235,240
 2607 00000198 00000000                   DATA FOR SOURCE-LINE 213
 2608 0000019C 00000000                   DATA FOR SOURCE-LINE 215
 2609 000001A0 00000000                   DATA FOR SOURCE-LINE 219
 2610 000001A4 00000000                   DATA FOR SOURCE-LINE 221
 2611 000001A8 00000000                   DATA FOR SOURCE-LINE 225
 2612 000001AC 00000000                   DATA FOR SOURCE-LINE 232
 2613 000001B0 00000000                   DATA FOR SOURCE-LINE 250
 2614 000001B4 00000000                   DATA FOR SOURCE-LINE 252
 2615 000001B8 00000000                   DATA FOR SOURCE-LINE 255
 2616                                     ***** END-POOL *****
 2617 000001BC                    266             .ALIGN  4
 2618 000001BC                    267     _SEQ_RUN_CHG1:
 2619                             268             SUB_START
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     7
PROGRAM NAME =

 2620 000001BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2621                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2622                             269     
 2623 000001BE DC10               270             MOV.L   #_SEQ_COM1_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2624 000001C0 DD10               271             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2625 000001C2 3CDC               272             ADD.L   R13,R12                         ;
 2626 000001C4 DD10               273             MOV.L   #_SEQ_RUN1,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2627 000001C6 DE11               274             MOV.L   #_SEQ_RUN1_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2628                             275     
 2629 000001C8 D011               276             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2630 000001CA 3E08               277             SUB     R0,R14                          ; 最大命令数28BYTE
 2631 000001CC 277A               278             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2632                             279     
 2633 000001CE                    280     _SEQ_RUN_CHG1_100:
 2634                             281     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2635                             282                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2636                             283                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2637                             284                                                     ; R13:SEQ-展開命令-WORK
 2638                             285                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2639 000001CE 3DE3               286             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2640                             287     
 2641 000001D0 D610               288             MOV.L   #H'0C1DFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2642                             289     
 2643 000001D2 3C63               290             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2644 000001D4 893C               291             BT      _SEQ_RUN_CHG1_ERR_END           ; R12>=R6 JUMP
 2645                             292     
 2646 000001D6 6AC5               293             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2647 000001D8 68C5               294             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2648                             295     
 2649 000001DA 69A8               296             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2650 000001DC 699C               297             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2651 000001DE 900E               298             MOV.W   #H'00FF,R0                      ;
 2652 000001E0 2909               299             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2653                             300     
 2654 000001E2 6BA3               301             MOV.L   R10,R11                         ;
 2655 000001E4 4B09               302             SHLR2   R11                             ; MKIND 抽出
 2656 000001E6 4B09               303             SHLR2   R11                             ; MKIND 抽出
 2657 000001E8 D00B               304             MOV.L   #H'000F,R0                      ;
 2658 000001EA 2B09               305             AND     R0,R11                          ; MKIND 抽出
 2659 000001EC 2A09               306             AND     R0,R10                          ; BIT DATA 抽出
 2660                             307     
 2661 000001EE                    308     _SEQ_RUN_CHG1_300:
 2662                             309     ;                                               ; SEQUENCE COMMAND
 2663 000001EE 4908               310             SHLL2   R9                              ; OP CODE × 4
 2664 000001F0 D10A               311             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2665 000001F2 319C               312             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2666                             313     
 2667 000001F4 D50A               314             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2668 000001F6 3950               315             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2669 000001F8 8914               316             BT      _SEQ_RUN_CHG1_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2670                             317             M_BRA   _SEQ_RUN_CHG1_4BYTE             ;
 2671 000001FA A017                   M           BRA     _SEQ_RUN_CHG1_4BYTE
 2672 000001FC 0009                   M           NOP
 2673                             318     
 2674                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     8
PROGRAM NAME =

 2675 000001FE 00FF                       DATA FOR SOURCE-LINE 298
 2676 00000200 00000000                   DATA FOR SOURCE-LINE 270
 2677 00000204 00000018                   DATA FOR SOURCE-LINE 271
 2678 00000208 00000000                   DATA FOR SOURCE-LINE 273
 2679 0000020C 00000000                   DATA FOR SOURCE-LINE 274
 2680 00000210 0000001E                   DATA FOR SOURCE-LINE 276
 2681 00000214 0C1DFFFF                   DATA FOR SOURCE-LINE 288
 2682 00000218 0000000F                   DATA FOR SOURCE-LINE 304
 2683 0000021C 00000000                   DATA FOR SOURCE-LINE 311
 2684 00000220 0000026C                   DATA FOR SOURCE-LINE 314
 2685                                     ***** END-POOL *****
 2686 00000224                    319     _SEQ_RUN_CHG1_DSETLI:
 2687 00000224 900B               320             MOV.W   #1,R0                           ;
 2688 00000226 370C               321             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2689 00000228 68C5               322             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2690 0000022A 69C5               323             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2691                             324     
 2692 0000022C                    325     _SEQ_RUN_CHG1_4BYTE:
 2693                             326     
 2694 0000022C 6112               327             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2695 0000022E 410B               328             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2696 00000230 0009               329             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2697                             330                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2698                             331                                                     ; IF END THEN R0=0000H ELSE "0"
 2699                             332     
 2700 00000232 8800               333             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2701 00000234 8904               334             BT      _SEQ_RUN_CHG1_800               ; NO ERR THEN JUMP
 2702                             335     
 2703 00000236 8855               336             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2704 00000238 8907               337             BT      _SEQ_RUN_CHG1_END               ; NORMAL END
 2705                             338             M_BRA   _SEQ_RUN_CHG1_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2706 0000023A A009                   M           BRA     _SEQ_RUN_CHG1_ERR_END
 2707 0000023C 0009                   M           NOP
 2708                             339                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2709                             340     
 2710                                     ***** BEGIN-POOL *****
 2711 0000023E 0001                       DATA FOR SOURCE-LINE 320
 2712                                     ***** END-POOL *****
 2713 00000240                    341     _SEQ_RUN_CHG1_800:                              ; CODE SET END
 2714                             342     
 2715 00000240 9102               343             MOV.W   #1,R1                           ;
 2716 00000242 371C               344             ADD     R1,R7                           ; STEP COUNTER + 1
 2717                             345             M_BRA   _SEQ_RUN_CHG1_100               ; LOOP
 2718 00000244 AFC3                   M           BRA     _SEQ_RUN_CHG1_100
 2719 00000246 0009                   M           NOP
 2720                             346     
 2721                                     ***** BEGIN-POOL *****
 2722 00000248 0001                       DATA FOR SOURCE-LINE 343
 2723                                     ***** END-POOL *****
 2724 0000024A                    347     _SEQ_RUN_CHG1_END:
 2725 0000024A 200A               348             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2726                             349                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2727                             350             M_BRA   _SEQ_RUN_CHG1_EXIT              ;
 2728 0000024C A001                   M           BRA     _SEQ_RUN_CHG1_EXIT
 2729 0000024E 0009                   M           NOP
 2730                             351     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE     9
PROGRAM NAME =

 2731 00000250                    352     _SEQ_RUN_CHG1_ERR_END:
 2732 00000250 9002               353             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2733                             354                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2734 00000252                    355     _SEQ_RUN_CHG1_EXIT:
 2735                             356             SUB_END
 2736                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2737 00000252 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2738                             357             M_RTS
 2739 00000254 000B                   M           RTS                             ;RTSの後ろの
 2740 00000256 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2741                             358     
 2742                             359     ;********************************************************************
 2743                             360     ;* FUNCTION     : コンパイルサブルーチン 2
 2744                             361     ;* DATE         : 09/11/20 Akiba
 2745                             362     ;* UPDATE       :
 2746                             363     ;********************************************************************
 2747                                     ***** BEGIN-POOL *****
 2748 00000258 FF00                       DATA FOR SOURCE-LINE 353
 2749                                     ***** END-POOL *****
 2750 0000025C                    364             .ALIGN  4
 2751 0000025C                    365     _SEQ_RUN_CHG2:
 2752                             366             SUB_START
 2753 0000025C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2754                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2755                             367     
 2756 0000025E DC10               368             MOV.L   #_SEQ_COM2_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2757 00000260 DD10               369             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2758 00000262 3CDC               370             ADD.L   R13,R12                         ;
 2759 00000264 DD10               371             MOV.L   #_SEQ_RUN2,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2760 00000266 DE11               372             MOV.L   #_SEQ_RUN2_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2761                             373     
 2762 00000268 D011               374             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2763 0000026A 3E08               375             SUB     R0,R14                          ; 最大命令数28BYTE
 2764 0000026C 277A               376             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2765                             377     
 2766 0000026E                    378     _SEQ_RUN_CHG2_100:
 2767                             379     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
 2768                             380                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2769                             381                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2770                             382                                                     ; R13:SEQ-展開命令-WORK
 2771                             383                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2772 0000026E 3DE3               384             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2773                             385     
 2774 00000270 D610               386             MOV.L   #H'0C1EFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2775                             387     
 2776 00000272 3C63               388             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2777 00000274 893C               389             BT      _SEQ_RUN_CHG2_ERR_END           ; R12>=R6 JUMP
 2778                             390     
 2779 00000276 6AC5               391             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2780 00000278 68C5               392             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2781                             393     
 2782 0000027A 69A8               394             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2783 0000027C 699C               395             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2784 0000027E 900E               396             MOV.W   #H'00FF,R0                      ;
 2785 00000280 2909               397             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    10
PROGRAM NAME =

 2786                             398     
 2787 00000282 6BA3               399             MOV.L   R10,R11                         ;
 2788 00000284 4B09               400             SHLR2   R11                             ; MKIND 抽出
 2789 00000286 4B09               401             SHLR2   R11                             ; MKIND 抽出
 2790 00000288 D00B               402             MOV.L   #H'000F,R0                      ;
 2791 0000028A 2B09               403             AND     R0,R11                          ; MKIND 抽出
 2792 0000028C 2A09               404             AND     R0,R10                          ; BIT DATA 抽出
 2793                             405     
 2794 0000028E                    406     _SEQ_RUN_CHG2_300:
 2795                             407     ;                                               ; SEQUENCE COMMAND
 2796 0000028E 4908               408             SHLL2   R9                              ; OP CODE × 4
 2797 00000290 D10A               409             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2798 00000292 319C               410             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2799                             411     
 2800 00000294 D50A               412             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2801 00000296 3950               413             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2802 00000298 8914               414             BT      _SEQ_RUN_CHG2_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2803                             415             M_BRA   _SEQ_RUN_CHG2_4BYTE             ;
 2804 0000029A A017                   M           BRA     _SEQ_RUN_CHG2_4BYTE
 2805 0000029C 0009                   M           NOP
 2806                             416     
 2807                                     ***** BEGIN-POOL *****
 2808 0000029E 00FF                       DATA FOR SOURCE-LINE 396
 2809 000002A0 00000000                   DATA FOR SOURCE-LINE 368
 2810 000002A4 00000018                   DATA FOR SOURCE-LINE 369
 2811 000002A8 00000000                   DATA FOR SOURCE-LINE 371
 2812 000002AC 00000000                   DATA FOR SOURCE-LINE 372
 2813 000002B0 0000001E                   DATA FOR SOURCE-LINE 374
 2814 000002B4 0C1EFFFF                   DATA FOR SOURCE-LINE 386
 2815 000002B8 0000000F                   DATA FOR SOURCE-LINE 402
 2816 000002BC 00000000                   DATA FOR SOURCE-LINE 409
 2817 000002C0 0000026C                   DATA FOR SOURCE-LINE 412
 2818                                     ***** END-POOL *****
 2819 000002C4                    417     _SEQ_RUN_CHG2_DSETLI:
 2820 000002C4 900B               418             MOV.W   #1,R0                           ;
 2821 000002C6 370C               419             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
 2822 000002C8 68C5               420             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2823 000002CA 69C5               421             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2824                             422     
 2825 000002CC                    423     _SEQ_RUN_CHG2_4BYTE:
 2826                             424     
 2827 000002CC 6112               425             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2828 000002CE 410B               426             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2829 000002D0 0009               427             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2830                             428                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2831                             429                                                     ; IF END THEN R0=0000H ELSE "0"
 2832                             430     
 2833 000002D2 8800               431             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2834 000002D4 8904               432             BT      _SEQ_RUN_CHG2_800               ; NO ERR THEN JUMP
 2835                             433     
 2836 000002D6 8855               434             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2837 000002D8 8907               435             BT      _SEQ_RUN_CHG2_END               ; NORMAL END
 2838                             436             M_BRA   _SEQ_RUN_CHG2_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2839 000002DA A009                   M           BRA     _SEQ_RUN_CHG2_ERR_END
 2840 000002DC 0009                   M           NOP
 2841                             437                                                     ;    [ENDなし異常=内部RAMに収まらない]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    11
PROGRAM NAME =

 2842                                     ***** BEGIN-POOL *****
 2843 000002DE 0001                       DATA FOR SOURCE-LINE 418
 2844                                     ***** END-POOL *****
 2845 000002E0                    438     _SEQ_RUN_CHG2_800:                              ; CODE SET END
 2846 000002E0 9102               439             MOV.W   #1,R1                           ;
 2847 000002E2 371C               440             ADD     R1,R7                           ; STEP COUNTER + 1
 2848                             441             M_BRA   _SEQ_RUN_CHG2_100               ; LOOP
 2849 000002E4 AFC3                   M           BRA     _SEQ_RUN_CHG2_100
 2850 000002E6 0009                   M           NOP
 2851                             442     
 2852                                     ***** BEGIN-POOL *****
 2853 000002E8 0001                       DATA FOR SOURCE-LINE 439
 2854                                     ***** END-POOL *****
 2855 000002EA                    443     _SEQ_RUN_CHG2_END:
 2856 000002EA 200A               444             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2857                             445                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2858                             446             M_BRA   _SEQ_RUN_CHG2_EXIT              ;
 2859 000002EC A001                   M           BRA     _SEQ_RUN_CHG2_EXIT
 2860 000002EE 0009                   M           NOP
 2861                             447     
 2862 000002F0                    448     _SEQ_RUN_CHG2_ERR_END:
 2863 000002F0 9002               449             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2864                             450                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2865 000002F2                    451     _SEQ_RUN_CHG2_EXIT:
 2866                             452             SUB_END
 2867                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2868 000002F2 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 2869                             453             M_RTS
 2870 000002F4 000B                   M           RTS                             ;RTSの後ろの
 2871 000002F6 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 2872                             454     
 2873                             455     ;********************************************************************
 2874                             456     ;* FUNCTION     : コンパイルサブルーチン 3
 2875                             457     ;* DATE         : 09/11/20 Akiba
 2876                             458     ;* UPDATE       :
 2877                             459     ;********************************************************************
 2878                                     ***** BEGIN-POOL *****
 2879 000002F8 FF00                       DATA FOR SOURCE-LINE 449
 2880                                     ***** END-POOL *****
 2881 000002FC                    460             .ALIGN  4
 2882 000002FC                    461     _SEQ_RUN_CHG3:
 2883                             462             SUB_START
 2884 000002FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 2885                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 2886                             463     
 2887 000002FE DC10               464             MOV.L   #_SEQ_COM3_TOP,R12              ; SEQUENCE COMMAND AREA TOP ADR.   ROM
 2888 00000300 DD10               465             MOV.L   #D'24,R13                       ; ｼｰｹﾝｽｺﾏﾝﾄﾞ部ｱﾄﾞﾚｽ加算
 2889 00000302 3CDC               466             ADD.L   R13,R12                         ;
 2890 00000304 DD10               467             MOV.L   #_SEQ_RUN3,R13                  ; RUN COMMAND STORE AREA TOP ADR.  RAM
 2891 00000306 DE11               468             MOV.L   #_SEQ_RUN3_END,R14              ; RUN COMMAND STORE AREA END ADR.  RAM
 2892                             469     
 2893 00000308 D011               470             MOV.L   #_SEQ_MAX_BYTE,R0               ; 最大命令数28BYTE
 2894 0000030A 3E08               471             SUB     R0,R14                          ; 最大命令数28BYTE
 2895 0000030C 277A               472             XOR     R7,R7                           ; 異常ｽﾃｯﾌﾟ検出ｶｳﾝﾀｸﾘｱ
 2896                             473     
 2897 0000030E                    474     _SEQ_RUN_CHG3_100:
 2898                             475     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    _WDT_CLR R0,R1,R2                       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    12
PROGRAM NAME =

 2899                             476                                                     ; R12:ﾕ-ｻﾞ命令ｺｰﾄﾞ
 2900                             477                                                     ; R12:ｲﾝｸﾘﾒﾝﾄ
 2901                             478                                                     ; R13:SEQ-展開命令-WORK
 2902                             479                                                     ; R13:ｲﾝｸﾘﾒﾝﾄ
 2903 0000030E 3DE3               480             CMP/GE  R14,R13                         ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R13 >= R
                                          14
 2904                             481     
 2905 00000310 D610               482             MOV.L   #H'0C1FFFFF,R6                  ; SEQUENCE COMMAND AREA END ADR.   ROM
 2906                             483     
 2907 00000312 3C63               484             CMP/GE  R6,R12                          ; ｼｰｹﾝｽｺｰﾄﾞ領域ﾁｪｯｸ IF OVER THEN ERR R12 >
                                          = R6
 2908 00000314 893C               485             BT      _SEQ_RUN_CHG3_ERR_END           ; R12>=R6 JUMP
 2909                             486     
 2910 00000316 6AC5               487             MOV.W   @R12+,R10                       ; OP CODE, (MKIND,BIT DATA) LOAD
 2911 00000318 68C5               488             MOV.W   @R12+,R8                        ; MEM ADR LOAD
 2912                             489     
 2913 0000031A 69A8               490             SWAP.B  R10,R9                          ; OP CODE ⇔ (MIND,BIT DATA)
 2914 0000031C 699C               491             EXTU.B  R9,R9                           ; ｾﾞﾛ拡張(OP CODE)
 2915 0000031E 900E               492             MOV.W   #H'00FF,R0                      ;
 2916 00000320 2909               493             AND     R0,R9                           ; OP CODE | 0x007F   →   OP CODE抽出
 2917                             494     
 2918 00000322 6BA3               495             MOV.L   R10,R11                         ;
 2919 00000324 4B09               496             SHLR2   R11                             ; MKIND 抽出
 2920 00000326 4B09               497             SHLR2   R11                             ; MKIND 抽出
 2921 00000328 D00B               498             MOV.L   #H'000F,R0                      ;
 2922 0000032A 2B09               499             AND     R0,R11                          ; MKIND 抽出
 2923 0000032C 2A09               500             AND     R0,R10                          ; BIT DATA 抽出
 2924                             501     
 2925 0000032E                    502     _SEQ_RUN_CHG3_300:
 2926                             503     ;                                               ; SEQUENCE COMMAND
 2927 0000032E 4908               504             SHLL2   R9                              ; OP CODE × 4
 2928 00000330 D10A               505             MOV.L   #_SEQ_CHG_TBL0,R1               ; OP CODE 先頭ｱﾄﾞﾚｽ LOAD
 2929 00000332 319C               506             ADD     R9,R1                           ; (OP CODE 先頭ｱﾄﾞﾚｽ) + (OP CODE × 4)
 2930                             507     
 2931 00000334 D50A               508             MOV.L   #H'26C,R5                       ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)先頭ｱﾄﾞﾚｽ読出
 2932 00000336 3950               509             CMP/EQ  R5,R9                           ; DSETL(直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ)ｺｰﾄﾞ 比較(=)
 2933 00000338 8914               510             BT      _SEQ_RUN_CHG3_DSETLI            ; 直接ﾜｰﾄﾞﾃﾞｰﾀｾｯﾄ THEN JUMP
 2934                             511             M_BRA   _SEQ_RUN_CHG3_4BYTE             ;
 2935 0000033A A017                   M           BRA     _SEQ_RUN_CHG3_4BYTE
 2936 0000033C 0009                   M           NOP
 2937                             512     
 2938                                     ***** BEGIN-POOL *****
 2939 0000033E 00FF                       DATA FOR SOURCE-LINE 492
 2940 00000340 00000000                   DATA FOR SOURCE-LINE 464
 2941 00000344 00000018                   DATA FOR SOURCE-LINE 465
 2942 00000348 00000000                   DATA FOR SOURCE-LINE 467
 2943 0000034C 00000000                   DATA FOR SOURCE-LINE 468
 2944 00000350 0000001E                   DATA FOR SOURCE-LINE 470
 2945 00000354 0C1FFFFF                   DATA FOR SOURCE-LINE 482
 2946 00000358 0000000F                   DATA FOR SOURCE-LINE 498
 2947 0000035C 00000000                   DATA FOR SOURCE-LINE 505
 2948 00000360 0000026C                   DATA FOR SOURCE-LINE 508
 2949                                     ***** END-POOL *****
 2950 00000364                    513     _SEQ_RUN_CHG3_DSETLI:
 2951 00000364 900B               514             MOV.W   #1,R0                           ;
 2952 00000366 370C               515             ADD     R0,R7                           ; STEP COUNTER + 1 (DSETL命令は2ｽﾃｯﾌﾟとす
                                          る為加算)
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    13
PROGRAM NAME =

 2953 00000368 68C5               516             MOV.W   @R12+,R8                        ; MEM ADR(HH,HL) LOAD
 2954 0000036A 69C5               517             MOV.W   @R12+,R9                        ; MEM ADR(LH,LL) LOAD
 2955                             518     
 2956 0000036C                    519     _SEQ_RUN_CHG3_4BYTE:
 2957                             520     
 2958 0000036C 6112               521             MOV.L   @R1,R1                          ; OP CODE ADDRESS LOAD
 2959 0000036E 410B               522             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 2960 00000370 0009               523             NOP                                     ; ER0,ER1,ER2,ER3,ER4 BREAK OK!
 2961                             524                                                     ; IF ERR THEN R0=FFFFH ELSE "0"
 2962                             525                                                     ; IF END THEN R0=0000H ELSE "0"
 2963                             526     
 2964 00000372 8800               527             CMP/EQ  #_SQ_NML_COD,R0                 ; ｺｰﾄﾞ正常(H'0000) 比較(=)
 2965 00000374 8904               528             BT      _SEQ_RUN_CHG3_800               ; NO ERR THEN JUMP
 2966                             529     
 2967 00000376 8855               530             CMP/EQ  #_SQ_NML_END,R0                 ; 正常終了(H'0055) 比較(=)
 2968 00000378 8907               531             BT      _SEQ_RUN_CHG3_END               ; NORMAL END
 2969                             532             M_BRA   _SEQ_RUN_CHG3_ERR_END           ; ERR[ｵﾍﾟｺｰﾄﾞ異常または
 2970 0000037A A009                   M           BRA     _SEQ_RUN_CHG3_ERR_END
 2971 0000037C 0009                   M           NOP
 2972                             533                                                     ;    [ENDなし異常=内部RAMに収まらない]
 2973                                     ***** BEGIN-POOL *****
 2974 0000037E 0001                       DATA FOR SOURCE-LINE 514
 2975                                     ***** END-POOL *****
 2976 00000380                    534     _SEQ_RUN_CHG3_800:                              ; CODE SET END
 2977 00000380 9102               535             MOV.W   #1,R1                           ;
 2978 00000382 371C               536             ADD     R1,R7                           ; STEP COUNTER + 1
 2979                             537             M_BRA   _SEQ_RUN_CHG3_100               ; LOOP
 2980 00000384 AFC3                   M           BRA     _SEQ_RUN_CHG3_100
 2981 00000386 0009                   M           NOP
 2982                             538     
 2983                                     ***** BEGIN-POOL *****
 2984 00000388 0001                       DATA FOR SOURCE-LINE 535
 2985                                     ***** END-POOL *****
 2986 0000038A                    539     _SEQ_RUN_CHG3_END:
 2987 0000038A 200A               540             XOR     R0,R0                           ; H'0000 --> R0 = NOMAL
 2988                             541                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2989                             542             M_BRA   _SEQ_RUN_CHG3_EXIT              ;
 2990 0000038C A001                   M           BRA     _SEQ_RUN_CHG3_EXIT
 2991 0000038E 0009                   M           NOP
 2992                             543     
 2993 00000390                    544     _SEQ_RUN_CHG3_ERR_END:
 2994 00000390 9002               545             MOV.W   #_SQ_ERR_END,R0                 ; H'FF00 --> R0 = ERR
 2995                             546                                                     ; ANS.R7 ROMｽﾃｯﾌﾟ数
 2996 00000392                    547     _SEQ_RUN_CHG3_EXIT:
 2997                             548             SUB_END
 2998                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 2999 00000392 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3000                             549             M_RTS
 3001 00000394 000B                   M           RTS                             ;RTSの後ろの
 3002 00000396 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3003                             550     
 3004                             551     
 3005                             552     ;       /****************************************************
 3006                             553     ;       /*****    R11 ＝　ＯＰ　ＣＯＤＥ                *****
 3007                             554     ;       /*****    R10 ＝　ＢＩＴ　ＣＯＤＥ              *****
 3008                             555     ;       /*****    R9  ＝　ＯＦＦＳＥＴ　ＣＯＤＥ        *****
 3009                             556     ;       /*****    R8  ＝　ＡＤＲ　ＣＯＤＥ              *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    14
PROGRAM NAME =

 3010                             557     ;       /****************************************************
 3011                             558     ;
 3012                             559     ;       ***********************************
 3013                             560     ;       *****   NOP CODE CHANGE ROUTINE ***
 3014                             561     ;       ***********************************
 3015                                     ***** BEGIN-POOL *****
 3016 00000398 FF00                       DATA FOR SOURCE-LINE 545
 3017                                     ***** END-POOL *****
 3018 0000039C                    562             .ALIGN  4
 3019 0000039C                    563     _NOP_CHG:                                               ; 00000000B     00
 3020                             564             SUB_START
 3021 0000039C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3022                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3023                             565     
 3024 0000039E D004               566             MOV.L   #(_NOP_CODE_END - _NOP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3025 000003A0 D304               567             MOV.L   #_NOP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3026                             568     
 3027 000003A2 D105               569             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3028 000003A4 410B               570             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3029 000003A6 0009               571             NOP
 3030                             572     
 3031                             573             SUB_END
 3032                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3033 000003A8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3034                             574             M_RTS
 3035 000003AA 000B                   M           RTS                             ;RTSの後ろの
 3036 000003AC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3037                             575     
 3038                             576     ;       ************************************
 3039                             577     ;       *****   LDON CODE CHANGE ROUTINE ***
 3040                             578     ;       ************************************
 3041                                     ***** BEGIN-POOL *****
 3042 000003AE 0000                       ALIGNMENT CODE
 3043 000003B0 00000000                   DATA FOR SOURCE-LINE 566
 3044 000003B4 00000000                   DATA FOR SOURCE-LINE 567
 3045 000003B8 00000000                   DATA FOR SOURCE-LINE 569
 3046                                     ***** END-POOL *****
 3047 000003BC                    579             .ALIGN  4
 3048 000003BC                    580     _LDON_CHG:                                              ; 00000001B     01
 3049                             581             SUB_START
 3050 000003BC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3051                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3052                             582     
 3053 000003BE D004               583             MOV.L   #(_LDON_CODE_END - _LDON_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3054 000003C0 D304               584             MOV.L   #_LDON_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3055                             585     
 3056 000003C2 D105               586             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3057 000003C4 410B               587             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3058 000003C6 0009               588             NOP
 3059                             589     
 3060                             590             SUB_END
 3061                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3062 000003C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3063                             591             M_RTS
 3064 000003CA 000B                   M           RTS                             ;RTSの後ろの
 3065 000003CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3066                             592     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    15
PROGRAM NAME =

 3067                             593     ;       ***********************************
 3068                             594     ;       *****   AMRG CODE CHANGE ROUTINE ***
 3069                             595     ;       ***********************************
 3070                                     ***** BEGIN-POOL *****
 3071 000003CE 0000                       ALIGNMENT CODE
 3072 000003D0 00000000                   DATA FOR SOURCE-LINE 583
 3073 000003D4 00000000                   DATA FOR SOURCE-LINE 584
 3074 000003D8 00000000                   DATA FOR SOURCE-LINE 586
 3075                                     ***** END-POOL *****
 3076 000003DC                    596             .ALIGN  4
 3077 000003DC                    597     _AMRG_CHG:                                              ; 00100000B     20
 3078                             598             SUB_START
 3079 000003DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3080                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3081                             599     
 3082 000003DE D004               600             MOV.L   #(_AMRG_CODE_END - _AMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3083 000003E0 D304               601             MOV.L   #_AMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3084                             602     
 3085 000003E2 D105               603             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3086 000003E4 410B               604             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3087 000003E6 0009               605             NOP
 3088                             606     
 3089                             607             SUB_END
 3090                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3091 000003E8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3092                             608             M_RTS
 3093 000003EA 000B                   M           RTS                             ;RTSの後ろの
 3094 000003EC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3095                             609     
 3096                             610     ;       ***********************************
 3097                             611     ;       *****   OMRG CODE CHANGE ROUTINE ***
 3098                             612     ;       ***********************************
 3099                                     ***** BEGIN-POOL *****
 3100 000003EE 0000                       ALIGNMENT CODE
 3101 000003F0 00000000                   DATA FOR SOURCE-LINE 600
 3102 000003F4 00000000                   DATA FOR SOURCE-LINE 601
 3103 000003F8 00000000                   DATA FOR SOURCE-LINE 603
 3104                                     ***** END-POOL *****
 3105 000003FC                    613             .ALIGN  4
 3106 000003FC                    614     _OMRG_CHG:                                              ; 00100010B     22
 3107                             615             SUB_START
 3108 000003FC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3109                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3110                             616     
 3111 000003FE D004               617             MOV.L   #(_OMRG_CODE_END - _OMRG_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3112 00000400 D304               618             MOV.L   #_OMRG_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3113                             619     
 3114 00000402 D105               620             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3115 00000404 410B               621             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3116 00000406 0009               622             NOP
 3117                             623     
 3118                             624             SUB_END
 3119                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3120 00000408 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3121                             625             M_RTS
 3122 0000040A 000B                   M           RTS                             ;RTSの後ろの
 3123 0000040C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    16
PROGRAM NAME =

 3124                             626     
 3125                             627     ;       ***********************************
 3126                             628     ;       *****   PUSH CODE CHANGE ROUTINE ***
 3127                             629     ;       ***********************************
 3128                                     ***** BEGIN-POOL *****
 3129 0000040E 0000                       ALIGNMENT CODE
 3130 00000410 00000000                   DATA FOR SOURCE-LINE 617
 3131 00000414 00000000                   DATA FOR SOURCE-LINE 618
 3132 00000418 00000000                   DATA FOR SOURCE-LINE 620
 3133                                     ***** END-POOL *****
 3134 0000041C                    630             .ALIGN  4
 3135 0000041C                    631     _PUSH_CHG:                                              ; 00100100B     24
 3136                             632             SUB_START
 3137 0000041C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3138                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3139                             633     
 3140 0000041E D004               634             MOV.L   #(_PUSH_CODE_END - _PUSH_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3141 00000420 D304               635             MOV.L   #_PUSH_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3142                             636     
 3143 00000422 D105               637             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3144 00000424 410B               638             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3145 00000426 0009               639             NOP
 3146                             640     
 3147                             641             SUB_END
 3148                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3149 00000428 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3150                             642             M_RTS
 3151 0000042A 000B                   M           RTS                             ;RTSの後ろの
 3152 0000042C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3153                             643     
 3154                             644     ;       ***********************************
 3155                             645     ;       *****   POP CODE CHANGE ROUTINE ***
 3156                             646     ;       ***********************************
 3157                                     ***** BEGIN-POOL *****
 3158 0000042E 0000                       ALIGNMENT CODE
 3159 00000430 00000000                   DATA FOR SOURCE-LINE 634
 3160 00000434 00000000                   DATA FOR SOURCE-LINE 635
 3161 00000438 00000000                   DATA FOR SOURCE-LINE 637
 3162                                     ***** END-POOL *****
 3163 0000043C                    647             .ALIGN  4
 3164 0000043C                    648     _POP_CHG:                                               ; 00100101B     25
 3165                             649             SUB_START
 3166 0000043C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3167                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3168                             650     
 3169 0000043E D004               651             MOV.L   #(_POP_CODE_END - _POP_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3170 00000440 D304               652             MOV.L   #_POP_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3171                             653     
 3172 00000442 D105               654             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3173 00000444 410B               655             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3174 00000446 0009               656             NOP
 3175                             657     
 3176                             658             SUB_END
 3177                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3178 00000448 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3179                             659             M_RTS
 3180 0000044A 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    17
PROGRAM NAME =

 3181 0000044C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3182                             660     
 3183                             661     ;       *************************************
 3184                             662     ;       *****   LDNRG CODE CHANGE ROUTINE ***
 3185                             663     ;       *************************************
 3186                                     ***** BEGIN-POOL *****
 3187 0000044E 0000                       ALIGNMENT CODE
 3188 00000450 00000000                   DATA FOR SOURCE-LINE 651
 3189 00000454 00000000                   DATA FOR SOURCE-LINE 652
 3190 00000458 00000000                   DATA FOR SOURCE-LINE 654
 3191                                     ***** END-POOL *****
 3192 0000045C                    664             .ALIGN  4
 3193 0000045C                    665     _LDNRG_CHG:                                             ; 00100110B     26
 3194                             666             SUB_START
 3195 0000045C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3196                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3197                             667     
 3198 0000045E D004               668             MOV.L   #(_LDNRG_CODE_END - _LDNRG_CODE),R0     ; 転送ﾊﾞｲﾄ長
 3199 00000460 D304               669             MOV.L   #_LDNRG_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3200                             670     
 3201 00000462 D105               671             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3202 00000464 410B               672             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3203 00000466 0009               673             NOP
 3204                             674     
 3205                             675             SUB_END
 3206                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3207 00000468 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3208                             676             M_RTS
 3209 0000046A 000B                   M           RTS                             ;RTSの後ろの
 3210 0000046C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3211                             677     
 3212                             678     ;       **************************************
 3213                             679     ;       *****   ENDNRG CODE CHANGE ROUTINE ***
 3214                             680     ;       **************************************
 3215                                     ***** BEGIN-POOL *****
 3216 0000046E 0000                       ALIGNMENT CODE
 3217 00000470 00000000                   DATA FOR SOURCE-LINE 668
 3218 00000474 00000000                   DATA FOR SOURCE-LINE 669
 3219 00000478 00000000                   DATA FOR SOURCE-LINE 671
 3220                                     ***** END-POOL *****
 3221 0000047C                    681             .ALIGN  4
 3222 0000047C                    682     _ENDNRG_CHG:                                            ; 00100111B     27
 3223                             683             SUB_START
 3224 0000047C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3225                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3226                             684     
 3227 0000047E D004               685             MOV.L   #(_ENDNRG_CODE_END - _ENDNRG_CODE),R0   ; 転送ﾊﾞｲﾄ長
 3228 00000480 D304               686             MOV.L   #_ENDNRG_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3229                             687     
 3230 00000482 D105               688             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3231 00000484 410B               689             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3232 00000486 0009               690             NOP
 3233                             691     
 3234                             692             SUB_END
 3235                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3236 00000488 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3237                             693             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    18
PROGRAM NAME =

 3238 0000048A 000B                   M           RTS                             ;RTSの後ろの
 3239 0000048C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3240                             694     
 3241                             695     ;       ***********************************
 3242                             696     ;       *****   END CODE CHANGE ROUTINE ***
 3243                             697     ;       **********************************
 3244                                     ***** BEGIN-POOL *****
 3245 0000048E 0000                       ALIGNMENT CODE
 3246 00000490 00000000                   DATA FOR SOURCE-LINE 685
 3247 00000494 00000000                   DATA FOR SOURCE-LINE 686
 3248 00000498 00000000                   DATA FOR SOURCE-LINE 688
 3249                                     ***** END-POOL *****
 3250 0000049C                    698             .ALIGN  4
 3251 0000049C                    699     _END_CHG:                                               ; 00101010B     2A
 3252                             700             SUB_START
 3253 0000049C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3254                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3255                             701     
 3256 0000049E D005               702             MOV.L   #(_END_CODE_END - _END_CODE),R0         ; 転送ﾊﾞｲﾄ長
 3257 000004A0 D305               703             MOV.L   #_END_CODE,R3                           ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3258                             704     
 3259 000004A2 D106               705             MOV.L   #_SEQ_DATA_CHG0,R1                      ; SEQ DATA CHANGE0 ADDRESS LOAD
 3260 000004A4 410B               706             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3261 000004A6 0009               707             NOP
 3262                             708     
 3263 000004A8 9002               709             MOV.W   #_SQ_NML_END,R0                         ; END CODE SET
 3264                             710     
 3265                             711             SUB_END
 3266                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3267 000004AA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3268                             712             M_RTS
 3269 000004AC 000B                   M           RTS                             ;RTSの後ろの
 3270 000004AE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3271                             713     
 3272                             714     ;       ***************************************************
 3273                             715     ;       ***     SEQ DATA CHANGE0 ROUTINE                ***
 3274                             716     ;       ***************************************************
 3275                                     ***** BEGIN-POOL *****
 3276 000004B0 0055                       DATA FOR SOURCE-LINE 709
 3277 000004B2 0000                       ALIGNMENT CODE
 3278 000004B4 00000000                   DATA FOR SOURCE-LINE 702
 3279 000004B8 00000000                   DATA FOR SOURCE-LINE 703
 3280 000004BC 00000000                   DATA FOR SOURCE-LINE 705
 3281                                     ***** END-POOL *****
 3282 000004C0                    717             .ALIGN  4
 3283 000004C0                    718     _SEQ_DATA_CHG0:
 3284                             719             SUB_START
 3285 000004C0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3286                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3287                             720     
 3288 000004C2 64D3               721             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 3289                             722     
 3290                             723             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 3291 000004C4 D102                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 3292 000004C6 410B                   M           JSR     @R1                     ;
 3293 000004C8 0009                   M           NOP                                     ;
 3294                             724                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    19
PROGRAM NAME =

                                          入れ直す。
 3295                             725     
 3296 000004CA                    726     _SEQ_DATA_CHG0_EX:
 3297                             727             SUB_END
 3298                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3299 000004CA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3300                             728             M_RTS                                   ; NORMAL END
 3301 000004CC 000B                   M           RTS                             ;RTSの後ろの
 3302 000004CE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3303                             729     
 3304                             730     ;       ***********************************
 3305                             731     ;       *****   WSR CODE CHANGE ROUTINE ***
 3306                             732     ;       ***********************************
 3307                                     ***** BEGIN-POOL *****
 3308 000004D0 00000000                   DATA FOR SOURCE-LINE 723
 3309                                     ***** END-POOL *****
 3310 000004D4                    733             .ALIGN  4
 3311 000004D4                    734     _WSR_CHG:                                       ; 00010100B     14
 3312                             735             SUB_START
 3313 000004D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3314                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3315                             736     
 3316 000004D6 D005               737             MOV.L   #(_WSR_CODE_END - _WSR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3317 000004D8 D305               738             MOV.L   #_WSR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3318 000004DA D206               739             MOV.L   #(WSR_ADR - _WSR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3319 000004DC D506               740             MOV.L   #(WSR_OFS - WSR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3320                             741     
 3321 000004DE D107               742             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3322 000004E0 410B               743             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3323 000004E2 0009               744             NOP
 3324                             745     
 3325                             746             SUB_END
 3326                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3327 000004E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3328                             747             M_RTS
 3329 000004E6 000B                   M           RTS                             ;RTSの後ろの
 3330 000004E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3331                             748     
 3332                             749     ;       ***********************************
 3333                             750     ;       *****   CLR CODE CHANGE ROUTINE ***
 3334                             751     ;       ***********************************
 3335                                     ***** BEGIN-POOL *****
 3336 000004EA 0000                       ALIGNMENT CODE
 3337 000004EC 00000000                   DATA FOR SOURCE-LINE 737
 3338 000004F0 00000000                   DATA FOR SOURCE-LINE 738
 3339 000004F4 00000000                   DATA FOR SOURCE-LINE 739
 3340 000004F8 00000000                   DATA FOR SOURCE-LINE 740
 3341 000004FC 00000000                   DATA FOR SOURCE-LINE 742
 3342                                     ***** END-POOL *****
 3343 00000500                    752             .ALIGN  4
 3344 00000500                    753     _CLR_CHG:                                       ; 00010110B     16
 3345                             754             SUB_START
 3346 00000500 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3347                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3348                             755     
 3349 00000502 D005               756             MOV.L   #(_CLR_CODE_END - _CLR_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3350 00000504 D305               757             MOV.L   #_CLR_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    20
PROGRAM NAME =

 3351 00000506 D206               758             MOV.L   #(CLR_ADR - _CLR_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3352 00000508 D506               759             MOV.L   #(CLR_OFS - CLR_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3353                             760     
 3354 0000050A D107               761             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3355 0000050C 410B               762             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3356 0000050E 0009               763             NOP
 3357                             764     
 3358                             765             SUB_END
 3359                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3360 00000510 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3361                             766             M_RTS
 3362 00000512 000B                   M           RTS                             ;RTSの後ろの
 3363 00000514 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3364                             767     
 3365                             768     ;       ***********************************
 3366                             769     ;       *****   LDW CODE CHANGE ROUTINE ***
 3367                             770     ;       ***********************************
 3368                                     ***** BEGIN-POOL *****
 3369 00000516 0000                       ALIGNMENT CODE
 3370 00000518 00000000                   DATA FOR SOURCE-LINE 756
 3371 0000051C 00000000                   DATA FOR SOURCE-LINE 757
 3372 00000520 00000000                   DATA FOR SOURCE-LINE 758
 3373 00000524 00000000                   DATA FOR SOURCE-LINE 759
 3374 00000528 00000000                   DATA FOR SOURCE-LINE 761
 3375                                     ***** END-POOL *****
 3376 0000052C                    771             .ALIGN  4
 3377 0000052C                    772     _LDW_CHG:                                       ; 00110100B     34
 3378                             773             SUB_START
 3379 0000052C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3380                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3381                             774     
 3382 0000052E D005               775             MOV.L   #(_LDW_CODE_END - _LDW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3383 00000530 D305               776             MOV.L   #_LDW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3384 00000532 D206               777             MOV.L   #(LDW_ADR - _LDW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3385 00000534 D506               778             MOV.L   #(LDW_OFS - LDW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3386                             779     
 3387 00000536 D107               780             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3388 00000538 410B               781             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3389 0000053A 0009               782             NOP
 3390                             783     
 3391                             784             SUB_END
 3392                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3393 0000053C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3394                             785             M_RTS
 3395 0000053E 000B                   M           RTS                             ;RTSの後ろの
 3396 00000540 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3397                             786     
 3398                             787     ;       ***********************************
 3399                             788     ;       *****   LDL CODE CHANGE ROUTINE ***
 3400                             789     ;       ***********************************
 3401                                     ***** BEGIN-POOL *****
 3402 00000542 0000                       ALIGNMENT CODE
 3403 00000544 00000000                   DATA FOR SOURCE-LINE 775
 3404 00000548 00000000                   DATA FOR SOURCE-LINE 776
 3405 0000054C 00000000                   DATA FOR SOURCE-LINE 777
 3406 00000550 00000000                   DATA FOR SOURCE-LINE 778
 3407 00000554 00000000                   DATA FOR SOURCE-LINE 780
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    21
PROGRAM NAME =

 3408                                     ***** END-POOL *****
 3409 00000558                    790             .ALIGN  4
 3410 00000558                    791     _LDL_CHG:                                       ; 00110101B     35
 3411                             792             SUB_START
 3412 00000558 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3413                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3414                             793     
 3415 0000055A D005               794             MOV.L   #(_LDL_CODE_END - _LDL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3416 0000055C D305               795             MOV.L   #_LDL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3417 0000055E D206               796             MOV.L   #(LDL_ADR - _LDL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3418 00000560 D506               797             MOV.L   #(LDL_OFS - LDL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3419                             798     
 3420 00000562 D107               799             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3421 00000564 410B               800             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3422 00000566 0009               801             NOP
 3423                             802     
 3424                             803             SUB_END
 3425                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3426 00000568 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3427                             804             M_RTS
 3428 0000056A 000B                   M           RTS                             ;RTSの後ろの
 3429 0000056C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3430                             805     
 3431                             806     ;       ***********************************
 3432                             807     ;       *****   STW CODE CHANGE ROUTINE ***
 3433                             808     ;       ***********************************
 3434                                     ***** BEGIN-POOL *****
 3435 0000056E 0000                       ALIGNMENT CODE
 3436 00000570 00000000                   DATA FOR SOURCE-LINE 794
 3437 00000574 00000000                   DATA FOR SOURCE-LINE 795
 3438 00000578 00000000                   DATA FOR SOURCE-LINE 796
 3439 0000057C 00000000                   DATA FOR SOURCE-LINE 797
 3440 00000580 00000000                   DATA FOR SOURCE-LINE 799
 3441                                     ***** END-POOL *****
 3442 00000584                    809             .ALIGN  4
 3443 00000584                    810     _STW_CHG:                                       ; 00111100B     3C
 3444                             811             SUB_START
 3445 00000584 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3446                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3447                             812     
 3448 00000586 D005               813             MOV.L   #(_STW_CODE_END - _STW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3449 00000588 D305               814             MOV.L   #_STW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3450 0000058A D206               815             MOV.L   #(STW_ADR - _STW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3451 0000058C D506               816             MOV.L   #(STW_OFS - STW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3452                             817     
 3453 0000058E D107               818             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3454 00000590 410B               819             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3455 00000592 0009               820             NOP
 3456                             821     
 3457                             822             SUB_END
 3458                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3459 00000594 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3460                             823             M_RTS
 3461 00000596 000B                   M           RTS                             ;RTSの後ろの
 3462 00000598 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3463                             824     
 3464                             825     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    22
PROGRAM NAME =

 3465                             826     ;       *****   STL CODE CHANGE ROUTINE ***
 3466                             827     ;       ***********************************
 3467                                     ***** BEGIN-POOL *****
 3468 0000059A 0000                       ALIGNMENT CODE
 3469 0000059C 00000000                   DATA FOR SOURCE-LINE 813
 3470 000005A0 00000000                   DATA FOR SOURCE-LINE 814
 3471 000005A4 00000000                   DATA FOR SOURCE-LINE 815
 3472 000005A8 00000000                   DATA FOR SOURCE-LINE 816
 3473 000005AC 00000000                   DATA FOR SOURCE-LINE 818
 3474                                     ***** END-POOL *****
 3475 000005B0                    828             .ALIGN  4
 3476 000005B0                    829     _STL_CHG:                                       ; 00111101B     3D
 3477                             830             SUB_START
 3478 000005B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3479                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3480                             831     
 3481 000005B2 D005               832             MOV.L   #(_STL_CODE_END - _STL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3482 000005B4 D305               833             MOV.L   #_STL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3483 000005B6 D206               834             MOV.L   #(STL_ADR - _STL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3484 000005B8 D506               835             MOV.L   #(STL_OFS - STL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3485                             836     
 3486 000005BA D107               837             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3487 000005BC 410B               838             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3488 000005BE 0009               839             NOP
 3489                             840     
 3490                             841             SUB_END
 3491                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3492 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3493                             842             M_RTS
 3494 000005C2 000B                   M           RTS                             ;RTSの後ろの
 3495 000005C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3496                             843     
 3497                             844     ;       ***********************************
 3498                             845     ;       *****   EQW CODE CHANGE ROUTINE ***
 3499                             846     ;       ***********************************
 3500                                     ***** BEGIN-POOL *****
 3501 000005C6 0000                       ALIGNMENT CODE
 3502 000005C8 00000000                   DATA FOR SOURCE-LINE 832
 3503 000005CC 00000000                   DATA FOR SOURCE-LINE 833
 3504 000005D0 00000000                   DATA FOR SOURCE-LINE 834
 3505 000005D4 00000000                   DATA FOR SOURCE-LINE 835
 3506 000005D8 00000000                   DATA FOR SOURCE-LINE 837
 3507                                     ***** END-POOL *****
 3508 000005DC                    847             .ALIGN  4
 3509 000005DC                    848     _EQW_CHG:                                       ; 01000000B     40
 3510                             849             SUB_START
 3511 000005DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3512                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3513                             850     
 3514 000005DE D005               851             MOV.L   #(_EQW_CODE_END - _EQW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3515 000005E0 D305               852             MOV.L   #_EQW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3516 000005E2 D206               853             MOV.L   #(EQW_ADR - _EQW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3517 000005E4 D506               854             MOV.L   #(EQW_OFS - EQW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3518                             855     
 3519 000005E6 D107               856             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3520 000005E8 410B               857             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3521 000005EA 0009               858             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    23
PROGRAM NAME =

 3522                             859     
 3523                             860             SUB_END
 3524                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3525 000005EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3526                             861             M_RTS
 3527 000005EE 000B                   M           RTS                             ;RTSの後ろの
 3528 000005F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3529                             862     
 3530                             863     ;       *******************************************
 3531                             864     ;       *****   EQL CODE CHANGE ROUTINE         ***
 3532                             865     ;       *******************************************
 3533                                     ***** BEGIN-POOL *****
 3534 000005F2 0000                       ALIGNMENT CODE
 3535 000005F4 00000000                   DATA FOR SOURCE-LINE 851
 3536 000005F8 00000000                   DATA FOR SOURCE-LINE 852
 3537 000005FC 00000000                   DATA FOR SOURCE-LINE 853
 3538 00000600 00000000                   DATA FOR SOURCE-LINE 854
 3539 00000604 00000000                   DATA FOR SOURCE-LINE 856
 3540                                     ***** END-POOL *****
 3541 00000608                    866             .ALIGN  4
 3542 00000608                    867     _EQL_CHG:                                       ; 01000001B     41
 3543                             868             SUB_START
 3544 00000608 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3545                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3546                             869     
 3547 0000060A D005               870             MOV.L   #(_EQL_CODE_END - _EQL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3548 0000060C D305               871             MOV.L   #_EQL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3549 0000060E D206               872             MOV.L   #(EQL_ADR - _EQL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3550 00000610 D506               873             MOV.L   #(EQL_OFS - EQL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3551                             874     
 3552 00000612 D107               875             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3553 00000614 410B               876             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3554 00000616 0009               877             NOP
 3555                             878     
 3556                             879             SUB_END
 3557                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3558 00000618 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3559                             880             M_RTS
 3560 0000061A 000B                   M           RTS                             ;RTSの後ろの
 3561 0000061C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3562                             881     
 3563                             882     ;       ***********************************
 3564                             883     ;       *****   NEW CODE CHANGE ROUTINE ***
 3565                             884     ;       ***********************************
 3566                                     ***** BEGIN-POOL *****
 3567 0000061E 0000                       ALIGNMENT CODE
 3568 00000620 00000000                   DATA FOR SOURCE-LINE 870
 3569 00000624 00000000                   DATA FOR SOURCE-LINE 871
 3570 00000628 00000000                   DATA FOR SOURCE-LINE 872
 3571 0000062C 00000000                   DATA FOR SOURCE-LINE 873
 3572 00000630 00000000                   DATA FOR SOURCE-LINE 875
 3573                                     ***** END-POOL *****
 3574 00000634                    885             .ALIGN  4
 3575 00000634                    886     _NEW_CHG:                                       ; 01000100B     44
 3576                             887             SUB_START
 3577 00000634 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3578                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    24
PROGRAM NAME =

 3579                             888     
 3580 00000636 D005               889             MOV.L   #(_NEW_CODE_END - _NEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3581 00000638 D305               890             MOV.L   #_NEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3582 0000063A D206               891             MOV.L   #(NEW_ADR - _NEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3583 0000063C D506               892             MOV.L   #(NEW_OFS - NEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3584                             893     
 3585 0000063E D107               894             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3586 00000640 410B               895             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3587 00000642 0009               896             NOP
 3588                             897     
 3589                             898             SUB_END
 3590                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3591 00000644 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3592                             899             M_RTS
 3593 00000646 000B                   M           RTS                             ;RTSの後ろの
 3594 00000648 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3595                             900     
 3596                             901     ;       ***********************************
 3597                             902     ;       *****   NEL CODE CHANGE ROUTINE ***
 3598                             903     ;       ***********************************
 3599                                     ***** BEGIN-POOL *****
 3600 0000064A 0000                       ALIGNMENT CODE
 3601 0000064C 00000000                   DATA FOR SOURCE-LINE 889
 3602 00000650 00000000                   DATA FOR SOURCE-LINE 890
 3603 00000654 00000000                   DATA FOR SOURCE-LINE 891
 3604 00000658 00000000                   DATA FOR SOURCE-LINE 892
 3605 0000065C 00000000                   DATA FOR SOURCE-LINE 894
 3606                                     ***** END-POOL *****
 3607 00000660                    904             .ALIGN  4
 3608 00000660                    905     _NEL_CHG:                                       ; 01000101B     45
 3609                             906             SUB_START
 3610 00000660 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3611                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3612                             907     
 3613 00000662 D005               908             MOV.L   #(_NEL_CODE_END - _NEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3614 00000664 D305               909             MOV.L   #_NEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3615 00000666 D206               910             MOV.L   #(NEL_ADR - _NEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3616 00000668 D506               911             MOV.L   #(NEL_OFS - NEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3617                             912     
 3618 0000066A D107               913             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3619 0000066C 410B               914             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3620 0000066E 0009               915             NOP
 3621                             916     
 3622                             917             SUB_END
 3623                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3624 00000670 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3625                             918             M_RTS
 3626 00000672 000B                   M           RTS                             ;RTSの後ろの
 3627 00000674 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3628                             919     
 3629                             920     ;       ***********************************
 3630                             921     ;       *****   GTW CODE CHANGE ROUTINE ***
 3631                             922     ;       ***********************************
 3632                                     ***** BEGIN-POOL *****
 3633 00000676 0000                       ALIGNMENT CODE
 3634 00000678 00000000                   DATA FOR SOURCE-LINE 908
 3635 0000067C 00000000                   DATA FOR SOURCE-LINE 909
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    25
PROGRAM NAME =

 3636 00000680 00000000                   DATA FOR SOURCE-LINE 910
 3637 00000684 00000000                   DATA FOR SOURCE-LINE 911
 3638 00000688 00000000                   DATA FOR SOURCE-LINE 913
 3639                                     ***** END-POOL *****
 3640 0000068C                    923             .ALIGN  4
 3641 0000068C                    924     _GTW_CHG:                                       ; 01001000B     48
 3642                             925             SUB_START
 3643 0000068C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3644                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3645                             926     
 3646 0000068E D005               927             MOV.L   #(_GTW_CODE_END - _GTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3647 00000690 D305               928             MOV.L   #_GTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3648 00000692 D206               929             MOV.L   #(GTW_ADR - _GTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3649 00000694 D506               930             MOV.L   #(GTW_OFS - GTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3650                             931     
 3651 00000696 D107               932             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3652 00000698 410B               933             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3653 0000069A 0009               934             NOP
 3654                             935     
 3655                             936             SUB_END
 3656                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3657 0000069C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3658                             937             M_RTS
 3659 0000069E 000B                   M           RTS                             ;RTSの後ろの
 3660 000006A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3661                             938     
 3662                             939     ;       ***********************************
 3663                             940     ;       *****   GTL CODE CHANGE ROUTINE ***
 3664                             941     ;       ***********************************
 3665                                     ***** BEGIN-POOL *****
 3666 000006A2 0000                       ALIGNMENT CODE
 3667 000006A4 00000000                   DATA FOR SOURCE-LINE 927
 3668 000006A8 00000000                   DATA FOR SOURCE-LINE 928
 3669 000006AC 00000000                   DATA FOR SOURCE-LINE 929
 3670 000006B0 00000000                   DATA FOR SOURCE-LINE 930
 3671 000006B4 00000000                   DATA FOR SOURCE-LINE 932
 3672                                     ***** END-POOL *****
 3673 000006B8                    942             .ALIGN  4
 3674 000006B8                    943     _GTL_CHG:                                       ; 01001001B     49
 3675                             944             SUB_START
 3676 000006B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3677                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3678                             945     
 3679 000006BA D005               946             MOV.L   #(_GTL_CODE_END - _GTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3680 000006BC D305               947             MOV.L   #_GTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3681 000006BE D206               948             MOV.L   #(GTL_ADR - _GTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3682 000006C0 D506               949             MOV.L   #(GTL_OFS - GTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3683                             950     
 3684 000006C2 D107               951             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3685 000006C4 410B               952             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3686 000006C6 0009               953             NOP
 3687                             954     
 3688                             955             SUB_END
 3689                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3690 000006C8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3691                             956             M_RTS
 3692 000006CA 000B                   M           RTS                             ;RTSの後ろの
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    26
PROGRAM NAME =

 3693 000006CC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3694                             957     
 3695                             958     ;       ***********************************
 3696                             959     ;       *****   GEW CODE CHANGE ROUTINE ***
 3697                             960     ;       ***********************************
 3698                                     ***** BEGIN-POOL *****
 3699 000006CE 0000                       ALIGNMENT CODE
 3700 000006D0 00000000                   DATA FOR SOURCE-LINE 946
 3701 000006D4 00000000                   DATA FOR SOURCE-LINE 947
 3702 000006D8 00000000                   DATA FOR SOURCE-LINE 948
 3703 000006DC 00000000                   DATA FOR SOURCE-LINE 949
 3704 000006E0 00000000                   DATA FOR SOURCE-LINE 951
 3705                                     ***** END-POOL *****
 3706 000006E4                    961             .ALIGN  4
 3707 000006E4                    962     _GEW_CHG:                                       ; 01001100B     4C
 3708                             963             SUB_START
 3709 000006E4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3710                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3711                             964     
 3712 000006E6 D005               965             MOV.L   #(_GEW_CODE_END - _GEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3713 000006E8 D305               966             MOV.L   #_GEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3714 000006EA D206               967             MOV.L   #(GEW_ADR - _GEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3715 000006EC D506               968             MOV.L   #(GEW_OFS - GEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3716                             969     
 3717 000006EE D107               970             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3718 000006F0 410B               971             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3719 000006F2 0009               972             NOP
 3720                             973     
 3721                             974             SUB_END
 3722                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3723 000006F4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3724                             975             M_RTS
 3725 000006F6 000B                   M           RTS                             ;RTSの後ろの
 3726 000006F8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3727                             976     
 3728                             977     ;       ***********************************
 3729                             978     ;       *****   GEL CODE CHANGE ROUTINE ***
 3730                             979     ;       ***********************************
 3731                                     ***** BEGIN-POOL *****
 3732 000006FA 0000                       ALIGNMENT CODE
 3733 000006FC 00000000                   DATA FOR SOURCE-LINE 965
 3734 00000700 00000000                   DATA FOR SOURCE-LINE 966
 3735 00000704 00000000                   DATA FOR SOURCE-LINE 967
 3736 00000708 00000000                   DATA FOR SOURCE-LINE 968
 3737 0000070C 00000000                   DATA FOR SOURCE-LINE 970
 3738                                     ***** END-POOL *****
 3739 00000710                    980             .ALIGN  4
 3740 00000710                    981     _GEL_CHG:                                       ; 01001101B     4D
 3741                             982             SUB_START
 3742 00000710 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3743                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3744                             983     
 3745 00000712 D005               984             MOV.L   #(_GEL_CODE_END - _GEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3746 00000714 D305               985             MOV.L   #_GEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3747 00000716 D206               986             MOV.L   #(GEL_ADR - _GEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3748 00000718 D506               987             MOV.L   #(GEL_OFS - GEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3749                             988     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    27
PROGRAM NAME =

 3750 0000071A D107               989             MOV.L   #_SEQ_DATA_CHG1_1,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3751 0000071C 410B               990             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3752 0000071E 0009               991             NOP
 3753                             992     
 3754                             993             SUB_END
 3755                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3756 00000720 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3757                             994             M_RTS
 3758 00000722 000B                   M           RTS                             ;RTSの後ろの
 3759 00000724 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3760                             995     
 3761                             996     ;       ***********************************
 3762                             997     ;       *****   CALL RELEY ROUTINE ***
 3763                             998     ;       ***********************************
 3764                                     ***** BEGIN-POOL *****
 3765 00000726 0000                       ALIGNMENT CODE
 3766 00000728 00000000                   DATA FOR SOURCE-LINE 984
 3767 0000072C 00000000                   DATA FOR SOURCE-LINE 985
 3768 00000730 00000000                   DATA FOR SOURCE-LINE 986
 3769 00000734 00000000                   DATA FOR SOURCE-LINE 987
 3770 00000738 00000000                   DATA FOR SOURCE-LINE 989
 3771                                     ***** END-POOL *****
 3772 0000073C                    999             .ALIGN  4
 3773 0000073C                   1000     _SEQ_DATA_CHG1_1:
 3774                            1001             SUB_START
 3775 0000073C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3776                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3777                            1002     
 3778 0000073E D103              1003             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3779 00000740 410B              1004             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3780 00000742 0009              1005             NOP
 3781                            1006     
 3782                            1007             SUB_END
 3783                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3784 00000744 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3785                            1008             M_RTS                                   ; NORMAL END
 3786 00000746 000B                   M           RTS                             ;RTSの後ろの
 3787 00000748 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3788                            1009     
 3789                            1010     ;       ***********************************
 3790                            1011     ;       *****   LTW CODE CHANGE ROUTINE ***
 3791                            1012     ;       ***********************************
 3792                                     ***** BEGIN-POOL *****
 3793 0000074A 0000                       ALIGNMENT CODE
 3794 0000074C 00000000                   DATA FOR SOURCE-LINE 1003
 3795                                     ***** END-POOL *****
 3796 00000750                   1013             .ALIGN  4
 3797 00000750                   1014     _LTW_CHG:                                       ; 01010000B     50
 3798                            1015             SUB_START
 3799 00000750 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3800                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3801                            1016     
 3802 00000752 D005              1017             MOV.L   #(_LTW_CODE_END - _LTW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3803 00000754 D305              1018             MOV.L   #_LTW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3804 00000756 D206              1019             MOV.L   #(LTW_ADR - _LTW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3805 00000758 D506              1020             MOV.L   #(LTW_OFS - LTW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3806                            1021     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    28
PROGRAM NAME =

 3807 0000075A D107              1022             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3808 0000075C 410B              1023             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3809 0000075E 0009              1024             NOP
 3810                            1025     
 3811                            1026             SUB_END
 3812                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3813 00000760 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3814                            1027             M_RTS
 3815 00000762 000B                   M           RTS                             ;RTSの後ろの
 3816 00000764 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3817                            1028     
 3818                            1029     ;       ***********************************
 3819                            1030     ;       *****   LTL CODE CHANGE ROUTINE ***
 3820                            1031     ;       ***********************************
 3821                                     ***** BEGIN-POOL *****
 3822 00000766 0000                       ALIGNMENT CODE
 3823 00000768 00000000                   DATA FOR SOURCE-LINE 1017
 3824 0000076C 00000000                   DATA FOR SOURCE-LINE 1018
 3825 00000770 00000000                   DATA FOR SOURCE-LINE 1019
 3826 00000774 00000000                   DATA FOR SOURCE-LINE 1020
 3827 00000778 00000000                   DATA FOR SOURCE-LINE 1022
 3828                                     ***** END-POOL *****
 3829 0000077C                   1032             .ALIGN  4
 3830 0000077C                   1033     _LTL_CHG:                                       ; 01010001B     51
 3831                            1034             SUB_START
 3832 0000077C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3833                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3834                            1035     
 3835 0000077E D005              1036             MOV.L   #(_LTL_CODE_END - _LTL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3836 00000780 D305              1037             MOV.L   #_LTL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3837 00000782 D206              1038             MOV.L   #(LTL_ADR - _LTL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3838 00000784 D506              1039             MOV.L   #(LTL_OFS - LTL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3839                            1040     
 3840 00000786 D107              1041             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3841 00000788 410B              1042             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3842 0000078A 0009              1043             NOP
 3843                            1044     
 3844                            1045             SUB_END
 3845                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3846 0000078C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3847                            1046             M_RTS
 3848 0000078E 000B                   M           RTS                             ;RTSの後ろの
 3849 00000790 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3850                            1047     
 3851                            1048     ;       ***********************************
 3852                            1049     ;       *****   LEW CODE CHANGE ROUTINE ***
 3853                            1050     ;       ***********************************
 3854                                     ***** BEGIN-POOL *****
 3855 00000792 0000                       ALIGNMENT CODE
 3856 00000794 00000000                   DATA FOR SOURCE-LINE 1036
 3857 00000798 00000000                   DATA FOR SOURCE-LINE 1037
 3858 0000079C 00000000                   DATA FOR SOURCE-LINE 1038
 3859 000007A0 00000000                   DATA FOR SOURCE-LINE 1039
 3860 000007A4 00000000                   DATA FOR SOURCE-LINE 1041
 3861                                     ***** END-POOL *****
 3862 000007A8                   1051             .ALIGN  4
 3863 000007A8                   1052     _LEW_CHG:                                       ; 01010100B     54
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    29
PROGRAM NAME =

 3864                            1053             SUB_START
 3865 000007A8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3866                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3867                            1054     
 3868 000007AA D005              1055             MOV.L   #(_LEW_CODE_END - _LEW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3869 000007AC D305              1056             MOV.L   #_LEW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3870 000007AE D206              1057             MOV.L   #(LEW_ADR - _LEW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3871 000007B0 D506              1058             MOV.L   #(LEW_OFS - LEW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3872                            1059     
 3873 000007B2 D107              1060             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3874 000007B4 410B              1061             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3875 000007B6 0009              1062             NOP
 3876                            1063     
 3877                            1064             SUB_END
 3878                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3879 000007B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3880                            1065             M_RTS
 3881 000007BA 000B                   M           RTS                             ;RTSの後ろの
 3882 000007BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3883                            1066     
 3884                            1067     ;       ***********************************
 3885                            1068     ;       *****   LTL CODE CHANGE ROUTINE ***
 3886                            1069     ;       ***********************************
 3887                                     ***** BEGIN-POOL *****
 3888 000007BE 0000                       ALIGNMENT CODE
 3889 000007C0 00000000                   DATA FOR SOURCE-LINE 1055
 3890 000007C4 00000000                   DATA FOR SOURCE-LINE 1056
 3891 000007C8 00000000                   DATA FOR SOURCE-LINE 1057
 3892 000007CC 00000000                   DATA FOR SOURCE-LINE 1058
 3893 000007D0 00000000                   DATA FOR SOURCE-LINE 1060
 3894                                     ***** END-POOL *****
 3895 000007D4                   1070             .ALIGN  4
 3896 000007D4                   1071     _LEL_CHG:                                       ; 01010101B     55
 3897                            1072             SUB_START
 3898 000007D4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3899                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3900                            1073     
 3901 000007D6 D005              1074             MOV.L   #(_LEL_CODE_END - _LEL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 3902 000007D8 D305              1075             MOV.L   #_LEL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3903 000007DA D206              1076             MOV.L   #(LEL_ADR - _LEL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3904 000007DC D506              1077             MOV.L   #(LEL_OFS - LEL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3905                            1078     
 3906 000007DE D107              1079             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 3907 000007E0 410B              1080             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 3908 000007E2 0009              1081             NOP
 3909                            1082     
 3910                            1083             SUB_END
 3911                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3912 000007E4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3913                            1084             M_RTS
 3914 000007E6 000B                   M           RTS                             ;RTSの後ろの
 3915 000007E8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3916                            1085     
 3917                            1086     ;       ************************************
 3918                            1087     ;       *****   ADDW CODE CHANGE ROUTINE ***
 3919                            1088     ;       ************************************
 3920                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    30
PROGRAM NAME =

 3921 000007EA 0000                       ALIGNMENT CODE
 3922 000007EC 00000000                   DATA FOR SOURCE-LINE 1074
 3923 000007F0 00000000                   DATA FOR SOURCE-LINE 1075
 3924 000007F4 00000000                   DATA FOR SOURCE-LINE 1076
 3925 000007F8 00000000                   DATA FOR SOURCE-LINE 1077
 3926 000007FC 00000000                   DATA FOR SOURCE-LINE 1079
 3927                                     ***** END-POOL *****
 3928 00000800                   1089             .ALIGN  4
 3929 00000800                   1090     _ADDW_CHG:                                              ; 01011000B     58
 3930                            1091             SUB_START
 3931 00000800 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3932                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3933                            1092     
 3934 00000802 D005              1093             MOV.L   #(_ADDW_CODE_END - _ADDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3935 00000804 D305              1094             MOV.L   #_ADDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3936 00000806 D206              1095             MOV.L   #(ADDW_ADR - _ADDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3937 00000808 D506              1096             MOV.L   #(ADDW_OFS - ADDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3938                            1097     
 3939 0000080A D107              1098             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3940 0000080C 410B              1099             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3941 0000080E 0009              1100             NOP
 3942                            1101     
 3943                            1102             SUB_END
 3944                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 3945 00000810 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3946                            1103             M_RTS
 3947 00000812 000B                   M           RTS                             ;RTSの後ろの
 3948 00000814 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3949                            1104     
 3950                            1105     ;       ************************************
 3951                            1106     ;       *****   ADDL CODE CHANGE ROUTINE ***
 3952                            1107     ;       ************************************
 3953                                     ***** BEGIN-POOL *****
 3954 00000816 0000                       ALIGNMENT CODE
 3955 00000818 00000000                   DATA FOR SOURCE-LINE 1093
 3956 0000081C 00000000                   DATA FOR SOURCE-LINE 1094
 3957 00000820 00000000                   DATA FOR SOURCE-LINE 1095
 3958 00000824 00000000                   DATA FOR SOURCE-LINE 1096
 3959 00000828 00000000                   DATA FOR SOURCE-LINE 1098
 3960                                     ***** END-POOL *****
 3961 0000082C                   1108             .ALIGN  4
 3962 0000082C                   1109     _ADDL_CHG:                                              ; 01011001B     59
 3963                            1110             SUB_START
 3964 0000082C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3965                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3966                            1111     
 3967 0000082E D005              1112             MOV.L   #(_ADDL_CODE_END - _ADDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 3968 00000830 D305              1113             MOV.L   #_ADDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 3969 00000832 D206              1114             MOV.L   #(ADDL_ADR - _ADDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 3970 00000834 D506              1115             MOV.L   #(ADDL_OFS - ADDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 3971                            1116     
 3972 00000836 D107              1117             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 3973 00000838 410B              1118             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 3974 0000083A 0009              1119             NOP
 3975                            1120     
 3976                            1121             SUB_END
 3977                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    31
PROGRAM NAME =

 3978 0000083C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 3979                            1122             M_RTS
 3980 0000083E 000B                   M           RTS                             ;RTSの後ろの
 3981 00000840 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 3982                            1123     
 3983                            1124     ;       ************************************
 3984                            1125     ;       *****   SUBW CODE CHANGE ROUTINE ***
 3985                            1126     ;       ************************************
 3986                                     ***** BEGIN-POOL *****
 3987 00000842 0000                       ALIGNMENT CODE
 3988 00000844 00000000                   DATA FOR SOURCE-LINE 1112
 3989 00000848 00000000                   DATA FOR SOURCE-LINE 1113
 3990 0000084C 00000000                   DATA FOR SOURCE-LINE 1114
 3991 00000850 00000000                   DATA FOR SOURCE-LINE 1115
 3992 00000854 00000000                   DATA FOR SOURCE-LINE 1117
 3993                                     ***** END-POOL *****
 3994 00000858                   1127             .ALIGN  4
 3995 00000858                   1128     _SUBW_CHG:                                              ; 01011100B     5C
 3996                            1129             SUB_START
 3997 00000858 4F22                   M           STS.L   PR,@-R15                ;[必要]
 3998                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 3999                            1130     
 4000 0000085A D005              1131             MOV.L   #(_SUBW_CODE_END - _SUBW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4001 0000085C D305              1132             MOV.L   #_SUBW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4002 0000085E D206              1133             MOV.L   #(SUBW_ADR - _SUBW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4003 00000860 D506              1134             MOV.L   #(SUBW_OFS - SUBW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4004                            1135     
 4005 00000862 D107              1136             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4006 00000864 410B              1137             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4007 00000866 0009              1138             NOP
 4008                            1139     
 4009                            1140             SUB_END
 4010                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4011 00000868 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4012                            1141             M_RTS
 4013 0000086A 000B                   M           RTS                             ;RTSの後ろの
 4014 0000086C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4015                            1142     
 4016                            1143     ;       ************************************
 4017                            1144     ;       *****   SUBL CODE CHANGE ROUTINE ***
 4018                            1145     ;       ************************************
 4019                                     ***** BEGIN-POOL *****
 4020 0000086E 0000                       ALIGNMENT CODE
 4021 00000870 00000000                   DATA FOR SOURCE-LINE 1131
 4022 00000874 00000000                   DATA FOR SOURCE-LINE 1132
 4023 00000878 00000000                   DATA FOR SOURCE-LINE 1133
 4024 0000087C 00000000                   DATA FOR SOURCE-LINE 1134
 4025 00000880 00000000                   DATA FOR SOURCE-LINE 1136
 4026                                     ***** END-POOL *****
 4027 00000884                   1146             .ALIGN  4
 4028 00000884                   1147     _SUBL_CHG:                                              ; 01011101B     5D
 4029                            1148             SUB_START
 4030 00000884 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4031                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4032                            1149     
 4033 00000886 D005              1150             MOV.L   #(_SUBL_CODE_END - _SUBL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4034 00000888 D305              1151             MOV.L   #_SUBL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    32
PROGRAM NAME =

 4035 0000088A D206              1152             MOV.L   #(SUBL_ADR - _SUBL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4036 0000088C D506              1153             MOV.L   #(SUBL_OFS - SUBL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4037                            1154     
 4038 0000088E D107              1155             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4039 00000890 410B              1156             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4040 00000892 0009              1157             NOP
 4041                            1158     
 4042                            1159             SUB_END
 4043                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4044 00000894 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4045                            1160             M_RTS
 4046 00000896 000B                   M           RTS                             ;RTSの後ろの
 4047 00000898 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4048                            1161     
 4049                            1162     ;       ************************************
 4050                            1163     ;       *****   ANDW CODE CHANGE ROUTINE ***
 4051                            1164     ;       ************************************
 4052                                     ***** BEGIN-POOL *****
 4053 0000089A 0000                       ALIGNMENT CODE
 4054 0000089C 00000000                   DATA FOR SOURCE-LINE 1150
 4055 000008A0 00000000                   DATA FOR SOURCE-LINE 1151
 4056 000008A4 00000000                   DATA FOR SOURCE-LINE 1152
 4057 000008A8 00000000                   DATA FOR SOURCE-LINE 1153
 4058 000008AC 00000000                   DATA FOR SOURCE-LINE 1155
 4059                                     ***** END-POOL *****
 4060 000008B0                   1165             .ALIGN  4
 4061 000008B0                   1166     _ANDW_CHG:                                              ; 01100000B     60
 4062                            1167             SUB_START
 4063 000008B0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4064                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4065                            1168     
 4066 000008B2 D005              1169             MOV.L   #(_ANDW_CODE_END - _ANDW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4067 000008B4 D305              1170             MOV.L   #_ANDW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4068 000008B6 D206              1171             MOV.L   #(ANDW_ADR - _ANDW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4069 000008B8 D506              1172             MOV.L   #(ANDW_OFS - ANDW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4070                            1173     
 4071 000008BA D107              1174             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4072 000008BC 410B              1175             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4073 000008BE 0009              1176             NOP
 4074                            1177     
 4075                            1178             SUB_END
 4076                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4077 000008C0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4078                            1179             M_RTS
 4079 000008C2 000B                   M           RTS                             ;RTSの後ろの
 4080 000008C4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4081                            1180     
 4082                            1181     ;       ************************************
 4083                            1182     ;       *****   ANDL CODE CHANGE ROUTINE ***
 4084                            1183     ;       ************************************
 4085                                     ***** BEGIN-POOL *****
 4086 000008C6 0000                       ALIGNMENT CODE
 4087 000008C8 00000000                   DATA FOR SOURCE-LINE 1169
 4088 000008CC 00000000                   DATA FOR SOURCE-LINE 1170
 4089 000008D0 00000000                   DATA FOR SOURCE-LINE 1171
 4090 000008D4 00000000                   DATA FOR SOURCE-LINE 1172
 4091 000008D8 00000000                   DATA FOR SOURCE-LINE 1174
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    33
PROGRAM NAME =

 4092                                     ***** END-POOL *****
 4093 000008DC                   1184             .ALIGN  4
 4094 000008DC                   1185     _ANDL_CHG:                                              ; 01100000B     61
 4095                            1186             SUB_START
 4096 000008DC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4097                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4098                            1187     
 4099 000008DE D005              1188             MOV.L   #(_ANDL_CODE_END - _ANDL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4100 000008E0 D305              1189             MOV.L   #_ANDL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4101 000008E2 D206              1190             MOV.L   #(ANDL_ADR - _ANDL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4102 000008E4 D506              1191             MOV.L   #(ANDL_OFS - ANDL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4103                            1192     
 4104 000008E6 D107              1193             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4105 000008E8 410B              1194             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4106 000008EA 0009              1195             NOP
 4107                            1196     
 4108                            1197             SUB_END
 4109                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4110 000008EC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4111                            1198             M_RTS
 4112 000008EE 000B                   M           RTS                             ;RTSの後ろの
 4113 000008F0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4114                            1199     
 4115                            1200     ;       ***********************************
 4116                            1201     ;       *****   ORW CODE CHANGE ROUTINE ***
 4117                            1202     ;       ***********************************
 4118                                     ***** BEGIN-POOL *****
 4119 000008F2 0000                       ALIGNMENT CODE
 4120 000008F4 00000000                   DATA FOR SOURCE-LINE 1188
 4121 000008F8 00000000                   DATA FOR SOURCE-LINE 1189
 4122 000008FC 00000000                   DATA FOR SOURCE-LINE 1190
 4123 00000900 00000000                   DATA FOR SOURCE-LINE 1191
 4124 00000904 00000000                   DATA FOR SOURCE-LINE 1193
 4125                                     ***** END-POOL *****
 4126 00000908                   1203             .ALIGN  4
 4127 00000908                   1204     _ORW_CHG:                                       ; 01100100B     64
 4128                            1205             SUB_START
 4129 00000908 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4130                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4131                            1206     
 4132 0000090A D005              1207             MOV.L   #(_ORW_CODE_END - _ORW_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4133 0000090C D305              1208             MOV.L   #_ORW_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4134 0000090E D206              1209             MOV.L   #(ORW_ADR - _ORW_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4135 00000910 D506              1210             MOV.L   #(ORW_OFS - ORW_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4136                            1211     
 4137 00000912 D107              1212             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4138 00000914 410B              1213             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4139 00000916 0009              1214             NOP
 4140                            1215     
 4141                            1216             SUB_END
 4142                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4143 00000918 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4144                            1217             M_RTS
 4145 0000091A 000B                   M           RTS                             ;RTSの後ろの
 4146 0000091C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4147                            1218     
 4148                            1219     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    34
PROGRAM NAME =

 4149                            1220     ;       *****   ORL CODE CHANGE ROUTINE ***
 4150                            1221     ;       ***********************************
 4151                                     ***** BEGIN-POOL *****
 4152 0000091E 0000                       ALIGNMENT CODE
 4153 00000920 00000000                   DATA FOR SOURCE-LINE 1207
 4154 00000924 00000000                   DATA FOR SOURCE-LINE 1208
 4155 00000928 00000000                   DATA FOR SOURCE-LINE 1209
 4156 0000092C 00000000                   DATA FOR SOURCE-LINE 1210
 4157 00000930 00000000                   DATA FOR SOURCE-LINE 1212
 4158                                     ***** END-POOL *****
 4159 00000934                   1222             .ALIGN  4
 4160 00000934                   1223     _ORL_CHG:                                       ; 01100101B     65
 4161                            1224             SUB_START
 4162 00000934 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4163                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4164                            1225     
 4165 00000936 D005              1226             MOV.L   #(_ORL_CODE_END - _ORL_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4166 00000938 D305              1227             MOV.L   #_ORL_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4167 0000093A D206              1228             MOV.L   #(ORL_ADR - _ORL_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4168 0000093C D506              1229             MOV.L   #(ORL_OFS - ORL_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4169                            1230     
 4170 0000093E D107              1231             MOV.L   #_SEQ_DATA_CHG1_2,R1            ; SEQ DATA CHANGE1 ADDRESS LOAD
 4171 00000940 410B              1232             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4172 00000942 0009              1233             NOP
 4173                            1234     
 4174                            1235             SUB_END
 4175                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4176 00000944 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4177                            1236             M_RTS
 4178 00000946 000B                   M           RTS                             ;RTSの後ろの
 4179 00000948 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4180                            1237     
 4181                            1238     ;       ************************************
 4182                            1239     ;       *****   XORW CODE CHANGE ROUTINE ***
 4183                            1240     ;       ************************************
 4184                                     ***** BEGIN-POOL *****
 4185 0000094A 0000                       ALIGNMENT CODE
 4186 0000094C 00000000                   DATA FOR SOURCE-LINE 1226
 4187 00000950 00000000                   DATA FOR SOURCE-LINE 1227
 4188 00000954 00000000                   DATA FOR SOURCE-LINE 1228
 4189 00000958 00000000                   DATA FOR SOURCE-LINE 1229
 4190 0000095C 00000000                   DATA FOR SOURCE-LINE 1231
 4191                                     ***** END-POOL *****
 4192 00000960                   1241             .ALIGN  4
 4193 00000960                   1242     _XORW_CHG:                                              ; 01101000B     68
 4194                            1243             SUB_START
 4195 00000960 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4196                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4197                            1244     
 4198 00000962 D005              1245             MOV.L   #(_XORW_CODE_END - _XORW_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4199 00000964 D305              1246             MOV.L   #_XORW_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4200 00000966 D206              1247             MOV.L   #(XORW_ADR - _XORW_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4201 00000968 D506              1248             MOV.L   #(XORW_OFS - XORW_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4202                            1249     
 4203 0000096A D107              1250             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4204 0000096C 410B              1251             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4205 0000096E 0009              1252             NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    35
PROGRAM NAME =

 4206                            1253     
 4207                            1254             SUB_END
 4208                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4209 00000970 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4210                            1255             M_RTS
 4211 00000972 000B                   M           RTS                             ;RTSの後ろの
 4212 00000974 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4213                            1256     
 4214                            1257     ;       ************************************
 4215                            1258     ;       *****   XORL CODE CHANGE ROUTINE ***
 4216                            1259     ;       ************************************
 4217                                     ***** BEGIN-POOL *****
 4218 00000976 0000                       ALIGNMENT CODE
 4219 00000978 00000000                   DATA FOR SOURCE-LINE 1245
 4220 0000097C 00000000                   DATA FOR SOURCE-LINE 1246
 4221 00000980 00000000                   DATA FOR SOURCE-LINE 1247
 4222 00000984 00000000                   DATA FOR SOURCE-LINE 1248
 4223 00000988 00000000                   DATA FOR SOURCE-LINE 1250
 4224                                     ***** END-POOL *****
 4225 0000098C                   1260             .ALIGN  4
 4226 0000098C                   1261     _XORL_CHG:                                              ; 01101001B     69
 4227                            1262             SUB_START
 4228 0000098C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4229                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4230                            1263     
 4231 0000098E D005              1264             MOV.L   #(_XORL_CODE_END - _XORL_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4232 00000990 D305              1265             MOV.L   #_XORL_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4233 00000992 D206              1266             MOV.L   #(XORL_ADR - _XORL_CODE),R2             ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4234 00000994 D506              1267             MOV.L   #(XORL_OFS - XORL_ADR),R5               ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4235                            1268     
 4236 00000996 D107              1269             MOV.L   #_SEQ_DATA_CHG1_2,R1                    ; SEQ DATA CHANGE1 ADDRESS LOAD
 4237 00000998 410B              1270             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4238 0000099A 0009              1271             NOP
 4239                            1272     
 4240                            1273             SUB_END
 4241                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4242 0000099C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4243                            1274             M_RTS
 4244 0000099E 000B                   M           RTS                             ;RTSの後ろの
 4245 000009A0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4246                            1275     
 4247                            1276     ;       ***************************************************
 4248                            1277     ;       ***     SEQ DATA CHANGE1 ROUTINE                ***
 4249                            1278     ;       ***************************************************
 4250                                     ***** BEGIN-POOL *****
 4251 000009A2 0000                       ALIGNMENT CODE
 4252 000009A4 00000000                   DATA FOR SOURCE-LINE 1264
 4253 000009A8 00000000                   DATA FOR SOURCE-LINE 1265
 4254 000009AC 00000000                   DATA FOR SOURCE-LINE 1266
 4255 000009B0 00000000                   DATA FOR SOURCE-LINE 1267
 4256 000009B4 00000000                   DATA FOR SOURCE-LINE 1269
 4257                                     ***** END-POOL *****
 4258 000009B8                   1279             .ALIGN  4
 4259 000009B8                   1280     _SEQ_DATA_CHG1_2:
 4260                            1281             SUB_START
 4261 000009B8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4262                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    36
PROGRAM NAME =

 4263                            1282     
 4264                            1283     ;       ************************
 4265                            1284     ;       *** MEM CODE処理追加 ***
 4266                            1285     ;       ************************
 4267 000009BA D113              1286             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 4268 000009BC 4B08              1287             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 4269 000009BE 31BC              1288             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4270 000009C0 6912              1289             MOV.L   @R1,R9                          ;
 4271 000009C2 4800              1290             SHLL    R8                              ; MEM ADR * 2
 4272 000009C4 389C              1291             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 4273                            1292     
 4274                            1293     ;       ****************************
 4275                            1294     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 4276                            1295     ;       ****************************
 4277 000009C6 D111              1296             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 4278 000009C8 31BC              1297             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 4279 000009CA 6B12              1298             MOV.L   @R1,R11                         ;
 4280 000009CC 39BC              1299             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 4281 000009CE 3893              1300             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 4282 000009D0 8924              1301             BT      _CHG1_C80                       ; R8 >= R9 JUMP
 4283                            1302     
 4284 000009D2 6983              1303             MOV.L   R8,R9                           ;
 4285 000009D4 6888              1304             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4286 000009D6 688C              1305             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4287 000009D8 699C              1306             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4288                            1307     
 4289 000009DA D10D              1308             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4290 000009DC 3813              1309             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4291 000009DE 891D              1310             BT      _CHG1_C80                       ; IF ADR >= 127 THEN JUMP
 4292                            1311     
 4293 000009E0 64D3              1312             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4294                            1313     
 4295                            1314             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4296 000009E2 D10C                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4297 000009E4 410B                   M           JSR     @R1                     ;
 4298 000009E6 0009                   M           NOP                                     ;
 4299                            1315                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4300                            1316     ;       *** ADR SET ***
 4301 000009E8 342C              1317             ADD     R2,R4                           ;
 4302 000009EA 6141              1318             MOV.W   @R4,R1                          ;
 4303 000009EC D00A              1319             MOV.L   #H'FF00,R0                      ;
 4304 000009EE 2109              1320             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4305                            1321     ;       SHLL    R8                              ; ADR * 2
 4306 000009F0 218B              1322             OR      R8,R1                           ;
 4307 000009F2 2411              1323             MOV.W   R1,@R4                          ; RAM ADR SET
 4308                            1324     
 4309                            1325     ;       *** OFFSET SET ***
 4310 000009F4 345C              1326             ADD     R5,R4                           ;
 4311 000009F6 6141              1327             MOV.W   @R4,R1                          ;
 4312 000009F8 2109              1328             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4313                            1329     ;       SHLL    R9                              ; OFFSET * 2
 4314 000009FA 219B              1330             OR      R9,R1                           ;
 4315 000009FC 2411              1331             MOV.W   R1,@R4                          ; RAM ADR SET
 4316                            1332     
 4317 000009FE 9001              1333             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4318                            1334             M_BRA   _SEQ_DATA_CHG1_EX               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    37
PROGRAM NAME =

 4319 00000A00 A00D                   M           BRA     _SEQ_DATA_CHG1_EX
 4320 00000A02 0009                   M           NOP
 4321                            1335     ;
 4322                                     ***** BEGIN-POOL *****
 4323 00000A04 0000                       DATA FOR SOURCE-LINE 1333
 4324 00000A06 0000                       ALIGNMENT CODE
 4325 00000A08 00000000                   DATA FOR SOURCE-LINE 1286
 4326 00000A0C 00000000                   DATA FOR SOURCE-LINE 1296
 4327 00000A10 00000C00                   DATA FOR SOURCE-LINE 1308
 4328 00000A14 00000000                   DATA FOR SOURCE-LINE 1314
 4329 00000A18 0000FF00                   DATA FOR SOURCE-LINE 1319
 4330                                     ***** END-POOL *****
 4331 00000A1C                   1336     _CHG1_C80:
 4332 00000A1C 9002              1337             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4333                            1338     
 4334 00000A1E                   1339     _SEQ_DATA_CHG1_EX:
 4335                            1340             SUB_END
 4336                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4337 00000A1E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4338                            1341             M_RTS                           ; NORMAL END
 4339 00000A20 000B                   M           RTS                             ;RTSの後ろの
 4340 00000A22 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4341                            1342     
 4342                            1343     ;       ************************************
 4343                            1344     ;       *****   DSETWI CODE CHANGE ROUTINE ***
 4344                            1345     ;       ************************************
 4345                                     ***** BEGIN-POOL *****
 4346 00000A24 FF00                       DATA FOR SOURCE-LINE 1337
 4347                                     ***** END-POOL *****
 4348 00000A28                   1346             .ALIGN  4
 4349 00000A28                   1347     _DSETWI_CHG:                                            ; 00011010B     1A
 4350                            1348             SUB_START
 4351 00000A28 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4352                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4353                            1349     
 4354 00000A2A D005              1350             MOV.L   #(_DSETWI_CODE_END - _DSETWI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4355 00000A2C D305              1351             MOV.L   #_DSETWI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4356 00000A2E D206              1352             MOV.L   #(DSETWI_DT_LH - _DSETWI_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4357 00000A30 D506              1353             MOV.L   #(DSETWI_DT_LL - DSETWI_DT_LH),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4358                            1354     
 4359 00000A32 D107              1355             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4360 00000A34 410B              1356             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4361 00000A36 0009              1357             NOP
 4362                            1358     
 4363                            1359             SUB_END
 4364                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4365 00000A38 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4366                            1360             M_RTS
 4367 00000A3A 000B                   M           RTS                             ;RTSの後ろの
 4368 00000A3C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4369                            1361     
 4370                            1362     ;       ************************************
 4371                            1363     ;       *****   EQWI CODE CHANGE ROUTINE ***
 4372                            1364     ;       ************************************
 4373                                     ***** BEGIN-POOL *****
 4374 00000A3E 0000                       ALIGNMENT CODE
 4375 00000A40 00000000                   DATA FOR SOURCE-LINE 1350
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    38
PROGRAM NAME =

 4376 00000A44 00000000                   DATA FOR SOURCE-LINE 1351
 4377 00000A48 00000000                   DATA FOR SOURCE-LINE 1352
 4378 00000A4C 00000000                   DATA FOR SOURCE-LINE 1353
 4379 00000A50 00000000                   DATA FOR SOURCE-LINE 1355
 4380                                     ***** END-POOL *****
 4381 00000A54                   1365             .ALIGN  4
 4382 00000A54                   1366     _EQWI_CHG:                                              ; 01000010B     42
 4383                            1367             SUB_START
 4384 00000A54 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4385                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4386                            1368     
 4387 00000A56 D005              1369             MOV.L   #(_EQWI_CODE_END - _EQWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4388 00000A58 D305              1370             MOV.L   #_EQWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4389 00000A5A D206              1371             MOV.L   #(EQWI_DT_LH - _EQWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4390 00000A5C D506              1372             MOV.L   #(EQWI_DT_LL - EQWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4391                            1373     
 4392 00000A5E D107              1374             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4393 00000A60 410B              1375             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4394 00000A62 0009              1376             NOP
 4395                            1377     
 4396                            1378             SUB_END
 4397                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4398 00000A64 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4399                            1379             M_RTS
 4400 00000A66 000B                   M           RTS                             ;RTSの後ろの
 4401 00000A68 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4402                            1380     
 4403                            1381     ;       ************************************
 4404                            1382     ;       *****   NEWI CODE CHANGE ROUTINE ***
 4405                            1383     ;       ************************************
 4406                                     ***** BEGIN-POOL *****
 4407 00000A6A 0000                       ALIGNMENT CODE
 4408 00000A6C 00000000                   DATA FOR SOURCE-LINE 1369
 4409 00000A70 00000000                   DATA FOR SOURCE-LINE 1370
 4410 00000A74 00000000                   DATA FOR SOURCE-LINE 1371
 4411 00000A78 00000000                   DATA FOR SOURCE-LINE 1372
 4412 00000A7C 00000000                   DATA FOR SOURCE-LINE 1374
 4413                                     ***** END-POOL *****
 4414 00000A80                   1384             .ALIGN  4
 4415 00000A80                   1385     _NEWI_CHG:                                              ; 01000110B     46
 4416                            1386             SUB_START
 4417 00000A80 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4418                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4419                            1387     
 4420 00000A82 D005              1388             MOV.L   #(_NEWI_CODE_END - _NEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4421 00000A84 D305              1389             MOV.L   #_NEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4422 00000A86 D206              1390             MOV.L   #(NEWI_DT_LH - _NEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4423 00000A88 D506              1391             MOV.L   #(NEWI_DT_LL - NEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4424                            1392     
 4425 00000A8A D107              1393             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4426 00000A8C 410B              1394             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4427 00000A8E 0009              1395             NOP
 4428                            1396     
 4429                            1397             SUB_END
 4430                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4431 00000A90 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4432                            1398             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    39
PROGRAM NAME =

 4433 00000A92 000B                   M           RTS                             ;RTSの後ろの
 4434 00000A94 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4435                            1399     
 4436                            1400     ;       ************************************
 4437                            1401     ;       *****   GTWI CODE CHANGE ROUTINE ***
 4438                            1402     ;       ************************************
 4439                                     ***** BEGIN-POOL *****
 4440 00000A96 0000                       ALIGNMENT CODE
 4441 00000A98 00000000                   DATA FOR SOURCE-LINE 1388
 4442 00000A9C 00000000                   DATA FOR SOURCE-LINE 1389
 4443 00000AA0 00000000                   DATA FOR SOURCE-LINE 1390
 4444 00000AA4 00000000                   DATA FOR SOURCE-LINE 1391
 4445 00000AA8 00000000                   DATA FOR SOURCE-LINE 1393
 4446                                     ***** END-POOL *****
 4447 00000AAC                   1403             .ALIGN  4
 4448 00000AAC                   1404     _GTWI_CHG:                                              ; 01001010B     4A
 4449                            1405             SUB_START
 4450 00000AAC 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4451                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4452                            1406     
 4453 00000AAE D005              1407             MOV.L   #(_GTWI_CODE_END - _GTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4454 00000AB0 D305              1408             MOV.L   #_GTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4455 00000AB2 D206              1409             MOV.L   #(GTWI_DT_LH - _GTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4456 00000AB4 D506              1410             MOV.L   #(GTWI_DT_LL - GTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4457                            1411     
 4458 00000AB6 D107              1412             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4459 00000AB8 410B              1413             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4460 00000ABA 0009              1414             NOP
 4461                            1415     
 4462                            1416             SUB_END
 4463                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4464 00000ABC 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4465                            1417             M_RTS
 4466 00000ABE 000B                   M           RTS                             ;RTSの後ろの
 4467 00000AC0 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4468                            1418     
 4469                            1419     ;       ************************************
 4470                            1420     ;       *****   GEWI CODE CHANGE ROUTINE ***
 4471                            1421     ;       ************************************
 4472                                     ***** BEGIN-POOL *****
 4473 00000AC2 0000                       ALIGNMENT CODE
 4474 00000AC4 00000000                   DATA FOR SOURCE-LINE 1407
 4475 00000AC8 00000000                   DATA FOR SOURCE-LINE 1408
 4476 00000ACC 00000000                   DATA FOR SOURCE-LINE 1409
 4477 00000AD0 00000000                   DATA FOR SOURCE-LINE 1410
 4478 00000AD4 00000000                   DATA FOR SOURCE-LINE 1412
 4479                                     ***** END-POOL *****
 4480 00000AD8                   1422             .ALIGN  4
 4481 00000AD8                   1423     _GEWI_CHG:                                              ; 01001110B     4E
 4482                            1424             SUB_START
 4483 00000AD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4484                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4485                            1425     
 4486 00000ADA D005              1426             MOV.L   #(_GEWI_CODE_END - _GEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4487 00000ADC D305              1427             MOV.L   #_GEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4488 00000ADE D206              1428             MOV.L   #(GEWI_DT_LH - _GEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4489 00000AE0 D506              1429             MOV.L   #(GEWI_DT_LL - GEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    40
PROGRAM NAME =

 4490                            1430     
 4491 00000AE2 D107              1431             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4492 00000AE4 410B              1432             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4493 00000AE6 0009              1433             NOP
 4494                            1434     
 4495                            1435             SUB_END
 4496                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4497 00000AE8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4498                            1436             M_RTS
 4499 00000AEA 000B                   M           RTS                             ;RTSの後ろの
 4500 00000AEC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4501                            1437     
 4502                            1438     ;       ************************************
 4503                            1439     ;       *****   LTWI CODE CHANGE ROUTINE ***
 4504                            1440     ;       ************************************
 4505                                     ***** BEGIN-POOL *****
 4506 00000AEE 0000                       ALIGNMENT CODE
 4507 00000AF0 00000000                   DATA FOR SOURCE-LINE 1426
 4508 00000AF4 00000000                   DATA FOR SOURCE-LINE 1427
 4509 00000AF8 00000000                   DATA FOR SOURCE-LINE 1428
 4510 00000AFC 00000000                   DATA FOR SOURCE-LINE 1429
 4511 00000B00 00000000                   DATA FOR SOURCE-LINE 1431
 4512                                     ***** END-POOL *****
 4513 00000B04                   1441             .ALIGN  4
 4514 00000B04                   1442     _LTWI_CHG:                                              ; 01010010B     52
 4515                            1443             SUB_START
 4516 00000B04 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4517                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4518                            1444     
 4519 00000B06 D005              1445             MOV.L   #(_LTWI_CODE_END - _LTWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4520 00000B08 D305              1446             MOV.L   #_LTWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4521 00000B0A D206              1447             MOV.L   #(LTWI_DT_LH - _LTWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4522 00000B0C D506              1448             MOV.L   #(LTWI_DT_LL - LTWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4523                            1449     
 4524 00000B0E D107              1450             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4525 00000B10 410B              1451             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4526 00000B12 0009              1452             NOP
 4527                            1453     
 4528                            1454             SUB_END
 4529                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4530 00000B14 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4531                            1455             M_RTS
 4532 00000B16 000B                   M           RTS                             ;RTSの後ろの
 4533 00000B18 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4534                            1456     
 4535                            1457     ;       ************************************
 4536                            1458     ;       *****   LEWI CODE CHANGE ROUTINE ***
 4537                            1459     ;       ************************************
 4538                                     ***** BEGIN-POOL *****
 4539 00000B1A 0000                       ALIGNMENT CODE
 4540 00000B1C 00000000                   DATA FOR SOURCE-LINE 1445
 4541 00000B20 00000000                   DATA FOR SOURCE-LINE 1446
 4542 00000B24 00000000                   DATA FOR SOURCE-LINE 1447
 4543 00000B28 00000000                   DATA FOR SOURCE-LINE 1448
 4544 00000B2C 00000000                   DATA FOR SOURCE-LINE 1450
 4545                                     ***** END-POOL *****
 4546 00000B30                   1460             .ALIGN  4
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    41
PROGRAM NAME =

 4547 00000B30                   1461     _LEWI_CHG:                                              ; 01010110B     56
 4548                            1462             SUB_START
 4549 00000B30 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4550                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4551                            1463     
 4552 00000B32 D005              1464             MOV.L   #(_LEWI_CODE_END - _LEWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4553 00000B34 D305              1465             MOV.L   #_LEWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4554 00000B36 D206              1466             MOV.L   #(LEWI_DT_LH - _LEWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4555 00000B38 D506              1467             MOV.L   #(LEWI_DT_LL - LEWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4556                            1468     
 4557 00000B3A D107              1469             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4558 00000B3C 410B              1470             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4559 00000B3E 0009              1471             NOP
 4560                            1472     
 4561                            1473             SUB_END
 4562                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4563 00000B40 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4564                            1474             M_RTS
 4565 00000B42 000B                   M           RTS                             ;RTSの後ろの
 4566 00000B44 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4567                            1475     
 4568                            1476     ;       ************************************
 4569                            1477     ;       *****   ADDWI CODE CHANGE ROUTINE ***
 4570                            1478     ;       ************************************
 4571                                     ***** BEGIN-POOL *****
 4572 00000B46 0000                       ALIGNMENT CODE
 4573 00000B48 00000000                   DATA FOR SOURCE-LINE 1464
 4574 00000B4C 00000000                   DATA FOR SOURCE-LINE 1465
 4575 00000B50 00000000                   DATA FOR SOURCE-LINE 1466
 4576 00000B54 00000000                   DATA FOR SOURCE-LINE 1467
 4577 00000B58 00000000                   DATA FOR SOURCE-LINE 1469
 4578                                     ***** END-POOL *****
 4579 00000B5C                   1479             .ALIGN  4
 4580 00000B5C                   1480     _ADDWI_CHG:                                             ; 01011010B     5A
 4581                            1481             SUB_START
 4582 00000B5C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4583                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4584                            1482     
 4585 00000B5E D005              1483             MOV.L   #(_ADDWI_CODE_END - _ADDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4586 00000B60 D305              1484             MOV.L   #_ADDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4587 00000B62 D206              1485             MOV.L   #(ADDWI_DT_LH - _ADDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4588 00000B64 D506              1486             MOV.L   #(ADDWI_DT_LL - ADDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4589                            1487     
 4590 00000B66 D107              1488             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4591 00000B68 410B              1489             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4592 00000B6A 0009              1490             NOP
 4593                            1491     
 4594                            1492             SUB_END
 4595                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4596 00000B6C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4597                            1493             M_RTS
 4598 00000B6E 000B                   M           RTS                             ;RTSの後ろの
 4599 00000B70 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4600                            1494     
 4601                            1495     ;       ************************************
 4602                            1496     ;       *****   SUBWI CODE CHANGE ROUTINE ***
 4603                            1497     ;       ************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    42
PROGRAM NAME =

 4604                                     ***** BEGIN-POOL *****
 4605 00000B72 0000                       ALIGNMENT CODE
 4606 00000B74 00000000                   DATA FOR SOURCE-LINE 1483
 4607 00000B78 00000000                   DATA FOR SOURCE-LINE 1484
 4608 00000B7C 00000000                   DATA FOR SOURCE-LINE 1485
 4609 00000B80 00000000                   DATA FOR SOURCE-LINE 1486
 4610 00000B84 00000000                   DATA FOR SOURCE-LINE 1488
 4611                                     ***** END-POOL *****
 4612 00000B88                   1498             .ALIGN  4
 4613 00000B88                   1499     _SUBWI_CHG:                                             ; 01011110B     5E
 4614                            1500             SUB_START
 4615 00000B88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4616                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4617                            1501     
 4618 00000B8A D005              1502             MOV.L   #(_SUBWI_CODE_END - _SUBWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4619 00000B8C D305              1503             MOV.L   #_SUBWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4620 00000B8E D206              1504             MOV.L   #(SUBWI_DT_LH - _SUBWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4621 00000B90 D506              1505             MOV.L   #(SUBWI_DT_LL - SUBWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4622                            1506     
 4623 00000B92 D107              1507             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4624 00000B94 410B              1508             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4625 00000B96 0009              1509             NOP
 4626                            1510     
 4627                            1511             SUB_END
 4628                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4629 00000B98 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4630                            1512             M_RTS
 4631 00000B9A 000B                   M           RTS                             ;RTSの後ろの
 4632 00000B9C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4633                            1513     
 4634                            1514     ;       ************************************
 4635                            1515     ;       *****   ANDWI CODE CHANGE ROUTINE ***
 4636                            1516     ;       ************************************
 4637                                     ***** BEGIN-POOL *****
 4638 00000B9E 0000                       ALIGNMENT CODE
 4639 00000BA0 00000000                   DATA FOR SOURCE-LINE 1502
 4640 00000BA4 00000000                   DATA FOR SOURCE-LINE 1503
 4641 00000BA8 00000000                   DATA FOR SOURCE-LINE 1504
 4642 00000BAC 00000000                   DATA FOR SOURCE-LINE 1505
 4643 00000BB0 00000000                   DATA FOR SOURCE-LINE 1507
 4644                                     ***** END-POOL *****
 4645 00000BB4                   1517             .ALIGN  4
 4646 00000BB4                   1518     _ANDWI_CHG:                                             ; 01100010B     62
 4647                            1519             SUB_START
 4648 00000BB4 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4649                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4650                            1520     
 4651 00000BB6 D005              1521             MOV.L   #(_ANDWI_CODE_END - _ANDWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
 4652 00000BB8 D305              1522             MOV.L   #_ANDWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4653 00000BBA D206              1523             MOV.L   #(ANDWI_DT_LH - _ANDWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4654 00000BBC D506              1524             MOV.L   #(ANDWI_DT_LL - ANDWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4655                            1525     
 4656 00000BBE D107              1526             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4657 00000BC0 410B              1527             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4658 00000BC2 0009              1528             NOP
 4659                            1529     
 4660                            1530             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    43
PROGRAM NAME =

 4661                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4662 00000BC4 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4663                            1531             M_RTS
 4664 00000BC6 000B                   M           RTS                             ;RTSの後ろの
 4665 00000BC8 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4666                            1532     
 4667                            1533     ;       ************************************
 4668                            1534     ;       *****   ORWI CODE CHANGE ROUTINE ***
 4669                            1535     ;       ************************************
 4670                                     ***** BEGIN-POOL *****
 4671 00000BCA 0000                       ALIGNMENT CODE
 4672 00000BCC 00000000                   DATA FOR SOURCE-LINE 1521
 4673 00000BD0 00000000                   DATA FOR SOURCE-LINE 1522
 4674 00000BD4 00000000                   DATA FOR SOURCE-LINE 1523
 4675 00000BD8 00000000                   DATA FOR SOURCE-LINE 1524
 4676 00000BDC 00000000                   DATA FOR SOURCE-LINE 1526
 4677                                     ***** END-POOL *****
 4678 00000BE0                   1536             .ALIGN  4
 4679 00000BE0                   1537     _ORWI_CHG:                                              ; 01100110B     66
 4680                            1538             SUB_START
 4681 00000BE0 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4682                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4683                            1539     
 4684 00000BE2 D005              1540             MOV.L   #(_ORWI_CODE_END - _ORWI_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4685 00000BE4 D305              1541             MOV.L   #_ORWI_CODE,R3                          ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4686 00000BE6 D206              1542             MOV.L   #(ORWI_DT_LH - _ORWI_CODE),R2           ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4687 00000BE8 D506              1543             MOV.L   #(ORWI_DT_LL - ORWI_DT_LH),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4688                            1544     
 4689 00000BEA D107              1545             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4690 00000BEC 410B              1546             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4691 00000BEE 0009              1547             NOP
 4692                            1548     
 4693                            1549             SUB_END
 4694                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4695 00000BF0 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4696                            1550             M_RTS
 4697 00000BF2 000B                   M           RTS                             ;RTSの後ろの
 4698 00000BF4 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4699                            1551     
 4700                            1552     ;       ************************************
 4701                            1553     ;       *****   XORWI CODE CHANGE ROUTINE ***
 4702                            1554     ;       ************************************
 4703                                     ***** BEGIN-POOL *****
 4704 00000BF6 0000                       ALIGNMENT CODE
 4705 00000BF8 00000000                   DATA FOR SOURCE-LINE 1540
 4706 00000BFC 00000000                   DATA FOR SOURCE-LINE 1541
 4707 00000C00 00000000                   DATA FOR SOURCE-LINE 1542
 4708 00000C04 00000000                   DATA FOR SOURCE-LINE 1543
 4709 00000C08 00000000                   DATA FOR SOURCE-LINE 1545
 4710                                     ***** END-POOL *****
 4711 00000C0C                   1555             .ALIGN  4
 4712 00000C0C                   1556     _XORWI_CHG:                                             ; 01101010B     6A
 4713                            1557             SUB_START
 4714 00000C0C 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4715                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4716                            1558     
 4717 00000C0E D005              1559             MOV.L   #(_XORWI_CODE_END - _XORWI_CODE),R0     ; 転送ﾊﾞｲﾄ長
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    44
PROGRAM NAME =

 4718 00000C10 D305              1560             MOV.L   #_XORWI_CODE,R3                         ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4719 00000C12 D206              1561             MOV.L   #(XORWI_DT_LH - _XORWI_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4720 00000C14 D506              1562             MOV.L   #(XORWI_DT_LL - XORWI_DT_LH),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4721                            1563     
 4722 00000C16 D107              1564             MOV.L   #_SEQ_DATA_CHG2,R1                      ; SEQ DATA CHANGE2 ADDRESS LOAD
 4723 00000C18 410B              1565             JSR     @R1                                     ; ｺﾏﾝﾄﾞから展開する
 4724 00000C1A 0009              1566             NOP
 4725                            1567     
 4726                            1568             SUB_END
 4727                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4728 00000C1C 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4729                            1569             M_RTS
 4730 00000C1E 000B                   M           RTS                             ;RTSの後ろの
 4731 00000C20 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4732                            1570     
 4733                            1571     ;       ***************************************************
 4734                            1572     ;       ***     SEQ DATA CHANGE2 ROUTINE                ***
 4735                            1573     ;       ***************************************************
 4736                                     ***** BEGIN-POOL *****
 4737 00000C22 0000                       ALIGNMENT CODE
 4738 00000C24 00000000                   DATA FOR SOURCE-LINE 1559
 4739 00000C28 00000000                   DATA FOR SOURCE-LINE 1560
 4740 00000C2C 00000000                   DATA FOR SOURCE-LINE 1561
 4741 00000C30 00000000                   DATA FOR SOURCE-LINE 1562
 4742 00000C34 00000000                   DATA FOR SOURCE-LINE 1564
 4743                                     ***** END-POOL *****
 4744 00000C38                   1574             .ALIGN  4
 4745 00000C38                   1575     _SEQ_DATA_CHG2:
 4746                            1576             SUB_START
 4747 00000C38 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4748                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4749                            1577     
 4750 00000C3A 6983              1578             MOV.L   R8,R9                           ;
 4751 00000C3C 6888              1579             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 4752 00000C3E 688C              1580             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 4753 00000C40 699C              1581             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 4754                            1582     
 4755 00000C42 D10B              1583             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 4756 00000C44 3813              1584             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 4757 00000C46 8919              1585             BT      _CHG2_C80                       ; IF ADR >= 127 THEN JUMP
 4758                            1586     
 4759 00000C48 64D3              1587             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 4760                            1588     
 4761                            1589             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 4762 00000C4A D10A                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 4763 00000C4C 410B                   M           JSR     @R1                     ;
 4764 00000C4E 0009                   M           NOP                                     ;
 4765                            1590                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 4766                            1591     ;       *** ADR SET ***
 4767 00000C50 342C              1592             ADD     R2,R4                           ;
 4768 00000C52 6141              1593             MOV.W   @R4,R1                          ;
 4769 00000C54 D008              1594             MOV.L   #H'FF00,R0                      ;
 4770 00000C56 2109              1595             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 4771                            1596     ;       SHLL    R8                              ; ADR * 2
 4772 00000C58 218B              1597             OR      R8,R1                           ;
 4773 00000C5A 2411              1598             MOV.W   R1,@R4                          ; RAM ADR SET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    45
PROGRAM NAME =

 4774                            1599     
 4775                            1600     ;       *** OFFSET SET ***
 4776 00000C5C 345C              1601             ADD     R5,R4                           ;
 4777 00000C5E 6141              1602             MOV.W   @R4,R1                          ;
 4778 00000C60 2109              1603             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 4779                            1604     ;       SHLL    R9                              ; OFFSET * 2
 4780 00000C62 219B              1605             OR      R9,R1                           ;
 4781 00000C64 2411              1606             MOV.W   R1,@R4                          ; RAM ADR SET
 4782                            1607     
 4783 00000C66 9001              1608             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 4784                            1609             M_BRA   _SEQ_CHG2_EX                    ;
 4785 00000C68 A009                   M           BRA     _SEQ_CHG2_EX
 4786 00000C6A 0009                   M           NOP
 4787                            1610     ;
 4788                                     ***** BEGIN-POOL *****
 4789 00000C6C 0000                       DATA FOR SOURCE-LINE 1608
 4790 00000C6E 0000                       ALIGNMENT CODE
 4791 00000C70 00000C00                   DATA FOR SOURCE-LINE 1583
 4792 00000C74 00000000                   DATA FOR SOURCE-LINE 1589
 4793 00000C78 0000FF00                   DATA FOR SOURCE-LINE 1594
 4794                                     ***** END-POOL *****
 4795 00000C7C                   1611     _CHG2_C80:
 4796 00000C7C 9002              1612             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 4797                            1613     
 4798 00000C7E                   1614     _SEQ_CHG2_EX:
 4799                            1615             SUB_END
 4800                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4801 00000C7E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4802                            1616             M_RTS                                   ; NORMAL END
 4803 00000C80 000B                   M           RTS                             ;RTSの後ろの
 4804 00000C82 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4805                            1617     
 4806                            1618     ;       ************************************
 4807                            1619     ;       ***     Read CODE CHANGE ROUTINE ***
 4808                            1620     ;       ************************************
 4809                                     ***** BEGIN-POOL *****
 4810 00000C84 FF00                       DATA FOR SOURCE-LINE 1612
 4811                                     ***** END-POOL *****
 4812 00000C88                   1621             .ALIGN  4
 4813 00000C88                   1622     _LD_CHG:                                        ; 00000010B     2
 4814                            1623             SUB_START
 4815 00000C88 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4816                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4817                            1624     
 4818 00000C8A D005              1625             MOV.L   #(_LD_CODE_END - _LD_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4819 00000C8C D305              1626             MOV.L   #_LD_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4820 00000C8E D206              1627             MOV.L   #(LD_ADR - _LD_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4821 00000C90 D506              1628             MOV.L   #(LD_OFS - LD_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4822 00000C92 D607              1629             MOV.L   #(LD_BIT - LD_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4823                            1630     
 4824 00000C94 D107              1631             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4825 00000C96 410B              1632             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4826 00000C98 0009              1633             NOP
 4827                            1634     
 4828                            1635             SUB_END
 4829                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4830 00000C9A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    46
PROGRAM NAME =

 4831                            1636             M_RTS
 4832 00000C9C 000B                   M           RTS                             ;RTSの後ろの
 4833 00000C9E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4834                            1637     
 4835                            1638     ;       **************************************
 4836                            1639     ;       ***   Read Not CODE CHANGE ROUTINE ***
 4837                            1640     ;       **************************************
 4838                                     ***** BEGIN-POOL *****
 4839 00000CA0 00000000                   DATA FOR SOURCE-LINE 1625
 4840 00000CA4 00000000                   DATA FOR SOURCE-LINE 1626
 4841 00000CA8 00000000                   DATA FOR SOURCE-LINE 1627
 4842 00000CAC 00000000                   DATA FOR SOURCE-LINE 1628
 4843 00000CB0 00000000                   DATA FOR SOURCE-LINE 1629
 4844 00000CB4 00000000                   DATA FOR SOURCE-LINE 1631
 4845                                     ***** END-POOL *****
 4846 00000CB8                   1641             .ALIGN  4
 4847 00000CB8                   1642     _LDN_CHG:                                       ; 00000011B     3
 4848                            1643             SUB_START
 4849 00000CB8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4850                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4851                            1644     
 4852 00000CBA D005              1645             MOV.L   #(_LDN_CODE_END - _LDN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4853 00000CBC D305              1646             MOV.L   #_LDN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4854 00000CBE D206              1647             MOV.L   #(LDN_ADR - _LDN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4855 00000CC0 D506              1648             MOV.L   #(LDN_OFS - LDN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4856 00000CC2 D607              1649             MOV.L   #(LDN_BIT - LDN_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4857                            1650     
 4858 00000CC4 D107              1651             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4859 00000CC6 410B              1652             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4860 00000CC8 0009              1653             NOP
 4861                            1654     
 4862                            1655             SUB_END
 4863                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4864 00000CCA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4865                            1656             M_RTS
 4866 00000CCC 000B                   M           RTS                             ;RTSの後ろの
 4867 00000CCE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4868                            1657     
 4869                            1658     ;       ***********************************
 4870                            1659     ;       *****   And CODE CHANGE ROUTINE ***
 4871                            1660     ;       ***********************************
 4872                                     ***** BEGIN-POOL *****
 4873 00000CD0 00000000                   DATA FOR SOURCE-LINE 1645
 4874 00000CD4 00000000                   DATA FOR SOURCE-LINE 1646
 4875 00000CD8 00000000                   DATA FOR SOURCE-LINE 1647
 4876 00000CDC 00000000                   DATA FOR SOURCE-LINE 1648
 4877 00000CE0 00000000                   DATA FOR SOURCE-LINE 1649
 4878 00000CE4 00000000                   DATA FOR SOURCE-LINE 1651
 4879                                     ***** END-POOL *****
 4880 00000CE8                   1661             .ALIGN  4
 4881 00000CE8                   1662     _AND_CHG:                                       ; 00000100B     4
 4882                            1663             SUB_START
 4883 00000CE8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4884                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4885                            1664     
 4886 00000CEA D005              1665             MOV.L   #(_AND_CODE_END - _AND_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4887 00000CEC D305              1666             MOV.L   #_AND_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    47
PROGRAM NAME =

 4888 00000CEE D206              1667             MOV.L   #(AND_ADR - _AND_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4889 00000CF0 D506              1668             MOV.L   #(AND_OFS - AND_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4890 00000CF2 D607              1669             MOV.L   #(AND_BIT - AND_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4891                            1670     
 4892 00000CF4 D107              1671             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4893 00000CF6 410B              1672             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4894 00000CF8 0009              1673             NOP
 4895                            1674     
 4896                            1675             SUB_END
 4897                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4898 00000CFA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4899                            1676             M_RTS
 4900 00000CFC 000B                   M           RTS                             ;RTSの後ろの
 4901 00000CFE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4902                            1677     
 4903                            1678     ;       ***************************************
 4904                            1679     ;       *****   And Not CODE CHANGE ROUTINE ***
 4905                            1680     ;       ***************************************
 4906                                     ***** BEGIN-POOL *****
 4907 00000D00 00000000                   DATA FOR SOURCE-LINE 1665
 4908 00000D04 00000000                   DATA FOR SOURCE-LINE 1666
 4909 00000D08 00000000                   DATA FOR SOURCE-LINE 1667
 4910 00000D0C 00000000                   DATA FOR SOURCE-LINE 1668
 4911 00000D10 00000000                   DATA FOR SOURCE-LINE 1669
 4912 00000D14 00000000                   DATA FOR SOURCE-LINE 1671
 4913                                     ***** END-POOL *****
 4914 00000D18                   1681             .ALIGN  4
 4915 00000D18                   1682     _ANDN_CHG:                                      ; 00000101B     5
 4916                            1683             SUB_START
 4917 00000D18 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4918                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4919                            1684     
 4920 00000D1A D005              1685             MOV.L   #(_ANDN_CODE_END - _ANDN_CODE),R0       ; 転送ﾊﾞｲﾄ長
 4921 00000D1C D305              1686             MOV.L   #_ANDN_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4922 00000D1E D206              1687             MOV.L   #(ANDN_ADR - _ANDN_CODE),R2     ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4923 00000D20 D506              1688             MOV.L   #(ANDN_OFS - ANDN_ADR),R5       ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4924 00000D22 D607              1689             MOV.L   #(ANDN_BIT - ANDN_OFS),R6       ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4925                            1690     
 4926 00000D24 D107              1691             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4927 00000D26 410B              1692             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4928 00000D28 0009              1693             NOP
 4929                            1694     
 4930                            1695             SUB_END
 4931                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4932 00000D2A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4933                            1696             M_RTS
 4934 00000D2C 000B                   M           RTS                             ;RTSの後ろの
 4935 00000D2E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4936                            1697     
 4937                            1698     ;       **********************************
 4938                            1699     ;       *****   OR CODE CHANGE ROUTINE ***
 4939                            1700     ;       **********************************
 4940                                     ***** BEGIN-POOL *****
 4941 00000D30 00000000                   DATA FOR SOURCE-LINE 1685
 4942 00000D34 00000000                   DATA FOR SOURCE-LINE 1686
 4943 00000D38 00000000                   DATA FOR SOURCE-LINE 1687
 4944 00000D3C 00000000                   DATA FOR SOURCE-LINE 1688
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    48
PROGRAM NAME =

 4945 00000D40 00000000                   DATA FOR SOURCE-LINE 1689
 4946 00000D44 00000000                   DATA FOR SOURCE-LINE 1691
 4947                                     ***** END-POOL *****
 4948 00000D48                   1701             .ALIGN  4
 4949 00000D48                   1702     _OR_CHG:                                        ; 00000110B     6
 4950                            1703             SUB_START
 4951 00000D48 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4952                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4953                            1704     
 4954 00000D4A D005              1705             MOV.L   #(_OR_CODE_END - _OR_CODE),R0   ; 転送ﾊﾞｲﾄ長
 4955 00000D4C D305              1706             MOV.L   #_OR_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4956 00000D4E D206              1707             MOV.L   #(OR_ADR - _OR_CODE),R2         ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4957 00000D50 D506              1708             MOV.L   #(OR_OFS - OR_ADR),R5           ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4958 00000D52 D607              1709             MOV.L   #(OR_BIT - OR_OFS),R6           ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4959                            1710     
 4960 00000D54 D107              1711             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4961 00000D56 410B              1712             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4962 00000D58 0009              1713             NOP
 4963                            1714     
 4964                            1715             SUB_END
 4965                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 4966 00000D5A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 4967                            1716             M_RTS
 4968 00000D5C 000B                   M           RTS                             ;RTSの後ろの
 4969 00000D5E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 4970                            1717     
 4971                            1718     ;       **************************************
 4972                            1719     ;       *****   Or Not CODE CHANGE ROUTINE ***
 4973                            1720     ;       **************************************
 4974                                     ***** BEGIN-POOL *****
 4975 00000D60 00000000                   DATA FOR SOURCE-LINE 1705
 4976 00000D64 00000000                   DATA FOR SOURCE-LINE 1706
 4977 00000D68 00000000                   DATA FOR SOURCE-LINE 1707
 4978 00000D6C 00000000                   DATA FOR SOURCE-LINE 1708
 4979 00000D70 00000000                   DATA FOR SOURCE-LINE 1709
 4980 00000D74 00000000                   DATA FOR SOURCE-LINE 1711
 4981                                     ***** END-POOL *****
 4982 00000D78                   1721             .ALIGN  4
 4983 00000D78                   1722     _ORN_CHG:                                       ; 00000111B     7
 4984                            1723             SUB_START
 4985 00000D78 4F22                   M           STS.L   PR,@-R15                ;[必要]
 4986                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 4987                            1724     
 4988 00000D7A D005              1725             MOV.L   #(_ORN_CODE_END - _ORN_CODE),R0 ; 転送ﾊﾞｲﾄ長
 4989 00000D7C D305              1726             MOV.L   #_ORN_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 4990 00000D7E D206              1727             MOV.L   #(ORN_ADR - _ORN_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 4991 00000D80 D506              1728             MOV.L   #(ORN_OFS - ORN_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 4992 00000D82 D607              1729             MOV.L   #(ORN_BIT - ORN_OFS),R6 ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 4993                            1730     
 4994 00000D84 D107              1731             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 4995 00000D86 410B              1732             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 4996 00000D88 0009              1733             NOP
 4997                            1734     
 4998                            1735             SUB_END
 4999                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5000 00000D8A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5001                            1736             M_RTS
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    49
PROGRAM NAME =

 5002 00000D8C 000B                   M           RTS                             ;RTSの後ろの
 5003 00000D8E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5004                            1737     
 5005                            1738     ;       ***********************************
 5006                            1739     ;       *****   PLS CODE CHANGE ROUTINE ***
 5007                            1740     ;       ***********************************
 5008                                     ***** BEGIN-POOL *****
 5009 00000D90 00000000                   DATA FOR SOURCE-LINE 1725
 5010 00000D94 00000000                   DATA FOR SOURCE-LINE 1726
 5011 00000D98 00000000                   DATA FOR SOURCE-LINE 1727
 5012 00000D9C 00000000                   DATA FOR SOURCE-LINE 1728
 5013 00000DA0 00000000                   DATA FOR SOURCE-LINE 1729
 5014 00000DA4 00000000                   DATA FOR SOURCE-LINE 1731
 5015                                     ***** END-POOL *****
 5016 00000DA8                   1741             .ALIGN  4
 5017 00000DA8                   1742     _PLS_CHG:                                       ; 00001000B     8
 5018                            1743             SUB_START
 5019 00000DA8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5020                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5021                            1744     
 5022 00000DAA D005              1745             MOV.L   #(_PLS_CODE_END - _PLS_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5023 00000DAC D305              1746             MOV.L   #_PLS_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5024 00000DAE D206              1747             MOV.L   #(PLS_ADR - _PLS_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
 5025 00000DB0 D506              1748             MOV.L   #(PLS_OFS - PLS_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 5026 00000DB2 D607              1749             MOV.L   #(PLS_BIT - PLS_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 5027                            1750     
 5028 00000DB4 D107              1751             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 5029 00000DB6 410B              1752             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 5030 00000DB8 0009              1753             NOP
 5031                            1754     
 5032                            1755             SUB_END
 5033                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5034 00000DBA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5035                            1756             M_RTS
 5036 00000DBC 000B                   M           RTS                             ;RTSの後ろの
 5037 00000DBE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5038                            1757     
 5039                            1758     ;       ***********************************
 5040                            1759     ;       *****   PLF CODE CHANGE ROUTINE ***
 5041                            1760     ;       ***********************************
 5042                                     ***** BEGIN-POOL *****
 5043 00000DC0 00000000                   DATA FOR SOURCE-LINE 1745
 5044 00000DC4 00000000                   DATA FOR SOURCE-LINE 1746
 5045 00000DC8 00000000                   DATA FOR SOURCE-LINE 1747
 5046 00000DCC 00000000                   DATA FOR SOURCE-LINE 1748
 5047 00000DD0 00000000                   DATA FOR SOURCE-LINE 1749
 5048 00000DD4 00000000                   DATA FOR SOURCE-LINE 1751
 5049                                     ***** END-POOL *****
 5050 00000DD8                   1761             .ALIGN  4
 5051 00000DD8                   1762     _PLF_CHG:                                       ; 00001001B     9
 5052                            1763             SUB_START
 5053 00000DD8 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5054                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5055                            1764     
 5056 00000DDA D005              1765             MOV.L   #(_PLF_CODE_END - _PLF_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5057 00000DDC D305              1766             MOV.L   #_PLF_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5058 00000DDE D206              1767             MOV.L   #(PLF_ADR - _PLF_CODE),R2       ; MEM ADR(H) 格納先ｱﾄﾞﾚｽ指定
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    50
PROGRAM NAME =

 5059 00000DE0 D506              1768             MOV.L   #(PLF_OFS - PLF_ADR),R5         ; MEM ADR(L) 格納先ｱﾄﾞﾚｽ指定
 5060 00000DE2 D607              1769             MOV.L   #(PLF_BIT - PLF_OFS),R6         ; BIT CODE 格納先ｱﾄﾞﾚｽ指定
 5061                            1770     
 5062 00000DE4 D107              1771             MOV.L   #_SEQ_DATA_CHG3,R1              ; SEQ DATA CHANGE3 ADDRESS LOAD
 5063 00000DE6 410B              1772             JSR     @R1                             ; ｺﾏﾝﾄﾞから展開する
 5064 00000DE8 0009              1773             NOP
 5065                            1774     
 5066                            1775             SUB_END
 5067                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5068 00000DEA 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5069                            1776             M_RTS
 5070 00000DEC 000B                   M           RTS                             ;RTSの後ろの
 5071 00000DEE 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5072                            1777     
 5073                            1778     ;       ***************************************************
 5074                            1779     ;       ***     SEQ DATA CHANGE3 ROUTINE                ***
 5075                            1780     ;       ***************************************************
 5076                                     ***** BEGIN-POOL *****
 5077 00000DF0 00000000                   DATA FOR SOURCE-LINE 1765
 5078 00000DF4 00000000                   DATA FOR SOURCE-LINE 1766
 5079 00000DF8 00000000                   DATA FOR SOURCE-LINE 1767
 5080 00000DFC 00000000                   DATA FOR SOURCE-LINE 1768
 5081 00000E00 00000000                   DATA FOR SOURCE-LINE 1769
 5082 00000E04 00000000                   DATA FOR SOURCE-LINE 1771
 5083                                     ***** END-POOL *****
 5084 00000E08                   1781             .ALIGN  4
 5085 00000E08                   1782     _SEQ_DATA_CHG3:
 5086                            1783             SUB_START
 5087 00000E08 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5088                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5089                            1784     
 5090                            1785     ;       ************************
 5091                            1786     ;       *** MEM CODE処理追加 ***
 5092                            1787     ;       ************************
 5093 00000E0A D11A              1788             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5094 00000E0C 4B08              1789             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5095 00000E0E 31BC              1790             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5096 00000E10 6912              1791             MOV.L   @R1,R9                          ;
 5097 00000E12 4800              1792             SHLL    R8                              ; MEM ADR * 2
 5098 00000E14 389C              1793             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5099                            1794     
 5100                            1795     ;       ************************
 5101                            1796     ;       *** BIT CODE処理追加 ***
 5102                            1797     ;       ************************
 5103 00000E16 D118              1798             MOV.L   #H'0008,R1                      ;
 5104 00000E18 3A13              1799             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5105 00000E1A 8901              1800             BT      _SEQ_RUN_CHG3_BIT_H             ; R10>=R0 JUMP
 5106 00000E1C D117              1801             MOV.L   #H'0001,R1                      ;
 5107 00000E1E 381C              1802             ADD     R1,R8                           ; MEM ADR L + 1
 5108                            1803     
 5109 00000E20                   1804     _SEQ_RUN_CHG3_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5110                            1805     
 5111                            1806     ;       ****************************
 5112                            1807     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5113                            1808     ;       ****************************
 5114 00000E20 D117              1809             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5115 00000E22 31BC              1810             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    51
PROGRAM NAME =

 5116 00000E24 6B12              1811             MOV.L   @R1,R11                         ;
 5117 00000E26 39BC              1812             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5118 00000E28 3893              1813             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5119 00000E2A 8933              1814             BT      _CHG3_C80                       ; R8 >= R9 JUMP
 5120                            1815     
 5121 00000E2C 6983              1816             MOV.L   R8,R9                           ;
 5122 00000E2E 6888              1817             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5123 00000E30 688C              1818             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5124 00000E32 699C              1819             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5125                            1820     
 5126 00000E34 D113              1821             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5127 00000E36 3813              1822             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5128 00000E38 892C              1823             BT      _CHG3_C80                       ; IF ADR >= 127 THEN JUMP
 5129                            1824     
 5130 00000E3A 64D3              1825             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5131                            1826     
 5132                            1827             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5133 00000E3C D112                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5134 00000E3E 410B                   M           JSR     @R1                     ;
 5135 00000E40 0009                   M           NOP                                     ;
 5136                            1828                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5137                            1829     ;       *** ADR SET ***
 5138 00000E42 342C              1830             ADD     R2,R4                           ;
 5139 00000E44 6141              1831             MOV.W   @R4,R1                          ;
 5140 00000E46 D011              1832             MOV.L   #H'FF00,R0                      ;
 5141 00000E48 2109              1833             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5142                            1834     ;       SHLL    R8                              ; ADR * 2
 5143 00000E4A 218B              1835             OR      R8,R1                           ;
 5144 00000E4C 2411              1836             MOV.W   R1,@R4                          ; RAM ADR SET
 5145                            1837     
 5146                            1838     ;       *** OFFSET SET ***
 5147 00000E4E 345C              1839             ADD     R5,R4                           ;
 5148 00000E50 6141              1840             MOV.W   @R4,R1                          ;
 5149 00000E52 2109              1841             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5150                            1842     ;       SHLL    R9                              ; OFFSET * 2
 5151 00000E54 219B              1843             OR      R9,R1                           ;
 5152 00000E56 2411              1844             MOV.W   R1,@R4                          ; RAM ADR SET
 5153                            1845     
 5154                            1846     ;       *** BIT SET ***
 5155 00000E58 346C              1847             ADD     R6,R4                           ;
 5156 00000E5A 6141              1848             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5157 00000E5C D20C              1849             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5158 00000E5E 4A00              1850             SHLL    R10                             ; * 2(word命令のため2倍する)
 5159 00000E60 32AC              1851             ADD     R10,R2                          ;
 5160 00000E62 6A21              1852             MOV.W   @R2,R10                         ; BIT CODE値格納
 5161                            1853     ;;;     MOV.L   #H'FF00,R0                      ;
 5162 00000E64 2109              1854             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5163 00000E66 21AB              1855             OR      R10,R1                          ;
 5164 00000E68 2411              1856             MOV.W   R1,@R4                          ; BIT CODEを書換
 5165                            1857     
 5166 00000E6A 9001              1858             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5167                            1859             M_BRA   _SEQ_CHG3_EX                    ;
 5168 00000E6C A013                   M           BRA     _SEQ_CHG3_EX
 5169 00000E6E 0009                   M           NOP
 5170                            1860     ;
 5171                                     ***** BEGIN-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    52
PROGRAM NAME =

 5172 00000E70 0000                       DATA FOR SOURCE-LINE 1858
 5173 00000E72 0000                       ALIGNMENT CODE
 5174 00000E74 00000000                   DATA FOR SOURCE-LINE 1788
 5175 00000E78 00000008                   DATA FOR SOURCE-LINE 1798
 5176 00000E7C 00000001                   DATA FOR SOURCE-LINE 1801
 5177 00000E80 00000000                   DATA FOR SOURCE-LINE 1809
 5178 00000E84 00000C00                   DATA FOR SOURCE-LINE 1821
 5179 00000E88 00000000                   DATA FOR SOURCE-LINE 1827
 5180 00000E8C 0000FF00                   DATA FOR SOURCE-LINE 1832
 5181 00000E90 00000000                   DATA FOR SOURCE-LINE 1849
 5182                                     ***** END-POOL *****
 5183 00000E94                   1861     _CHG3_C80:
 5184 00000E94 9002              1862             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5185                            1863     
 5186 00000E96                   1864     _SEQ_CHG3_EX:
 5187                            1865             SUB_END
 5188                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5189 00000E96 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5190                            1866             M_RTS                                   ; NORMAL END
 5191 00000E98 000B                   M           RTS                             ;RTSの後ろの
 5192 00000E9A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5193                            1867     
 5194                            1868     ;       *******************************************
 5195                            1869     ;       *****   BIT STORE CODE CHANGE ROUTINE   ***
 5196                            1870     ;       *******************************************
 5197                                     ***** BEGIN-POOL *****
 5198 00000E9C FF00                       DATA FOR SOURCE-LINE 1862
 5199                                     ***** END-POOL *****
 5200 00000E9E                   1871     _ST_CHG:                                        ; 00001010B     A
 5201                            1872             SUB_START
 5202 00000E9E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5203                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5204                            1873     
 5205                            1874     ;       ************************
 5206                            1875     ;       *** MEM CODE処理追加 ***
 5207                            1876     ;       ************************
 5208 00000EA0 D11E              1877             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5209 00000EA2 4B08              1878             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5210 00000EA4 31BC              1879             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5211 00000EA6 6912              1880             MOV.L   @R1,R9                          ;
 5212 00000EA8 4800              1881             SHLL    R8                              ; MEM ADR * 2
 5213 00000EAA 389C              1882             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5214                            1883     
 5215                            1884     ;       ************************
 5216                            1885     ;       *** BIT CODE処理追加 ***
 5217                            1886     ;       ************************
 5218 00000EAC D11C              1887             MOV.L   #H'0008,R1                      ;
 5219 00000EAE 3A13              1888             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5220 00000EB0 8901              1889             BT      _SEQ_RUN_CHG4_BIT_H             ; R10>=R0 JUMP
 5221 00000EB2 D11C              1890             MOV.L   #H'0001,R1                      ;
 5222 00000EB4 381C              1891             ADD     R1,R8                           ; MEM ADR L + 1
 5223                            1892     
 5224 00000EB6                   1893     _SEQ_RUN_CHG4_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5225                            1894     
 5226                            1895     ;       ****************************
 5227                            1896     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5228                            1897     ;       ****************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    53
PROGRAM NAME =

 5229 00000EB6 D11C              1898             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5230 00000EB8 31BC              1899             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5231 00000EBA 6B12              1900             MOV.L   @R1,R11                         ;
 5232 00000EBC 39BC              1901             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5233 00000EBE 3893              1902             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5234 00000EC0 8940              1903             BT      _CHG4_C80                       ; R8 >= R9 JUMP
 5235                            1904     
 5236 00000EC2 6983              1905             MOV.L   R8,R9                           ;
 5237 00000EC4 6888              1906             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5238 00000EC6 688C              1907             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5239 00000EC8 699C              1908             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5240                            1909     
 5241 00000ECA D118              1910             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5242 00000ECC 3813              1911             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5243 00000ECE 8939              1912             BT      _CHG4_C80                       ; IF ADR >= 127 THEN JUMP
 5244                            1913     
 5245 00000ED0 D017              1914             MOV.L   #(_ST_CODE_END - _ST_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5246 00000ED2 D318              1915             MOV.L   #_ST_CODE,R3                    ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5247 00000ED4 64D3              1916             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5248                            1917     
 5249                            1918             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5250 00000ED6 D118                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5251 00000ED8 410B                   M           JSR     @R1                     ;
 5252 00000EDA 0009                   M           NOP                                     ;
 5253                            1919                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5254                            1920     ;       *** ADR SET ***
 5255 00000EDC 7400              1921             ADD     #(ST_ADR - _ST_CODE),R4         ;
 5256 00000EDE 6141              1922             MOV.W   @R4,R1                          ;
 5257 00000EE0 D016              1923             MOV.L   #H'FF00,R0                      ;
 5258 00000EE2 2109              1924             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5259                            1925     ;       SHLL    R8                              ; ADR * 2
 5260 00000EE4 218B              1926             OR      R8,R1                           ;
 5261 00000EE6 2411              1927             MOV.W   R1,@R4                          ; RAM ADR SET
 5262                            1928     
 5263                            1929     ;       *** OFFSET SET ***
 5264 00000EE8 7400              1930             ADD     #(ST_OFS - ST_ADR),R4           ;
 5265 00000EEA 6141              1931             MOV.W   @R4,R1                          ;
 5266 00000EEC 2109              1932             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5267                            1933     ;       SHLL    R9                              ; OFFSET * 2
 5268 00000EEE 219B              1934             OR      R9,R1                           ;
 5269 00000EF0 2411              1935             MOV.W   R1,@R4                          ; RAM ADR SET
 5270                            1936     
 5271                            1937     ;       *** BIT SET ***
 5272 00000EF2 7400              1938             ADD     #(STCD_SETBIT - ST_OFS),R4      ;
 5273 00000EF4 6141              1939             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5274 00000EF6 D212              1940             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5275 00000EF8 4A00              1941             SHLL    R10                             ; * 2(word命令のため2倍する)
 5276 00000EFA 32AC              1942             ADD     R10,R2                          ;
 5277 00000EFC 6A21              1943             MOV.W   @R2,R10                         ; BIT CODE値格納
 5278                            1944     ;;;     MOV.L   #H'FF00,R0                      ;
 5279 00000EFE 2109              1945             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5280 00000F00 21AB              1946             OR      R10,R1                          ;
 5281 00000F02 2411              1947             MOV.W   R1,@R4                          ; BIT CODEを書換
 5282                            1948     
 5283                            1949     ;       *** BIT CLR ***
 5284 00000F04 7400              1950             ADD     #(STCD_CLRBIT - STCD_SETBIT),R4 ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    54
PROGRAM NAME =

 5285 00000F06 6141              1951             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5286 00000F08 62A7              1952             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5287                            1953     ;;;     MOV.L   #H'FF00,R0                      ;
 5288 00000F0A 2109              1954             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5289 00000F0C 622C              1955             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5290 00000F0E 212B              1956             OR      R2,R1                           ;
 5291 00000F10 2411              1957             MOV.W   R1,@R4                          ; BIT CODEを書換
 5292                            1958     
 5293                            1959     
 5294 00000F12 9001              1960             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5295                            1961             M_BRA   _SEQ_CHG4_EX                    ;
 5296 00000F14 A017                   M           BRA     _SEQ_CHG4_EX
 5297 00000F16 0009                   M           NOP
 5298                            1962     ;
 5299                                     ***** BEGIN-POOL *****
 5300 00000F18 0000                       DATA FOR SOURCE-LINE 1960
 5301 00000F1A 0000                       ALIGNMENT CODE
 5302 00000F1C 00000000                   DATA FOR SOURCE-LINE 1877
 5303 00000F20 00000008                   DATA FOR SOURCE-LINE 1887
 5304 00000F24 00000001                   DATA FOR SOURCE-LINE 1890
 5305 00000F28 00000000                   DATA FOR SOURCE-LINE 1898
 5306 00000F2C 00000C00                   DATA FOR SOURCE-LINE 1910
 5307 00000F30 00000000                   DATA FOR SOURCE-LINE 1914
 5308 00000F34 00000000                   DATA FOR SOURCE-LINE 1915
 5309 00000F38 00000000                   DATA FOR SOURCE-LINE 1918
 5310 00000F3C 0000FF00                   DATA FOR SOURCE-LINE 1923
 5311 00000F40 00000000                   DATA FOR SOURCE-LINE 1940
 5312                                     ***** END-POOL *****
 5313 00000F44                   1963     _CHG4_C80:
 5314 00000F44 9002              1964             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5315                            1965     
 5316 00000F46                   1966     _SEQ_CHG4_EX:
 5317                            1967             SUB_END
 5318                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5319 00000F46 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5320                            1968             M_RTS
 5321 00000F48 000B                   M           RTS                             ;RTSの後ろの
 5322 00000F4A 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5323                            1969     
 5324                            1970     ;       ***********************************
 5325                            1971     ;       *****   SET CODE CHANGE ROUTINE ***
 5326                            1972     ;       ***********************************
 5327                                     ***** BEGIN-POOL *****
 5328 00000F4C FF00                       DATA FOR SOURCE-LINE 1964
 5329                                     ***** END-POOL *****
 5330 00000F4E                   1973     _SET_CHG:                                       ; 00001110B     E
 5331                            1974             SUB_START
 5332 00000F4E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5333                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5334                            1975     
 5335                            1976     ;       ************************
 5336                            1977     ;       *** MEM CODE処理追加 ***
 5337                            1978     ;       ************************
 5338 00000F50 D11A              1979             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5339 00000F52 4B08              1980             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5340 00000F54 31BC              1981             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5341 00000F56 6912              1982             MOV.L   @R1,R9                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    55
PROGRAM NAME =

 5342 00000F58 4800              1983             SHLL    R8                              ; MEM ADR * 2
 5343 00000F5A 389C              1984             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5344                            1985     
 5345                            1986     ;       ************************
 5346                            1987     ;       *** BIT CODE処理追加 ***
 5347                            1988     ;       ************************
 5348 00000F5C D118              1989             MOV.L   #H'0008,R1                      ;
 5349 00000F5E 3A13              1990             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5350 00000F60 8901              1991             BT      _SEQ_RUN_CHG5_BIT_H             ; R10>=R0 JUMP
 5351 00000F62 D118              1992             MOV.L   #H'0001,R1                      ;
 5352 00000F64 381C              1993             ADD     R1,R8                           ; MEM ADR L + 1
 5353                            1994     
 5354 00000F66                   1995     _SEQ_RUN_CHG5_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5355                            1996     
 5356                            1997     ;       ****************************
 5357                            1998     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5358                            1999     ;       ****************************
 5359 00000F66 D118              2000             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5360 00000F68 31BC              2001             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5361 00000F6A 6B12              2002             MOV.L   @R1,R11                         ;
 5362 00000F6C 39BC              2003             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5363 00000F6E 3893              2004             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5364 00000F70 8938              2005             BT      _CHG5_C80                       ; R8 >= R9 JUMP
 5365                            2006     
 5366 00000F72 6983              2007             MOV.L   R8,R9                           ;
 5367 00000F74 6888              2008             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5368 00000F76 688C              2009             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5369 00000F78 699C              2010             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5370                            2011     
 5371 00000F7A D114              2012             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5372 00000F7C 3813              2013             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5373 00000F7E 8931              2014             BT      _CHG5_C80                       ; IF ADR >= 127 THEN JUMP
 5374                            2015     
 5375 00000F80 D013              2016             MOV.L   #(_SET_CODE_END - _SET_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5376 00000F82 D314              2017             MOV.L   #_SET_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5377 00000F84 64D3              2018             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5378                            2019     
 5379                            2020             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5380 00000F86 D114                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5381 00000F88 410B                   M           JSR     @R1                     ;
 5382 00000F8A 0009                   M           NOP                                     ;
 5383                            2021                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5384                            2022     ;       *** ADR SET ***
 5385 00000F8C 7400              2023             ADD     #(SET_ADR - _SET_CODE),R4       ;
 5386 00000F8E 6141              2024             MOV.W   @R4,R1                          ;
 5387 00000F90 D012              2025             MOV.L   #H'FF00,R0                      ;
 5388 00000F92 2109              2026             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5389                            2027     ;       SHLL    R8                              ; ADR * 2
 5390 00000F94 218B              2028             OR      R8,R1                           ;
 5391 00000F96 2411              2029             MOV.W   R1,@R4                          ; RAM ADR SET
 5392                            2030     
 5393                            2031     ;       *** OFFSET SET ***
 5394 00000F98 7400              2032             ADD     #(SET_OFS - SET_ADR),R4         ;
 5395 00000F9A 6141              2033             MOV.W   @R4,R1                          ;
 5396 00000F9C 2109              2034             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5397                            2035     ;       SHLL    R9                              ; OFFSET * 2
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    56
PROGRAM NAME =

 5398 00000F9E 219B              2036             OR      R9,R1                           ;
 5399 00000FA0 2411              2037             MOV.W   R1,@R4                          ; RAM ADR SET
 5400                            2038     
 5401                            2039     ;       *** BIT SET ***
 5402 00000FA2 7400              2040             ADD     #(SETCD_SETBIT - SET_OFS),R4    ;
 5403 00000FA4 6141              2041             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5404 00000FA6 D20E              2042             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5405 00000FA8 4A00              2043             SHLL    R10                             ; * 2(word命令のため2倍する)
 5406 00000FAA 32AC              2044             ADD     R10,R2                          ;
 5407 00000FAC 6A21              2045             MOV.W   @R2,R10                         ; BIT CODE値格納
 5408                            2046     ;;;     MOV.L   #H'FF00,R0                      ;
 5409 00000FAE 2109              2047             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5410 00000FB0 21AB              2048             OR      R10,R1                          ;
 5411 00000FB2 2411              2049             MOV.W   R1,@R4                          ; BIT CODEを書換
 5412                            2050     
 5413 00000FB4 9001              2051             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5414                            2052             M_BRA   _SEQ_CHG5_EX                    ;
 5415 00000FB6 A016                   M           BRA     _SEQ_CHG5_EX
 5416 00000FB8 0009                   M           NOP
 5417                            2053     ;
 5418                                     ***** BEGIN-POOL *****
 5419 00000FBA 0000                       DATA FOR SOURCE-LINE 2051
 5420 00000FBC 00000000                   DATA FOR SOURCE-LINE 1979
 5421 00000FC0 00000008                   DATA FOR SOURCE-LINE 1989
 5422 00000FC4 00000001                   DATA FOR SOURCE-LINE 1992
 5423 00000FC8 00000000                   DATA FOR SOURCE-LINE 2000
 5424 00000FCC 00000C00                   DATA FOR SOURCE-LINE 2012
 5425 00000FD0 00000000                   DATA FOR SOURCE-LINE 2016
 5426 00000FD4 00000000                   DATA FOR SOURCE-LINE 2017
 5427 00000FD8 00000000                   DATA FOR SOURCE-LINE 2020
 5428 00000FDC 0000FF00                   DATA FOR SOURCE-LINE 2025
 5429 00000FE0 00000000                   DATA FOR SOURCE-LINE 2042
 5430                                     ***** END-POOL *****
 5431 00000FE4                   2054     _CHG5_C80:
 5432 00000FE4 9002              2055             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5433                            2056     
 5434 00000FE6                   2057     _SEQ_CHG5_EX:
 5435                            2058             SUB_END
 5436                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5437 00000FE6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5438                            2059             M_RTS
 5439 00000FE8 000B                   M           RTS                             ;RTSの後ろの
 5440 00000FEA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5441                            2060     
 5442                            2061     ;       ***********************************
 5443                            2062     ;       *****   RST CODE CHANGE ROUTINE ***
 5444                            2063     ;       ***********************************
 5445                                     ***** BEGIN-POOL *****
 5446 00000FEC FF00                       DATA FOR SOURCE-LINE 2055
 5447                                     ***** END-POOL *****
 5448 00000FEE                   2064     _RST_CHG:                                       ; 00001111B     F
 5449                            2065             SUB_START
 5450 00000FEE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5451                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5452                            2066     
 5453                            2067     ;       ************************
 5454                            2068     ;       *** MEM CODE処理追加 ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    57
PROGRAM NAME =

 5455                            2069     ;       ************************
 5456 00000FF0 D11B              2070             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5457 00000FF2 4B08              2071             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5458 00000FF4 31BC              2072             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5459 00000FF6 6912              2073             MOV.L   @R1,R9                          ;
 5460 00000FF8 4800              2074             SHLL    R8                              ; MEM ADR * 2
 5461 00000FFA 389C              2075             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5462                            2076     
 5463                            2077     ;       ************************
 5464                            2078     ;       *** BIT CODE処理追加 ***
 5465                            2079     ;       ************************
 5466 00000FFC D119              2080             MOV.L   #H'0008,R1                      ;
 5467 00000FFE 3A13              2081             CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5468 00001000 8901              2082             BT      _SEQ_RUN_CHG6_BIT_H             ; R10>=R0 JUMP
 5469 00001002 D119              2083             MOV.L   #H'0001,R1                      ;
 5470 00001004 381C              2084             ADD     R1,R8                           ; MEM ADR L + 1
 5471                            2085     
 5472 00001006                   2086     _SEQ_RUN_CHG6_BIT_H:                            ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5473                            2087     
 5474                            2088     ;       ****************************
 5475                            2089     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5476                            2090     ;       ****************************
 5477 00001006 D119              2091             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5478 00001008 31BC              2092             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5479 0000100A 6B12              2093             MOV.L   @R1,R11                         ;
 5480 0000100C 39BC              2094             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5481 0000100E 3893              2095             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5482 00001010 893A              2096             BT      _CHG6_C80                       ; R8 >= R9 JUMP
 5483                            2097     
 5484 00001012 6983              2098             MOV.L   R8,R9                           ;
 5485 00001014 6888              2099             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5486 00001016 688C              2100             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5487 00001018 699C              2101             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5488                            2102     
 5489 0000101A D115              2103             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5490 0000101C 3813              2104             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5491 0000101E 8933              2105             BT      _CHG6_C80                       ; IF ADR >= 127 THEN JUMP
 5492                            2106     
 5493 00001020 D014              2107             MOV.L   #(_RST_CODE_END - _RST_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5494 00001022 D315              2108             MOV.L   #_RST_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5495 00001024 64D3              2109             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5496                            2110     
 5497                            2111             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5498 00001026 D115                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5499 00001028 410B                   M           JSR     @R1                     ;
 5500 0000102A 0009                   M           NOP                                     ;
 5501                            2112                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5502                            2113     ;       *** ADR SET ***
 5503 0000102C 7400              2114             ADD     #(RST_ADR - _RST_CODE),R4       ;
 5504 0000102E 6141              2115             MOV.W   @R4,R1                          ;
 5505 00001030 D013              2116             MOV.L   #H'FF00,R0                      ;
 5506 00001032 2109              2117             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5507                            2118     ;       SHLL    R8                              ; ADR * 2
 5508 00001034 218B              2119             OR      R8,R1                           ;
 5509 00001036 2411              2120             MOV.W   R1,@R4                          ; RAM ADR SET
 5510                            2121     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    58
PROGRAM NAME =

 5511                            2122     ;       *** OFFSET SET ***
 5512 00001038 7400              2123             ADD     #(RST_OFS - RST_ADR),R4         ;
 5513 0000103A 6141              2124             MOV.W   @R4,R1                          ;
 5514 0000103C 2109              2125             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5515                            2126     ;       SHLL    R9                              ; OFFSET * 2
 5516 0000103E 219B              2127             OR      R9,R1                           ;
 5517 00001040 2411              2128             MOV.W   R1,@R4                          ; RAM ADR SET
 5518                            2129     
 5519                            2130     ;       *** BIT CLR ***
 5520 00001042 7400              2131             ADD     #(RSTCD_SETBIT - RST_OFS),R4    ;
 5521 00001044 6141              2132             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5522 00001046 D20F              2133             MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5523 00001048 4A00              2134             SHLL    R10                             ; * 2(word命令のため2倍する)
 5524 0000104A 32AC              2135             ADD     R10,R2                          ;
 5525 0000104C 6A21              2136             MOV.W   @R2,R10                         ; BIT CODE値格納
 5526 0000104E 62A7              2137             NOT     R10,R2                          ; BITﾃﾞｰﾀ反転
 5527                            2138     ;;;     MOV.L   #H'FF00,R0                      ;
 5528 00001050 2109              2139             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5529 00001052 622C              2140             EXTU.B  R2,R2                           ; BITﾃﾞｰﾀ以外のところをｸﾘｱ
 5530 00001054 212B              2141             OR      R2,R1                           ;
 5531 00001056 2411              2142             MOV.W   R1,@R4                          ; BIT CODEを書換
 5532                            2143     
 5533 00001058 9001              2144             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5534                            2145             M_BRA   _SEQ_CHG6_EX                    ;
 5535 0000105A A016                   M           BRA     _SEQ_CHG6_EX
 5536 0000105C 0009                   M           NOP
 5537                            2146     ;
 5538                                     ***** BEGIN-POOL *****
 5539 0000105E 0000                       DATA FOR SOURCE-LINE 2144
 5540 00001060 00000000                   DATA FOR SOURCE-LINE 2070
 5541 00001064 00000008                   DATA FOR SOURCE-LINE 2080
 5542 00001068 00000001                   DATA FOR SOURCE-LINE 2083
 5543 0000106C 00000000                   DATA FOR SOURCE-LINE 2091
 5544 00001070 00000C00                   DATA FOR SOURCE-LINE 2103
 5545 00001074 00000000                   DATA FOR SOURCE-LINE 2107
 5546 00001078 00000000                   DATA FOR SOURCE-LINE 2108
 5547 0000107C 00000000                   DATA FOR SOURCE-LINE 2111
 5548 00001080 0000FF00                   DATA FOR SOURCE-LINE 2116
 5549 00001084 00000000                   DATA FOR SOURCE-LINE 2133
 5550                                     ***** END-POOL *****
 5551 00001088                   2147     _CHG6_C80:
 5552 00001088 9002              2148             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5553                            2149     
 5554 0000108A                   2150     _SEQ_CHG6_EX:
 5555                            2151             SUB_END
 5556                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5557 0000108A 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5558                            2152             M_RTS
 5559 0000108C 000B                   M           RTS                             ;RTSの後ろの
 5560 0000108E 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5561                            2153     
 5562                            2154     ;       ***********************************
 5563                            2155     ;       *****   WSC CODE CHANGE ROUTINE ***
 5564                            2156     ;       ***********************************
 5565                                     ***** BEGIN-POOL *****
 5566 00001090 FF00                       DATA FOR SOURCE-LINE 2148
 5567                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    59
PROGRAM NAME =

 5568 00001092                   2157     _WSC_CHG:                                       ; 00001100B     C
 5569                            2158             SUB_START
 5570 00001092 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5571                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5572                            2159     
 5573                            2160     ;       ************************
 5574                            2161     ;       *** MEM CODE処理追加 ***
 5575                            2162     ;       ************************
 5576 00001094 D116              2163             MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5577 00001096 4B08              2164             SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5578 00001098 31BC              2165             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5579 0000109A 6912              2166             MOV.L   @R1,R9                          ;
 5580 0000109C 4800              2167             SHLL    R8                              ; MEM ADR * 2
 5581 0000109E 389C              2168             ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5582                            2169     
 5583                            2170     ;       ************************
 5584                            2171     ;       *** BIT CODE処理追加 ***
 5585                            2172     ;       ************************
 5586                            2173     ;;;     MOV.L   #H'0008,R1                      ;
 5587                            2174     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5588                            2175     ;;;     BT      _SEQ_RUN_CHG7_BIT_H             ; R10>=R0 JUMP
 5589                            2176     ;;;     MOV.L   #H'0001,R1                      ;
 5590                            2177     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5591                            2178     
 5592                            2179     ;;;_SEQ_RUN_CHG7_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5593                            2180     
 5594                            2181     ;       ****************************
 5595                            2182     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5596                            2183     ;       ****************************
 5597 000010A0 D114              2184             MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5598 000010A2 31BC              2185             ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5599 000010A4 6B12              2186             MOV.L   @R1,R11                         ;
 5600 000010A6 39BC              2187             ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5601 000010A8 3893              2188             CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5602 000010AA 892F              2189             BT      _CHG7_C80                       ; R8 >= R9 JUMP
 5603                            2190     
 5604 000010AC 6983              2191             MOV.L   R8,R9                           ;
 5605 000010AE 6888              2192             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5606 000010B0 688C              2193             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5607 000010B2 699C              2194             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5608                            2195     
 5609 000010B4 D110              2196             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5610 000010B6 3813              2197             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5611 000010B8 8928              2198             BT      _CHG7_C80                       ; IF ADR >= 127 THEN JUMP
 5612                            2199     
 5613 000010BA D010              2200             MOV.L   #(_WSC_CODE_END - _WSC_CODE),R0 ; 転送ﾊﾞｲﾄ長
 5614 000010BC D310              2201             MOV.L   #_WSC_CODE,R3                   ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5615 000010BE 64D3              2202             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5616                            2203     
 5617                            2204             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5618 000010C0 D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5619 000010C2 410B                   M           JSR     @R1                     ;
 5620 000010C4 0009                   M           NOP                                     ;
 5621                            2205                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5622                            2206     ;       *** ADR SET ***
 5623 000010C6 7400              2207             ADD     #(WSC_ADR - _WSC_CODE),R4       ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    60
PROGRAM NAME =

 5624 000010C8 6141              2208             MOV.W   @R4,R1                          ;
 5625 000010CA D00F              2209             MOV.L   #H'FF00,R0                      ;
 5626 000010CC 2109              2210             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5627                            2211     ;       SHLL    R8                              ; ADR * 2
 5628 000010CE 218B              2212             OR      R8,R1                           ;
 5629 000010D0 2411              2213             MOV.W   R1,@R4                          ; RAM ADR SET
 5630                            2214     
 5631                            2215     ;       *** OFFSET SET ***
 5632 000010D2 7400              2216             ADD     #(WSC_OFS - WSC_ADR),R4         ;
 5633 000010D4 6141              2217             MOV.W   @R4,R1                          ;
 5634 000010D6 2109              2218             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5635                            2219     ;       SHLL    R9                              ; OFFSET * 2
 5636 000010D8 219B              2220             OR      R9,R1                           ;
 5637 000010DA 2411              2221             MOV.W   R1,@R4                          ; RAM ADR SET
 5638                            2222     
 5639                            2223     ;       *** BIT SET ***
 5640 000010DC 7400              2224             ADD     #(WSC_BTD - WSC_OFS),R4         ;
 5641 000010DE 6141              2225             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5642                            2226     ;;;     MOV.L   #_SEQ_BBIT_CHG_TBL,R2           ;
 5643                            2227     ;;;     SHLL    R10                             ; * 2(word命令のため2倍する)
 5644                            2228     ;;;     ADD     R10,R2                          ;
 5645                            2229     ;;;     MOV.W   @R2,R10                         ; BIT CODE値格納
 5646                            2230     ;;;     MOV.L   #H'FF00,R0                      ;
 5647 000010E0 2109              2231             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5648 000010E2 21AB              2232             OR      R10,R1                          ;
 5649 000010E4 2411              2233             MOV.W   R1,@R4                          ; BIT CODEを書換
 5650                            2234     
 5651 000010E6 9001              2235             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5652                            2236             M_BRA   _SEQ_CHG7_EX                    ;
 5653 000010E8 A011                   M           BRA     _SEQ_CHG7_EX
 5654 000010EA 0009                   M           NOP
 5655                            2237     ;
 5656                                     ***** BEGIN-POOL *****
 5657 000010EC 0000                       DATA FOR SOURCE-LINE 2235
 5658 000010EE 0000                       ALIGNMENT CODE
 5659 000010F0 00000000                   DATA FOR SOURCE-LINE 2163
 5660 000010F4 00000000                   DATA FOR SOURCE-LINE 2184
 5661 000010F8 00000C00                   DATA FOR SOURCE-LINE 2196
 5662 000010FC 00000000                   DATA FOR SOURCE-LINE 2200
 5663 00001100 00000000                   DATA FOR SOURCE-LINE 2201
 5664 00001104 00000000                   DATA FOR SOURCE-LINE 2204
 5665 00001108 0000FF00                   DATA FOR SOURCE-LINE 2209
 5666                                     ***** END-POOL *****
 5667 0000110C                   2238     _CHG7_C80:
 5668 0000110C 9002              2239             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5669                            2240     
 5670 0000110E                   2241     _SEQ_CHG7_EX:
 5671                            2242             SUB_END
 5672                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5673 0000110E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5674                            2243             M_RTS
 5675 00001110 000B                   M           RTS                             ;RTSの後ろの
 5676 00001112 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5677                            2244     
 5678                            2245     ;       *******************************************
 5679                            2246     ;       *****   WTMR CODE CHANGE ROUTINE        ***
 5680                            2247     ;       *******************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    61
PROGRAM NAME =

 5681                                     ***** BEGIN-POOL *****
 5682 00001114 FF00                       DATA FOR SOURCE-LINE 2239
 5683                                     ***** END-POOL *****
 5684 00001116                   2248     _WTMR_CHG:                                      ; 00010000B     10
 5685                            2249             SUB_START
 5686 00001116 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5687                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5688                            2250     
 5689                            2251     ;       ************************
 5690                            2252     ;       *** MEM CODE処理追加 ***
 5691                            2253     ;       ************************
 5692                            2254     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5693                            2255     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5694                            2256     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5695                            2257     ;;;     MOV.L   @R1,R9                          ;
 5696                            2258     ;;;     SHLL    R8                              ; MEM ADR * 2
 5697                            2259     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5698                            2260     
 5699                            2261     ;       ************************
 5700                            2262     ;       *** BIT CODE処理追加 ***
 5701                            2263     ;       ************************
 5702                            2264     ;;;     MOV.L   #H'0008,R1                      ;
 5703                            2265     ;;;     CMP/GE  R1,R10                          ; BIT DATAﾁｪｯｸ IF OVER THEN ERR R10 >= R0
 5704                            2266     ;;;     BT      _SEQ_RUN_CHG8_BIT_H             ; R10>=R0 JUMP
 5705                            2267     ;;;     MOV.L   #H'0001,R1                      ;
 5706                            2268     ;;;     ADD     R1,R8                           ; MEM ADR L + 1
 5707                            2269     
 5708                            2270     ;;;_SEQ_RUN_CHG8_BIT_H:                         ; 上位ﾋﾞｯﾄのためMEM ADR変更なし
 5709                            2271     
 5710                            2272     ;       ****************************
 5711                            2273     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5712                            2274     ;       ****************************
 5713                            2275     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5714                            2276     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5715                            2277     ;;;     MOV.L   @R1,R11                         ;
 5716                            2278     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5717                            2279     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5718                            2280     ;;;     BT      _CHG8_C80                       ; R8 >= R9 JUMP
 5719                            2281     
 5720 00001118 6983              2282             MOV.L   R8,R9                           ;
 5721 0000111A 6888              2283             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5722 0000111C 688C              2284             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5723 0000111E 699C              2285             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5724                            2286     
 5725 00001120 D10F              2287             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5726 00001122 3813              2288             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5727 00001124 8956              2289             BT      _CHG8_C80                       ; IF ADR >= 127 THEN JUMP
 5728                            2290     
 5729 00001126 D00F              2291             MOV.L   #(_WTMR_CODE_END - _WTMR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5730 00001128 D30F              2292             MOV.L   #_WTMR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5731 0000112A 64D3              2293             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5732                            2294     
 5733                            2295             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5734 0000112C D10F                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5735 0000112E 410B                   M           JSR     @R1                     ;
 5736 00001130 0009                   M           NOP                                     ;
 5737                            2296                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    62
PROGRAM NAME =

                                          入れ直す。
 5738                            2297     ;       *** ADR SET ***
 5739 00001132 7400              2298             ADD     #(WTMR_UNH - _WTMR_CODE),R4     ;
 5740 00001134 6141              2299             MOV.W   @R4,R1                          ;
 5741 00001136 D00E              2300             MOV.L   #H'FF00,R0                      ;
 5742 00001138 2109              2301             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5743                            2302     ;       SHLL    R8                              ; ADR * 2
 5744 0000113A 218B              2303             OR      R8,R1                           ;
 5745 0000113C 2411              2304             MOV.W   R1,@R4                          ; RAM ADR SET
 5746                            2305     
 5747                            2306     ;       *** OFFSET SET ***
 5748 0000113E 7400              2307             ADD     #(WTMR_UNL - WTMR_UNH),R4       ;
 5749 00001140 6141              2308             MOV.W   @R4,R1                          ;
 5750 00001142 2109              2309             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5751                            2310     ;       SHLL    R9                              ; OFFSET * 2
 5752 00001144 219B              2311             OR      R9,R1                           ;
 5753 00001146 2411              2312             MOV.W   R1,@R4                          ; RAM ADR SET
 5754                            2313     
 5755                            2314     ;       *** BIT SET ***
 5756 00001148 7400              2315             ADD     #(WTMR_DGT - WTMR_UNL),R4       ;
 5757 0000114A 6141              2316             MOV.W   @R4,R1                          ; ﾒﾓﾘのところの命令LOAD
 5758 0000114C 2109              2317             AND     R0,R1                           ; BITﾃﾞｰﾀのところをｸﾘｱ
 5759 0000114E 6888              2318             SWAP.B  R8,R8                           ;
 5760 00001150 289B              2319             OR      R9,R8                           ;
 5761 00001152 6083              2320             MOV.L   R8,R0                           ;
 5762 00001154                   2321     _SEQ_TIM_DGT_SEL1
 5763 00001154 D807              2322             MOV.L   #D'255,R8                       ;
 5764 00001156 3086              2323             CMP/HI  R8,R0                           ;
 5765 00001158 8910              2324             BT      _SEQ_TIM_DGT_SEL2               ;
 5766 0000115A D907              2325             MOV.L   #D'0001,R9                      ;
 5767                            2326             M_BRA   _SEQ_TIM_DGT_END                ;
 5768 0000115C A02F                   M           BRA     _SEQ_TIM_DGT_END
 5769 0000115E 0009                   M           NOP
 5770                                     ***** BEGIN-POOL *****
 5771 00001160 00000C00                   DATA FOR SOURCE-LINE 2287
 5772 00001164 00000000                   DATA FOR SOURCE-LINE 2291
 5773 00001168 00000000                   DATA FOR SOURCE-LINE 2292
 5774 0000116C 00000000                   DATA FOR SOURCE-LINE 2295
 5775 00001170 0000FF00                   DATA FOR SOURCE-LINE 2300
 5776 00001174 000000FF                   DATA FOR SOURCE-LINE 2322
 5777 00001178 00000001                   DATA FOR SOURCE-LINE 2325
 5778                                     ***** END-POOL *****
 5779 0000117C                   2327     _SEQ_TIM_DGT_SEL2
 5780 0000117C D802              2328             MOV.L   #D'383,R8                       ;
 5781 0000117E 3086              2329             CMP/HI  R8,R0                           ;
 5782 00001180 8906              2330             BT      _SEQ_TIM_DGT_SEL3               ;
 5783 00001182 D902              2331             MOV.L   #D'0002,R9                      ;
 5784                            2332             M_BRA   _SEQ_TIM_DGT_END                ;
 5785 00001184 A01B                   M           BRA     _SEQ_TIM_DGT_END
 5786 00001186 0009                   M           NOP
 5787                                     ***** BEGIN-POOL *****
 5788 00001188 0000017F                   DATA FOR SOURCE-LINE 2328
 5789 0000118C 00000002                   DATA FOR SOURCE-LINE 2331
 5790                                     ***** END-POOL *****
 5791 00001190                   2333     _SEQ_TIM_DGT_SEL3
 5792 00001190 D802              2334             MOV.L   #D'415,R8                       ;
 5793 00001192 3086              2335             CMP/HI  R8,R0                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    63
PROGRAM NAME =

 5794 00001194 8906              2336             BT      _SEQ_TIM_DGT_SEL0               ;
 5795 00001196 D902              2337             MOV.L   #D'0003,R9                      ;
 5796                            2338             M_BRA   _SEQ_TIM_DGT_END                ;
 5797 00001198 A011                   M           BRA     _SEQ_TIM_DGT_END
 5798 0000119A 0009                   M           NOP
 5799                                     ***** BEGIN-POOL *****
 5800 0000119C 0000019F                   DATA FOR SOURCE-LINE 2334
 5801 000011A0 00000003                   DATA FOR SOURCE-LINE 2337
 5802                                     ***** END-POOL *****
 5803 000011A4                   2339     _SEQ_TIM_DGT_SEL0
 5804 000011A4 D802              2340             MOV.L   #D'479,R8                       ;
 5805 000011A6 3086              2341             CMP/HI  R8,R0                           ;
 5806 000011A8 8906              2342             BT      _SEQ_TIM_DGT_SEL5               ;
 5807 000011AA D902              2343             MOV.L   #D'0000,R9                      ;
 5808                            2344             M_BRA   _SEQ_TIM_DGT_END                ;
 5809 000011AC A007                   M           BRA     _SEQ_TIM_DGT_END
 5810 000011AE 0009                   M           NOP
 5811                                     ***** BEGIN-POOL *****
 5812 000011B0 000001DF                   DATA FOR SOURCE-LINE 2340
 5813 000011B4 00000000                   DATA FOR SOURCE-LINE 2343
 5814                                     ***** END-POOL *****
 5815 000011B8                   2345     _SEQ_TIM_DGT_SEL5
 5816 000011B8 D804              2346             MOV.L   #D'511,R8                       ;
 5817 000011BA 3086              2347             CMP/HI  R8,R0                           ;
 5818 000011BC D904              2348             MOV.L   #D'0005,R9                      ;
 5819 000011BE                   2349     _SEQ_TIM_DGT_END
 5820 000011BE 219B              2350             OR      R9,R1                           ;
 5821 000011C0 2411              2351             MOV.W   R1,@R4                          ; BIT CODEを書換
 5822                            2352     
 5823 000011C2 9001              2353             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5824                            2354             M_BRA   _SEQ_CHG8_EX                    ;
 5825 000011C4 A007                   M           BRA     _SEQ_CHG8_EX
 5826 000011C6 0009                   M           NOP
 5827                            2355     ;
 5828                                     ***** BEGIN-POOL *****
 5829 000011C8 0000                       DATA FOR SOURCE-LINE 2353
 5830 000011CA 0000                       ALIGNMENT CODE
 5831 000011CC 000001FF                   DATA FOR SOURCE-LINE 2346
 5832 000011D0 00000005                   DATA FOR SOURCE-LINE 2348
 5833                                     ***** END-POOL *****
 5834 000011D4                   2356     _CHG8_C80:
 5835 000011D4 9002              2357             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5836                            2358     
 5837 000011D6                   2359     _SEQ_CHG8_EX:
 5838                            2360             SUB_END
 5839                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5840 000011D6 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5841                            2361             M_RTS
 5842 000011D8 000B                   M           RTS                             ;RTSの後ろの
 5843 000011DA 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5844                            2362     
 5845                            2363     ;       *******************************************
 5846                            2364     ;       *****   WCTR CODE CHANGE ROUTINE        ***
 5847                            2365     ;       *******************************************
 5848                                     ***** BEGIN-POOL *****
 5849 000011DC FF00                       DATA FOR SOURCE-LINE 2357
 5850                                     ***** END-POOL *****
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    64
PROGRAM NAME =

 5851 000011DE                   2366     _WCTR_CHG:                                      ; 00010010B     12
 5852                            2367             SUB_START
 5853 000011DE 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5854                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5855                            2368     
 5856                            2369     ;       ************************
 5857                            2370     ;       *** MEM CODE処理追加 ***
 5858                            2371     ;       ************************
 5859                            2372     ;;;     MOV.L   #_MKIND_TBL_TOP,R1              ; MKINDﾃｰﾌﾞﾙ先頭ｱﾄﾞﾚｽ読出
 5860                            2373     ;;;     SHLL2   R11                             ; MKIND * 4 (WORDﾃﾞｰﾀの為)
 5861                            2374     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5862                            2375     ;;;     MOV.L   @R1,R9                          ;
 5863                            2376     ;;;     SHLL    R8                              ; MEM ADR * 2
 5864                            2377     ;;;     ADD     R9,R8                           ; 格納先ｱﾄﾞﾚｽ格納
 5865                            2378     
 5866                            2379     ;       ****************************
 5867                            2380     ;       *** ﾒﾓﾘ領域ｵｰﾊﾞｰ確認追加 ***
 5868                            2381     ;       ****************************
 5869                            2382     ;;;     MOV.L   #_MKIND_TBL,R1                  ; MKIND WORD数ﾃｰﾌﾞﾙ読出
 5870                            2383     ;;;     ADD     R11,R1                          ; MKIND先頭ｱﾄﾞﾚｽ算出
 5871                            2384     ;;;     MOV.L   @R1,R11                         ;
 5872                            2385     ;;;     ADD     R11,R9                          ; 格納先ｱﾄﾞﾚｽ格納
 5873                            2386     ;;;     CMP/GE  R9,R8                           ; ﾜｰｸﾒﾓﾘｵｰﾊﾞﾁｪｯｸ IF OVER THEN ERR R8 >= R9
 5874                            2387     ;;;     BT      _CHG9_C80                       ; R8 >= R9 JUMP
 5875                            2388     
 5876 000011E0 6983              2389             MOV.L   R8,R9                           ;
 5877 000011E2 6888              2390             SWAP.B  R8,R8                           ; MEM ADR H ⇔ L
 5878 000011E4 688C              2391             EXTU.B  R8,R8                           ; R8=MEM ADR(H)抽出
 5879 000011E6 699C              2392             EXTU.B  R9,R9                           ; R9=MEM ADR(L)抽出
 5880                            2393     
 5881 000011E8 D10B              2394             MOV.L   #_SEQ_CARD_MAX,R1               ; 127
 5882 000011EA 3813              2395             CMP/GE  R1,R8                           ; CA.DBA DATA CHECK
 5883 000011EC 891E              2396             BT      _CHG9_C80                       ; IF ADR >= 127 THEN JUMP
 5884                            2397     
 5885 000011EE D00B              2398             MOV.L   #(_WCTR_CODE_END - _WCTR_CODE),R0       ; 転送ﾊﾞｲﾄ長
 5886 000011F0 D30B              2399             MOV.L   #_WCTR_CODE,R3                  ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5887 000011F2 64D3              2400             MOV.L   R13,R4                          ; SEQ ADR. KEEP
 5888                            2401     
 5889                            2402             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1          ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5890 000011F4 D10B                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5891 000011F6 410B                   M           JSR     @R1                     ;
 5892 000011F8 0009                   M           NOP                                     ;
 5893                            2403                                                     ; 一括して転送してからﾒﾓﾘのとこだけあとで
                                          入れ直す。
 5894                            2404     
 5895                            2405     ;       *** ADR SET ***
 5896 000011FA 7400              2406             ADD     #(WCTR_UNH - _WCTR_CODE),R4     ;
 5897 000011FC 6141              2407             MOV.W   @R4,R1                          ;
 5898 000011FE D00A              2408             MOV.L   #H'FF00,R0                      ;
 5899 00001200 2109              2409             AND     R0,R1                           ; ADRﾃﾞｰﾀのところをｸﾘｱ
 5900                            2410     ;       SHLL    R8                              ; ADR * 2
 5901 00001202 218B              2411             OR      R8,R1                           ;
 5902 00001204 2411              2412             MOV.W   R1,@R4                          ; RAM ADR SET
 5903                            2413     
 5904                            2414     ;       *** OFFSET SET ***
 5905 00001206 7400              2415             ADD     #(WCTR_UNL - WCTR_UNH),R4       ;
 5906 00001208 6141              2416             MOV.W   @R4,R1                          ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    65
PROGRAM NAME =

 5907 0000120A 2109              2417             AND     R0,R1                           ; OFFSETﾃﾞｰﾀのところをｸﾘｱ
 5908                            2418     ;       SHLL    R9                              ; OFFSET * 2
 5909 0000120C 219B              2419             OR      R9,R1                           ;
 5910 0000120E 2411              2420             MOV.W   R1,@R4                          ; RAM ADR SET
 5911                            2421     
 5912 00001210 9001              2422             MOV.W   #_SQ_NML_COD,R0                 ; NORMAL END
 5913                            2423             M_BRA   _SEQ_CHG9_EX                    ;
 5914 00001212 A00C                   M           BRA     _SEQ_CHG9_EX
 5915 00001214 0009                   M           NOP
 5916                            2424     ;
 5917                                     ***** BEGIN-POOL *****
 5918 00001216 0000                       DATA FOR SOURCE-LINE 2422
 5919 00001218 00000C00                   DATA FOR SOURCE-LINE 2394
 5920 0000121C 00000000                   DATA FOR SOURCE-LINE 2398
 5921 00001220 00000000                   DATA FOR SOURCE-LINE 2399
 5922 00001224 00000000                   DATA FOR SOURCE-LINE 2402
 5923 00001228 0000FF00                   DATA FOR SOURCE-LINE 2408
 5924                                     ***** END-POOL *****
 5925 0000122C                   2425     _CHG9_C80:
 5926 0000122C 9002              2426             MOV.W   #_SQ_ERR_END,R0                 ; ERR END
 5927                            2427     
 5928 0000122E                   2428     _SEQ_CHG9_EX:
 5929                            2429             SUB_END
 5930                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 5931 0000122E 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 5932                            2430             M_RTS
 5933 00001230 000B                   M           RTS                             ;RTSの後ろの
 5934 00001232 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 5935                            2431     
 5936                            2432     ;       *******************************************
 5937                            2433     ;       *****   DSETLI CODE CHANGE ROUTINE      ***
 5938                            2434     ;       *******************************************
 5939                                     ***** BEGIN-POOL *****
 5940 00001234 FF00                       DATA FOR SOURCE-LINE 2426
 5941                                     ***** END-POOL *****
 5942 00001236                   2435     _DSETLI_CHG:                                            ; 10011011B     9B
 5943                            2436             SUB_START
 5944 00001236 4F22                   M           STS.L   PR,@-R15                ;[必要]
 5945                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 5946                            2437     
 5947 00001238 6583              2438             MOV.L   R8,R5                                   ;
 5948 0000123A 6888              2439             SWAP.B  R8,R8                                   ; MEM ADR H ⇔ L
 5949 0000123C 688C              2440             EXTU.B  R8,R8                                   ; R8=MEM ADR(HH)抽出
 5950 0000123E 655C              2441             EXTU.B  R5,R5                                   ; R5=MEM ADR(HL)抽出
 5951                            2442     
 5952 00001240 6693              2443             MOV.L   R9,R6                                   ;
 5953 00001242 6998              2444             SWAP.B  R9,R9                                   ; MEM ADR H ⇔ L
 5954 00001244 699C              2445             EXTU.B  R9,R9                                   ; R9=MEM ADR(LH)抽出
 5955 00001246 666C              2446             EXTU.B  R6,R6                                   ; R11=MEM ADR(LL)抽出
 5956                            2447     
 5957 00001248 D00F              2448             MOV.L   #(_DSETLI_CODE_END - _DSETLI_CODE),R0   ; 転送ﾊﾞｲﾄ長
 5958 0000124A D310              2449             MOV.L   #_DSETLI_CODE,R3                        ; ｺｰﾄﾞ先頭ｱﾄﾞﾚｽSET
 5959 0000124C 64D3              2450             MOV.L   R13,R4                                  ; SEQ ADR. KEEP
 5960                            2451     
 5961                            2452             FAR_JSR #_SEQ_CODE_BLOCK_MV,R1                  ; ｺｰﾄﾞのﾌﾞﾛｯｸ転送 INPUT R0,R3,R13
 5962 0000124E D110                   M           MOV.L   #_SEQ_CODE_BLOCK_MV,R1          ;ﾃｰﾌﾞﾙｱﾄﾞﾚｽの内容をREGへ
 5963 00001250 410B                   M           JSR     @R1                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    66
PROGRAM NAME =

 5964 00001252 0009                   M           NOP                                     ;
 5965                            2453                                                             ; 一括して転送してからﾒﾓﾘのとこだ
                                          けあとで入れ直す。
 5966                            2454     ;       *** DATA HH SET ***
 5967 00001254 7400              2455             ADD     #(DSETLI_DT_HH - _DSETLI_CODE),R4       ;
 5968 00001256 6141              2456             MOV.W   @R4,R1                                  ;
 5969 00001258 D00E              2457             MOV.L   #H'FF00,R0                              ;
 5970 0000125A 2109              2458             AND     R0,R1                                   ; DATA HH のところをｸﾘｱ
 5971 0000125C 218B              2459             OR      R8,R1                                   ;
 5972 0000125E 2411              2460             MOV.W   R1,@R4                                  ; RAM ADR SET
 5973                            2461     
 5974                            2462     ;       *** DATA HL SET ***
 5975 00001260 7400              2463             ADD     #(DSETLI_DT_HL - DSETLI_DT_HH),R4       ;
 5976 00001262 6141              2464             MOV.W   @R4,R1                                  ;
 5977 00001264 2109              2465             AND     R0,R1                                   ; DATA HL のところをｸﾘｱ
 5978 00001266 215B              2466             OR      R5,R1                                   ;
 5979 00001268 2411              2467             MOV.W   R1,@R4                                  ; RAM ADR SET
 5980                            2468     
 5981                            2469     ;       *** DATA LH SET ***
 5982 0000126A 7400              2470             ADD     #(DSETLI_DT_LH - DSETLI_DT_HL),R4       ;
 5983 0000126C 6141              2471             MOV.W   @R4,R1                                  ;
 5984 0000126E 2109              2472             AND     R0,R1                                   ; DATA LH のところをｸﾘｱ
 5985 00001270 219B              2473             OR      R9,R1                                   ;
 5986 00001272 2411              2474             MOV.W   R1,@R4                                  ; RAM ADR SET
 5987                            2475     
 5988                            2476     ;       *** DATA LL SET ***
 5989 00001274 7400              2477             ADD     #(DSETLI_DT_LL - DSETLI_DT_LH),R4       ;
 5990 00001276 6141              2478             MOV.W   @R4,R1                                  ;
 5991 00001278 2109              2479             AND     R0,R1                                   ; DATA LL のところをｸﾘｱ
 5992 0000127A 216B              2480             OR      R6,R1                                   ;
 5993 0000127C 2411              2481             MOV.W   R1,@R4                                  ; RAM ADR SET
 5994                            2482     
 5995 0000127E 9001              2483             MOV.W   #_SQ_NML_COD,R0                         ; NORMAL END
 5996                            2484             M_BRA   _SEQ_CHG10_EX                           ;
 5997 00001280 A00A                   M           BRA     _SEQ_CHG10_EX
 5998 00001282 0009                   M           NOP
 5999                            2485     
 6000                                     ***** BEGIN-POOL *****
 6001 00001284 0000                       DATA FOR SOURCE-LINE 2483
 6002 00001286 0000                       ALIGNMENT CODE
 6003 00001288 00000000                   DATA FOR SOURCE-LINE 2448
 6004 0000128C 00000000                   DATA FOR SOURCE-LINE 2449
 6005 00001290 00000000                   DATA FOR SOURCE-LINE 2452
 6006 00001294 0000FF00                   DATA FOR SOURCE-LINE 2457
 6007                                     ***** END-POOL *****
 6008 00001298                   2486     _SEQ_CHG10_EX:
 6009                            2487             SUB_END
 6010                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 6011 00001298 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 6012                            2488             M_RTS
 6013 0000129A 000B                   M           RTS                             ;RTSの後ろの
 6014 0000129C 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 6015                            2489     
 6016                            2490     ;       ***********************************
 6017                            2491     ;       ***     ｺｰﾄﾞのﾌﾞﾛｯｸ転送         ***
 6018                            2492     ;       ***********************************
 6019                            2493     ;       INPUT   R0,R3,R13
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    67
PROGRAM NAME =

 6020                            2494     ;       USE     R1
 6021                            2495     
 6022 0000129E                   2496     _SEQ_CODE_BLOCK_MV:
 6023                            2497             SUB_START
 6024 0000129E 4F22                   M           STS.L   PR,@-R15                ;[必要]
 6025                                 M   ;;;;;;; ADD     #-4,R15                 ;[不要?]
 6026                            2498     
 6027 000012A0                   2499     _SEQ_CODE_BLOCK_LOOP:
 6028 000012A0 2008              2500             TST     R0,R0                           ; COUNTER CHECK
 6029 000012A2 8909              2501             BT      _SEQ_CD_BLOCK_MV_EXIT           ; 0 THEN EXIT
 6030                            2502     
 6031 000012A4 6131              2503             MOV.W   @R3,R1                          ; SEQ_ROM
 6032 000012A6 2D11              2504             MOV.W   R1,@R13                         ; SEQ_RAM
 6033 000012A8 D102              2505             MOV.L   #2,R1                           ;
 6034 000012AA 3018              2506             SUB     R1,R0                           ; COUNTER -2
 6035 000012AC 331C              2507             ADD     R1,R3                           ; ROM ADR. +2
 6036 000012AE 3D1C              2508             ADD     R1,R13                          ; RAM ADR. +2
 6037                            2509             M_BRA   _SEQ_CODE_BLOCK_LOOP            ;
 6038 000012B0 AFF6                   M           BRA     _SEQ_CODE_BLOCK_LOOP
 6039 000012B2 0009                   M           NOP
 6040                            2510     
 6041                                     ***** BEGIN-POOL *****
 6042 000012B4 00000002                   DATA FOR SOURCE-LINE 2505
 6043                                     ***** END-POOL *****
 6044 000012B8                   2511     _SEQ_CD_BLOCK_MV_EXIT:
 6045                            2512     
 6046                            2513             SUB_END
 6047                                 M   ;;;;;;; ADD     #4,R15                  ;[不要?]
 6048 000012B8 4F26                   M           LDS.L   @R15+,PR                ;[必要]
 6049                            2514             M_RTS
 6050 000012BA 000B                   M           RTS                             ;RTSの後ろの
 6051 000012BC 0009                   M           NOP                             ;@R15+,PRはﾀﾞﾒ
 6052                            2515     
 6053                            2516             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    68

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

ADDL_ADR                                  IMPT 00000000   1950  3969  3970 
ADDL_OFS                                  IMPT 00000000   1951  3970 
ADDWI_DT_LH                               IMPT 00000000   1955  4587  4588 
ADDWI_DT_LL                               IMPT 00000000   1956  4588 
ADDW_ADR                                  IMPT 00000000   1945  3936  3937 
ADDW_OFS                                  IMPT 00000000   1946  3937 
ANDL_ADR                                  IMPT 00000000   1980  4101  4102 
ANDL_OFS                                  IMPT 00000000   1981  4102 
ANDN_ADR                                  IMPT 00000000   1736  4922  4923 
ANDN_BIT                                  IMPT 00000000   1738  4924 
ANDN_OFS                                  IMPT 00000000   1737  4923  4924 
ANDWI_DT_LH                               IMPT 00000000   1985  4653  4654 
ANDWI_DT_LL                               IMPT 00000000   1986  4654 
ANDW_ADR                                  IMPT 00000000   1975  4068  4069 
ANDW_OFS                                  IMPT 00000000   1976  4069 
AND_ADR                                   IMPT 00000000   1730  4888  4889 
AND_BIT                                   IMPT 00000000   1732  4890 
AND_OFS                                   IMPT 00000000   1731  4889  4890 
A_REG                                     REG             2274*
BIT0                                      EQU  00000001     19*
BIT1                                      EQU  00000002     20*
BIT10                                     EQU  00000400     29*
BIT11                                     EQU  00000800     30*
BIT12                                     EQU  00001000     31*
BIT13                                     EQU  00002000     32*
BIT14                                     EQU  00004000     33*
BIT15                                     EQU  00008000     34*
BIT16                                     EQU  00010000     35*
BIT17                                     EQU  00020000     36*
BIT18                                     EQU  00040000     37*
BIT19                                     EQU  00080000     38*
BIT2                                      EQU  00000004     21*
BIT20                                     EQU  00100000     39*
BIT21                                     EQU  00200000     40*
BIT22                                     EQU  00400000     41*
BIT23                                     EQU  00800000     42*
BIT24                                     EQU  01000000     43*
BIT25                                     EQU  02000000     44*
BIT26                                     EQU  04000000     45*
BIT27                                     EQU  08000000     46*
BIT28                                     EQU  10000000     47*
BIT29                                     EQU  20000000     48*
BIT3                                      EQU  00000008     22*
BIT30                                     EQU  40000000     49*
BIT31                                     EQU  80000000     50*
BIT4                                      EQU  00000010     23*
BIT5                                      EQU  00000020     24*
BIT6                                      EQU  00000040     25*
BIT7                                      EQU  00000080     26*
BIT8                                      EQU  00000100     27*
BIT9                                      EQU  00000200     28*
CLR_ADR                                   IMPT 00000000   1808  3351  3352 
CLR_OFS                                   IMPT 00000000   1809  3352 
CTBL_REG                                  REG             2278*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    69

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

DSETLI_DT_HH                              IMPT 00000000   2029  5967  5975 
DSETLI_DT_HL                              IMPT 00000000   2030  5975  5982 
DSETLI_DT_LH                              IMPT 00000000   2031  5982  5989 
DSETLI_DT_LL                              IMPT 00000000   2032  5989 
DSETWI_DT_LH                              IMPT 00000000   1803  4356  4357 
DSETWI_DT_LL                              IMPT 00000000   1804  4357 
DTBL_REG                                  REG             2279*
D_REG                                     REG             2277*
EQL_ADR                                   IMPT 00000000   1860  3549  3550 
EQL_OFS                                   IMPT 00000000   1861  3550 
EQWI_DT_LH                                IMPT 00000000   1865  4389  4390 
EQWI_DT_LL                                IMPT 00000000   1866  4390 
EQW_ADR                                   IMPT 00000000   1855  3516  3517 
EQW_OFS                                   IMPT 00000000   1856  3517 
GEL_ADR                                   IMPT 00000000   1905  3747  3748 
GEL_OFS                                   IMPT 00000000   1906  3748 
GEWI_DT_LH                                IMPT 00000000   1910  4488  4489 
GEWI_DT_LL                                IMPT 00000000   1911  4489 
GEW_ADR                                   IMPT 00000000   1900  3714  3715 
GEW_OFS                                   IMPT 00000000   1901  3715 
GTL_ADR                                   IMPT 00000000   1890  3681  3682 
GTL_OFS                                   IMPT 00000000   1891  3682 
GTWI_DT_LH                                IMPT 00000000   1895  4455  4456 
GTWI_DT_LL                                IMPT 00000000   1896  4456 
GTW_ADR                                   IMPT 00000000   1885  3648  3649 
GTW_OFS                                   IMPT 00000000   1886  3649 
H_BYTE                                    EQU  00000000     86*
LDL_ADR                                   IMPT 00000000   1840  3417  3418 
LDL_OFS                                   IMPT 00000000   1841  3418 
LDN_ADR                                   IMPT 00000000   1724  4854  4855 
LDN_BIT                                   IMPT 00000000   1726  4856 
LDN_OFS                                   IMPT 00000000   1725  4855  4856 
LDW_ADR                                   IMPT 00000000   1835  3384  3385 
LDW_OFS                                   IMPT 00000000   1836  3385 
LD_ADR                                    IMPT 00000000   1718  4820  4821 
LD_BIT                                    IMPT 00000000   1720  4822 
LD_OFS                                    IMPT 00000000   1719  4821  4822 
LEL_ADR                                   IMPT 00000000   1935  3903  3904 
LEL_OFS                                   IMPT 00000000   1936  3904 
LEWI_DT_LH                                IMPT 00000000   1940  4554  4555 
LEWI_DT_LL                                IMPT 00000000   1941  4555 
LEW_ADR                                   IMPT 00000000   1930  3870  3871 
LEW_OFS                                   IMPT 00000000   1931  3871 
LTL_ADR                                   IMPT 00000000   1920  3837  3838 
LTL_OFS                                   IMPT 00000000   1921  3838 
LTWI_DT_LH                                IMPT 00000000   1925  4521  4522 
LTWI_DT_LL                                IMPT 00000000   1926  4522 
LTW_ADR                                   IMPT 00000000   1915  3804  3805 
LTW_OFS                                   IMPT 00000000   1916  3805 
L_BYTE                                    EQU  00000001     85*
M_REG                                     REG             2276*
NBIT0                                     EQU  000000FE     53*
NBIT1                                     EQU  000000FD     54*
NBIT10                                    EQU  0000FBFF     64*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    70

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

NBIT11                                    EQU  0000F7FF     65*
NBIT12                                    EQU  0000EFFF     66*
NBIT13                                    EQU  0000DFFF     67*
NBIT14                                    EQU  0000BFFF     68*
NBIT15                                    EQU  00007FFF     69*
NBIT2                                     EQU  000000FB     55*
NBIT3                                     EQU  000000F7     56*
NBIT4                                     EQU  000000EF     57*
NBIT5                                     EQU  000000DF     58*
NBIT6                                     EQU  000000BF     59*
NBIT7                                     EQU  0000007F     60*
NBIT8                                     EQU  0000FEFF     62*
NBIT9                                     EQU  0000FDFF     63*
NEL_ADR                                   IMPT 00000000   1875  3615  3616 
NEL_OFS                                   IMPT 00000000   1876  3616 
NEWI_DT_LH                                IMPT 00000000   1880  4422  4423 
NEWI_DT_LL                                IMPT 00000000   1881  4423 
NEW_ADR                                   IMPT 00000000   1870  3582  3583 
NEW_OFS                                   IMPT 00000000   1871  3583 
N_REG                                     REG             2275*
ORL_ADR                                   IMPT 00000000   1995  4167  4168 
ORL_OFS                                   IMPT 00000000   1996  4168 
ORN_ADR                                   IMPT 00000000   1748  4990  4991 
ORN_BIT                                   IMPT 00000000   1750  4992 
ORN_OFS                                   IMPT 00000000   1749  4991  4992 
ORWI_DT_LH                                IMPT 00000000   2000  4686  4687 
ORWI_DT_LL                                IMPT 00000000   2001  4687 
ORW_ADR                                   IMPT 00000000   1990  4134  4135 
ORW_OFS                                   IMPT 00000000   1991  4135 
OR_ADR                                    IMPT 00000000   1742  4956  4957 
OR_BIT                                    IMPT 00000000   1744  4958 
OR_OFS                                    IMPT 00000000   1743  4957  4958 
P                                P        SCT  00000000   2293*
PLF_ADR                                   IMPT 00000000   1779  5058  5059 
PLF_BIT                                   IMPT 00000000   1781  5060 
PLF_OFS                                   IMPT 00000000   1780  5059  5060 
PLS_ADR                                   IMPT 00000000   1773  5024  5025 
PLS_BIT                                   IMPT 00000000   1775  5026 
PLS_OFS                                   IMPT 00000000   1774  5025  5026 
R0_REG                                    REG             2283*
R10_REG                                   REG             2289*
R1_REG                                    REG             2284*
R2_REG                                    REG             2285*
R3_REG                                    REG             2286*
R4_REG                                    REG             2287*
R9_REG                                    REG             2288*
RSTCD_SETBIT                              IMPT 00000000   1769  5520 
RST_ADR                                   IMPT 00000000   1767  5503  5512 
RST_OFS                                   IMPT 00000000   1768  5512  5520 
SETCD_SETBIT                              IMPT 00000000   1763  5402 
SET_ADR                                   IMPT 00000000   1761  5385  5394 
SET_OFS                                   IMPT 00000000   1762  5394  5402 
STCD_CLRBIT                               IMPT 00000000   1757  5284 
STCD_SETBIT                               IMPT 00000000   1756  5272  5284 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    71

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

STL_ADR                                   IMPT 00000000   1850  3483  3484 
STL_OFS                                   IMPT 00000000   1851  3484 
STW_ADR                                   IMPT 00000000   1845  3450  3451 
STW_OFS                                   IMPT 00000000   1846  3451 
ST_ADR                                    IMPT 00000000   1754  5255  5264 
ST_OFS                                    IMPT 00000000   1755  5264  5272 
SUBL_ADR                                  IMPT 00000000   1965  4035  4036 
SUBL_OFS                                  IMPT 00000000   1966  4036 
SUBWI_DT_LH                               IMPT 00000000   1970  4620  4621 
SUBWI_DT_LL                               IMPT 00000000   1971  4621 
SUBW_ADR                                  IMPT 00000000   1960  4002  4003 
SUBW_OFS                                  IMPT 00000000   1961  4003 
TOP_REG                                   REG             2280*
WCTR_UNH                                  IMPT 00000000   1819  5896  5905 
WCTR_UNL                                  IMPT 00000000   1820  5905 
WSC_ADR                                   IMPT 00000000   1824  5623  5632 
WSC_BTD                                   IMPT 00000000   1826  5640 
WSC_OFS                                   IMPT 00000000   1825  5632  5640 
WSR_ADR                                   IMPT 00000000   1830  3318  3319 
WSR_OFS                                   IMPT 00000000   1831  3319 
WTMR_DGT                                  IMPT 00000000   1815  5756 
WTMR_UNH                                  IMPT 00000000   1813  5739  5748 
WTMR_UNL                                  IMPT 00000000   1814  5748  5756 
XBIT0                                     EQU  00000000     72*
XBIT1                                     EQU  00000001     73*
XBIT2                                     EQU  00000002     74*
XBIT3                                     EQU  00000003     75*
XBIT4                                     EQU  00000004     76*
XBIT5                                     EQU  00000005     77*
XBIT6                                     EQU  00000006     78*
XBIT7                                     EQU  00000007     79*
XORL_ADR                                  IMPT 00000000   2010  4233  4234 
XORL_OFS                                  IMPT 00000000   2011  4234 
XORWI_DT_LH                               IMPT 00000000   2015  4719  4720 
XORWI_DT_LL                               IMPT 00000000   2016  4720 
XORW_ADR                                  IMPT 00000000   2005  4200  4201 
XORW_OFS                                  IMPT 00000000   2006  4201 
_ADDL_CHG                        P        EXPT 0000082C   2092  3962*
_ADDL_CODE                                IMPT 00000000   1949  3967  3968  3969 
_ADDL_CODE_END                            IMPT 00000000   1952  3967 
_ADDWI_CHG                       P        EXPT 00000B5C   2093  4580*
_ADDWI_CODE                               IMPT 00000000   1954  4585  4586  4587 
_ADDWI_CODE_END                           IMPT 00000000   1957  4585 
_ADDW_CHG                        P        EXPT 00000800   2091  3929*
_ADDW_CODE                                IMPT 00000000   1944  3934  3935  3936 
_ADDW_CODE_END                            IMPT 00000000   1947  3934 
_ADD_CODE                                 IMPT 00000000   2019 
_ADD_CODE_END                             IMPT 00000000   2020 
_ADD_SUB                                  IMPT 00000000   1703 
_AMRG_CHG                        P        EXPT 000003DC   2059  3077*
_AMRG_CODE                                IMPT 00000000   1784  3082  3083 
_AMRG_CODE_END                            IMPT 00000000   1785  3082 
_ANDL_CHG                        P        EXPT 000008DC   2100  4094*
_ANDL_CODE                                IMPT 00000000   1979  4099  4100  4101 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    72

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ANDL_CODE_END                            IMPT 00000000   1982  4099 
_ANDN_CHG                        P        EXPT 00000D18   2044  4915*
_ANDN_CODE                                IMPT 00000000   1735  4920  4921  4922 
_ANDN_CODE_END                            IMPT 00000000   1739  4920 
_ANDWI_CHG                       P        EXPT 00000BB4   2101  4646*
_ANDWI_CODE                               IMPT 00000000   1984  4651  4652  4653 
_ANDWI_CODE_END                           IMPT 00000000   1987  4651 
_ANDW_CHG                        P        EXPT 000008B0   2099  4061*
_ANDW_CODE                                IMPT 00000000   1974  4066  4067  4068 
_ANDW_CODE_END                            IMPT 00000000   1977  4066 
_ANDW_SUB                                 IMPT 00000000   1700 
_AND_CHG                         P        EXPT 00000CE8   2043  4881*
_AND_CODE                                 IMPT 00000000   1729  4886  4887  4888 
_AND_CODE_END                             IMPT 00000000   1733  4886 
_CB_BAKUP_CMD1                            EQU  00005678    118*
_CB_BAKUP_CMD2                            EQU  00001234    119*
_CB_BAK_SUM_COD1                          EQU  5AA51234    116*
_CB_BAK_SUM_COD2                          EQU  A55A4321    117*
_CB_ERR_INFO_MEM                          EQU  00000080    142*
_CB_ERR_INFO_PSIZE                        EQU  00000008    143*
_CB_STS_BUF_1BLK                          EQU  00000040    121*  123 
_CB_STS_BUF_BLKMAX                        EQU  00000008    122*  123 
_CB_STS_BUF_MAX                           EQU  00000200    123*
_CB_TRD_BEFORE                            EQU  00000060    131*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    135*
_CB_TRD_BUF_MAX                           EQU  00000800    132*
_CB_TRD_DP_1CNT                           EQU  00000008    134*
_CB_TRD_DP_CH                             EQU  00000004    127*
_CB_TRD_SMP_CNT                           EQU  00000080    130*
_CHG1_C80                        P             00000A1C   4282  4291  4331*
_CHG2_C80                        P             00000C7C   4757  4795*
_CHG3_C80                        P             00000E94   5119  5128  5183*
_CHG4_C80                        P             00000F44   5234  5243  5313*
_CHG5_C80                        P             00000FE4   5364  5373  5431*
_CHG6_C80                        P             00001088   5482  5491  5551*
_CHG7_C80                        P             0000110C   5602  5611  5667*
_CHG8_C80                        P             000011D4   5727  5834*
_CHG9_C80                        P             0000122C   5883  5925*
_CLR_CHG                         P        EXPT 00000500   2057  3344*
_CLR_CODE                                 IMPT 00000000   1807  3349  3350  3351 
_CLR_CODE_END                             IMPT 00000000   1810  3349 
_CLR_SUB                                  IMPT 00000000   1689 
_DI_X_TOP1                                IMPT 00000000   1654 
_DI_X_TOP2                                IMPT 00000000   1655 
_DO_Y_TOP1                                IMPT 00000000   1656 
_DO_Y_TOP2                                IMPT 00000000   1657 
_DSETLI_CHG                      P        EXPT 00001236   2109  5942*
_DSETLI_CODE                              IMPT 00000000   2028  5957  5958  5967 
_DSETLI_CODE_END                          IMPT 00000000   2033  5957 
_DSETWI_CHG                      P        EXPT 00000A28   2058  4349*
_DSETWI_CODE                              IMPT 00000000   1802  4354  4355  4356 
_DSETWI_CODE_END                          IMPT 00000000   1805  4354 
_DUMMY_SUM_CODE                           EQU  5AA53CC3    109*
_ENDNRG_CHG                      P        EXPT 0000047C   2064  3222*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    73

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_ENDNRG_CODE                              IMPT 00000000   1799  3227  3228 
_ENDNRG_CODE_END                          IMPT 00000000   1800  3227 
_END_CHG                         P        EXPT 0000049C   2065  3251*
_END_CODE                                 IMPT 00000000   2025  3256  3257 
_END_CODE_END                             IMPT 00000000   2026  3256 
_END_SUB                                  IMPT 00000000   1705 
_EQL_CHG                         P        EXPT 00000608   2073  3542*
_EQL_CODE                                 IMPT 00000000   1859  3547  3548  3549 
_EQL_CODE_END                             IMPT 00000000   1862  3547 
_EQWI_CHG                        P        EXPT 00000A54   2074  4382*
_EQWI_CODE                                IMPT 00000000   1864  4387  4388  4389 
_EQWI_CODE_END                            IMPT 00000000   1867  4387 
_EQW_CHG                         P        EXPT 000005DC   2072  3509*
_EQW_CODE                                 IMPT 00000000   1854  3514  3515  3516 
_EQW_CODE_END                             IMPT 00000000   1857  3514 
_EQ_SUB                                   IMPT 00000000   1696 
_GEL_CHG                         P        EXPT 00000710   2082  3740*
_GEL_CODE                                 IMPT 00000000   1904  3745  3746  3747 
_GEL_CODE_END                             IMPT 00000000   1907  3745 
_GEWI_CHG                        P        EXPT 00000AD8   2083  4481*
_GEWI_CODE                                IMPT 00000000   1909  4486  4487  4488 
_GEWI_CODE_END                            IMPT 00000000   1912  4486 
_GEW_CHG                         P        EXPT 000006E4   2081  3707*
_GEW_CODE                                 IMPT 00000000   1899  3712  3713  3714 
_GEW_CODE_END                             IMPT 00000000   1902  3712 
_GTL_CHG                         P        EXPT 000006B8   2079  3674*
_GTL_CODE                                 IMPT 00000000   1889  3679  3680  3681 
_GTL_CODE_END                             IMPT 00000000   1892  3679 
_GTWI_CHG                        P        EXPT 00000AAC   2080  4448*
_GTWI_CODE                                IMPT 00000000   1894  4453  4454  4455 
_GTWI_CODE_END                            IMPT 00000000   1897  4453 
_GTW_CHG                         P        EXPT 0000068C   2078  3641*
_GTW_CODE                                 IMPT 00000000   1884  3646  3647  3648 
_GTW_CODE_END                             IMPT 00000000   1887  3646 
_GT_SUB                                   IMPT 00000000   1698 
_LDL_CHG                         P        EXPT 00000558   2068  3410*
_LDL_CODE                                 IMPT 00000000   1839  3415  3416  3417 
_LDL_CODE_END                             IMPT 00000000   1842  3415 
_LDNRG_CHG                       P        EXPT 0000045C   2063  3193*
_LDNRG_CODE                               IMPT 00000000   1796  3198  3199 
_LDNRG_CODE_END                           IMPT 00000000   1797  3198 
_LDN_CHG                         P        EXPT 00000CB8   2042  4847*
_LDN_CODE                                 IMPT 00000000   1723  4852  4853  4854 
_LDN_CODE_END                             IMPT 00000000   1727  4852 
_LDON_CHG                        P        EXPT 000003BC   2040  3048*
_LDON_CODE                                IMPT 00000000   1714  3053  3054 
_LDON_CODE_END                            IMPT 00000000   1715  3053 
_LDW_CHG                         P        EXPT 0000052C   2067  3377*
_LDW_CODE                                 IMPT 00000000   1834  3382  3383  3384 
_LDW_CODE_END                             IMPT 00000000   1837  3382 
_LDW_SUB                                  IMPT 00000000   1694 
_LD_CHG                          P        EXPT 00000C88   2041  4813*
_LD_CODE                                  IMPT 00000000   1717  4818  4819  4820 
_LD_CODE_END                              IMPT 00000000   1721  4818 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    74

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_LEL_CHG                         P        EXPT 000007D4   2089  3896*
_LEL_CODE                                 IMPT 00000000   1934  3901  3902  3903 
_LEL_CODE_END                             IMPT 00000000   1937  3901 
_LEWI_CHG                        P        EXPT 00000B30   2090  4547*
_LEWI_CODE                                IMPT 00000000   1939  4552  4553  4554 
_LEWI_CODE_END                            IMPT 00000000   1942  4552 
_LEW_CHG                         P        EXPT 000007A8   2088  3863*
_LEW_CODE                                 IMPT 00000000   1929  3868  3869  3870 
_LEW_CODE_END                             IMPT 00000000   1932  3868 
_LE_SUB                                   IMPT 00000000   1699 
_LTL_CHG                         P        EXPT 0000077C   2086  3830*
_LTL_CODE                                 IMPT 00000000   1919  3835  3836  3837 
_LTL_CODE_END                             IMPT 00000000   1922  3835 
_LTWI_CHG                        P        EXPT 00000B04   2087  4514*
_LTWI_CODE                                IMPT 00000000   1924  4519  4520  4521 
_LTWI_CODE_END                            IMPT 00000000   1927  4519 
_LTW_CHG                         P        EXPT 00000750   2085  3797*
_LTW_CODE                                 IMPT 00000000   1914  3802  3803  3804 
_LTW_CODE_END                             IMPT 00000000   1917  3802 
_MKIND_A                                  EQU  00000040   2250*
_MKIND_A_ADR                              EQU  00001610   2249*
_MKIND_C                                  EQU  00000040   2232* 2233 
_MKIND_CD                                 EQU  00000400   2236* 2237 
_MKIND_CD_ADR                             EQU  00000900   2235* 2237 
_MKIND_C_ADR                              EQU  000004C0   2231* 2233 
_MKIND_F                                  EQU  00000110   2246* 2247 
_MKIND_F_ADR                              EQU  00000D00   2245* 2247 
_MKIND_L                                  EQU  00000040   2228* 2229 
_MKIND_L_ADR                              EQU  00000440   2227* 2229 
_MKIND_M                                  EQU  00000400   2226* 2227 
_MKIND_M_ADR                              EQU  00000040   2225* 2227 
_MKIND_S                                  EQU  00000800   2248* 2249 
_MKIND_S_ADR                              EQU  00000E10   2247* 2249 
_MKIND_T                                  EQU  00000040   2230* 2231 
_MKIND_TBL                                IMPT 00000000   2139  4277  5114  5229  5359  5477  5597 
_MKIND_TBL_TOP                            IMPT 00000000   2140  4267  5093  5208  5338  5456  5576 
_MKIND_TD                                 EQU  00000400   2234* 2235 
_MKIND_TD_ADR                             EQU  00000500   2233* 2235 
_MKIND_T_ADR                              EQU  00000480   2229* 2231 
_MKIND_W0                                 EQU  00000000   2220* 2221 
_MKIND_W0_ADR                             EQU  00000000   2219*
_MKIND_W1                                 EQU  00000000   2238* 2239 
_MKIND_W1_ADR                             EQU  00000D00   2237* 2239 
_MKIND_W2                                 EQU  00000000   2240* 2241 
_MKIND_W2_ADR                             EQU  00000D00   2239* 2241 
_MKIND_W3                                 EQU  00000000   2242* 2243 
_MKIND_W3_ADR                             EQU  00000D00   2241* 2243 
_MKIND_W4                                 EQU  00000000   2244* 2245 
_MKIND_W4_ADR                             EQU  00000D00   2243* 2245 
_MKIND_X                                  EQU  00000020   2222* 2223 
_MKIND_X_ADR                              EQU  00000000   2221* 2223 
_MKIND_Y                                  EQU  00000020   2224* 2225 
_MKIND_Y_ADR                              EQU  00000020   2223* 2225 
_NEL_CHG                         P        EXPT 00000660   2076  3608*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    75

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_NEL_CODE                                 IMPT 00000000   1874  3613  3614  3615 
_NEL_CODE_END                             IMPT 00000000   1877  3613 
_NEWI_CHG                        P        EXPT 00000A80   2077  4415*
_NEWI_CODE                                IMPT 00000000   1879  4420  4421  4422 
_NEWI_CODE_END                            IMPT 00000000   1882  4420 
_NEW_CHG                         P        EXPT 00000634   2075  3575*
_NEW_CODE                                 IMPT 00000000   1869  3580  3581  3582 
_NEW_CODE_END                             IMPT 00000000   1872  3580 
_NE_SUB                                   IMPT 00000000   1697 
_NOP_CHG                         P        EXPT 0000039C   2039  3019*
_NOP_CODE                                 IMPT 00000000   1711  3024  3025 
_NOP_CODE_END                             IMPT 00000000   1712  3024 
_OMRG_CHG                        P        EXPT 000003FC   2060  3106*
_OMRG_CODE                                IMPT 00000000   1787  3111  3112 
_OMRG_CODE_END                            IMPT 00000000   1788  3111 
_ORL_CHG                         P        EXPT 00000934   2103  4160*
_ORL_CODE                                 IMPT 00000000   1994  4165  4166  4167 
_ORL_CODE_END                             IMPT 00000000   1997  4165 
_ORN_CHG                         P        EXPT 00000D78   2046  4983*
_ORN_CODE                                 IMPT 00000000   1747  4988  4989  4990 
_ORN_CODE_END                             IMPT 00000000   1751  4988 
_ORWI_CHG                        P        EXPT 00000BE0   2104  4679*
_ORWI_CODE                                IMPT 00000000   1999  4684  4685  4686 
_ORWI_CODE_END                            IMPT 00000000   2002  4684 
_ORW_CHG                         P        EXPT 00000908   2102  4127*
_ORW_CODE                                 IMPT 00000000   1989  4132  4133  4134 
_ORW_CODE_END                             IMPT 00000000   1992  4132 
_ORW_SUB                                  IMPT 00000000   1701 
_OR_CHG                          P        EXPT 00000D48   2045  4949*
_OR_CODE                                  IMPT 00000000   1741  4954  4955  4956 
_OR_CODE_END                              IMPT 00000000   1745  4954 
_PLF_CHG                         P        EXPT 00000DD8   2048  5051*
_PLF_CODE                                 IMPT 00000000   1778  5056  5057  5058 
_PLF_CODE_END                             IMPT 00000000   1782  5056 
_PLF_SUB                                  IMPT 00000000   1688 
_PLS_CHG                         P        EXPT 00000DA8   2047  5017*
_PLS_CODE                                 IMPT 00000000   1772  5022  5023  5024 
_PLS_CODE_END                             IMPT 00000000   1776  5022 
_PLS_SUB                                  IMPT 00000000   1687 
_POP_CHG                         P        EXPT 0000043C   2062  3164*
_POP_CODE                                 IMPT 00000000   1793  3169  3170 
_POP_CODE_END                             IMPT 00000000   1794  3169 
_PUSH_CHG                        P        EXPT 0000041C   2061  3135*
_PUSH_CODE                                IMPT 00000000   1790  3140  3141 
_PUSH_CODE_END                            IMPT 00000000   1791  3140 
_PVP_SQ_COM_ADR                           IMPT 00000000   2327  2359  2455  2551 
_PVP_SQ_COM_ERR                           IMPT 00000000   2328  2361  2457  2553 
_RST_CHG                         P        EXPT 00000FEE   2052  5448*
_RST_CODE                                 IMPT 00000000   1766  5493  5494  5503 
_RST_CODE_END                             IMPT 00000000   1770  5493 
_SEQ_ARG1_DATA                            IMPT 00000000   1635  2390 
_SEQ_ARG2_DATA                            IMPT 00000000   1642  2486 
_SEQ_ARG3_DATA                            IMPT 00000000   1649  2582 
_SEQ_ASM_RAM_TOP                          IMPT 00000000   1613 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    76

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_A_SET                                EQU  00000020   2189* 2250 
_SEQ_BBIT_CHG_TBL                         IMPT 00000000   2120  5157  5274  5404  5522 
_SEQ_CARD_MAX                             EQU  00000C00   2190* 4289  4755  5126  5241  5371  5489  5609  5725  5881 
_SEQ_CARD_RAM                             IMPT 00000000   1627 
_SEQ_CD_BLOCK_MV_EXIT            P             000012B8   6029  6044*
_SEQ_CD_SET                               EQU  00000200   2182* 2236 
_SEQ_CHG10_EX                    P             00001298   5997  6008*
_SEQ_CHG2_EX                     P             00000C7E   4785  4798*
_SEQ_CHG3_EX                     P             00000E96   5168  5186*
_SEQ_CHG4_EX                     P             00000F46   5296  5316*
_SEQ_CHG5_EX                     P             00000FE6   5415  5434*
_SEQ_CHG6_EX                     P             0000108A   5535  5554*
_SEQ_CHG7_EX                     P             0000110E   5653  5670*
_SEQ_CHG8_EX                     P             000011D6   5825  5837*
_SEQ_CHG9_EX                     P             0000122E   5914  5928*
_SEQ_CHG_TBL0                             IMPT 00000000   2116  2664  2797  2928 
_SEQ_CMP_ERR1                             IMPT 00000000   1633  2365 
_SEQ_CMP_ERR2                             IMPT 00000000   1640  2461 
_SEQ_CMP_ERR3                             IMPT 00000000   1647  2557 
_SEQ_CMP_ERR_ADR1                         IMPT 00000000   1634  2355 
_SEQ_CMP_ERR_ADR2                         IMPT 00000000   1641  2451 
_SEQ_CMP_ERR_ADR3                         IMPT 00000000   1648  2547 
_SEQ_CMP_START                            IMPT 00000000   1661 
_SEQ_CODE_BLOCK_LOOP             P             000012A0   6027* 6038 
_SEQ_CODE_BLOCK_MV               P             0000129E   3291  4296  4762  5133  5250  5380  5498  5618  5734  5890  5962  6022*
_SEQ_COM1_TOP                             IMPT 00000000   2298  2623 
_SEQ_COM2_TOP                             IMPT 00000000   2299  2756 
_SEQ_COM3_TOP                             IMPT 00000000   2300  2887 
_SEQ_CTR_DATA                             IMPT 00000000   1630 
_SEQ_C_SET                                EQU  00000020   2180* 2182  2232 
_SEQ_DATA_CHG0                   P             000004C0   3027  3056  3085  3114  3143  3172  3201  3230  3259  3283*
_SEQ_DATA_CHG0_EX                P             000004CA   3296*
_SEQ_DATA_CHG1_1                 P             0000073C   3321  3354  3387  3420  3453  3486  3519  3552  3585  3618  3651  3684 
                                                          3717  3750  3773*
_SEQ_DATA_CHG1_2                 P             000009B8   3778  3807  3840  3873  3906  3939  3972  4005  4038  4071  4104  4137 
                                                          4170  4203  4236  4259*
_SEQ_DATA_CHG1_EX                P             00000A1E   4319  4334*
_SEQ_DATA_CHG2                   P             00000C38   4359  4392  4425  4458  4491  4524  4557  4590  4623  4656  4689  4722 
                                                          4745*
_SEQ_DATA_CHG3                   P             00000E08   4824  4858  4892  4926  4960  4994  5028  5062  5085*
_SEQ_DRG1_DATA                            IMPT 00000000   1638 
_SEQ_DRG2_DATA                            IMPT 00000000   1645 
_SEQ_DRG3_DATA                            IMPT 00000000   1652 
_SEQ_END_CODE                    P             00000004   2313* 2372  2468  2564 
_SEQ_F_SET                                EQU  00000088   2187* 2246 
_SEQ_LD_TIMOUT                            IMPT 00000000   1669 
_SEQ_L_SET                                EQU  00000020   2178* 2228 
_SEQ_MAX_BYTE                             EQU  0000001E   2213* 2629  2762  2893 
_SEQ_MRG1_DATA                            IMPT 00000000   1636  2392 
_SEQ_MRG2_DATA                            IMPT 00000000   1643  2488 
_SEQ_MRG3_DATA                            IMPT 00000000   1650  2584 
_SEQ_M_SET                                EQU  00000200   2177* 2226 
_SEQ_NRG1_DATA                            IMPT 00000000   1637  2395 
_SEQ_NRG2_DATA                            IMPT 00000000   1644  2491 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    77

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_NRG3_DATA                            IMPT 00000000   1651  2587 
_SEQ_POU_SET                              EQU  00004000   2214*
_SEQ_RUN1                                 IMPT 00000000   1616  2626 
_SEQ_RUN1_END                             IMPT 00000000   1617  2627 
_SEQ_RUN1_TOP                             IMPT 00000000   1615  2340 
_SEQ_RUN2                                 IMPT 00000000   1620  2759 
_SEQ_RUN2_END                             IMPT 00000000   1621  2760 
_SEQ_RUN2_TOP                             IMPT 00000000   1619  2436 
_SEQ_RUN3                                 IMPT 00000000   1624  2890 
_SEQ_RUN3_END                             IMPT 00000000   1625  2891 
_SEQ_RUN3_TOP                             IMPT 00000000   1623  2532 
_SEQ_RUN_CHG1                    P             000001BC   2351  2618*
_SEQ_RUN_CHG1_100                P             000001CE   2633* 2718 
_SEQ_RUN_CHG1_300                P             000001EE   2661*
_SEQ_RUN_CHG1_4BYTE              P             0000022C   2671  2692*
_SEQ_RUN_CHG1_800                P             00000240   2701  2713*
_SEQ_RUN_CHG1_DSETLI             P             00000224   2669  2686*
_SEQ_RUN_CHG1_END                P             0000024A   2704  2724*
_SEQ_RUN_CHG1_ERR_END            P        EXPT 00000250   2097  2644  2706  2731*
_SEQ_RUN_CHG1_EXIT               P             00000252   2728  2734*
_SEQ_RUN_CHG1_MAIN               P        EXPT 0000000C   2302  2334*
_SEQ_RUN_CHG2                    P             0000025C   2447  2751*
_SEQ_RUN_CHG2_100                P             0000026E   2766* 2849 
_SEQ_RUN_CHG2_300                P             0000028E   2794*
_SEQ_RUN_CHG2_4BYTE              P             000002CC   2804  2825*
_SEQ_RUN_CHG2_800                P             000002E0   2834  2845*
_SEQ_RUN_CHG2_DSETLI             P             000002C4   2802  2819*
_SEQ_RUN_CHG2_END                P             000002EA   2837  2855*
_SEQ_RUN_CHG2_ERR_END            P             000002F0   2777  2839  2862*
_SEQ_RUN_CHG2_EXIT               P             000002F2   2859  2865*
_SEQ_RUN_CHG2_MAIN               P        EXPT 0000009C   2303  2430*
_SEQ_RUN_CHG2_MAIN020            P             000000E4   2465  2482*
_SEQ_RUN_CHG3                    P             000002FC   2543  2882*
_SEQ_RUN_CHG3_100                P             0000030E   2897* 2980 
_SEQ_RUN_CHG3_300                P             0000032E   2925*
_SEQ_RUN_CHG3_4BYTE              P             0000036C   2935  2956*
_SEQ_RUN_CHG3_800                P             00000380   2965  2976*
_SEQ_RUN_CHG3_BIT_H              P             00000E20   5105  5109*
_SEQ_RUN_CHG3_DSETLI             P             00000364   2933  2950*
_SEQ_RUN_CHG3_END                P             0000038A   2968  2986*
_SEQ_RUN_CHG3_ERR_END            P             00000390   2908  2970  2993*
_SEQ_RUN_CHG3_EXIT               P             00000392   2990  2996*
_SEQ_RUN_CHG3_MAIN               P        EXPT 0000012C   2304  2526*
_SEQ_RUN_CHG3_MAIN020            P             00000174   2561  2578*
_SEQ_RUN_CHG4_BIT_H              P             00000EB6   5220  5224*
_SEQ_RUN_CHG5_BIT_H              P             00000F66   5350  5354*
_SEQ_RUN_CHG6_BIT_H              P             00001006   5468  5472*
_SEQ_RUN_CHG_MAIN020             P             00000054   2369  2386*
_SEQ_SR_FLG                               IMPT 00000000   1631 
_SEQ_START_CODE                  P             00000000   2307* 2341  2437  2533 
_SEQ_S_SET                                EQU  00000400   2188* 2248 
_SEQ_TD_SET                               EQU  00000200   2181* 2234 
_SEQ_TIM_DGT_END                 P             000011BE   5768  5785  5797  5809  5819*
_SEQ_TIM_DGT_SEL0                P             000011A4   5794  5803*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    78

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_TIM_DGT_SEL1                P             00001154   5762*
_SEQ_TIM_DGT_SEL2                P             0000117C   5765  5779*
_SEQ_TIM_DGT_SEL3                P             00001190   5782  5791*
_SEQ_TIM_DGT_SEL5                P             000011B8   5806  5815*
_SEQ_TIM_WK1000M                          IMPT 00000000   1672 
_SEQ_TIM_WK100M                           IMPT 00000000   1671 
_SEQ_TMR_DATA                             IMPT 00000000   1629 
_SEQ_T_SET                                EQU  00000020   2179* 2181  2230 
_SEQ_W0_SET                               EQU  00000000   2174* 2220 
_SEQ_W1_SET                               EQU  00000000   2183* 2238 
_SEQ_W2_SET                               EQU  00000000   2184* 2240 
_SEQ_W3_SET                               EQU  00000000   2185* 2242 
_SEQ_W4_SET                               EQU  00000000   2186* 2244 
_SEQ_X_SET                                EQU  00000010   2175* 2222 
_SEQ_Y_SET                                EQU  00000010   2176* 2224 
_SET_CHG                         P        EXPT 00000F4E   2051  5330*
_SET_CODE                                 IMPT 00000000   1760  5375  5376  5385 
_SET_CODE_END                             IMPT 00000000   1764  5375 
_SQ_ERR_END                               EQU  0000FF00   2167* 2732  2863  2994  4332  4796  5184  5314  5432  5552  5668  5835 
                                                          5926 
_SQ_NML_COD                               EQU  00000000   2165* 2700  2833  2964  4317  4783  5166  5294  5413  5533  5651  5823 
                                                          5912  5995 
_SQ_NML_END                               EQU  00000055   2166* 2703  2836  2967  3263 
_START_ACK_COD                            EQU  00004321    217*
_START_REQ_COD                            EQU  00009876    216*
_STL_CHG                         P        EXPT 000005B0   2070  3476*
_STL_CODE                                 IMPT 00000000   1849  3481  3482  3483 
_STL_CODE_END                             IMPT 00000000   1852  3481 
_STW_CHG                         P        EXPT 00000584   2069  3443*
_STW_CODE                                 IMPT 00000000   1844  3448  3449  3450 
_STW_CODE_END                             IMPT 00000000   1847  3448 
_STW_SUB                                  IMPT 00000000   1695 
_ST_CHG                          P        EXPT 00000E9E   2049  5200*
_ST_CODE                                  IMPT 00000000   1753  5245  5246  5255 
_ST_CODE_END                              IMPT 00000000   1758  5245 
_SUBL_CHG                        P        EXPT 00000884   2095  4028*
_SUBL_CODE                                IMPT 00000000   1964  4033  4034  4035 
_SUBL_CODE_END                            IMPT 00000000   1967  4033 
_SUBWI_CHG                       P        EXPT 00000B88   2096  4613*
_SUBWI_CODE                               IMPT 00000000   1969  4618  4619  4620 
_SUBWI_CODE_END                           IMPT 00000000   1972  4618 
_SUBW_CHG                        P        EXPT 00000858   2094  3995*
_SUBW_CODE                                IMPT 00000000   1959  4000  4001  4002 
_SUBW_CODE_END                            IMPT 00000000   1962  4000 
_SUB_CODE                                 IMPT 00000000   2022 
_SUB_CODE_END                             IMPT 00000000   2023 
_SUB_SUB                                  IMPT 00000000   1704 
_SeqLd_MKIND_TBL_TOP                      IMPT 00000000   2141 
_SeqSysStat                               IMPT 00000000   1663 
_T_0001HR_CNT                             EQU  00000020   2269*
_T_0001HR_TOP                             EQU  000001E0   2268*
_T_0001MS_CNT                             EQU  00000040   2267* 2268 
_T_0001MS_TOP                             EQU  000001A0   2266* 2268 
_T_0010MS_CNT                             EQU  00000100   2261* 2262 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    79

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_T_0010MS_TOP                             EQU  00000000   2260* 2262 
_T_0100MS_CNT                             EQU  00000080   2263* 2264 
_T_0100MS_TOP                             EQU  00000100   2262* 2264 
_T_1000MS_CNT                             EQU  00000020   2265* 2266 
_T_1000MS_TOP                             EQU  00000180   2264* 2266 
_VUPCHECK_EQU                             EQU  11AB3739    102*
_WCTR_CHG                        P        EXPT 000011DE   2055  5851*
_WCTR_CODE                                IMPT 00000000   1818  5885  5886  5896 
_WCTR_CODE_END                            IMPT 00000000   1821  5885 
_WCTR_SUB                                 IMPT 00000000   1691 
_WSC_CHG                         P        EXPT 00001092   2050  5568*
_WSC_CODE                                 IMPT 00000000   1823  5613  5614  5623 
_WSC_CODE_END                             IMPT 00000000   1827  5613 
_WSC_SUB                                  IMPT 00000000   1692 
_WSR_CHG                         P        EXPT 000004D4   2056  3311*
_WSR_CODE                                 IMPT 00000000   1829  3316  3317  3318 
_WSR_CODE_END                             IMPT 00000000   1832  3316 
_WSR_SUB                                  IMPT 00000000   1693 
_WTMR_CHG                        P        EXPT 00001116   2054  5684*
_WTMR_CODE                                IMPT 00000000   1812  5729  5730  5739 
_WTMR_CODE_END                            IMPT 00000000   1816  5729 
_WTMR_SUB                                 IMPT 00000000   1690 
_XORL_CHG                        P        EXPT 0000098C   2106  4226*
_XORL_CODE                                IMPT 00000000   2009  4231  4232  4233 
_XORL_CODE_END                            IMPT 00000000   2012  4231 
_XORWI_CHG                       P        EXPT 00000C0C   2107  4712*
_XORWI_CODE                               IMPT 00000000   2014  4717  4718  4719 
_XORWI_CODE_END                           IMPT 00000000   2017  4717 
_XORW_CHG                        P        EXPT 00000960   2105  4193*
_XORW_CODE                                IMPT 00000000   2004  4198  4199  4200 
_XORW_CODE_END                            IMPT 00000000   2007  4198 
_XORW_SUB                                 IMPT 00000000   1702 
_X_PUSH_TOP1                              IMPT 00000000   1658 
_X_PUSH_TOP2                              IMPT 00000000   1659 
__TMCT_FLG                                EQU  00000008   2258*
__TMCT_PV                                 EQU  00000000   2256*
__TMCT_ST_CNT                             EQU  0000000C   2255*
__TMCT_SV                                 EQU  00000004   2257*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    07/04/21 20:26:24                                                  PAGE    80

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000012BE        
