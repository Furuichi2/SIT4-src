_ERR_INFO_DT_CHK_CMP2:
	SUB_START
	MOV.L	#_MODE_SEL,R1				;
	MOV.W	@R1,R0					;
	TST	#_W1SGL,R0				;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_020		;

	FAR_JSR	#_ELER_INFO_DT_CMP2_CHK2,R0		;2004-04-14

	M_BRA	ERR_INFO_DTCHKCMP2_EXT			;
ERR_INFO_DTCHKCMP2_020

	MOV.L	#_eSHy_LOT_CNT_A,R1			;
	MOV.W	@R1,R0					;
	TST	R0,R0					;
	TST_BIT_OF ERR_INFO_DTCHKCMP2_030		;

	MOV.L	#_eSHy_LOT_STEP_A,R1			;
	MOV.W	@R1,R0					;
	TST	R0,R0					;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_050		;
ERR_INFO_DTCHKCMP2_030
	M_BRA	ERR_INFO_DTCHKCMP2_EXT			;DISENB

;	====== ëäéËë§ÇÕok=======
ERR_INFO_DTCHKCMP2_050

	MOV.L	#_eSHy_REST_SR_HF,R5			;
	MOV.W	@R5,R0					;
	TST	R0,R0					;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_100		;äJénéûÃ◊∏ﬁ
	M_BRA	ERR_INFO_DTCHKCMP2_200			;
ERR_INFO_DTCHKCMP2_100:

	MOV.L	#_eSHi_LNGH_ADD_SR,R1			;
	MOV.L	@R1,R2					;my data load
	MOV.L	#_eSHy_LNGH_ADD_SR,R1			;
	MOV.L	@R1,R3					;your data load
	REST_PLSCMP2_ERRCHK2 R2,R3,_PLS_ERR_HABPLS1,(BIT4+BIT0),_CMP_LNGTH_AD_ERR_CNT,_SGL_CMPERR_CNTMAX	;2005-04-14-E

	MOV.L	#_POS_CALC_ERR_FLG1,R1							;
	MOV.W	@R1,R2									;
	OR	R0,R2									;
	MOV.W	R2,@R1									;


	MOV.L	#_eSHi_REST_PLS_SR,R1					;
	MOV.L	@R1,R2							;my data load
	MOV.L	#_eSHy_REST_PLS_SR,R1						;
	MOV.L	@R1,R3								;your data load
;;2005-04-14-E(4/18)	REST_PLSCMP2_ERRCHK1 REG1=R2,REG2=R3,IMD=_PLS_ERR_HABPLS1,ERRBIT=(BIT5+BIT0)	;
	REST_PLSCMP2_ERRCHK2 R2,R3,_PLS_ERR_HABPLS1,(BIT5+BIT0),_CMP_RESTP_SR_ERR_CNT,_SGL_CMPERR_CNTMAX	;2005-04-14-E
	MOV.L	#_POS_CALC_ERR_FLG1,R1							;
	MOV.W	@R1,R2									;
	OR	R0,R2									;
	MOV.W	R2,@R1									;

;;;2005-04-14-E(4/18)	XOR	R0,R0
;;;	MOV.W	R0,@R5

;	=========================================
;	===	àŸèÌÇ™Ç†ÇÍÇŒ ›ƒﬁº™≤∏ÇÕ∏ÿ±Ç∑ÇÈ ===
;	=========================================
;	----2005-04-14-E(4/18)---
	TST	R2,R2					;ERR
	TST_BIT_ON ERR_INFO_DTCHKCMP2_140		;

	MOV.L	#_CMP_LNGTH_AD_ERR_CNT,R1
	MOV.W	@R1,R0					;
	TST	R0,R0					;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_149		;¥◊-∂≥›ƒíÜï€óØ

	MOV.L	#_CMP_RESTP_SR_ERR_CNT,R1		;
	MOV.W	@R1,R0					;
	TST	R0,R0					;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_149		;¥◊-∂≥›ƒíÜï€óØ

ERR_INFO_DTCHKCMP2_140:
	XOR	R0,R0
	MOV.L	#_eSHy_REST_SR_HF,R5			;
	MOV.W	R0,@R5
ERR_INFO_DTCHKCMP2_149:





;	===== ìÆçÏíÜÇÃÉpÉãÉXìÒèdâª====
ERR_INFO_DTCHKCMP2_200:
	MOV.L	#_eSHy_REST_RL_HF,R5			;
	MOV.W	@R5,R0					;
	TST	R0,R0					;
	TST_BIT_OF ERR_INFO_DTCHKCMP2_EXT		;ÿ±Ÿ¿≤—Ã◊∏ﬁOFF

	MOV.L	#_eSHi_REST_PLS_RL,R1							;
	MOV.L	@R1,R2									;my data load
	MOV.L	#_eSHy_REST_PLS_RL,R1							;
	MOV.L	@R1,R3									;your data load
	REST_PLSCMP2_ERRCHK1 REG1=R2,REG2=R3,IMD=_PLS_ERR_HABPLS1,ERRBIT=(BIT6+BIT0)		;

	MOV.L	#_LSI_CMPCPUAB_POS_RL,R1		;
	MOV.L	R3,@R1					;|R3-R2|=>RL
	MOV.L	#_LSI_CMPCPUAB_POSMAX,R1		;
	MOV.L	@R1,R2					;
	CMP/HS	R3,R2					;
	BT	ERR_INFO_DTCHKCMP2_220			;
	MOV.L	R3,@R1					;MAXIUM SMPLE
ERR_INFO_DTCHKCMP2_220:					;


	TST	R0,R0									;
	TST_BIT_ON ERR_INFO_DTCHKCMP2_240						;
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_LSI_PLSCMP_RETRY_CNT1	,L1=W,DT_REG=R0,WKREG1=R1	;
	TIM_CNT_ADD MEM=_LSI_PLSCMP_AC_CNT1,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	M_BRA	ERR_INFO_DTCHKCMP2_280							;


;	===== é∏îs====
ERR_INFO_DTCHKCMP2_240:
	TIM_CNT_ADD MEM=_LSI_PLSCMP_RETRY_CNT1,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_LSI_PLSCMP_NG_CNT1,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;TOTAL


	MOV.L	#_LSI_PLSCMP_RETRY_CNT1,R1
	MOV.W	@R1,R0
	MOV.W	#_LSI_CMP_ERR_MAX,R2	;
	CMP/HS	R0,R2			;
	BT	ERR_INFO_DTCHKCMP2_280	;

	MOV.W	#(BIT6+BIT0),R0								;
	MOV.L	#_POS_CALC_ERR_FLG1,R1							;
	MOV.W	@R1,R2									;
	OR	R0,R2									;
	MOV.W	R2,@R1									;

ERR_INFO_DTCHKCMP2_280:

	PUSH_REG1 R5				;
	FAR_JSR	#_ERR_INFO_DT_CMP2_CHK2,R0	;
	POP_REG1 R5				;

	XOR	R0,R0
	MOV.W	R0,@R5

ERR_INFO_DTCHKCMP2_EXT:

	SUB_END
	M_RTS

;	====== ìÒèdâÒòH√ﬁ∞¿ÇQÅ@LOAD====
_ERR_INFO_DT_CMP2_CHK2:
	SUB_START
	PUSH_REG1 R0
	PUSH_REG1 R1
	PUSH_REG1 R2
	PUSH_REG1 R3
	PUSH_REG1 R4

	.AIF _CMP_ERR_SPEC_ENB	EQ _CMPILE_YES	;2006-09-19


	FAR_JSR	#_LOAD_BASE_FREQ_PLS,R0	;
	MOV.L	#_eSHi_BAS_FRQ_SV,R1	;Õﬁ∞Ωé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_FREQ_PLS,R0	;
	MOV.L	#_eSHi_TOP_FRQ_SV,R1	;TOPé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0	;
	MOV.L	#_eSHi_NOW_FRQ_PV,R1	;TOPé¸îgêîé¿ë™
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_ACCS1_LATE,R0	;
	MOV.L	#_eSHi_PLSI_ACCS,R1	;â¡å∏ë¨ìx
	MOV.W	R0,@R1			;

	FAR_JSR	#_LOAD_SPD_LATE,R0		;
	MOV.L	#_eSHi_PLSI_LATE,R1		;24
	MOV.W	R0,@R1				;

;	===========================
;	===	baseé¸îgêî	===
;	===========================
;	======== CHK1(baseé¸îgêî) =======
	MOV.L	#_FREQ_BAS_SV_SPD,R1		;
	MOV.L	@R1,R0				;
	MOV.L	#_eSHi_BAS_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R2				;
	MOV.L	#_eSHy_BAS_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_050	;
	CMP/EQ	R3,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_050	;miss
;	==== NOMAL ====
	XOR	R0,R0				;
	REG_MOV_TO_MEM	DST_ADR=_CMP2_BAS_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ERR_INFO_DTCHKCMP2CK2_100	;

ERR_INFO_DTCHKCMP2CK2_050:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_BAS_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;
	TIM_CNT_ADD MEM=_CMP2_BAS_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1			;

	MOV.L	#_CMP2_BAS_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ERR_INFO_DTCHKCMP2CK2_100	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT0),WKREG=R1			;BASE ERR
	
ERR_INFO_DTCHKCMP2CK2_100:

;	===========================
;	===	ê›íËé¸îgêî	===
;	===========================
;	======== CHK2(ê›íËé¸îgêî) =======
	MOV.L	#_FREQ_SV_SPD,R1		;
	MOV.L	@R1,R0				;
	MOV.L	#_eSHi_TOP_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R2				;
	MOV.L	#_eSHy_TOP_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_150	;
	CMP/EQ	R3,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_150	;miss

;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_TOP_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ERR_INFO_DTCHKCMP2CK2_200	;

ERR_INFO_DTCHKCMP2CK2_150:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_TOP_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_TOP_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_TOP_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ERR_INFO_DTCHKCMP2CK2_200	;NO JUMP


	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT1),WKREG=R1			;TOP ERR

ERR_INFO_DTCHKCMP2CK2_200:


;	===========================
;	===	ë¨ìxLATE	===
;	===========================
	MOV.L	#_POS_LSI_SPDLAT,R1		;
	MOV.W	@R1,R0				;
	MOV.L	#_eSHi_PLSI_LATE,R1		;
	MOV.W	@R1,R2				;
	MOV.L	#_eSHy_PLSI_LATE,R1		;
	MOV.W	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_250	;
	CMP/EQ	R3,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_250	;miss
;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_LAT_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;

	M_BRA	ERR_INFO_DTCHKCMP2CK2_300	;
ERR_INFO_DTCHKCMP2CK2_250:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_LAT_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_LAT_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_LAT_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ERR_INFO_DTCHKCMP2CK2_300	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT2),WKREG=R1			;LAT ERR

ERR_INFO_DTCHKCMP2CK2_300:

;	===========================
;	===	â¡å∏ë¨éûä‘	===
;	===========================
;;2005-01-17	MOV.L	#_POS_LSI_ACCLT1,R1	;
	MOV.L	#_CMP_POS_LSI_ACCLT1,R1		;î‰äróp2005-01-17
	MOV.W	@R1,R0				;
	MOV.L	#_eSHi_PLSI_ACCS,R1		;â¡å∏ë¨ìx
	MOV.W	@R1,R2				;
	MOV.L	#_eSHy_PLSI_ACCS,R1		;â¡å∏ë¨ìx
	MOV.W	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_350	;
	CMP/EQ	R3,R0				;
	BF	ERR_INFO_DTCHKCMP2CK2_350	;miss
;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_ACC_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ERR_INFO_DTCHKCMP2CK2_400	;

ERR_INFO_DTCHKCMP2CK2_350:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_ACC_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_ACC_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_ACC_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ERR_INFO_DTCHKCMP2CK2_400	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT3),WKREG=R1			;ACC
ERR_INFO_DTCHKCMP2CK2_400:


;	===================================
;	===	åªç›é¸îgêî		===
;	===	(ç≈ëÂÇÊÇËè¨Ç≥Ç¢Ç©)	===
;	===================================
	MOV.L	#_eSHi_NOW_FRQ_PV,R1	;TOPé¸îgêîé¿ë™
	MOV.L	@R1,R0			;

;	==== NOMAL ====
	XOR	R0,R0									;
	REG_MOV_TO_MEM	DST_ADR=_CMP2_NOW_NG_CNT	,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ERR_INFO_DTCHKCMP2CK2_500	;

ERR_INFO_DTCHKCMP2CK2_450:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_NOW_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;
	TIM_CNT_ADD MEM=_CMP2_NOW_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1			;

	MOV.L	#_CMP2_NOW_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ERR_INFO_DTCHKCMP2CK2_500	;NO JUMP NOW

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT4),WKREG=R1			;
ERR_INFO_DTCHKCMP2CK2_500:

	.AENDI


	POP_REG1 R4
	POP_REG1 R3
	POP_REG1 R2
	POP_REG1 R1
	POP_REG1 R0

	SUB_END
	M_RTS


;	***************************************************
;	***						***
;	***	òAë±ÅEê°ìÆÅEíiéÊÇËÇÃÇkÇrÇhÉ`ÉFÉbÉN	***
;	***						***
;	***************************************************
_ELER_INFO_DT_CMP2_CHK2:
	SUB_START
	PUSH_REG1 R0
	PUSH_REG1 R1
	PUSH_REG1 R2
	PUSH_REG1 R3
	PUSH_REG1 R4
;;;	MOV.L	#_poslsi1_top+_PLSI_CH1+_PLS_CtrlReg,R1		;
;;;	MOV.W	@R1,R0						;
;;;	MOV.L	#_POS_CTRL_WORD_DAT,R1				;
;;;	MOV.W	R0,@R1						;

;;;	FAR_JSR	#_LOAD_GPOINT_PLS,R0		;2004-12-19
;;;	MOV.L	#_POS_CTRL_GPOINT_DAT,R1	;
;;;	MOV.L	R0,@R1				;

	.AIF _CMP_ERR_SPEC_ENB	EQ _CMPILE_YES	;2006-09-19

	FAR_JSR	#_LOAD_BASE_FREQ_PLS,R0	;
	MOV.L	#_eSHi_BAS_FRQ_SV,R1	;Õﬁ∞Ωé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_FREQ_PLS,R0	;
	MOV.L	#_eSHi_TOP_FRQ_SV,R1	;TOPé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0	;
	MOV.L	#_eSHi_NOW_FRQ_PV,R1	;TOPé¸îgêîé¿ë™
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_ACCS1_LATE,R0	;
	MOV.L	#_eSHi_PLSI_ACCS,R1	;â¡å∏ë¨ìx
	MOV.W	R0,@R1			;

	FAR_JSR	#_LOAD_SPD_LATE,R0		;
	MOV.L	#_eSHi_PLSI_LATE,R1		;24
	MOV.W	R0,@R1				;

;	===========================
;	===	baseé¸îgêî	===
;	===========================
;	======== CHK1(baseé¸îgêî) =======
	MOV.L	#_FREQ_BAS_SV_SPD,R1		;
	MOV.L	@R1,R0				;
	MOV.L	#_eSHi_BAS_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R2				;
	MOV.L	#_eSHy_BAS_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ESER_INFO_DTCHKCMP2CK2_050	;
;;;	CMP/EQ	R3,R0				;
;;;	BF	ESER_INFO_DTCHKCMP2CK2_050	;miss
;	==== NOMAL ====
	XOR	R0,R0				;
	REG_MOV_TO_MEM	DST_ADR=_CMP2_BAS_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ESER_INFO_DTCHKCMP2CK2_100	;

ESER_INFO_DTCHKCMP2CK2_050:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_BAS_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;
	TIM_CNT_ADD MEM=_CMP2_BAS_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1			;

	MOV.L	#_CMP2_BAS_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ESER_INFO_DTCHKCMP2CK2_100	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT0),WKREG=R1			;BASE ERR
	
ESER_INFO_DTCHKCMP2CK2_100:

;	===========================
;	===	ê›íËé¸îgêî	===
;	===========================
;	======== CHK2(ê›íËé¸îgêî) =======
	MOV.L	#_FREQ_SV_SPD,R1		;
	MOV.L	@R1,R0				;
	MOV.L	#_eSHi_TOP_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R2				;
	MOV.L	#_eSHy_TOP_FRQ_SV,R1		;TOPé¸îgêîê›íË
	MOV.L	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ESER_INFO_DTCHKCMP2CK2_150	;
;;;	CMP/EQ	R3,R0				;
;;;	BF	ESER_INFO_DTCHKCMP2CK2_150	;miss

;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_TOP_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ESER_INFO_DTCHKCMP2CK2_200	;

ESER_INFO_DTCHKCMP2CK2_150:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_TOP_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_TOP_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_TOP_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ESER_INFO_DTCHKCMP2CK2_200	;NO JUMP


	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT1),WKREG=R1			;TOP ERR

ESER_INFO_DTCHKCMP2CK2_200:


;	===========================
;	===	ë¨ìxLATE	===
;	===========================
	MOV.L	#_POS_LSI_SPDLAT,R1		;
	MOV.W	@R1,R0				;
	MOV.L	#_eSHi_PLSI_LATE,R1		;
	MOV.W	@R1,R2				;
	MOV.L	#_eSHy_PLSI_LATE,R1		;
	MOV.W	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ESER_INFO_DTCHKCMP2CK2_250	;
;;;	CMP/EQ	R3,R0				;
;;;	BF	ESER_INFO_DTCHKCMP2CK2_250	;miss
;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_LAT_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;

	M_BRA	ESER_INFO_DTCHKCMP2CK2_300	;
ESER_INFO_DTCHKCMP2CK2_250:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_LAT_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_LAT_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_LAT_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ESER_INFO_DTCHKCMP2CK2_300	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT2),WKREG=R1			;LAT ERR

ESER_INFO_DTCHKCMP2CK2_300:

;	===========================
;	===	â¡å∏ë¨éûä‘	===
;	===========================
;;2005-01-17	MOV.L	#_POS_LSI_ACCLT1,R1		;
	MOV.L	#_CMP_POS_LSI_ACCLT1,R1		;î‰äróp2005-01-17
	MOV.W	@R1,R0				;
	MOV.L	#_eSHi_PLSI_ACCS,R1		;â¡å∏ë¨ìx
	MOV.W	@R1,R2				;
	MOV.L	#_eSHy_PLSI_ACCS,R1		;â¡å∏ë¨ìx
	MOV.W	@R1,R3				;
	CMP/EQ	R2,R0				;
	BF	ESER_INFO_DTCHKCMP2CK2_350	;
;;;	CMP/EQ	R3,R0				;
;;;	BF	ESER_INFO_DTCHKCMP2CK2_350	;miss
;	==== NOMAL ====
	XOR	R0,R0
	REG_MOV_TO_MEM	DST_ADR=_CMP2_ACC_NG_CNT,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ESER_INFO_DTCHKCMP2CK2_400	;

ESER_INFO_DTCHKCMP2CK2_350:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_ACC_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1	;
	TIM_CNT_ADD MEM=_CMP2_ACC_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;

	MOV.L	#_CMP2_ACC_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ESER_INFO_DTCHKCMP2CK2_400	;NO JUMP

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT3),WKREG=R1			;ACC
ESER_INFO_DTCHKCMP2CK2_400:


;	===================================
;	===	åªç›é¸îgêî		===
;	===	(ç≈ëÂÇÊÇËè¨Ç≥Ç¢Ç©)	===
;	===================================
	MOV.L	#_eSHi_NOW_FRQ_PV,R1	;TOPé¸îgêîé¿ë™
	MOV.L	@R1,R0			;

;	==== NOMAL ====
	XOR	R0,R0									;
	REG_MOV_TO_MEM	DST_ADR=_CMP2_NOW_NG_CNT	,L1=W,DT_REG=R0,WKREG1=R1	;
	M_BRA	ESER_INFO_DTCHKCMP2CK2_500	;

ESER_INFO_DTCHKCMP2CK2_450:
;	==== ERR   ====
	TIM_CNT_ADD MEM=_CMP2_NOW_TOTAL_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1		;
	TIM_CNT_ADD MEM=_CMP2_NOW_NG_CNT,LG=W,ADR_REG=R1,DAT_REG=R0,LATE=1			;

	MOV.L	#_CMP2_NOW_NG_CNT,R1		;
	MOV.W	@R1,R0				;
	MOV.W	#_LSI_CMP_ERR_MAX,R2		;
	CMP/HI	R2,R0				;OVER?
	BF	ESER_INFO_DTCHKCMP2CK2_500	;NO JUMP NOW

	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG1,LG=W,BIT=(BIT3+BIT0),WKREG=R1		;
	MEM1_BIT0_TO_BIT7_ORSET MEM=_POS_CALC_ERR_FLG2,LG=W,BIT=(BIT4),WKREG=R1			;
ESER_INFO_DTCHKCMP2CK2_500:


	.AENDI

	POP_REG1 R4
	POP_REG1 R3
	POP_REG1 R2
	POP_REG1 R1
	POP_REG1 R0

	SUB_END
	M_RTS

_CNT_HOS_DT_MAK:
	SUB_START
	MOV.L	#_eSHi_CNT_REST_PLS,R1		;
	MOV.L	@R1,R2

	MOV.L	#_eSHy_CNT_REST_PLS,R1		;CPUA
	MOV.L	@R1,R0				;CPUB > CPUA

	SUB	R0,R2				;R2(CPUB-CPUA)>0
	MOV	R2,R3				;SHIN R3 SAVE
	CMP/PL	R2				;
	BT	CNT_HOS_DTMK_050		;
	NEG	R2,R2				;
CNT_HOS_DTMK_050:
	MOV.L	#_CNT_SYNC_HOS_DAT2,R1		;
	MOV.L	R3,@R1				;(+/-ê∂√ﬁ∞¿)

;	======= CHEAK ===
	MOV.W	#_SYNC_ERR_HABPLS1,R1		;
	CMP/HS	R2,R1				;
	BT	CNT_HOS_DTMK_100		;R2 =< R1(6000) ok

;	==== 2004-05-23 ===
	MOV.L	#_OVER_RIDE_LATE_FLG,R0				;BIT0:óLå¯
	MOV.W	@R0,R0						;BIT1:ACK-ONèÛë‘
	TST	#BIT0,R0					;
	TST_BIT_ON CNT_HOS_DTMK_EXT				;

	MEM1_BIT0_TO_BIT7_ORSET MEM=_CNT_SYNC_ERR_FLG,LG=W,BIT=(BIT1+BIT0),WKREG=R1	;SYNC_ERR
	M_BRA	CNT_HOS_DTMK_EXT							;

CNT_HOS_DTMK_100:

	CMP/PZ	R3				;
	BF	CNT_HOS_DTMK_200		;"-"
	MOV.W	#_SYNC_ERR_HOSHAB,R1		;

	CMP/HS	R1,R2				;1000plsà»è„ R1=< R2
	BF	CNT_HOS_DTMK_EXT		;
	SUB	R1,R2				;1000 ﬂŸΩÇí¥Ç¶ÇΩï™ÇæÇØï‚ê≥Ç∑ÇÈ
	MOV.L	#_CNT_SYNC_HOS_DAT1,R1		;
	MOV.L	R2,@R1				;ï‚ê≥

	MOV.L	#_CNT_SYNC_HOS_CNT1,R1		;
	MOV.W	@R1,R0				;
	ADD	#1,R0				;
	MOV.W	R0,@R1				;
	M_BRA	CNT_HOS_DTMK_300		;ï‚ê≥ââéZóLå¯

CNT_HOS_DTMK_200:
	MOV.W	#_SYNC_ERR_HOSHAB_M,R1		;œ≤≈Ω(SV=+1000)
	CMP/HS	R1,R2				;1000plsà»è„ R1=< R2
	BF	CNT_HOS_DTMK_EXT		;
	SUB	R1,R2				;1000 ﬂŸΩÇí¥Ç¶ÇΩï™ÇæÇØï‚ê≥Ç∑ÇÈ
	NEG	R2,R2				;
	MOV.L	#_CNT_SYNC_HOS_DAT1,R1		;
	MOV.L	R2,@R1				;ï‚ê≥

	MOV.L	#_CNT_SYNC_HOS_CNT1,R1		;
	MOV.W	@R1,R0				;
	ADD	#1,R0				;
	MOV.W	R0,@R1				;


CNT_HOS_DTMK_300:
	.AIF _OBJ_PLS_CTL_TYP	NE _CMPILE_YES		;2006-09-19
	MOV.L	#_CNT_SYNC_HOS_FLAG,R1		;
	MOV.W	#BIT0,R0			;ï‚ê≥ââéZóLå¯
	MOV.W	R0,@R1				;
	.AENDI

CNT_HOS_DTMK_EXT:
	SUB_END
	M_RTS

;	***************************
;	***	èCê≥ã@î\	***
;	***************************
_CNT_SYNC_HOS_CALC
	SUB_START
	MOV.L	#_CNT_SYNC_HOS_FLAG,R1		;
	MOV.W	@R1,R0				;
	TST	R0,R0				;
	TST_BIT_OF CNT_SYNC_HOSCAL_END		;
	XOR	R0,R0
	MOV.W	R0,@R1				;

	MOV.L	#_CNT_SYNC_CHK_CNT2,R1		;
	MOV.W	@R1,R0				;
	ADD	#1,R0
	MOV.W	R0,@R1				;

	MOV.L	#_CNT_SYNC_HOS_DAT1,R1		;
	MOV.L	@R1,R6				;
	XOR	R5,R5				;
	MOV.L	R5,@R1				;DAT1=0CLRå©Ç‚Ç∑Ç≠Ç∑ÇÈÇΩÇﬂ
	CMP/PZ	R6				;
	BT	CNT_SYNC_HOSCAL_050		;
	MOV	#-1,R5
CNT_SYNC_HOSCAL_050

;	====== éüÇÃï•Ç¢èoÇµÉpÉãÉXå∏=====
	MOV.L	#_LNGTH_ADD_DATA,R4					;//ïÑçÜïtÇ´
	MOV.L	@R4,R1							;
	MOV.L	@(4,R4),R2						;
	SUB8B DT_REGH=R5,DT_REGL=R6,DT_ANS_REGH=R1,DT_ANS_REGL=R2	;
;	R1,R2 - R5,R6= R1,R2 						;
	MOV.L	R1,@R4							;
	MOV.L	R2,@(4,R4)						;

;	===== íxÇÍï™ï•Ç¢èoÇµÇΩÇ±Ç∆Ç…Ç∑ÇÈ====
	MOV.L	#_POSLSI_OUTPUT_TOTAL_PLS,R3				;
	MOV.L	@R3,R1							;
	MOV.L	@(4,R3),R2						;
	ADD8B DT_REGH=R5,DT_REGL=R6,DT_ANS_REGH=R1,DT_ANS_REGL=R2	;
	MOV.L	R1,@R3							;
	MOV.L	R2,@(4,R3)						;

CNT_SYNC_HOSCAL_END
	SUB_END
	M_RTS

	.EXPORT	_CPUi_SET_POS_LSI_DAT_LOD1
_CPUi_SET_POS_LSI_DAT_LOD1:
	SUB_START
	FAR_JSR	#_LOAD_BASE_FREQ_PLS,R0	;
	MOV.L	#_eSHi_BAS_FRQ_SV,R1	;Õﬁ∞Ωé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_FREQ_PLS,R0	;
	MOV.L	#_eSHi_TOP_FRQ_SV,R1	;TOPé¸îgêîê›íË
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_NOW_FREQ_PLS,R0	;
	MOV.L	#_eSHi_NOW_FRQ_PV,R1	;TOPé¸îgêîé¿ë™
	MOV.L	R0,@R1			;

	FAR_JSR	#_LOAD_ACCS1_LATE,R0	;
	MOV.L	#_eSHi_PLSI_ACCS,R1	;â¡å∏ë¨ìx
	MOV.W	R0,@R1			;

	FAR_JSR	#_LOAD_SPD_LATE,R0		;
	MOV.L	#_eSHi_PLSI_LATE,R1		;24
	MOV.W	R0,@R1				;
	SUB_END
	M_RTS
