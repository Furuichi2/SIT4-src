;------------------------------------------------------------------------
;                                                                       |
;   FILE        :resetprg.src                                           |
;   DATE        :Mon, Jun 24, 2002                                      |
;   DESCRIPTION :Reset Program                                          |
;   CPU TYPE    :SH7750                                                 |
;                                                                       |
;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
;                                                                       |
;------------------------------------------------------------------------
	.list	off
		.include	"vect.inc"
		.include	"SH7750RG.EXT"
		.include	"cm_equ1.equ"
		.INCLUDE	"shn_cmd1.MAC"		; 
	.list	on

		.import	_PowerON_Reset_SP
		.import	INTHandlerPRG
		.import	__INITSCT
		.import _main

		.import __INIT_IOLIB		; Remove the comment when you use SIM I/O
		.import __CLOSEALL
		
;		.import __INIT_OTHERLIB		; Remove the comment when you use rand(),strtok()


;		.import	__call_init			; Remove the comment when you use __call_init
;		.import	__call_end			; Remove the comment when you use __call_end

		.import	_IRAM_CLR;
		.import	_WORK_MEM1_CHK;
;;;;;		//.import	_DP_MEM_CHK;
		.import _HardwareSetup1;
		.import _HardwareSetup2;

		.import	_CASH_ENB

		.import	_P_TO_PRAM_COPY			; P -> PRAM
		.import	_PC_TO_PCRAM_COPY		; Pcall -> PcallRAM

	.import		_VUP_PRO_ROM_TO_RAM;
	.import		_ASM_VUP_MAIN;
	.import		_VUPCHECK_DATA

		.section PResetPRG,code
_PowerON_Reset:
_Manual_Reset:
		mov.l   #_PowerON_Reset_SP, R15  ; Initialize SP
		mov.l	#INTHandlerPRG,r0 
		mov.l	#H'100,r1
		sub.l	r1,r0
		ldc		r0,vbr			; VBR addr set 

		mov.l	#_CCR,r0	;
		mov.l	#h'0021,r1	;		; すぐに内蔵RAMを有効にする。
		mov.l	r1,@r0		;

;;;;;;		mov.l	#__INITSCT,r1
;;;;;;		jsr     @r1
;;;;;;		nop

;;;;;		mov.l	#__INIT_IOLIB,r1		; Remove the comment when you use SIM I/O
;;;;;		jsr     @r1
;;;;;		nop
			
;;;;;;		mov.l	#__INIT_OTHERLIB,r1		; Remove the comment when you use rand(),strtok()
;;;;;;		jsr     @r1
;;;;;;		nop

		mov.l	#_HardwareSetup1,r1		; Use Hardware Setup
		jsr     @r1
		nop

		MOV.L	#_IRAM_CLR,R1			;// IRAM CLEAR
		JSR	@R1
		NOP

		MOV.L	#_WORK_MEM1_CHK,R1		;// SDRAM	CHECK & CLEAR
		JSR	@R1
		NOP

	mov.l	#_VUP_PRO_ROM_TO_RAM,r1		;
	jsr	@r1
	nop

;//	*********************************************************************
;//	*****	最終ｾｸｼｮﾝに固定ﾃﾞｰﾀが入っているかどうか確認		*****
;//	*****	入っていなければﾊﾞｰｼﾞｮﾝUP待ち状態にする。		*****
;//	*****	ﾊﾞｰｼﾞｮﾝUPする時は、必ず最初に最終ｾｸｼｮﾝを消去		*****
;//	*********************************************************************
	MOV.L	#_VUPCHECK_DATA,R1
	MOV.L	@R1,R0
	MOV.L	#_VUPCHECK_EQU,R1
	CMP/EQ	R1,R0					; 前回のﾌﾟﾛｸﾞﾗﾑﾊﾞｰｼﾞｮﾝUPは正常？
	BT	_PONR_100				; はい

_PONR_050:
	FAR_JSR	#_ASM_VUP_MAIN,R0
	M_BRA	_PONR_050

_PONR_100:
;		mov.l	#__call_init,r1			; Remove the comment when you use global class object
;		jsr     @r1						; See initsct.c and dbsct.src
;		nop

;;;;;		mov.l	#SR_Init,r0
;;;;;		mov.l	#_main,r8
;;;;;		ldc		r0,sr					; SR set (User AP mode)
;;;;;		jsr		@r8
		nop

;		mov.l	#__call_end,r1			; Remove the comment when you use global class object
;		jsr     @r1						; See initsct.c and dbsct.src
;		nop

;		mov.l	#__CLOSEALL,r1			; Remove the comment when you use SIM I/O
;		jsr     @r1
;		nop

		MOV.L	#_Pstart,R1			;
		JSR	@R1
		NOP

			
		sleep
		nop
		.pool


	.SECTION	Pstart,CODE			;
_Pstart:

	MOV.L	#_HardwareSetup2,R1			;// Use Hardware Setup
	JSR	@R1
	NOP

	MOV.L	#_CASH_ENB,R1			;
	jsr     @r1
	nop

	mov.l	#_P_TO_PRAM_COPY,r1		; P -> PRAM
	jsr     @r1
	nop

	mov.l	#_PC_TO_PCRAM_COPY,r1		; Pcall -> PcallRAM
	jsr     @r1
	nop

;	-----------2007-11-26ｽﾀｯｸﾁｪｯｸｺｰﾄﾞ--------------
	MOV.L	#_PowerON_Reset_SP-H'7F0+H'10,R1;STACK TOP
	MOV.W	#H'5AA5,R0			;
	MOV.W	R0,@R1				;7F0,7F1
	ADD	#2,R1
	MOV.W	#H'1234,R0			;
	MOV.W	R0,@R1				;7F2,7F3
	ADD	#2,R1
	MOV.W	#H'5678,R0			;
	MOV.W	R0,@R1				;7F4,7F5
	ADD	#2,R1
	MOV.W	#H'9ABC,R0			;
	MOV.W	R0,@R1				;7F6,7F7
	ADD	#2,R1
	MOV.W	#H'DEF0,R0			;
	MOV.W	R0,@R1				;7F8,7F9
	ADD	#2,R1

;	-----------2007-11-26ｽﾀｯｸﾁｪｯｸｺｰﾄﾞ--------------
	MOV.L	#_PowerON_Reset_SP-H'7F0+H'100,R1	;STACK TOP
	MOV.W	#H'A55A,R0				;
	MOV.W	R0,@R1					;7F0,7F1
	ADD	#2,R1
	MOV.W	#H'4321,R0				;
	MOV.W	R0,@R1					;7F2,7F3
	ADD	#2,R1
	MOV.W	#H'8765,R0				;
	MOV.W	R0,@R1					;7F4,7F5
	ADD	#2,R1
	MOV.W	#H'CBA9,R0				;
	MOV.W	R0,@R1					;7F6,7F7
	ADD	#2,R1
	MOV.W	#H'0FED,R0				;
	MOV.W	R0,@R1					;7F8,7F9
;	----------------------------------------------

;;;;;	nop();
	MOV.L	#H'0040001,R0
	LDS	R0,FPSCR

;;;だめ	MOV.L	#_main,R1				;
;;;だめ	JSR	@R1
;;;だめ	NOP
;	========= このソフトのＣがR1をいきなりFPSCRに入れている==

;	-----------------------------------------
	.IMPORT	_CALCLATION_CHK

;;;;	STS	FPSCR,R1
;;;;	MOV.L	#_CALCLATION_CHK,R8
;;;;	JSR	@R8
;;;;	NOP


;	-----------------------------------------




	STS	FPSCR,R1
	MOV.L	#_main,R8				;
	JSR	@R8
	NOP

	MOV.L	#__CLOSEALL,R1				;// Use SIM I/O
	JSR	@R1					;
	NOP
	
;;;;;//	_CALL_END();					// Remove the comment when you use global class object

	sleep
	nop

		.pool


		.end

