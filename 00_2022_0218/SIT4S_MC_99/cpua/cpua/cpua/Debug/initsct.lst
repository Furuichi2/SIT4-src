SH SERIES C/C++ Compiler (V.9.04.01.002)                                                         13-Dec-2020 18:20:43  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\SIT4S_MC_99\cpua\cpua\cpua\initsct.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            initsct.c          1    /***********************************************************************/
            initsct.c          2    /*                                                                     */
            initsct.c          3    /*  FILE        :initsct.c                                             */
            initsct.c          4    /*  DATE        :Mon, Jun 24, 2002                                     */
            initsct.c          5    /*  DESCRIPTION :Initialize of RAM Data                                */
            initsct.c          6    /*  CPU TYPE    :SH7750                                                */
            initsct.c          7    /*                                                                     */
            initsct.c          8    /*  This file is generated by Hitachi Project Generator (Ver.1.1).     */
            initsct.c          9    /*                                                                     */
            initsct.c         10    /***********************************************************************/
            initsct.c         11                      
            initsct.c         12    
            initsct.c         13    
            initsct.c         14    /*SH-4*/
            initsct.c         15    extern int *_D_ROM, *_B_BGN, *_B_END, *_D_BGN, *_D_END;
            initsct.c         16    extern void _INITSCT( )
P   00000000              __INITSCT:                       ; function: _INITSCT
                                                           ; frame size=8
    00000000 7FF8                   ADD         #-8,R15
            initsct.c         17    {
            initsct.c         18    char *p, *q;
            initsct.c         19      /*zero clear*/
            initsct.c         20      for( p = (char *)_B_BGN; p < (char *)_B_END; p++)
    00000002 D111                   MOV.L       L15+2,R1   ; __B_BGN
    00000004 6712                   MOV.L       @R1,R7     ; _B_BGN
    00000006 6273                   MOV         R7,R2
    00000008 D110                   MOV.L       L15+6,R1   ; __B_END
    0000000A 6712                   MOV.L       @R1,R7     ; _B_END
    0000000C 3272                   CMP/HS      R7,R2
    0000000E 8906                   BT          L11
    00000010              L12:
            initsct.c         21          *p = 0;                      
    00000010 E100                   MOV         #0,R1      ; H'00000000
    00000012 2210                   MOV.B       R1,@R2     ; *(p)
    00000014 7201                   ADD         #1,R2
    00000016 D10D                   MOV.L       L15+6,R1   ; __B_END
    00000018 6712                   MOV.L       @R1,R7     ; _B_END
    0000001A 3272                   CMP/HS      R7,R2
    0000001C 8BF8                   BF          L12
    0000001E              L11:
            initsct.c         22      /*ROM to RAM*/
            initsct.c         23      for(p = (char *)_D_BGN, q = (char *)_D_ROM; p < (char *)_D_END; p++, q++)
    0000001E D10C                   MOV.L       L15+10,R1  ; __D_BGN
    00000020 6712                   MOV.L       @R1,R7     ; _D_BGN
    00000022 6273                   MOV         R7,R2
    00000024 D10B                   MOV.L       L15+14,R1  ; __D_ROM
    00000026 6712                   MOV.L       @R1,R7     ; _D_ROM
    00000028 6673                   MOV         R7,R6
    0000002A D10B                   MOV.L       L15+18,R1  ; __D_END
    0000002C 6712                   MOV.L       @R1,R7     ; _D_END
    0000002E 3272                   CMP/HS      R7,R2
    00000030 8906                   BT          L13
    00000032              L14:
            initsct.c         24          *p = *q;
    00000032 6564                   MOV.B       @R6+,R5    ; *(q)
    00000034 2250                   MOV.B       R5,@R2     ; *(p)
    00000036 7201                   ADD         #1,R2
    00000038 D107                   MOV.L       L15+18,R1  ; __D_END
    0000003A 6712                   MOV.L       @R1,R7     ; _D_END
    0000003C 3272                   CMP/HS      R7,R2
    0000003E 8BF8                   BF          L14
    00000040              L13:
    00000040 7F08                   ADD         #8,R15
            initsct.c         25    }
    00000042 000B                   RTS
    00000044 0009                   NOP
    00000046              L15:
    00000046 00000002               .RES.W      1
    00000048 <00000000>             .DATA.L     __B_BGN
    0000004C <00000000>             .DATA.L     __B_END
    00000050 <00000000>             .DATA.L     __D_BGN
    00000054 <00000000>             .DATA.L     __D_ROM
    00000058 <00000000>             .DATA.L     __D_END
            initsct.c         26    
            initsct.c         27    // Remove the following comment when you use __call_init and __call_end
            initsct.c         28    // See resetprg.src and dbsct.src
            initsct.c         29    //extern void (**_PRE_BGN)();
            initsct.c         30    //extern void (**_PRE_END)();
            initsct.c         31    //extern void (**_POST_BGN)();
            initsct.c         32    //extern void (**_POST_END)();
            initsct.c         33    
            initsct.c         34    //extern void _call_init();
            initsct.c         35    //extern void _call_end();
            initsct.c         36    
            initsct.c         37    //void _call_init()
            initsct.c         38    //{
            initsct.c         39    //    void (**ppf)();
            initsct.c         40    //    for( ppf = _PRE_BGN; ppf < _PRE_END; ppf++)
            initsct.c         41    //        (*ppf)();
            initsct.c         42    //}
            initsct.c         43    
            initsct.c         44    //void _call_end()
            initsct.c         45    //{
            initsct.c         46    //    void (**ppf)();
            initsct.c         47    //    for( ppf = _POST_BGN; ppf < _POST_END; ppf++)
            initsct.c         48    //        (*ppf)();
            initsct.c         49    //}
SH SERIES C/C++ Compiler (V.9.04.01.002)                                                         13-Dec-2020 18:20:43  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       49



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                                 0000005C Byte(s)
CONSTANT SECTION (C):                                 00000000 Byte(s)
DATA     SECTION (D):                                 00000000 Byte(s)
BSS      SECTION (B):                                 00000000 Byte(s)

TOTAL PROGRAM  SECTION: 0000005C Byte(s)
TOTAL CONSTANT SECTION: 00000000 Byte(s)
TOTAL DATA     SECTION: 00000000 Byte(s)
TOTAL BSS      SECTION: 00000000 Byte(s)

    TOTAL PROGRAM SIZE: 0000005C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            5
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            11



*** COMMAND PARAMETER ***

-subcommand=D:\SIT4S_MC_99\cpua\cpua\cpua\Debug\initsct.shc
-cpu=sh4
-include="D:\SIT4S_MC_99\cpua\cpua\HW_SRC","D:\SIT4S_MC_99\comon","D:\SIT4S_MC_99\cpua\cpua","D:\SIT4S_MC_99\cpua\cpua\SEQ_SRC","D:\SIT4S_MC_99\cpua\cpua\cb_src\COMON","D:\SIT4S_MC_99\cpua\cpua\cb_src\K_SRC","D:\SIT4S_MC_99\comon\cpua_inc"
-object="D:\SIT4S_MC_99\cpua\cpua\cpua\Debug\initsct.obj"
-debug
-listfile="D:\SIT4S_MC_99\cpua\cpua\cpua\Debug\initsct.lst"
-show=source,include,expansion,tab=4
-optimize=0
-noinline
-gbr=auto
-chgincpath
-errorpath
"D:\SIT4S_MC_99\cpua\cpua\cpua\initsct.c"
-global_volatile=0
-opt_range=all
-infinite_loop=0
-del_vacant_loop=0
-struct_alloc=1
-lang=c
-nologo
