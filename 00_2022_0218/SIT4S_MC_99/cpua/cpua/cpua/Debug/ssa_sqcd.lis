*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;       ***************************************************
    2                               2     ;       ***                                             ***
    3                               3     ;       ***                                             ***
    4                               4     ;       ***     ÉVÅ[ÉPÉìÉXÉRÅ[Éhïœä∑É\ÉtÉg              ***
    5                               5     ;       ***                                             ***
    6                               6     ;       ***                                             ***
    7                               7     ;       ***************************************************
 2844                              20     
 2845                              21     
 2846 00000000                     22             .SECTION        P,CODE                  ;
 2847                              23     
 2848                              24     
 2849                              25     
 2850                              26     
 2851                              27     
 2852                              28     ;       //      ***********************************
 2853                              29     ;       //      ***     EXTERN êÈåæ PROGRAM     ***
 2854                              30     ;       //      ***********************************
 2855                              31     
 2856                              32     ;       //      ***********************************
 2857                              33     ;       //      ***     EXTERN êÈåæ MEMORY,HARD ***
 2858                              34     ;       //      ***********************************
 2859                              35     
 2860                              36     ;       //      ***********************************
 2861                              37     ;       //      ***     PUBLIC êÈåæ PROGRAM     ***
 2862                              38     ;       //      ***********************************
 2863                              39     
 2864                              40     
 2865                              41     
 2866                              42     ;       *****************************************************
 2867                              43     ;       *****           ÉVÅ[ÉPÉìÉXèàóù                  *****
 2868                              44     ;       *****************************************************
 2869                              45     ;
 2870                              46     ;       /********************************************************************
 2871                              47     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2872                              48     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2873                              49     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2874                              50     ;       /********************************************************************
 2875                              51     
 2876                              52     ;       *********************************************************************
 2877                              53     ;       *****   Read command                            22+2byte        *****
 2878                              54     ;       *********************************************************************
 2879                              55     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2880                              56     ;
 2881 00000000                     57             .ALIGN  4
 2882 00000000                     58     _LD_CODE:
 2883 00000000 2569                59             AND     R6,R5                           ; ARG and NRG
 2884 00000002 4700                60             SHLL    R7                              ; ARG save to MRG
 2885 00000004 275B                61             OR      R5,R7                           ;
 2886                              62     
 2887 00000006 E300                63             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2888 00000008 633C                64             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2889 0000000A E000                65             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2890 0000000C 600C                66             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2891 0000000E 00ED                67             MOV.W   @(R0,R14),R0                    ; read to ARG
 2892                              68                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2893 00000010 6008                69             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     2
PROGRAM NAME =

 2894 00000012 2038                70             TST     R3,R0                           ;
 2895 00000014 0029                71             MOVT    R0                              ; T->R0
 2896 00000016 CA01                72             XOR     #BIT0,R0                        ;
 2897 00000018 6503                73             MOV     R0,R5                           ; T->ARG
 2898                              74     
 2899 0000001A                     75     _LD_CODE_END:
 2900                              76     
 2901                              77     ;       *********************************************************************
 2902                              78     ;       *****   Read Not command                        26+2byte        *****
 2903                              79     ;       *********************************************************************
 2904                              80     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2905                              81     ;
 2906 0000001C                     82             .ALIGN  4
 2907 0000001C                     83     _LDN_CODE:
 2908 0000001C 2569                84             AND     R6,R5                           ; ARG and NRG
 2909 0000001E 4700                85             SHLL    R7                              ; ARG save to MRG
 2910 00000020 275B                86             OR      R5,R7                           ;
 2911                              87     
 2912 00000022 E300                88             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2913 00000024 633C                89             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2914 00000026 E000                90             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2915 00000028 600C                91             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2916 0000002A 00ED                92             MOV.W   @(R0,R14),R0                    ; read to ARG
 2917                              93                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2918 0000002C 6008                94             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2919 0000002E 2038                95             TST     R3,R0                           ;
 2920 00000030 0529                96             MOVT    R5                              ; TÇÃîΩì] -> ARG
 2921                              97     
 2922 00000032                     98     _LDN_CODE_END:
 2923                              99     
 2924                             100     ;       /********************************************************************
 2925                             101     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 2926                             102     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 2927                             103     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 2928                             104     ;       /********************************************************************
 2929                             105     
 2930                             106     ;       *********************************************************************
 2931                             107     ;       *****   And command                             18+2byte        *****
 2932                             108     ;       *********************************************************************
 2933                             109     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2934                             110     ;
 2935 00000034                    111             .ALIGN  4
 2936 00000034                    112     _AND_CODE:
 2937                             113     
 2938 00000034 E300               114             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2939 00000036 633C               115             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2940 00000038 E000               116             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2941 0000003A 600C               117             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2942 0000003C 00ED               118             MOV.W   @(R0,R14),R0                    ; read to ARG
 2943                             119                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2944 0000003E 6008               120             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2945 00000040 2038               121             TST     R3,R0                           ;
 2946 00000042 0029               122             MOVT    R0                              ; T->R0
 2947 00000044 CA01               123             XOR     #BIT0,R0                        ; T îΩì]
 2948 00000046 2509               124             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2949 00000048                    125     _AND_CODE_END:
 2950                             126     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     3
PROGRAM NAME =

 2951                             127     ;       *********************************************************************
 2952                             128     ;       *****   And Not command                         20byte          *****
 2953                             129     ;       *********************************************************************
 2954                             130     ;       USE REG R0,R1,R2,R3,R10,R11,R12,R13
 2955                             131     ;
 2956 00000048                    132             .ALIGN  4
 2957 00000048                    133     _ANDN_CODE:
 2958                             134     
 2959 00000048 E300               135             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2960 0000004A 633C               136             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2961 0000004C E000               137             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2962 0000004E 600C               138             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2963 00000050 00ED               139             MOV.W   @(R0,R14),R0                    ; read to ARG
 2964                             140                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2965 00000052 6008               141             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2966 00000054 2038               142             TST     R3,R0                           ;
 2967 00000056 0029               143             MOVT    R0                              ; T->R0
 2968 00000058 2509               144             AND     R0,R5                           ; ARG and DATA(T) -> ARG
 2969                             145     
 2970 0000005A                    146     _ANDN_CODE_END:
 2971                             147     
 2972                             148     
 2973                             149     
 2974                             150     ;       *********************************************************************
 2975                             151     ;       *****   Or command                               18+2byte       *****
 2976                             152     ;       *********************************************************************
 2977 0000005C                    153             .ALIGN  4
 2978 0000005C                    154     _OR_CODE:
 2979                             155     
 2980 0000005C E300               156             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2981 0000005E 633C               157             EXTU.B  R3,R3                           ; æﬁ€ägí£
 2982 00000060 E000               158             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 2983 00000062 600C               159             EXTU.B  R0,R0                           ; æﬁ€ägí£
 2984 00000064 00ED               160             MOV.W   @(R0,R14),R0                    ; read to ARG
 2985                             161                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 2986 00000066 6008               162             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
 2987 00000068 2038               163             TST     R3,R0                           ;
 2988 0000006A 0029               164             MOVT    R0                              ; T->R0
 2989 0000006C CA01               165             XOR     #BIT0,R0                        ;
 2990 0000006E 250B               166             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 2991                             167     
 2992 00000070                    168     _OR_CODE_END:
 2993                             169     
 2994                             170     
 2995                             171     ;       *********************************************************************
 2996                             172     ;       *****   Or command                               18+2byte       *****
 2997                             173     ;       *********************************************************************
 2998 00000070                    174             .ALIGN  4
 2999 00000070                    175     _ORN_CODE:
 3000                             176     
 3001 00000070 E300               177             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3002 00000072 633C               178             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3003 00000074 E000               179             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3004 00000076 600C               180             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3005 00000078 00ED               181             MOV.W   @(R0,R14),R0                    ; read to ARG
 3006                             182                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3007 0000007A 6008               183             SWAP.B  R0,R0                           ; 0~7BIT LOAD THEN NOPÇ…ïœä∑
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     4
PROGRAM NAME =

 3008 0000007C 2038               184             TST     R3,R0                           ;
 3009 0000007E 0029               185             MOVT    R0                              ; T->R0
 3010 00000080 250B               186             OR      R0,R5                           ; ARG or DATA(T) -> ARG
 3011                             187     
 3012 00000082                    188     _ORN_CODE_END:
 3013                             189     
 3014                             190     
 3015                             191     ;       *********************************************************************
 3016                             192     ;       *****   Write command                           26+2byte        *****
 3017                             193     ;       *********************************************************************
 3018 00000084                    194             .ALIGN  4
 3019 00000084                    195     _ST_CODE:
 3020                             196     
 3021 00000084 2569               197             AND     R6,R5                           ; ARG and NRG
 3022                             198     
 3023 00000086 E300               199             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3024 00000088 633C               200             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3025 0000008A 4318               201             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3026 0000008C 6237               202             NOT     R3,R2                           ;                               0111111111
                                          111111B
 3027 0000008E E000               203             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3028 00000090 600C               204             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3029 00000092 01ED               205             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3030                             206                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3031 00000094 2129               207             AND     R2,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3032 00000096 625B               208             NEG     R5,R2                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3033 00000098 2239               209             AND     R3,R2                           ; ARG and BIT                   1000000000
                                          000000B
 3034 0000009A 212B               210             OR      R2,R1                           ; ARG SET                       1101010101
                                          010101B
 3035 0000009C 0E15               211             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3036                             212                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3037 0000009E                    213     _ST_CODE_END:                                                           ;
 3038                             214     ;
 3039                             215     
 3040                             216     
 3041                             217     ;       ***********************************************************
 3042                             218     ;       ***     SET BIT CODE CHANGE ROUTINE             20byte  ***
 3043                             219     ;       ***********************************************************
 3044 000000A0                    220             .ALIGN  4
 3045 000000A0                    221     _SET_CODE:                                      ; 00001110B     E
 3046 000000A0 2569               222             AND     R6,R5                           ; ARG and NRG
 3047                             223     
 3048 000000A2 E300               224             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3049 000000A4 633C               225             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3050 000000A6 4318               226             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3051 000000A8 E000               227             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3052 000000AA 600C               228             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3053 000000AC 01ED               229             MOV.W   @(R0,R14),R1                    ; read to ARG                   0101010101
                                          010101B
 3054                             230                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3055 000000AE 625B               231             NEG     R5,R2                           ;
 3056 000000B0 2239               232             AND     R3,R2                           ;
 3057                             233     ;;;;;;  OR      R3,R2                           ;
 3058 000000B2 212B               234             OR      R2,R1                           ; æØƒ                           1101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     5
PROGRAM NAME =

                                          010101B
 3059 000000B4 0E15               235             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3060                             236                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3061 000000B6                    237     _SET_CODE_END:
 3062                             238     
 3063                             239     
 3064                             240     ;       ***********************************************************
 3065                             241     ;       ***     RESET BIT CODE CHANGE ROUTINE           20byte  ***
 3066                             242     ;       ***********************************************************
 3067 000000B8                    243             .ALIGN  4
 3068 000000B8                    244     _RST_CODE:                                      ; 00001110B     E
 3069 000000B8 2569               245             AND     R6,R5                           ; ARG and NRG
 3070                             246     
 3071 000000BA E300               247             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3072 000000BC 633C               248             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3073 000000BE 4318               249             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3074 000000C0 625B               250             NEG     R5,R2                           ;
 3075 000000C2 2329               251             AND     R2,R3                           ;
 3076 000000C4 6337               252             NOT     R3,R3                           ;                               0111111111
                                          111111B
 3077 000000C6 E000               253             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3078 000000C8 600C               254             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3079 000000CA 01ED               255             MOV.W   @(R0,R14),R1                    ; read to ARG                   1101010101
                                          010101B
 3080                             256                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3081 000000CC 2139               257             AND     R3,R1                           ; æØƒ                           0101010101
                                          010101B
 3082 000000CE 0E15               258             MOV.W   R1,@(R0,R14)                    ; read to ARG
 3083                             259                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3084 000000D0                    260     _RST_CODE_END:
 3085                             261     
 3086                             262     ;       ***********************************************************
 3087                             263     ;       ***     ON EDGE 1PULSE ON CODE CHANGE ROUTINE   16byte  ***
 3088                             264     ;       ***********************************************************
 3089 000000D0                    265             .ALIGN  4
 3090 000000D0                    266     _PLS_CODE:                                      ; 00011000B     18
 3091 000000D0 E200               267             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3092 000000D2 622C               268             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3093 000000D4 4218               269             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3094 000000D6 E300               270             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3095 000000D8 633C               271             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3096 000000DA C601               272             MOV.L   @(_PLS_CMD,GBR),R0              ;
 3097 000000DC 400B               273             JSR     @R0                             ; INPUT R2,R3
 3098 000000DE 0009               274             NOP                                     ;
 3099 000000E0                    275     _PLS_CODE_END:
 3100                             276     
 3101                             277     ;       ***************************************************
 3102                             278     ;       ***     ON EDGE 1PULSE ON CODE CHANGE SUB       ***
 3103                             279     ;       ***************************************************
 3104                             280     ;       INPUT R2:BIT,R3,ADR
 3105 000000E0                    281             .ALIGN  4       ;2010-12-27
 3106 000000E0                    282     _PLS_SUB:
 3107                             283             SUB_START
 3108 000000E0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3109                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3110                             284     
 3111                             285     ;;;;2009-11-04  TST     R6,R6                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     6
PROGRAM NAME =

 3112                             286     ;;;;2009-11-04  BT      _PLS_SUB_END                    ; NRG = 0 THEN EXIT
 3113                             287     
 3114 000000E2 6427               288             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3115 000000E4 6033               289             MOV     R3,R0                           ; ADR
 3116 000000E6 01ED               290             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    0101010101
                                          010101B
 3117                             291                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3118 000000E8 6313               292             MOV     R1,R3                           ; ëOâÒíl -> R3
 3119 000000EA 2149               293             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3120 000000EC 645B               294             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  FFFF
 3121 000000EE 2429               295             AND     R2,R4                           ; ARG and BIT                   1000000000
                                          000000B
 3122 000000F0 214B               296             OR      R4,R1                           ; ARG SET                       1101010101
                                          010101B
 3123 000000F2 0E15               297             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3124                             298     
 3125 000000F4 231A               299             XOR     R1,R3                           ; EDGE CHECK                 R1 1101010101
                                          010101B
 3126                             300                                                     ;                            R3 0101010101
                                          010101B
 3127 000000F6 2139               301             AND     R3,R1                           ;                        XOR R1 1000000000
                                          000000B
 3128                             302                                                     ;                        AND R1 1000000000
                                          000000B
 3129 000000F8 2128               303             TST     R2,R1                           ;
 3130 000000FA 0129               304             MOVT    R1                              ;
 3131 000000FC 2118               305             TST     R1,R1                           ;
 3132 000000FE 0529               306             MOVT    R5                              ; TÇÃîΩì] -> ARG
 3133                             307     
 3134 00000100                    308     _PLS_SUB_END:
 3135                             309             SUB_END
 3136                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3137 00000100 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3138                             310             M_RTS
 3139 00000102 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3140 00000104 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3141                             311     
 3142                             312     
 3143                             313     ;       ***********************************************************
 3144                             314     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE ROUTINE  16byte  ***
 3145                             315     ;       ***********************************************************
 3146 00000108                    316             .ALIGN  4
 3147 00000108                    317     _PLF_CODE:                                      ; 00011000B     18
 3148 00000108 E200               318             MOV.B   #_SEQ_BIT,R2                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3149 0000010A 622C               319             EXTU.B  R2,R2                           ; æﬁ€ägí£                       BIT7
 3150 0000010C 4218               320             SHLL8   R2                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3151 0000010E E300               321             MOV.B   #_SEQ_ADR,R3                    ; PLS ëOâÒíl AREA TOP ADR. LOAD
 3152 00000110 633C               322             EXTU.B  R3,R3                           ; æﬁ€ägí£
 3153 00000112 C602               323             MOV.L   @(_PLF_CMD,GBR),R0              ;
 3154 00000114 400B               324             JSR     @R0                             ; INPUT R2,R3
 3155 00000116 0009               325             NOP                                     ;
 3156 00000118                    326     _PLF_CODE_END:
 3157                             327     
 3158                             328     ;       ***************************************************
 3159                             329     ;       ***     OFF EDGE 1PULSE ON CODE CHANGE SUB      ***
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     7
PROGRAM NAME =

 3160                             330     ;       ***************************************************
 3161                             331     ;       INPUT R2:BIT,R3,ADR
 3162 00000118                    332             .ALIGN  4       ;2010-12-27
 3163 00000118                    333     _PLF_SUB:
 3164                             334             SUB_START
 3165 00000118 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3166                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3167                             335     
 3168 0000011A 2668               336             TST     R6,R6                           ;
 3169 0000011C 890F               337             BT      _PLF_SUB_END                    ; NRG = 0 THEN EXIT
 3170                             338     
 3171 0000011E 6427               339             NOT     R2,R4                           ; ÀﬁØƒÇÃîΩì]                    0111111111
                                          111111B
 3172 00000120 6033               340             MOV     R3,R0                           ; ADR
 3173 00000122 01ED               341             MOV.W   @(R0,R14),R1                    ; ëOâÒílLOAD                    1101010101
                                          010101B
 3174                             342                                                     ; Ç±ÇÃñΩóﬂÇÕR14å≈íËÇÃñΩóﬂ
 3175 00000124 6313               343             MOV     R1,R3                           ; ëOâÒíl -> R3
 3176 00000126 2149               344             AND     R4,R1                           ; æØƒÇ∑ÇÈÀﬁØƒ∏ÿ±                0101010101
                                          010101B
 3177 00000128 645B               345             NEG     R5,R4                           ; ARG 1 THEN FFFF,0 THEN 0ïœä∑  0000
 3178 0000012A 2429               346             AND     R2,R4                           ; ARG and BIT                   0000000000
                                          000000B
 3179 0000012C 214B               347             OR      R4,R1                           ; ARG SET                       0101010101
                                          010101B
 3180 0000012E 0E15               348             MOV.W   R1,@(R0,R14)                    ; ç°âÒílSAVE
 3181                             349     
 3182 00000130 231A               350             XOR     R1,R3                           ; EDGE CHECK                 R1 0101010101
                                          010101B
 3183                             351                                                     ;                            R3 1101010101
                                          010101B
 3184 00000132 6117               352             NOT     R1,R1                           ;
 3185 00000134 2319               353             AND     R1,R3                           ;                        XOR R3 1000000000
                                          000000B
 3186                             354                                                     ;                        AND R1 0000000000
                                          000000B
 3187 00000136 2328               355             TST     R2,R3                           ; óßâ∫ÇË¥ØºÇÕT=1
 3188 00000138 0329               356             MOVT    R3                              ;
 3189 0000013A 2338               357             TST     R3,R3                           ;
 3190 0000013C 0529               358             MOVT    R5                              ; T -> ARG
 3191                             359     
 3192 0000013E                    360     _PLF_SUB_END:
 3193                             361             SUB_END
 3194                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3195 0000013E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3196                             362             M_RTS
 3197 00000140 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3198 00000142 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3199                             363     
 3200                             364     
 3201                             365     ;       /********************************************************************
 3202                             366     ;       /*****  R5  ÅÅ Ç`ÇqÇf                                           *****
 3203                             367     ;       /*****  R6  ÅÅ ÇmÇqÇfÅi00000001 or 00000000Åj                   *****
 3204                             368     ;       /*****  R7  ÅÅ ÇlÇqÇfÅiÇaÇhÇsÇPÇTÅ`ÇaÇhÇsÇOÅj                   *****
 3205                             369     ;       /********************************************************************
 3206                             370     
 3207                             371     ;       *********************************************************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     8
PROGRAM NAME =

 3208                             372     ;       *****   And MRG command                 4step   10clocks        *****
 3209                             373     ;       *********************************************************************
 3210 00000144                    374             .ALIGN  4
 3211 00000144                    375     _AMRG_CODE:
 3212 00000144 2579               376             AND     R7,R5                           ; ARG and MRG           ;
 3213 00000146 4701               377             SHLR    R7                              ; shift old MRG         ;
 3214 00000148                    378     _AMRG_CODE_END:
 3215                             379     
 3216                             380     
 3217                             381     ;       *********************************************************************
 3218                             382     ;       *****   Or MRG command                  4step   10clocks        *****
 3219                             383     ;       *********************************************************************
 3220 00000148                    384             .ALIGN  4
 3221 00000148                    385     _OMRG_CODE:
 3222 00000148 257B               386             OR      R7,R5                           ; ARG or MRG
 3223 0000014A 4701               387             SHLR    R7                              ; shift old MRG         ;
 3224 0000014C                    388     _OMRG_CODE_END:
 3225                             389     ;
 3226                             390     
 3227                             391     
 3228                             392     ;       *********************************************************************
 3229                             393     ;       *****   Write NRG command               4step    4clocks        *****
 3230                             394     ;       *********************************************************************
 3231 0000014C                    395             .ALIGN  4
 3232 0000014C                    396     _WNRG_CODE:
 3233 0000014C 2569               397             AND     R6,R5                           ; ARG and NRG           ; 2
 3234 0000014E 6653               398             MOV     R5,R6                           ; ARG store to NRG      ; 2
 3235 00000150                    399     _WNRG_CODE_END:
 3236                             400     
 3237                             401     
 3238                             402     ;       *********************************************************************
 3239                             403     ;       *****   Write Not NRG command           2step    5clocks        *****
 3240                             404     ;       *********************************************************************
 3241 00000150                    405             .ALIGN  4
 3242 00000150                    406     _WNNRG_CODE:
 3243 00000150 0018               407             SETT                                    ;
 3244 00000152 0629               408             MOVT    R6                              ; clear NRG             ; 5
 3245 00000154                    409     _WNNRG_CODE_END:
 3246                             410     
 3247                             411     
 3248                             412     ;       *************************************************************
 3249                             413     ;       *****   Write Skip Controlor command                    *****
 3250                             414     ;       *************************************************************
 3251                             415     
 3252 00000154                    416             .ALIGN  4       ;2010-12-27
 3253 00000154                    417     _WSC_CODE:                                      ; 00001110B     E
 3254 00000154 E300               418             MOV.B   #_SEQ_BIT,R3                    ; ÀﬁØƒ BITÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑    BIT7
 3255 00000156 633C               419             EXTU.B  R3,R3                           ; æﬁ€ägí£                       BIT7
 3256 00000158 4318               420             SHLL8   R3                              ; 0~7BIT LOAD THEN NOPÇ…ïœä∑    BIT15
 3257                             421     
 3258 0000015A C606               422             MOV.L   @(_WSC_CMD,GBR),R0              ;
 3259 0000015C 400B               423             JSR     @R0                             ; INPUT R2,R3
 3260 0000015E 0009               424             NOP                                     ;
 3261                             425     
 3262 00000160 E000               426             MOV.B   #_SEQ_ADR,R0                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3263 00000162 600C               427             EXTU.B  R0,R0                           ; æﬁ€ägí£
 3264 00000164 0E15               428             MOV.W   R1,@(R0,R14)                    ; read to ARG                   0101010101
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE     9
PROGRAM NAME =

                                          010101B
 3265                             429                                                     ; Ç±ÇÃñΩóﬂÇÕ∫› ﬂ≤ŸéûÇ…R8Å`14ÇÃñΩóﬂÇ…ïœä∑
 3266                             430     
 3267 00000166                    431     _WSC_CODE_END:
 3268                             432     
 3269                             433     ;       *************************************************************
 3270                             434     ;       *****   Write Skip Controlor command subroutine         *****
 3271                             435     ;       *************************************************************
 3272                             436     ;       INPUT R1 WRITE ADR,R3 BIT
 3273                             437     ;       OUTPUT R1
 3274 00000168                    438             .ALIGN  4       ;2010-12-27
 3275 00000168                    439     _WSC_SUB:
 3276                             440             SUB_START
 3277 00000168 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3278                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3279                             441     
 3280 0000016A 2569               442             AND     R6,R5                   ; ARG and NRG
 3281 0000016C 2558               443             TST     R5,R5                   ;
 3282 0000016E 8903               444             BT      _WSC_S10                ; if ARG = 0  then jump
 3283                             445     ;
 3284 00000170 6053               446             MOV     R5,R0                   ;
 3285 00000172 600B               447             NEG     R0,R0                   ;
 3286 00000174 2039               448             AND     R3,R0                   ; ÇªÇÃBITÇÃÇ›ON
 3287 00000176 6103               449             MOV     R0,R1                   ; store ARG
 3288 00000178                    450     _WSC_S10:
 3289                             451             SUB_END
 3290                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3291 00000178 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3292                             452             M_RTS
 3293 0000017A 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3294 0000017C 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3295                             453     
 3296                             454     ;       ***********************************************************
 3297                             455     ;       ***     Shift Register commnd                   20byte  ***
 3298                             456     ;       ***********************************************************
 3299 00000180                    457             .ALIGN  4
 3300 00000180                    458     _WSR_CODE:                                      ; 00011000B     18
 3301 00000180 E100               459             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3302 00000182 611C               460             EXTU.B  R1,R1                           ;
 3303 00000184 E000               461             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3304 00000186 600C               462             EXTU.B  R0,R0                           ;
 3305 00000188 4018               463             SHLL8   R0                              ;
 3306 0000018A 310C               464             ADD     R0,R1                           ;
 3307 0000018C 4100               465             SHLL    R1                              ; CARD*2
 3308                             466     ;;;;;   ADD     R1,R3                           ; SHIFT CARD ADDRESS MAKE
 3309                             467     
 3310 0000018E C607               468             MOV.L   @(_WSR_CMD,GBR),R0              ;
 3311 00000190 400B               469             JSR     @R0                             ; INPUT R3
 3312 00000192 0009               470             NOP                                     ;
 3313 00000194                    471     _WSR_CODE_END:
 3314                             472     
 3315                             473     
 3316                             474     ;       ***********************************************************
 3317                             475     ;       ***     Shift Register CODE CHANGE ROUTINE              ***
 3318                             476     ;       ***********************************************************
 3319                             477     ;       INPUT   R1 SHIFT CARD ADDRESS
 3320 00000194                    478             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    10
PROGRAM NAME =

 3321 00000194                    479     _WSR_SUB:
 3322                             480             SUB_START
 3323 00000194 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3324                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3325                             481     
 3326 00000196 2569               482             AND     R6,R5                   ; ARG and NRG
 3327                             483     
 3328 00000198 D309               484             MOV.L   #_SEQ_CARD_RAM,R3       ; SEQUENCE BIT AREA TOP
 3329 0000019A D20A               485             MOV.L   #_SEQ_SR_FLG,R2         ; SHIFT (OLD ARG) CARD ADDRESS TOP
 3330 0000019C 331C               486             ADD     R1,R3                   ; CARD TOP + CARD ADDRESS
 3331 0000019E 321C               487             ADD     R1,R2                   ; SHIFT TOP + CARD ADDRESS
 3332                             488     
 3333 000001A0 6021               489             MOV.W   @R2,R0                  ; load old ARG
 3334 000001A2 2251               490             MOV.W   R5,@R2                  ; store new ARG
 3335 000001A4 205A               491             XOR     R5,R0                   ; (old ARG) xor (new ARG)
 3336 000001A6 2059               492             AND     R5,R0                   ; and (new ARG)
 3337 000001A8 2008               493             TST     R0,R0                   ; ON EGDE CHECK
 3338 000001AA 8905               494             BT      _WSR_S10                ; if ARG not 0-->1 then jump
 3339                             495     
 3340 000001AC 6031               496             MOV.W   @R3,R0                  ;
 3341 000001AE 4000               497             SHLL    R0                      ;
 3342                             498     ;;;;2009-11-04  AND     #NBIT0,R0       ; MRG ÇSTOREÇ∑ÇÈBIT CLEAR
 3343 000001B0 9205               499             MOV.W   #BIT0,R2                ;
 3344 000001B2 2279               500             AND     R7,R2                   ;
 3345 000001B4 202B               501             OR      R2,R0                   ;
 3346 000001B6 2301               502             MOV.W   R0,@R3                  ; ºÃƒÇµÇƒBIT0Ç…MRGÇΩƒ±
 3347                             503     
 3348 000001B8                    504     _WSR_S10:
 3349                             505             SUB_END
 3350                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3351 000001B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3352                             506             M_RTS
 3353 000001BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3354 000001BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3355                             507     
 3356                             508     
 3357                             509     
 3358                             510     ;       *********************************************************************
 3359                             511     ;       *****   Data Set command                        14byte          *****
 3360                             512     ;       *********************************************************************
 3361                             513     ;         ------------------------------
 3362                             514     ;       +0|       ñΩóﬂCODE      (  )   |
 3363                             515     ;         ------------------------------
 3364                             516     ;       +1|         ãÛÇ´        (  )   |
 3365                             517     ;         ------------------------------
 3366                             518     ;       +2|       √ﬁ∞¿è„à       (  )   |
 3367                             519     ;         ------------------------------
 3368                             520     ;       +3|       √ﬁ∞¿â∫à       (  )   |
 3369                             521     ;         ------------------------------
 3370                             522     ;
 3371                                     ***** BEGIN-POOL *****
 3372 000001BE 0001                       DATA FOR SOURCE-LINE 499
 3373 000001C0 00000000                   DATA FOR SOURCE-LINE 484
 3374 000001C4 00000000                   DATA FOR SOURCE-LINE 485
 3375                                     ***** END-POOL *****
 3376 000001C8                    523             .ALIGN  4
 3377 000001C8                    524     _DS_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    11
PROGRAM NAME =

 3378 000001C8 E100               525             MOV.B   #_SEQ_DT_LO,R1                  ; √ﬁ∞¿â∫à 
 3379 000001CA 611C               526             EXTU.B  R1,R1                           ;
 3380 000001CC E000               527             MOV.B   #_SEQ_DT_HI,R0                  ; √ﬁ∞¿è„à 
 3381 000001CE 600C               528             EXTU.B  R0,R0                           ;
 3382 000001D0 4018               529             SHLL8   R0                              ;
 3383 000001D2 301C               530             ADD     R1,R0                           ; SET DATA MAKE
 3384 000001D4 0112               531             STC     GBR,R1                          ;
 3385 000001D6 6112               532             MOV.L   @R1,R1                          ;
 3386 000001D8 2101               533             MOV.W   R0,@R1                          ;
 3387                             534     ;;;;;   MOV.W   R0,@(DREG,GBR)                  ; DATA REG SET
 3388 000001DA                    535     _DS_CODE_END:
 3389                             536     
 3390                             537     
 3391                             538     ;       *********************************************************************
 3392                             539     ;       *****   Clear Card command                      16byte          *****
 3393                             540     ;       *********************************************************************
 3394                             541     ;         ------------------------------
 3395                             542     ;       +0|       ñΩóﬂCODE      (  )   |
 3396                             543     ;         ------------------------------
 3397                             544     ;       +1|         ãÛÇ´        (  )   |
 3398                             545     ;         ------------------------------
 3399                             546     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3400                             547     ;         ------------------------------
 3401                             548     ;       +3|         ADR         (  )   |        R4
 3402                             549     ;         ------------------------------
 3403                             550     
 3404 000001DC                    551             .ALIGN  4
 3405 000001DC                    552     _CLR_CODE:
 3406 000001DC E300               553             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3407 000001DE 603C               554             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3408                             555     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3409 000001E0 30EC               556             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3410 000001E2 6303               557             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3411                             558     
 3412 000001E4 C603               559             MOV.L   @(_CLR_CMD,GBR),R0              ;
 3413 000001E6 400B               560             JSR     @R0                             ; INPUT R3
 3414 000001E8 0009               561             NOP                                     ;
 3415 000001EA                    562     _CLR_CODE_END:
 3416                             563     
 3417                             564     ;       ***********************************
 3418                             565     ;       ***     CLRñΩóﬂªÃﬁŸ∞¡›          ***
 3419                             566     ;       ***********************************
 3420                             567     ;       INPUT R3
 3421 000001EC                    568             .ALIGN  4       ;2010-12-27
 3422 000001EC                    569     _CLR_SUB:
 3423                             570             SUB_START
 3424 000001EC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3425                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3426                             571     
 3427 000001EE 2569               572             AND     R6,R5                           ; ARG and NRG
 3428 000001F0 2558               573             TST     R5,R5                           ;
 3429 000001F2 8901               574             BT      _CLR_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3430                             575     
 3431 000001F4 9003               576             MOV.W   #0,R0                           ; CLEAR DATA
 3432 000001F6 2301               577             MOV.W   R0,@R3                          ; DATA STORE
 3433 000001F8                    578     _CLR_SUB_END:
 3434                             579             SUB_END
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    12
PROGRAM NAME =

 3435                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3436 000001F8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3437                             580             M_RTS
 3438 000001FA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3439 000001FC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3440                             581     
 3441                             582     
 3442                             583     ;       *********************************************************************
 3443                             584     ;       *****   Write Timmer command                    10+2byte        *****
 3444                             585     ;       *********************************************************************
 3445                                     ***** BEGIN-POOL *****
 3446 000001FE 0000                       DATA FOR SOURCE-LINE 576
 3447                                     ***** END-POOL *****
 3448 00000200                    586             .ALIGN  4
 3449 00000200                    587     _WTMR_CODE:
 3450 00000200 E200               588             MOV.B   #_SEQ_TMR_DT,R2                 ; TMR data buffer pointer
 3451 00000202 4208               589             SHLL2   R2                              ; TMR No. * 4
 3452                             590     ;;;;;   MOV.W   @R2,R2                          ;
 3453 00000204 C604               591             MOV.L   @(_TMR_CMD,GBR),R0              ;
 3454 00000206 400B               592             JSR     @R0                             ;
 3455 00000208 0009               593             NOP                                     ;
 3456                             594     ;
 3457 0000020A                    595     _WTMR_CODE_END:
 3458                             596     
 3459                             597     
 3460                             598     ;;;;;;;2010-12-27??     SUB_START
 3461                             599     ;       *************************************************************
 3462                             600     ;       *****   Write Timmer command subroutine                 *****
 3463                             601     ;       *************************************************************
 3464 0000020C                    602             .ALIGN  4       ;2010-12-27
 3465 0000020C                    603     _WTMR_SUB:
 3466                             604             SUB_START
 3467 0000020C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3468                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3469                             605     ;
 3470 0000020E 2569               606             AND     R6,R5                           ; ARG and NRG
 3471 00000210 9017               607             MOV.W   #BIT0,R0                        ;
 3472 00000212 2708               608             TST     R0,R7                           ; check MRG
 3473 00000214 893C               609             BT      _WTMR_S50                       ; if MRG = 0  then jump ¿≤œñ≥å¯ THEN Ω¿∞ƒB
                                          IT OFF,¿≤œílÃﬂÿæØƒ
 3474                             610     ;
 3475                             611     ;       *** START BIT CHECK ***
 3476 00000216 D40B               612             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3477 00000218 6023               613             MOV     R2,R0                           ;
 3478 0000021A 7002               614             ADD     #2,R0                           ; TIMER START FLG AREA
 3479 0000021C 014C               615             MOV.B   @(R0,R4),R1                     ; store timmer count start bit
 3480 0000021E 2118               616             TST     R1,R1                           ;
 3481 00000220 8B03               617             BF      _WTMR_S10_000                   ; START BIT ON THEN JUMP
 3482                             618     
 3483                             619     ;       *** TIMER INITIAL SET ***
 3484                             620     ;;;;;   MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3485                             621     
 3486 00000222 D109               622             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3487 00000224 6111               623             MOV.W   @R1,R1                          ;
 3488 00000226 6023               624             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3489 00000228 0415               625             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3490                             626     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    13
PROGRAM NAME =

 3491                             627     ;       *** TIM UP CHECK ***
 3492 0000022A                    628     _WTMR_S10_000:
 3493 0000022A D406               629             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3494 0000022C 6023               630             MOV     R2,R0                           ;
 3495 0000022E 7002               631             ADD     #2,R0                           ; TIMER START FLG AREA
 3496 00000230 0454               632             MOV.B   R5,@(R0,R4)                     ; store timmer count start bit
 3497                             633     
 3498 00000232 2558               634             TST     R5,R5                           ;
 3499 00000234 8B0A               635             BF      _WTMR_S10_020                   ;
 3500 00000236 E110               636             MOV.B   #BIT4,R1                        ;
 3501 00000238 034C               637             MOV.B   @(R0,R4),R3                     ; store timmer count start bit  í«â¡DEBUG
 3502 0000023A 231B               638             OR      R1,R3                           ;
 3503 0000023C 0434               639             MOV.B   R3,@(R0,R4)                     ; store timmer count start bit  í«â¡DEBUG
 3504                             640             M_BRA   _WTMR_SUB_END                   ;
 3505 0000023E A041                   M           BRA     _WTMR_SUB_END
 3506 00000240 0009                   M           NOP
 3507                             641     
 3508                                     ***** BEGIN-POOL *****
 3509 00000242 0001                       DATA FOR SOURCE-LINE 607
 3510 00000244 00000000                   DATA FOR SOURCE-LINE 612,629
 3511 00000248 00000000                   DATA FOR SOURCE-LINE 622
 3512                                     ***** END-POOL *****
 3513 0000024C                    642     _WTMR_S10_020:
 3514 0000024C 6023               643             MOV     R2,R0                           ;
 3515 0000024E 014D               644             MOV.W   @(R0,R4),R1                     ;
 3516 00000250 2118               645             TST     R1,R1                           ; time up check
 3517 00000252 8901               646             BT      _WTMR_S10                       ; if time is up then jump
 3518                             647     
 3519                             648             M_BRA   _WTMR_SUB_END                   ;
 3520 00000254 A036                   M           BRA     _WTMR_SUB_END
 3521 00000256 0009                   M           NOP
 3522                             649     ;
 3523                             650     ;       *** ¿≤—±ØÃﬂ THEN ¿≤—±ØÃﬂÀﬁØƒON ***
 3524 00000258                    651     _WTMR_S10:
 3525                             652     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3526                             653     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3527 00000258 D109               654             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3528 0000025A D00A               655             MOV.L   #_SEQ_TMR_CARD_TOP,R0   ;
 3529 0000025C 310C               656             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3530                             657     
 3531 0000025E D30A               658             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3532 00000260 6023               659             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3533 00000262 4001               660             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3534 00000264 303C               661             ADD     R3,R0                   ;
 3535 00000266 6001               662             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3536 00000268 310C               663             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3537 0000026A 6411               664             MOV.W   @R1,R4                  ;
 3538                             665     
 3539 0000026C 6023               666             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3540                             667     ;;;;;   SHLL    R0                      ; ∂≥›¿≈› ﬁ∞ * 2
 3541 0000026E 4001               668             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞/2=*2
 3542 00000270 D306               669             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3543 00000272 303C               670             ADD     R3,R0                   ;
 3544 00000274 6001               671             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3545 00000276 240B               672             OR      R0,R4                   ;
 3546 00000278 2141               673             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3547                             674     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    14
PROGRAM NAME =

 3548                             675             M_BRA   _WTMR_SUB_END                   ;
 3549 0000027A A023                   M           BRA     _WTMR_SUB_END
 3550 0000027C 0009                   M           NOP
 3551                             676     
 3552                             677     ;
 3553                             678     ;       *** ¿≤œñ≥å¯ THEN Ω¿∞ƒBIT OFF,¿≤œílÃﬂÿæØƒ ***
 3554                                     ***** BEGIN-POOL *****
 3555 0000027E 0000                       ALIGNMENT CODE
 3556 00000280 00000000                   DATA FOR SOURCE-LINE 654
 3557 00000284 00000424                   DATA FOR SOURCE-LINE 655
 3558 00000288 00000000                   DATA FOR SOURCE-LINE 658
 3559 0000028C 00000000                   DATA FOR SOURCE-LINE 669
 3560                                     ***** END-POOL *****
 3561 00000290                    679     _WTMR_S50:
 3562 00000290 D40E               680             MOV.L   #_SEQ_TMR_DATA,R4               ;
 3563 00000292 D10F               681             MOV.L   #_SEQ_DRG1_DATA,R1              ; DATA REG data load
 3564 00000294 6111               682             MOV.W   @R1,R1                          ;
 3565 00000296 6023               683             MOV     R2,R0                           ; R2=∂≥›¿≈› ﬁ∞
 3566                             684     ;;;;;   SHLL2   R0                              ; ¿≤œ≈› ﬁ∞ *4
 3567 00000298 0415               685             MOV.W   R1,@(R0,R4)                     ; ¿≤œ√ﬁ∞¿ ÃﬂÿæØƒ
 3568                             686     
 3569 0000029A 7002               687             ADD     #2,R0                           ; ARG SAVE AREA
 3570 0000029C 211A               688             XOR     R1,R1                           ;
 3571 0000029E 0414               689             MOV.B   R1,@(R0,R4)                     ; START BIT CLEAR
 3572                             690     
 3573                             691     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3574                             692     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3575 000002A0 D10C               693             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3576 000002A2 D00D               694             MOV.L   #_SEQ_TMR_CARD_TOP,R0           ;
 3577 000002A4 310C               695             ADD     R0,R1                           ; CARD TOP + TMR AREA TOP
 3578                             696     
 3579 000002A6 D30D               697             MOV.L   #_SEQ_SEEK_CARD_TBL,R3          ;
 3580 000002A8 6023               698             MOV     R2,R0                           ; ∂≥›¿≈› ﬁ∞*4
 3581 000002AA 4001               699             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3582 000002AC 303C               700             ADD     R3,R0                           ;
 3583 000002AE 6001               701             MOV.W   @R0,R0                          ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3584 000002B0 310C               702             ADD     R0,R1                           ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3585 000002B2 6411               703             MOV.W   @R1,R4                          ;
 3586                             704     
 3587 000002B4 6023               705             MOV     R2,R0                           ; ¿≤œ≈› ﬁ∞*4
 3588 000002B6 4001               706             SHLR    R0                              ; /2=∂≥›¿≈› ﬁ∞*2
 3589 000002B8 D309               707             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3          ;
 3590 000002BA 303C               708             ADD     R3,R0                           ;
 3591 000002BC 6001               709             MOV.W   @R0,R0                          ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3592 000002BE 6007               710             NOT     R0,R0                           ;
 3593 000002C0 2409               711             AND     R0,R4                           ; TIME UP BIT CLEAR
 3594 000002C2 2141               712             MOV.W   R4,@R1                          ; STORE
 3595                             713     
 3596 000002C4                    714     _WTMR_SUB_END:
 3597                             715     
 3598                             716             SUB_END
 3599                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3600 000002C4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3601                             717             M_RTS
 3602 000002C6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3603 000002C8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3604                             718     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    15
PROGRAM NAME =

 3605                             719     ;       *********************************************************************
 3606                             720     ;       *****   Write Counter command                   10+2byte        *****
 3607                             721     ;       *********************************************************************
 3608                                     ***** BEGIN-POOL *****
 3609 000002CA 0000                       ALIGNMENT CODE
 3610 000002CC 00000000                   DATA FOR SOURCE-LINE 680
 3611 000002D0 00000000                   DATA FOR SOURCE-LINE 681
 3612 000002D4 00000000                   DATA FOR SOURCE-LINE 693
 3613 000002D8 00000424                   DATA FOR SOURCE-LINE 694
 3614 000002DC 00000000                   DATA FOR SOURCE-LINE 697
 3615 000002E0 00000000                   DATA FOR SOURCE-LINE 707
 3616                                     ***** END-POOL *****
 3617 000002E4                    722             .ALIGN  4
 3618 000002E4                    723     _WCTR_CODE:
 3619 000002E4 E200               724             MOV.B   #_SEQ_CTR_DT,R2                 ; TMR data buffer pointer
 3620 000002E6 4208               725             SHLL2   R2
 3621                             726     ;;;;;   MOV.W   @R2,R2                          ;
 3622 000002E8 C605               727             MOV.L   @(_CTR_CMD,GBR),R0              ;
 3623 000002EA 400B               728             JSR     @R0                             ;
 3624 000002EC 0009               729             NOP                                     ;
 3625                             730     ;
 3626 000002EE                    731     _WCTR_CODE_END:
 3627                             732     
 3628                             733     
 3629                             734     ;       *************************************************************
 3630                             735     ;       *****   Write Counter command subroutine                *****
 3631                             736     ;       *************************************************************
 3632                             737     ;       INPUT R2 :∂≥›¿≈› ﬁ∞*4 (0*4,1*4,2*4,,,,,,)  struct:
 3633                             738     ;       SEQ_CTR_DATA 4byteÅ@1234h
 3634                             739     ;       +0 ∂≥›¿ê›íË/é¿ë™ è„à Å@12h
 3635                             740     ;       +1 ∂≥›¿ê›íË/é¿ë™ â∫à Å@34h
 3636                             741     ;       +2 èâä˙âªÃ◊∏ﬁ 0(èâä˙âªäÆóπ)/ff(èâä˙âªïKóv) ff:∂≥›¿ÃﬂÿæØƒ(ê›íË=>é¿ë™)
 3637                             742     ;       +3 AregëOâÒíl(∂≥›¿ ﬂŸΩçÏê¨ÇÃÇΩÇﬂ)
 3638                             743     ;
 3639                             744     ;       Mreg(R7)ÅFóLå¯/ñ≥å¯(ÃﬂÿæØƒ)
 3640                             745     ;       Areg(R5)ÅF∂≥›ƒ ﬂŸΩ
 3641                             746     ;
 3642 000002F0                    747             .ALIGN  4       ;2010-12-27
 3643 000002F0                    748     _WCTR_SUB:
 3644                             749             SUB_START
 3645 000002F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3646                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3647                             750     ;
 3648 000002F2 2569               751             AND     R6,R5                   ; ARG and NRG                   ; 2
 3649 000002F4 9003               752             MOV.W   #BIT0,R0                ;
 3650 000002F6 2708               753             TST     R0,R7                   ; check MRG                     ; 7 1999-5-26
 3651 000002F8 8B02               754             BF      _WCTR_S05               ; if MRG = 1  then jump         ; 8/15
 3652                             755     
 3653                             756             M_BRA   _WCTR_S50               ; ∂≥›¿ñ≥å¯ THEN èâä˙ílÇ…ÃﬂÿæØƒ
 3654 000002FA A05F                   M           BRA     _WCTR_S50
 3655 000002FC 0009                   M           NOP
 3656                             757     
 3657                             758     ;
 3658                                     ***** BEGIN-POOL *****
 3659 000002FE 0001                       DATA FOR SOURCE-LINE 752
 3660                                     ***** END-POOL *****
 3661 00000300                    759     _WCTR_S05:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    16
PROGRAM NAME =

 3662 00000300 D403               760             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3663 00000302 6023               761             MOV     R2,R0                   ;
 3664                             762     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3665 00000304 7002               763             ADD     #2,R0                   ; èâä˙ílSET FLG,START/STOP FLG AREA
 3666                             764     ;;;;2008-08-08 BUG      MOV.W   @(R0,R4),R1             ; INITIAL DATA SET CHECK
 3667 00000306 014C               765             MOV.B   @(R0,R4),R1             ; INITIAL DATA SET CHECK 2008-08-08
 3668 00000308 2118               766             TST     R1,R1                   ;
 3669 0000030A 8B03               767             BF      _WCTR_S05_10            ; SETçœÇ› THEN JUMP
 3670                             768             M_BRA   _WCTR_S50               ; INITIAL DATA SET
 3671 0000030C A056                   M           BRA     _WCTR_S50
 3672 0000030E 0009                   M           NOP
 3673                             769     
 3674                                     ***** BEGIN-POOL *****
 3675 00000310 00000000                   DATA FOR SOURCE-LINE 760
 3676                                     ***** END-POOL *****
 3677 00000314                    770     _WCTR_S05_10:
 3678 00000314 D405               771             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3679 00000316 6023               772             MOV     R2,R0                   ;
 3680                             773     ;;;;;2008-08-06 ﬁ∏ﬁ     SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2 2008-08-06 SAITO
                                          ÉoÉOÇ≈Ç∑
 3681 00000318 7003               774             ADD     #3,R0                   ; ARG SAVE AREA
 3682 0000031A 014C               775             MOV.B   @(R0,R4),R1             ; load old ARG                  ; 9
 3683 0000031C 0454               776             MOV.B   R5,@(R0,R4)             ; store new ARG                 ; 5
 3684 0000031E 215A               777             XOR     R5,R1                   ; (old ARG) xor (new ARG)       ; 2
 3685 00000320 2159               778             AND     R5,R1                   ; and (new ARG)                 ; 2
 3686 00000322 2118               779             TST     R1,R1                   ;
 3687 00000324 8B04               780             BF      _WCTR_S10               ; if ARG change 0 --> 1 then jump ;8/15
 3688                             781     ;
 3689                             782             M_BRA   _WCTR_SUB_END           ; if ARG not changed  then return ;29
 3690 00000326 A065                   M           BRA     _WCTR_SUB_END
 3691 00000328 0009                   M           NOP
 3692                             783     
 3693                                     ***** BEGIN-POOL *****
 3694 0000032A 0000                       ALIGNMENT CODE
 3695 0000032C 00000000                   DATA FOR SOURCE-LINE 771
 3696                                     ***** END-POOL *****
 3697 00000330                    784     _WCTR_S10:
 3698                             785     
 3699                             786     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3700                             787     ;;;     MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3701 00000330 D109               788             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3702 00000332 D00A               789             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3703 00000334 310C               790             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3704                             791     
 3705 00000336 D30A               792             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3706 00000338 6023               793             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3707 0000033A 4001               794             SHLR    R0                      ; /2
 3708 0000033C 303C               795             ADD     R3,R0                   ;
 3709 0000033E 6001               796             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3710 00000340 310C               797             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3711 00000342 6411               798             MOV.W   @R1,R4                  ;16bit
 3712                             799     
 3713 00000344 6023               800             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3714 00000346 4001               801             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3715 00000348 D306               802             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3716 0000034A 303C               803             ADD     R3,R0                   ;
 3717 0000034C 6001               804             MOV.W   @R0,R0                  ; R0=¡™Ø∏Ç∑ÇÈÀﬁØƒ
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    17
PROGRAM NAME =

 3718 0000034E 2049               805             AND     R4,R0                   ;
 3719 00000350 2008               806             TST     R0,R0                   ;
 3720 00000352 8909               807             BT      _WCTR_S15               ; if not count upped then jump
 3721                             808     ;
 3722                             809             M_BRA   _WCTR_SUB_END           ; if already count upped then ret
 3723 00000354 A04E                   M           BRA     _WCTR_SUB_END
 3724 00000356 0009                   M           NOP
 3725                             810     
 3726                                     ***** BEGIN-POOL *****
 3727 00000358 00000000                   DATA FOR SOURCE-LINE 788
 3728 0000035C 00000430                   DATA FOR SOURCE-LINE 789
 3729 00000360 00000000                   DATA FOR SOURCE-LINE 792
 3730 00000364 00000000                   DATA FOR SOURCE-LINE 802
 3731                                     ***** END-POOL *****
 3732 00000368                    811     _WCTR_S15:
 3733 00000368 D40E               812             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3734 0000036A 6023               813             MOV     R2,R0                   ;
 3735                             814     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3736 0000036C 014D               815             MOV.W   @(R0,R4),R1             ; COUNTER DATA LOAD
 3737 0000036E D30E               816             MOV.L   #1,R3                   ;
 3738                             817     
 3739 00000370 0008               818             CLRT                            ; T <- 0 CLEAR
 3740 00000372 313A               819             SUBC    R3,R1                   ; COUNER DATA -1
 3741 00000374 233A               820             XOR     R3,R3                   ;
 3742 00000376 313E               821             ADDC    R3,R1                   ; counter = FF --> 0 set
 3743 00000378 0415               822             MOV.W   R1,@(R0,R4)             ; COUNER DATA -1 SET
 3744                             823     ;
 3745 0000037A 2118               824             TST     R1,R1                   ; counter 0 check               ; 2
 3746 0000037C 8B10               825             BF      _WCTR_S20               ; if not count upped then jump  ; 8/15
 3747                             826     
 3748                             827     ;       *** ∂≥›ƒ±ØÃﬂÇ»ÇÁ∂≥›ƒ±ØÃﬂÀﬁØƒSET ***
 3749                             828     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3750                             829     ;;;;;   MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3751 0000037E D10B               830             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3752 00000380 D00B               831             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3753 00000382 310C               832             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3754                             833     
 3755 00000384 D30B               834             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3756 00000386 6023               835             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4/2
 3757 00000388 4001               836             SHLR    R0                      ;
 3758 0000038A 303C               837             ADD     R3,R0                   ;
 3759 0000038C 6001               838             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3760 0000038E 310C               839             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3761 00000390 6411               840             MOV.W   @R1,R4                  ;
 3762                             841     
 3763 00000392 6023               842             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3764 00000394 4001               843             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3765 00000396 D308               844             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3766 00000398 303C               845             ADD     R3,R0                   ;
 3767 0000039A 6001               846             MOV.W   @R0,R0                  ; R0=SETÇ∑ÇÈÀﬁØƒ
 3768 0000039C 240B               847             OR      R0,R4                   ;
 3769 0000039E 2141               848             MOV.W   R4,@R1                  ; ∂≥›ƒ±ØÃﬂÀﬁØƒSET
 3770                             849     
 3771 000003A0                    850     _WCTR_S20:
 3772                             851             M_BRA   _WCTR_SUB_END
 3773 000003A0 A028                   M           BRA     _WCTR_SUB_END
 3774 000003A2 0009                   M           NOP
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    18
PROGRAM NAME =

 3775                             852     ;
 3776                                     ***** BEGIN-POOL *****
 3777 000003A4 00000000                   DATA FOR SOURCE-LINE 812
 3778 000003A8 00000001                   DATA FOR SOURCE-LINE 816
 3779 000003AC 00000000                   DATA FOR SOURCE-LINE 830
 3780 000003B0 00000430                   DATA FOR SOURCE-LINE 831
 3781 000003B4 00000000                   DATA FOR SOURCE-LINE 834
 3782 000003B8 00000000                   DATA FOR SOURCE-LINE 844
 3783                                     ***** END-POOL *****
 3784 000003BC                    853     _WCTR_S50:
 3785 000003BC D40F               854             MOV.L   #_SEQ_CTR_DATA,R4       ;
 3786 000003BE D110               855             MOV.L   #_SEQ_DRG1_DATA,R1      ; DATA REG data load
 3787 000003C0 6111               856             MOV.W   @R1,R1                  ;
 3788 000003C2 6023               857             MOV     R2,R0                   ; R2=∂≥›¿≈› ﬁ∞
 3789                             858     ;;;;;   SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ *4/2
 3790 000003C4 0415               859             MOV.W   R1,@(R0,R4)             ; ∂≥›¿√ﬁ∞¿ ÃﬂÿæØƒ
 3791                             860     
 3792 000003C6 7002               861             ADD     #2,R0                   ;
 3793 000003C8 E1FF               862             MOV.B   #H'FF,R1                ; èâä˙ílSET CODE
 3794 000003CA 0414               863             MOV.B   R1,@(R0,R4)             ; INITIAL DATA SET CODE WRITE
 3795                             864     
 3796 000003CC 7001               865             ADD     #1,R0                   ; ARG SAVE AREA
 3797 000003CE 0454               866             MOV.B   R5,@(R0,R4)             ; STORE ARG
 3798                             867     
 3799                             868     ;       _SEQ_CARD_RAM_TOP Å® _SEQ_CARD_RAMÇ…ÉâÉxÉãïœçXÅià”ñ°çáÇ¢ÇÕìØÇ∂Åj2008-07-30 SAITO
 3800                             869     ;       MOV.L   #_SEQ_CARD_RAM_TOP,R1   ; 2008-07-30 SAITO
 3801 000003D0 D10C               870             MOV.L   #_SEQ_CARD_RAM,R1       ; 2008-07-30 SAITO
 3802 000003D2 D00D               871             MOV.L   #_SEQ_CTR_CARD_TOP,R0   ;
 3803 000003D4 310C               872             ADD     R0,R1                   ; CARD TOP + TMR AREA TOP
 3804                             873     
 3805 000003D6 D30D               874             MOV.L   #_SEQ_SEEK_CARD_TBL,R3  ;
 3806 000003D8 6023               875             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞*4
 3807 000003DA 4001               876             SHLR    R0                      ; /2
 3808 000003DC 303C               877             ADD     R3,R0                   ;
 3809 000003DE 6001               878             MOV.W   @R0,R0                  ; ∂≥›¿≈› ﬁ∞ -> CARD NO
 3810 000003E0 310C               879             ADD     R0,R1                   ; ∂≥›ƒ±ØÃﬂÀﬁØƒ STORE ADDRESS
 3811 000003E2 6411               880             MOV.W   @R1,R4                  ;
 3812                             881     
 3813 000003E4 6023               882             MOV     R2,R0                   ; ∂≥›¿≈› ﬁ∞
 3814 000003E6 4001               883             SHLR    R0                      ; ∂≥›¿≈› ﬁ∞ * 4/2
 3815 000003E8 D309               884             MOV.L   #_SEQ_SEEK_WBIT_TBL,R3  ;
 3816 000003EA 303C               885             ADD     R3,R0                   ;
 3817 000003EC 6001               886             MOV.W   @R0,R0                  ; R0=∏ÿ±Ç∑ÇÈÀﬁØƒ
 3818 000003EE 6007               887             NOT     R0,R0                   ;
 3819 000003F0 2409               888             AND     R0,R4                   ; BIT CLEAR
 3820 000003F2 2141               889             MOV.W   R4,@R1                  ; STORE
 3821                             890     
 3822 000003F4                    891     _WCTR_SUB_END:
 3823                             892     
 3824                             893             SUB_END
 3825                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3826 000003F4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3827                             894             M_RTS
 3828 000003F6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3829 000003F8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3830                             895     ;
 3831                             896     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    19
PROGRAM NAME =

 3832                             897     
 3833                             898     ;       *********************************************************************
 3834                             899     ;       *****   LDW command                             12byte          *****
 3835                             900     ;       *********************************************************************
 3836                             901     ;         ------------------------------
 3837                             902     ;       +0|       ñΩóﬂCODE      (  )   |
 3838                             903     ;         ------------------------------
 3839                             904     ;       +1|         ãÛÇ´        (  )   |
 3840                             905     ;         ------------------------------
 3841                             906     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3842                             907     ;         ------------------------------
 3843                             908     ;       +3|         ADR         (  )   |        R4
 3844                             909     ;         ------------------------------
 3845                             910     
 3846                                     ***** BEGIN-POOL *****
 3847 000003FA 0000                       ALIGNMENT CODE
 3848 000003FC 00000000                   DATA FOR SOURCE-LINE 854
 3849 00000400 00000000                   DATA FOR SOURCE-LINE 855
 3850 00000404 00000000                   DATA FOR SOURCE-LINE 870
 3851 00000408 00000430                   DATA FOR SOURCE-LINE 871
 3852 0000040C 00000000                   DATA FOR SOURCE-LINE 874
 3853 00000410 00000000                   DATA FOR SOURCE-LINE 884
 3854                                     ***** END-POOL *****
 3855 00000414                    911             .ALIGN  4
 3856 00000414                    912     _LDW_CODE:
 3857 00000414 E300               913             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3858 00000416 603C               914             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3859 00000418 03ED               915             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3860                             916     
 3861 0000041A C608               917             MOV.L   @(_LDW_CMD,GBR),R0              ;
 3862 0000041C 400B               918             JSR     @R0                             ; INPUT R3
 3863 0000041E 0009               919             NOP                                     ;
 3864 00000420                    920     _LDW_CODE_END:
 3865                             921     
 3866                             922     ;       ***********************************
 3867                             923     ;       ***     LDWñΩóﬂªÃﬁŸ∞¡›          ***
 3868                             924     ;       ***********************************
 3869                             925     ;       INPUT R3
 3870 00000420                    926             .ALIGN  4       ;2010-12-27
 3871 00000420                    927     _LDW_SUB:
 3872                             928             SUB_START
 3873 00000420 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3874                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3875                             929     
 3876 00000422 2569               930             AND     R6,R5                           ; ARG and NRG
 3877 00000424 2558               931             TST     R5,R5                           ;
 3878 00000426 8901               932             BT      _LDW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3879                             933     
 3880 00000428 C600               934             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3881 0000042A 2031               935             MOV.W   R3,@R0                          ;
 3882 0000042C                    936     _LDW_SUB_END:
 3883                             937             SUB_END
 3884                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3885 0000042C 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3886                             938             M_RTS
 3887 0000042E 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3888 00000430 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    20
PROGRAM NAME =

 3889                             939     
 3890                             940     ;       *********************************************************************
 3891                             941     ;       *****   èåèÇ»ÇµLDW command                     12byte          *****
 3892                             942     ;       *********************************************************************
 3893                             943     ;         ------------------------------
 3894                             944     ;       +0|       ñΩóﬂCODE      (  )   |
 3895                             945     ;         ------------------------------
 3896                             946     ;       +1|         ãÛÇ´        (  )   |
 3897                             947     ;         ------------------------------
 3898                             948     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3899                             949     ;         ------------------------------
 3900                             950     ;       +3|         ADR         (  )   |        R4
 3901                             951     ;         ------------------------------
 3902                             952     
 3903 00000434                    953             .ALIGN  4
 3904 00000434                    954     _LDWU_CODE:
 3905 00000434 E300               955             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3906 00000436 603C               956             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3907 00000438 03ED               957             MOV.W   @(R0,R14),R3                    ; read to µÕﬂ◊›ƒﬁ√ﬁ∞¿
 3908                             958     
 3909 0000043A C600               959             MOV.L   @(DREG,GBR),R0                  ; DATA REG SET
 3910 0000043C 2031               960             MOV.W   R3,@R0                          ;
 3911                             961     
 3912 0000043E                    962     _LDWU_CODE_END:
 3913                             963     
 3914                             964     
 3915                             965     ;       *********************************************************************
 3916                             966     ;       *****   STW command                             16byte          *****
 3917                             967     ;       *********************************************************************
 3918                             968     ;         ------------------------------
 3919                             969     ;       +0|       ñΩóﬂCODE      (  )   |
 3920                             970     ;         ------------------------------
 3921                             971     ;       +1|         ãÛÇ´        (  )   |
 3922                             972     ;         ------------------------------
 3923                             973     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3924                             974     ;         ------------------------------
 3925                             975     ;       +3|         ADR         (  )   |        R4
 3926                             976     ;         ------------------------------
 3927                             977     
 3928 00000440                    978             .ALIGN  4
 3929 00000440                    979     _STW_CODE:
 3930 00000440 E300               980             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3931 00000442 603C               981             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3932                             982     ;;;;;   SHLL    R0                              ; CARD ADDRESS * 2
 3933 00000444 30EC               983             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3934 00000446 6303               984             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3935                             985     
 3936 00000448 C609               986             MOV.L   @(_STW_CMD,GBR),R0              ;
 3937 0000044A 400B               987             JSR     @R0                             ; INPUT R3
 3938 0000044C 0009               988             NOP                                     ;
 3939 0000044E                    989     _STW_CODE_END:
 3940                             990     
 3941                             991     ;       ***********************************
 3942                             992     ;       ***     STWñΩóﬂªÃﬁŸ∞¡›          ***
 3943                             993     ;       ***********************************
 3944                             994     ;       INPUT R3
 3945 00000450                    995             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    21
PROGRAM NAME =

 3946 00000450                    996     _STW_SUB:
 3947                             997             SUB_START
 3948 00000450 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 3949                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 3950                             998     
 3951 00000452 2569               999             AND     R6,R5                           ; ARG and NRG
 3952 00000454 2558              1000             TST     R5,R5                           ;
 3953 00000456 8902              1001             BT      _STW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 3954                            1002     
 3955 00000458 C600              1003             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3956 0000045A 6001              1004             MOV.W   @R0,R0                          ;
 3957 0000045C 2301              1005             MOV.W   R0,@R3                          ; DATA STORE
 3958 0000045E                   1006     _STW_SUB_END:
 3959                            1007             SUB_END
 3960                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 3961 0000045E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 3962                            1008             M_RTS
 3963 00000460 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 3964 00000462 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 3965                            1009     
 3966                            1010     
 3967                            1011     ;       *********************************************************************
 3968                            1012     ;       *****   èåèÇ»ÇµSTW command                     16byte          *****
 3969                            1013     ;       *********************************************************************
 3970                            1014     ;         ------------------------------
 3971                            1015     ;       +0|       ñΩóﬂCODE      (  )   |
 3972                            1016     ;         ------------------------------
 3973                            1017     ;       +1|         ãÛÇ´        (  )   |
 3974                            1018     ;         ------------------------------
 3975                            1019     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 3976                            1020     ;         ------------------------------
 3977                            1021     ;       +3|         ADR         (  )   |        R4
 3978                            1022     ;         ------------------------------
 3979                            1023     
 3980 00000464                   1024             .ALIGN  4
 3981 00000464                   1025     _STWU_CODE:
 3982 00000464 E300              1026             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 3983 00000466 603C              1027             EXTU.B  R3,R0                           ; æﬁ€ägí£
 3984 00000468 30EC              1028             ADD     R14,R0                          ; OFFSET + CARD ADR*2
 3985 0000046A 6303              1029             MOV.L   R0,R3                           ; STORE ADDRESS INPUT
 3986                            1030     
 3987 0000046C C600              1031             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 3988 0000046E 6001              1032             MOV.W   @R0,R0                          ;
 3989 00000470 2301              1033             MOV.W   R0,@R3                          ; DATA STORE
 3990 00000472                   1034     _STWU_CODE_END:
 3991                            1035     
 3992                            1036     
 3993                            1037     ;       *********************************************************************
 3994                            1038     ;       *****   CMP EQ command                          12byte          *****
 3995                            1039     ;       *********************************************************************
 3996                            1040     ;         ------------------------------
 3997                            1041     ;       +0|       ñΩóﬂCODE      (  )   |
 3998                            1042     ;         ------------------------------
 3999                            1043     ;       +1|         ãÛÇ´        (  )   |
 4000                            1044     ;         ------------------------------
 4001                            1045     ;       +2|    OFFSET ADR CODE  (  )   |
 4002                            1046     ;         ------------------------------
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    22
PROGRAM NAME =

 4003                            1047     ;       +3|         ADR         (  )   |
 4004                            1048     ;         ------------------------------
 4005 00000474                   1049             .ALIGN  4
 4006 00000474                   1050     _EQ_CODE:
 4007 00000474 E300              1051             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4008 00000476 603C              1052             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4009 00000478 03ED              1053             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4010                            1054                                                     ; INPUT R3
 4011                            1055     
 4012 0000047A C60A              1056             MOV.L   @(_EQ_CMD,GBR),R0               ;
 4013 0000047C 400B              1057             JSR     @R0                             ;
 4014 0000047E 0009              1058             NOP                                     ;
 4015 00000480                   1059     _EQ_CODE_END:
 4016                            1060     
 4017                            1061     
 4018                            1062     ;       ***********************************
 4019                            1063     ;       ***     CMP EQñΩóﬂªÃﬁŸ∞¡›       ***
 4020                            1064     ;       ***********************************
 4021                            1065     ;       INPUT R3
 4022 00000480                   1066             .ALIGN  4       ;2010-12-27
 4023 00000480                   1067     _EQ_SUB:
 4024                            1068             SUB_START
 4025 00000480 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4026                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4027                            1069     
 4028 00000482 2569              1070             AND     R6,R5                           ; ARG and NRG
 4029 00000484 2558              1071             TST     R5,R5                           ;
 4030 00000486 8903              1072             BT      _EQ_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4031                            1073     
 4032 00000488 C600              1074             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4033 0000048A 6001              1075             MOV.W   @R0,R0                          ;
 4034 0000048C 3030              1076             CMP/EQ  R3,R0                           ; DATA REG = µÕﬂ◊›ƒﬁDATA -> DATA REG
 4035 0000048E 0529              1077             MOVT    R5                              ; T->ARG
 4036                            1078     
 4037 00000490                   1079     _EQ_SUB_END:
 4038                            1080             SUB_END
 4039                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4040 00000490 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4041                            1081             M_RTS
 4042 00000492 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4043 00000494 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4044                            1082     
 4045                            1083     
 4046                            1084     ;       *********************************************************************
 4047                            1085     ;       *****   CMP NE command                          12byte          *****
 4048                            1086     ;       *********************************************************************
 4049                            1087     ;         ------------------------------
 4050                            1088     ;       +0|       ñΩóﬂCODE      (  )   |
 4051                            1089     ;         ------------------------------
 4052                            1090     ;       +1|         ãÛÇ´        (  )   |
 4053                            1091     ;         ------------------------------
 4054                            1092     ;       +2|    OFFSET ADR CODE  (  )   |
 4055                            1093     ;         ------------------------------
 4056                            1094     ;       +3|         ADR         (  )   |
 4057                            1095     ;         ------------------------------
 4058 00000498                   1096             .ALIGN  4
 4059 00000498                   1097     _NE_CODE:
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    23
PROGRAM NAME =

 4060 00000498 E300              1098             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4061 0000049A 603C              1099             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4062 0000049C 03ED              1100             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4063                            1101                                                     ; INPUT R3
 4064                            1102     
 4065 0000049E C60B              1103             MOV.L   @(_NE_CMD,GBR),R0               ;
 4066 000004A0 400B              1104             JSR     @R0                             ;
 4067 000004A2 0009              1105             NOP                                     ;
 4068 000004A4                   1106     _NE_CODE_END:
 4069                            1107     
 4070                            1108     
 4071                            1109     ;       ***********************************
 4072                            1110     ;       ***     CMP NEñΩóﬂªÃﬁŸ∞¡›       ***
 4073                            1111     ;       ***********************************
 4074                            1112     ;       INPUT R3
 4075 000004A4                   1113             .ALIGN  4       ;2010-12-27
 4076 000004A4                   1114     _NE_SUB:
 4077                            1115             SUB_START
 4078 000004A4 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4079                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4080                            1116     
 4081 000004A6 2569              1117             AND     R6,R5                           ; ARG and NRG
 4082 000004A8 2558              1118             TST     R5,R5                           ;
 4083 000004AA 8905              1119             BT      _NE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4084                            1120     
 4085 000004AC C600              1121             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4086 000004AE 6001              1122             MOV.W   @R0,R0                          ;
 4087 000004B0 3030              1123             CMP/EQ  R3,R0                           ; DATA REG =/= µÕﬂ◊›ƒﬁDATA -> T
 4088 000004B2 0029              1124             MOVT    R0                              ; T->R0
 4089 000004B4 2008              1125             TST     R0,R0                           ;
 4090 000004B6 0529              1126             MOVT    R5                              ; TÇÃîΩì]SET
 4091                            1127     
 4092 000004B8                   1128     _NE_SUB_END:
 4093                            1129             SUB_END
 4094                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4095 000004B8 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4096                            1130             M_RTS
 4097 000004BA 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4098 000004BC 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4099                            1131     
 4100                            1132     ;       *********************************************************************
 4101                            1133     ;       *****   CMP GT command                          12byte          *****
 4102                            1134     ;       *********************************************************************
 4103                            1135     ;         ------------------------------
 4104                            1136     ;       +0|       ñΩóﬂCODE      (  )   |
 4105                            1137     ;         ------------------------------
 4106                            1138     ;       +1|         ãÛÇ´        (  )   |
 4107                            1139     ;         ------------------------------
 4108                            1140     ;       +2|    OFFSET ADR CODE  (  )   |
 4109                            1141     ;         ------------------------------
 4110                            1142     ;       +3|         ADR         (  )   |
 4111                            1143     ;         ------------------------------
 4112 000004C0                   1144             .ALIGN  4
 4113 000004C0                   1145     _GT_CODE:
 4114 000004C0 E300              1146             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4115 000004C2 603C              1147             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4116 000004C4 03ED              1148             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    24
PROGRAM NAME =

 4117                            1149                                                     ; INPUT R3
 4118                            1150     
 4119 000004C6 C60C              1151             MOV.L   @(_GT_CMD,GBR),R0               ;
 4120 000004C8 400B              1152             JSR     @R0                             ;
 4121 000004CA 0009              1153             NOP                                     ;
 4122 000004CC                   1154     _GT_CODE_END:
 4123                            1155     
 4124                            1156     
 4125                            1157     ;       ***********************************
 4126                            1158     ;       ***     CMP GTñΩóﬂªÃﬁŸ∞¡›       ***
 4127                            1159     ;       ***********************************
 4128                            1160     ;       INPUT R3
 4129 000004CC                   1161             .ALIGN  4       ;2010-12-27
 4130 000004CC                   1162     _GT_SUB:
 4131                            1163             SUB_START
 4132 000004CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4133                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4134                            1164     
 4135 000004CE 2569              1165             AND     R6,R5                           ; ARG and NRG
 4136 000004D0 2558              1166             TST     R5,R5                           ;
 4137 000004D2 8903              1167             BT      _GT_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4138                            1168     
 4139 000004D4 C600              1169             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4140 000004D6 6001              1170             MOV.W   @R0,R0                          ;
 4141 000004D8 3037              1171             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4142 000004DA 0529              1172             MOVT    R5                              ; T->R0
 4143                            1173     
 4144                            1174     
 4145 000004DC                   1175     _GT_SUB_END:
 4146                            1176             SUB_END
 4147                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4148 000004DC 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4149                            1177             M_RTS
 4150 000004DE 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4151 000004E0 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4152                            1178     
 4153                            1179     
 4154                            1180     ;       *********************************************************************
 4155                            1181     ;       *****   CMP LE command                          12      byte    *****
 4156                            1182     ;       *********************************************************************
 4157                            1183     ;         ------------------------------
 4158                            1184     ;       +0|       ñΩóﬂCODE      (  )   |
 4159                            1185     ;         ------------------------------
 4160                            1186     ;       +1|         ãÛÇ´        (  )   |
 4161                            1187     ;         ------------------------------
 4162                            1188     ;       +2|    OFFSET ADR CODE  (  )   |
 4163                            1189     ;         ------------------------------
 4164                            1190     ;       +3|         ADR         (  )   |
 4165                            1191     ;         ------------------------------
 4166 000004E4                   1192             .ALIGN  4
 4167 000004E4                   1193     _LE_CODE:
 4168 000004E4 E300              1194             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4169 000004E6 603C              1195             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4170 000004E8 03ED              1196             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4171                            1197                                                     ; INPUT R3
 4172                            1198     
 4173 000004EA C60D              1199             MOV.L   @(_LE_CMD,GBR),R0               ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    25
PROGRAM NAME =

 4174 000004EC 400B              1200             JSR     @R0                             ;
 4175 000004EE 0009              1201             NOP                                     ;
 4176 000004F0                   1202     _LE_CODE_END:
 4177                            1203     
 4178                            1204     
 4179                            1205     ;       ***********************************
 4180                            1206     ;       ***     CMP LEñΩóﬂªÃﬁŸ∞¡›       ***
 4181                            1207     ;       ***********************************
 4182                            1208     ;       INPUT R3
 4183 000004F0                   1209             .ALIGN  4       ;2010-12-27
 4184 000004F0                   1210     _LE_SUB:
 4185                            1211             SUB_START
 4186 000004F0 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4187                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4188                            1212     
 4189 000004F2 2569              1213             AND     R6,R5                           ; ARG and NRG
 4190 000004F4 2558              1214             TST     R5,R5                           ;
 4191 000004F6 8905              1215             BT      _LE_SUB_END                     ; ARG and NRG = 0 THEN EXIT
 4192                            1216     
 4193 000004F8 C600              1217             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4194 000004FA 6001              1218             MOV.W   @R0,R0                          ;
 4195 000004FC 3037              1219             CMP/GT  R3,R0                           ; DATA REG > µÕﬂ◊›ƒﬁDATA -> T
 4196 000004FE 0029              1220             MOVT    R0                              ; T->R0
 4197 00000500 2008              1221             TST     R0,R0                           ;
 4198 00000502 0529              1222             MOVT    R5                              ; TÇÃîΩì]SET
 4199                            1223     
 4200 00000504                   1224     _LE_SUB_END:
 4201                            1225             SUB_END
 4202                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4203 00000504 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4204                            1226             M_RTS
 4205 00000506 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4206 00000508 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4207                            1227     
 4208                            1228     
 4209                            1229     ;       *********************************************************************
 4210                            1230     ;       *****   ANDW command                            12byte          *****
 4211                            1231     ;       *********************************************************************
 4212                            1232     ;         ------------------------------
 4213                            1233     ;       +0|       ñΩóﬂCODE      (  )   |
 4214                            1234     ;         ------------------------------
 4215                            1235     ;       +1|         ãÛÇ´        (  )   |
 4216                            1236     ;         ------------------------------
 4217                            1237     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4218                            1238     ;         ------------------------------
 4219                            1239     ;       +3|         ADR         (  )   |        R4
 4220                            1240     ;         ------------------------------
 4221 0000050C                   1241             .ALIGN  4
 4222 0000050C                   1242     _ANDW_CODE:
 4223 0000050C E300              1243             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4224 0000050E 603C              1244             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4225 00000510 03ED              1245             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4226                            1246                                                     ; INPUT R3
 4227                            1247     
 4228 00000512 C60E              1248             MOV.L   @(_ANDW_CMD,GBR),R0             ;
 4229 00000514 400B              1249             JSR     @R0                             ;
 4230 00000516 0009              1250             NOP                                     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    26
PROGRAM NAME =

 4231 00000518                   1251     _ANDW_CODE_END:
 4232                            1252     
 4233                            1253     
 4234                            1254     ;       ***********************************
 4235                            1255     ;       ***     ANDWñΩóﬂªÃﬁŸ∞¡›         ***
 4236                            1256     ;       ***********************************
 4237                            1257     ;       INPUT R3
 4238 00000518                   1258             .ALIGN  4       ;2010-12-27
 4239 00000518                   1259     _ANDW_SUB:
 4240                            1260             SUB_START
 4241 00000518 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4242                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4243                            1261     
 4244 0000051A 2569              1262             AND     R6,R5                           ; ARG and NRG
 4245 0000051C 2558              1263             TST     R5,R5                           ;
 4246 0000051E 8904              1264             BT      _ANDW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4247                            1265     
 4248 00000520 C600              1266             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4249 00000522 6103              1267             MOV     R0,R1                           ;
 4250 00000524 6011              1268             MOV.W   @R1,R0                          ;
 4251 00000526 2039              1269             AND     R3,R0                           ; DATA REG and µÕﬂ◊›ƒﬁDATA -> DATA REG
 4252 00000528 2101              1270             MOV.W   R0,@R1                          ; DATA REG SET
 4253 0000052A                   1271     _ANDW_SUB_END:
 4254                            1272             SUB_END
 4255                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4256 0000052A 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4257                            1273             M_RTS
 4258 0000052C 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4259 0000052E 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4260                            1274     
 4261                            1275     
 4262                            1276     ;       *********************************************************************
 4263                            1277     ;       *****   ORW command                             12byte          *****
 4264                            1278     ;       *********************************************************************
 4265                            1279     ;         ------------------------------
 4266                            1280     ;       +0|       ñΩóﬂCODE      (  )   |
 4267                            1281     ;         ------------------------------
 4268                            1282     ;       +1|         ãÛÇ´        (  )   |
 4269                            1283     ;         ------------------------------
 4270                            1284     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4271                            1285     ;         ------------------------------
 4272                            1286     ;       +3|         ADR         (  )   |        R4
 4273                            1287     ;         ------------------------------
 4274 00000530                   1288             .ALIGN  4
 4275 00000530                   1289     _ORW_CODE:
 4276 00000530 E300              1290             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4277 00000532 603C              1291             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4278 00000534 03ED              1292             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4279                            1293                                                     ; INPUT R3
 4280                            1294     
 4281 00000536 C60F              1295             MOV.L   @(_ORW_CMD,GBR),R0              ;
 4282 00000538 400B              1296             JSR     @R0                             ;
 4283 0000053A 0009              1297             NOP                                     ;
 4284 0000053C                   1298     _ORW_CODE_END:
 4285                            1299     
 4286                            1300     
 4287                            1301     ;       ***********************************
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    27
PROGRAM NAME =

 4288                            1302     ;       ***     ORWñΩóﬂªÃﬁŸ∞¡›          ***
 4289                            1303     ;       ***********************************
 4290                            1304     ;       INPUT R3
 4291 0000053C                   1305             .ALIGN  4       ;2010-12-27
 4292 0000053C                   1306     _ORW_SUB:
 4293                            1307             SUB_START
 4294 0000053C 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4295                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4296                            1308     
 4297 0000053E 2569              1309             AND     R6,R5                           ; ARG and NRG
 4298 00000540 2558              1310             TST     R5,R5                           ;
 4299 00000542 8904              1311             BT      _ORW_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4300                            1312     
 4301 00000544 C600              1313             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4302 00000546 6103              1314             MOV     R0,R1
 4303 00000548 6011              1315             MOV.W   @R1,R0                          ;
 4304 0000054A 203B              1316             OR      R3,R0                           ; DATA REG or µÕﬂ◊›ƒﬁDATA -> DATA REG
 4305 0000054C 2101              1317             MOV.W   R0,@R1                          ; DATA REG SET
 4306 0000054E                   1318     _ORW_SUB_END:
 4307                            1319             SUB_END
 4308                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4309 0000054E 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4310                            1320             M_RTS
 4311 00000550 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4312 00000552 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4313                            1321     
 4314                            1322     
 4315                            1323     ;       *********************************************************************
 4316                            1324     ;       *****   XORW command                            12byte          *****
 4317                            1325     ;       *********************************************************************
 4318                            1326     ;         ------------------------------
 4319                            1327     ;       +0|       ñΩóﬂCODE      (  )   |
 4320                            1328     ;         ------------------------------
 4321                            1329     ;       +1|         ãÛÇ´        (  )   |
 4322                            1330     ;         ------------------------------
 4323                            1331     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4324                            1332     ;         ------------------------------
 4325                            1333     ;       +3|         ADR         (  )   |        R4
 4326                            1334     ;         ------------------------------
 4327 00000554                   1335             .ALIGN  4
 4328 00000554                   1336     _XORW_CODE:
 4329 00000554 E300              1337             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4330 00000556 603C              1338             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4331 00000558 03ED              1339             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4332                            1340                                                     ; INPUT R3
 4333                            1341     
 4334 0000055A C610              1342             MOV.L   @(_XORW_CMD,GBR),R0             ;
 4335 0000055C 400B              1343             JSR     @R0                             ;
 4336 0000055E 0009              1344             NOP                                     ;
 4337 00000560                   1345     _XORW_CODE_END:
 4338                            1346     
 4339                            1347     
 4340                            1348     ;       ***********************************
 4341                            1349     ;       ***     XORWñΩóﬂªÃﬁŸ∞¡›         ***
 4342                            1350     ;       ***********************************
 4343                            1351     ;       INPUT R3
 4344 00000560                   1352             .ALIGN  4       ;2010-12-27
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    28
PROGRAM NAME =

 4345 00000560                   1353     _XORW_SUB:
 4346                            1354             SUB_START
 4347 00000560 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4348                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4349                            1355     
 4350 00000562 2569              1356             AND     R6,R5                           ; ARG and NRG
 4351 00000564 2558              1357             TST     R5,R5                           ;
 4352 00000566 8904              1358             BT      _XORW_SUB_END                   ; ARG and NRG = 0 THEN EXIT
 4353                            1359     
 4354 00000568 C600              1360             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4355 0000056A 6103              1361             MOV     R0,R1                           ;
 4356 0000056C 6011              1362             MOV.W   @R1,R0                          ;
 4357 0000056E 203A              1363             XOR     R3,R0                           ; DATA REG xor µÕﬂ◊›ƒﬁDATA -> DATA REG
 4358 00000570 2101              1364             MOV.W   R0,@R1                          ; DATA REG SET
 4359 00000572                   1365     _XORW_SUB_END:
 4360                            1366             SUB_END
 4361                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4362 00000572 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4363                            1367             M_RTS
 4364 00000574 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4365 00000576 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4366                            1368     
 4367                            1369     
 4368                            1370     
 4369                            1371     ;       *********************************************************************
 4370                            1372     ;       *****   ADD command                             12byte          *****
 4371                            1373     ;       *********************************************************************
 4372                            1374     ;         ------------------------------
 4373                            1375     ;       +0|       ñΩóﬂCODE      (  )   |
 4374                            1376     ;         ------------------------------
 4375                            1377     ;       +1|         ãÛÇ´        (  )   |
 4376                            1378     ;         ------------------------------
 4377                            1379     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4378                            1380     ;         ------------------------------
 4379                            1381     ;       +3|         ADR         (  )   |        R4
 4380                            1382     ;         ------------------------------
 4381 00000578                   1383             .ALIGN  4
 4382 00000578                   1384     _ADD_CODE:
 4383 00000578 E300              1385             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4384 0000057A 603C              1386             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4385 0000057C 03ED              1387             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4386                            1388                                                     ; INPUT R3
 4387                            1389     
 4388 0000057E C611              1390             MOV.L   @(_ADD_CMD,GBR),R0              ;
 4389 00000580 400B              1391             JSR     @R0                             ;
 4390 00000582 0009              1392             NOP                                     ;
 4391 00000584                   1393     _ADD_CODE_END:
 4392                            1394     
 4393                            1395     
 4394                            1396     ;       ***********************************
 4395                            1397     ;       ***     ADDñΩóﬂªÃﬁŸ∞¡›          ***
 4396                            1398     ;       ***********************************
 4397                            1399     ;       INPUT R3
 4398 00000584                   1400             .ALIGN  4       ;2010-12-27
 4399 00000584                   1401     _ADD_SUB:
 4400                            1402             SUB_START
 4401 00000584 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    29
PROGRAM NAME =

 4402                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4403                            1403     
 4404 00000586 2569              1404             AND     R6,R5                           ; ARG and NRG
 4405 00000588 2558              1405             TST     R5,R5                           ;
 4406 0000058A 8904              1406             BT      _ADD_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4407                            1407     
 4408 0000058C C600              1408             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4409 0000058E 6103              1409             MOV     R0,R1                           ;
 4410 00000590 6011              1410             MOV.W   @R1,R0                          ;
 4411 00000592 303C              1411             ADD     R3,R0                           ; DATA REG + µÕﬂ◊›ƒﬁDATA -> DATA REG
 4412 00000594 2101              1412             MOV.W   R0,@R1                          ; DATA REG SET
 4413 00000596                   1413     _ADD_SUB_END:
 4414                            1414             SUB_END
 4415                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4416 00000596 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4417                            1415             M_RTS
 4418 00000598 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4419 0000059A 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4420                            1416     
 4421                            1417     ;       *********************************************************************
 4422                            1418     ;       *****   SUB command                             12byte          *****
 4423                            1419     ;       *********************************************************************
 4424                            1420     ;         ------------------------------
 4425                            1421     ;       +0|       ñΩóﬂCODE      (  )   |
 4426                            1422     ;         ------------------------------
 4427                            1423     ;       +1|         ãÛÇ´        (  )   |
 4428                            1424     ;         ------------------------------
 4429                            1425     ;       +2|    OFFSET ADR CODE  (  )   |        R3(0~6)
 4430                            1426     ;         ------------------------------
 4431                            1427     ;       +3|         ADR         (  )   |        R4
 4432                            1428     ;         ------------------------------
 4433                            1429     
 4434 0000059C                   1430             .ALIGN  4
 4435 0000059C                   1431     _SUB_CODE:
 4436 0000059C E300              1432             MOV.B   #_SEQ_ADR,R3                    ; ±ƒﬁ⁄Ω êîílÇÕÇ†Ç∆Ç≈ì¸ÇÍÇ»Ç®Ç∑
 4437 0000059E 603C              1433             EXTU.B  R3,R0                           ; æﬁ€ägí£
 4438 000005A0 03ED              1434             MOV.W   @(R0,R14),R3                    ; µÕﬂ◊›ƒﬁDATA LOAD
 4439                            1435                                                     ; INPUT R3
 4440                            1436     
 4441 000005A2 C612              1437             MOV.L   @(_SUB_CMD,GBR),R0              ;
 4442 000005A4 400B              1438             JSR     @R0                             ;
 4443 000005A6 0009              1439             NOP                                     ;
 4444 000005A8                   1440     _SUB_CODE_END:
 4445                            1441     
 4446                            1442     
 4447                            1443     ;       ***********************************
 4448                            1444     ;       ***     SUBñΩóﬂªÃﬁŸ∞¡›          ***
 4449                            1445     ;       ***********************************
 4450                            1446     ;       INPUT R3
 4451 000005A8                   1447             .ALIGN  4       ;2010-12-27
 4452 000005A8                   1448     _SUB_SUB:
 4453                            1449             SUB_START
 4454 000005A8 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4455                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4456                            1450     
 4457 000005AA 2569              1451             AND     R6,R5                           ; ARG and NRG
 4458 000005AC 2558              1452             TST     R5,R5                           ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    30
PROGRAM NAME =

 4459 000005AE 8904              1453             BT      _SUB_SUB_END                    ; ARG and NRG = 0 THEN EXIT
 4460                            1454     
 4461 000005B0 C600              1455             MOV.L   @(DREG,GBR),R0                  ; DATA REG LOAD
 4462 000005B2 6103              1456             MOV     R0,R1                           ;
 4463 000005B4 6011              1457             MOV.W   @R1,R0                          ;
 4464 000005B6 3038              1458             SUB     R3,R0                           ; DATA REG - µÕﬂ◊›ƒﬁDATA -> DATA REG
 4465 000005B8 2101              1459             MOV.W   R0,@R1                          ; DATA REG SET
 4466 000005BA                   1460     _SUB_SUB_END:
 4467                            1461             SUB_END
 4468                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4469 000005BA 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4470                            1462             M_RTS
 4471 000005BC 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4472 000005BE 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4473                            1463     
 4474                            1464     
 4475                            1465     
 4476                            1466     ;       *********************************************************************
 4477                            1467     ;       *****   End command                             8byte           *****
 4478                            1468     ;       *********************************************************************
 4479 000005C0                   1469             .ALIGN  4
 4480 000005C0                   1470     _END_CODE:
 4481                            1471     ;;;;;   MOV.L   @(_END_CMD,GBR),R0              ;
 4482                            1472     ;;;;;   JSR     @R0                             ;
 4483                            1473     ;;;;;   NOP                                     ;
 4484                            1474     
 4485                            1475             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4486                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4487 000005C0 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4488                            1476             M_RTS                                   ;
 4489 000005C2 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4490 000005C4 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4491 000005C6                   1477     _END_CODE_END:
 4492 000005C6 0009              1478             nop                                     ;2010-12-27
 4493 000005C8 0009              1479             nop                                     ;2010-12-27
 4494 000005CC                   1480             .ALIGN  4                               ;2010-12-27
 4495 000005CC                   1481     _END_SUB:
 4496                            1482             SUB_START
 4497 000005CC 4F22                   M           STS.L   PR,@-R15                ;[ïKóv]
 4498                                 M   ;;;;;;; ADD     #-4,R15                 ;[ïsóv?]
 4499                            1483     
 4500                            1484             SUB_END                                 ; ENDñΩóﬂÇÃíÜêg
 4501                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4502 000005CE 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4503                            1485             M_RTS                                   ;
 4504 000005D0 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4505 000005D2 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4506                            1486     
 4507                            1487             SUB_END
 4508                                 M   ;;;;;;; ADD     #4,R15                  ;[ïsóv?]
 4509 000005D4 4F26                   M           LDS.L   @R15+,PR                ;[ïKóv]
 4510                            1488             M_RTS
 4511 000005D6 000B                   M           RTS                             ;RTSÇÃå„ÇÎÇÃ
 4512 000005D8 0009                   M           NOP                             ;@R15+,PRÇÕ¿ﬁ“
 4513                            1489     
 4514                            1490     
 4515                            1491     
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    31
PROGRAM NAME =

 4516                            1492     ;       *********************************************************************
 4517                            1493     ;       *****   No Operation command            1step    4clocks        *****
 4518                            1494     ;       *********************************************************************
 4519 000005DC                   1495             .ALIGN  4
 4520 000005DC                   1496     _NOP_CODE:
 4521 000005DC 0009              1497             NOP                                     ; no operation
 4522 000005DE                   1498     _NOP_CODE_END:
 4523                            1499     ;
 4524                            1500     
 4525                            1501     
 4526                            1502     
 4527                            1503     
 4528                            1504     
 4529                            1505     
 4530                            1506     
 4531                            1507     
 4532                            1508     
 4533                            1509     
 4534                            1510     
 4535                            1511     
 4536                            1512     
 4537                            1513     
 4538                            1514             .END
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    32

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

BIT0                                      EQU  00000001     15* 2896  2947  2989  3343  3471  3649 
BIT1                                      EQU  00000002     16*
BIT10                                     EQU  00000400     25*
BIT11                                     EQU  00000800     26*
BIT12                                     EQU  00001000     27*
BIT13                                     EQU  00002000     28*
BIT14                                     EQU  00004000     29*
BIT15                                     EQU  00008000     30*
BIT16                                     EQU  00010000     31*
BIT17                                     EQU  00020000     32*
BIT18                                     EQU  00040000     33*
BIT19                                     EQU  00080000     34*
BIT2                                      EQU  00000004     17*
BIT20                                     EQU  00100000     35*
BIT21                                     EQU  00200000     36*
BIT22                                     EQU  00400000     37*
BIT23                                     EQU  00800000     38*
BIT24                                     EQU  01000000     39*
BIT25                                     EQU  02000000     40*
BIT26                                     EQU  04000000     41*
BIT27                                     EQU  08000000     42*
BIT28                                     EQU  10000000     43*
BIT29                                     EQU  20000000     44*
BIT3                                      EQU  00000008     18*
BIT30                                     EQU  40000000     45*
BIT31                                     EQU  80000000     46*
BIT4                                      EQU  00000010     19* 3500 
BIT5                                      EQU  00000020     20*
BIT6                                      EQU  00000040     21*
BIT7                                      EQU  00000080     22*
BIT8                                      EQU  00000100     23*
BIT9                                      EQU  00000200     24*
DREG                                      EQU  00000000   2029* 3880  3909  3955  3987  4032  4085  4139  4193  4248  4301  4354 
                                                          4408  4461 
H_BYTE                                    EQU  00000000     82*
L_BYTE                                    EQU  00000001     81*
NBIT0                                     EQU  000000FE     49*
NBIT1                                     EQU  000000FD     50*
NBIT10                                    EQU  0000FBFF     60*
NBIT11                                    EQU  0000F7FF     61*
NBIT12                                    EQU  0000EFFF     62*
NBIT13                                    EQU  0000DFFF     63*
NBIT14                                    EQU  0000BFFF     64*
NBIT15                                    EQU  00007FFF     65*
NBIT2                                     EQU  000000FB     51*
NBIT3                                     EQU  000000F7     52*
NBIT4                                     EQU  000000EF     53*
NBIT5                                     EQU  000000DF     54*
NBIT6                                     EQU  000000BF     55*
NBIT7                                     EQU  0000007F     56*
NBIT8                                     EQU  0000FEFF     58*
NBIT9                                     EQU  0000FDFF     59*
P                                P        SCT  00000000   2846*
XBIT0                                     EQU  00000000     68*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    33

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

XBIT1                                     EQU  00000001     69*
XBIT2                                     EQU  00000002     70*
XBIT3                                     EQU  00000003     71*
XBIT4                                     EQU  00000004     72*
XBIT5                                     EQU  00000005     73*
XBIT6                                     EQU  00000006     74*
XBIT7                                     EQU  00000007     75*
_ADD_CHG                                  IMPT 00000000   1958 
_ADD_CMD                                  EQU  00000044   2048* 4388 
_ADD_CODE                        P        EXPT 00000578   1913  4382*
_ADD_CODE_END                    P        EXPT 00000584   1914  4391*
_ADD_SUB                         P        EXPT 00000584   1838  4399*
_ADD_SUB_END                     P             00000596   4406  4413*
_AMRG_CHG                                 IMPT 00000000   1945 
_AMRG_CODE                       P        EXPT 00000144   1871  3211*
_AMRG_CODE_END                   P        EXPT 00000148   1872  3214*
_ANDN_CHG                                 IMPT 00000000   1931 
_ANDN_CODE                       P        EXPT 00000048   1855  2957*
_ANDN_CODE_END                   P        EXPT 0000005A   1856  2970*
_ANDW_CHG                                 IMPT 00000000   1960 
_ANDW_CMD                                 EQU  00000038   2045* 4228 
_ANDW_CODE                       P        EXPT 0000050C   1907  4222*
_ANDW_CODE_END                   P        EXPT 00000518   1908  4231*
_ANDW_SUB                        P        EXPT 00000518   1835  4239*
_ANDW_SUB_END                    P             0000052A   4246  4253*
_AND_CHG                                  IMPT 00000000   1930 
_AND_CODE                        P        EXPT 00000034   1853  2936*
_AND_CODE_END                    P        EXPT 00000048   1854  2949*
_BAMRA                                    IMPT 00000000    302 
_BAMRB                                    IMPT 00000000    305 
_BARA                                     IMPT 00000000    301 
_BARB                                     IMPT 00000000    304 
_BASRA                                    IMPT 00000000    290 
_BASRB                                    IMPT 00000000    291 
_BBIT_CHG_TBL                             IMPT 00000000   1975 
_BBRA                                     IMPT 00000000    303 
_BBRB                                     IMPT 00000000    306 
_BCR1                                     IMPT 00000000    312 
_BCR2                                     IMPT 00000000    313 
_BDMRB                                    IMPT 00000000    308 
_BDRB                                     IMPT 00000000    307 
_BRCR                                     IMPT 00000000    309 
_CB_BAKUP_CMD1                            EQU  00005678    114*
_CB_BAKUP_CMD2                            EQU  00001234    115*
_CB_BAK_SUM_COD1                          EQU  5AA51234    112*
_CB_BAK_SUM_COD2                          EQU  A55A4321    113*
_CB_ERR_INFO_MEM                          EQU  00000080    138*
_CB_ERR_INFO_PSIZE                        EQU  00000008    139*
_CB_STS_BUF_1BLK                          EQU  00000040    117*  119 
_CB_STS_BUF_BLKMAX                        EQU  00000008    118*  119 
_CB_STS_BUF_MAX                           EQU  00000200    119*
_CB_TRD_BEFORE                            EQU  00000060    127*
_CB_TRD_BUF_DP_MAX                        EQU  00000080    131*
_CB_TRD_BUF_MAX                           EQU  00000800    128*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    34

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_CB_TRD_DP_1CNT                           EQU  00000008    130*
_CB_TRD_DP_CH                             EQU  00000004    123*
_CB_TRD_SMP_CNT                           EQU  00000080    126*
_CCR                                      IMPT 00000000    292 
_CHCR0                                    IMPT 00000000    333 
_CHCR1                                    IMPT 00000000    337 
_CHCR2                                    IMPT 00000000    341 
_CHCR3                                    IMPT 00000000    345 
_CLR_CHG                                  IMPT 00000000   1943 
_CLR_CMD                                  EQU  0000000C   2034* 3412 
_CLR_CODE                        P        EXPT 000001DC   1881  3405*
_CLR_CODE_END                    P        EXPT 000001EA   1882  3415*
_CLR_SUB                         P        EXPT 000001EC   1824  3422*
_CLR_SUB_END                     P             000001F8   3429  3433*
_CTR_CMD                                  EQU  00000014   2036* 3622 
_DAR0                                     IMPT 00000000    331 
_DAR1                                     IMPT 00000000    335 
_DAR2                                     IMPT 00000000    339 
_DAR3                                     IMPT 00000000    343 
_DA_CNV_DT0                               IMPT 00000000   1807 
_DMAOR                                    IMPT 00000000    346 
_DMATCR0                                  IMPT 00000000    332 
_DMATCR1                                  IMPT 00000000    336 
_DMATCR2                                  IMPT 00000000    340 
_DMATCR3                                  IMPT 00000000    344 
_DSET_CHG                                 IMPT 00000000   1944 
_DS_CODE                         P        EXPT 000001C8   1879  3377*
_DS_CODE_END                     P        EXPT 000001DA   1880  3388*
_DUMMY_SUM_CODE                           EQU  5AA53CC3    105*
_END_CHG                                  IMPT 00000000   1949 
_END_CMD                                  EQU  0000004C   2050*
_END_CODE                        P        EXPT 000005C0   1917  4480*
_END_CODE_END                    P        EXPT 000005C6   1918  4491*
_END_SUB                         P        EXPT 000005CC   1840  4495*
_EQ_CHG                                   IMPT 00000000   1954 
_EQ_CMD                                   EQU  00000028   2041* 4012 
_EQ_CODE                         P        EXPT 00000474   1899  4006*
_EQ_CODE_END                     P        EXPT 00000480   1900  4015*
_EQ_SUB                          P        EXPT 00000480   1831  4023*
_EQ_SUB_END                      P             00000490   4030  4037*
_EXPEVT                                   IMPT 00000000    294 
_FRQCR                                    IMPT 00000000    349 
_GPIOIC                                   IMPT 00000000    327 
_GT_CHG                                   IMPT 00000000   1956 
_GT_CMD                                   EQU  00000030   2043* 4119 
_GT_CODE                         P        EXPT 000004C0   1903  4113*
_GT_CODE_END                     P        EXPT 000004CC   1904  4122*
_GT_SUB                          P        EXPT 000004CC   1833  4130*
_GT_SUB_END                      P             000004DC   4137  4145*
_ICR                                      IMPT 00000000    356 
_INTEVT                                   IMPT 00000000    295 
_INT_2MS_SEL                              IMPT 00000000   1775 
_IPRA                                     IMPT 00000000    357 
_IPRB                                     IMPT 00000000    358 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    35

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_IPRC                                     IMPT 00000000    359 
_IPRD                                     IMPT 00000000    360 
_LDN_CHG                                  IMPT 00000000   1929 
_LDN_CODE                        P        EXPT 0000001C   1851  2907*
_LDN_CODE_END                    P        EXPT 00000032   1852  2922*
_LDWU_CHG                                 IMPT 00000000   1951 
_LDWU_CODE                       P        EXPT 00000434   1893  3904*
_LDWU_CODE_END                   P        EXPT 0000043E   1894  3912*
_LDW_CHG                                  IMPT 00000000   1950 
_LDW_CMD                                  EQU  00000020   2039* 3861 
_LDW_CODE                        P        EXPT 00000414   1891  3856*
_LDW_CODE_END                    P        EXPT 00000420   1892  3864*
_LDW_SUB                         P        EXPT 00000420   1829  3871*
_LDW_SUB_END                     P             0000042C   3878  3882*
_LD_CHG                                   IMPT 00000000   1928 
_LD_CODE                         P        EXPT 00000000   1849  2882*
_LD_CODE_END                     P        EXPT 0000001A   1850  2899*
_LE_CHG                                   IMPT 00000000   1957 
_LE_CMD                                   EQU  00000034   2044* 4173 
_LE_CODE                         P        EXPT 000004E4   1905  4167*
_LE_CODE_END                     P        EXPT 000004F0   1906  4176*
_LE_SUB                          P        EXPT 000004F0   1834  4184*
_LE_SUB_END                      P             00000504   4191  4200*
_MCR                                      IMPT 00000000    317 
_MMUCR                                    IMPT 00000000    289 
_NE_CHG                                   IMPT 00000000   1955 
_NE_CMD                                   EQU  0000002C   2042* 4065 
_NE_CODE                         P        EXPT 00000498   1901  4059*
_NE_CODE_END                     P        EXPT 000004A4   1902  4068*
_NE_SUB                          P        EXPT 000004A4   1832  4076*
_NE_SUB_END                      P             000004B8   4083  4092*
_NOP_CHG                                  IMPT 00000000   1927 
_NOP_CODE                        P        EXPT 000005DC   1847  4520*
_NOP_CODE_END                    P        EXPT 000005DE   1848  4522*
_NOP_SHLL8_R0_TBL0                        IMPT 00000000   1987 
_NOP_SHLL8_R1_TBL0                        IMPT 00000000   1988 
_NOP_SHLL8_R2_TBL0                        IMPT 00000000   1989 
_NOP_SHLL8_R3_TBL0                        IMPT 00000000   1990 
_NOP_SHLL8_R4_TBL0                        IMPT 00000000   1991 
_NOP_SWAP_TBL0                            IMPT 00000000   1986 
_OMRG_CHG                                 IMPT 00000000   1946 
_OMRG_CODE                       P        EXPT 00000148   1873  3221*
_OMRG_CODE_END                   P        EXPT 0000014C   1874  3224*
_ORN_CHG                                  IMPT 00000000   1933 
_ORN_CODE                        P        EXPT 00000070   1859  2999*
_ORN_CODE_END                    P        EXPT 00000082   1860  3012*
_ORW_CHG                                  IMPT 00000000   1961 
_ORW_CMD                                  EQU  0000003C   2046* 4281 
_ORW_CODE                        P        EXPT 00000530   1909  4275*
_ORW_CODE_END                    P        EXPT 0000053C   1910  4284*
_ORW_SUB                         P        EXPT 0000053C   1836  4292*
_ORW_SUB_END                     P             0000054E   4299  4306*
_OR_CHG                                   IMPT 00000000   1932 
_OR_CODE                         P        EXPT 0000005C   1857  2978*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    36

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_OR_CODE_END                     P        EXPT 00000070   1858  2992*
_PCR                                      IMPT 00000000    318 
_PCTRA                                    IMPT 00000000    323 
_PCTRB                                    IMPT 00000000    325 
_PDTRA                                    IMPT 00000000    324 
_PDTRB                                    IMPT 00000000    326 
_PLF_CHG                                  IMPT 00000000   1935 
_PLF_CMD                                  EQU  00000008   2033* 3153 
_PLF_CODE                        P        EXPT 00000108   1869  3147*
_PLF_CODE_END                    P        EXPT 00000118   1870  3156*
_PLF_SUB                         P        EXPT 00000118   1823  3163*
_PLF_SUB_END                     P             0000013E   3169  3192*
_PLS_CHG                                  IMPT 00000000   1934 
_PLS_CMD                                  EQU  00000004   2032* 3096 
_PLS_CODE                        P        EXPT 000000D0   1867  3090*
_PLS_CODE_END                    P        EXPT 000000E0   1868  3099*
_PLS_SUB                         P        EXPT 000000E0   1822  3106*
_PLS_SUB_END                     P             00000100   3134*
_PTEA                                     IMPT 00000000    296 
_PTEH                                     IMPT 00000000    285 
_PTEL                                     IMPT 00000000    286 
_QACR0                                    IMPT 00000000    297 
_QACR1                                    IMPT 00000000    298 
_RFCR                                     IMPT 00000000    322 
_RMIO2_IN_DATA                            IMPT 00000000   1805 
_RMIO_IN_DATA                             IMPT 00000000   1804 
_RST_CHG                                  IMPT 00000000   1939 
_RST_CODE                        P        EXPT 000000B8   1865  3068*
_RST_CODE_END                    P        EXPT 000000D0   1866  3084*
_RTCNT                                    IMPT 00000000    320 
_RTCOR                                    IMPT 00000000    321 
_RTCSR                                    IMPT 00000000    319 
_SAR0                                     IMPT 00000000    330 
_SAR1                                     IMPT 00000000    334 
_SAR2                                     IMPT 00000000    338 
_SAR3                                     IMPT 00000000    342 
_SCBRR1                                   IMPT 00000000    378 
_SCBRR2                                   IMPT 00000000    388 
_SCFCR2                                   IMPT 00000000    393 
_SCFDR2                                   IMPT 00000000    394 
_SCFRDR2                                  IMPT 00000000    392 
_SCFSR2                                   IMPT 00000000    391 
_SCFTDR2                                  IMPT 00000000    390 
_SCLSR2                                   IMPT 00000000    396 
_SCRDR1                                   IMPT 00000000    382 
_SCSCMR1                                  IMPT 00000000    383 
_SCSCR1                                   IMPT 00000000    379 
_SCSCR2                                   IMPT 00000000    389 
_SCSMR1                                   IMPT 00000000    377 
_SCSMR2                                   IMPT 00000000    387 
_SCSPTR1                                  IMPT 00000000    384 
_SCSPTR2                                  IMPT 00000000    395 
_SCSSR1                                   IMPT 00000000    381 
_SCTDR1                                   IMPT 00000000    380 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    37

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SEQ_ADDCMD_R0_TBL                        IMPT 00000000   1984 
_SEQ_ADR                                  EQU  00000000   2010* 2889  2914  2940  2961  2982  3003  3027  3051  3077  3094  3151 
                                                          3262  3406  3857  3905  3930  3982  4007  4060  4114  4168  4223  4276 
                                                          4329  4383  4436 
_SEQ_ADR_HI                               EQU  00000000   2015*
_SEQ_ADR_LO                               EQU  00000000   2016*
_SEQ_ARG1_DATA                            IMPT 00000000    440 
_SEQ_ASM_RAM_TOP                          IMPT 00000000    409 
_SEQ_BBIT_CHG_TBL                         IMPT 00000000   1976 
_SEQ_BIT                                  EQU  00000000   2009* 2887  2912  2938  2959  2980  3001  3023  3048  3071  3091  3148 
                                                          3254 
_SEQ_CARD_MAX                             EQU  0000007F   2006*
_SEQ_CARD_RAM                             IMPT 00000000    424  3328  3527  3575  3701  3751  3801 
_SEQ_CHG_TBL0                             IMPT 00000000   1972 
_SEQ_CMP_ERR                              IMPT 00000000    439 
_SEQ_CMP_ERR_ADR                          IMPT 00000000    445 
_SEQ_CTR_CARD_TOP                         EQU  00000430   2054* 3702  3752  3802 
_SEQ_CTR_DATA                             IMPT 00000000    433  3662  3678  3733  3785 
_SEQ_CTR_DT                               EQU  00000000   2013* 3619 
_SEQ_DRG1_DATA                            IMPT 00000000    443  3486  3563  3786 
_SEQ_DT_HI                                EQU  00000000   2019* 3303  3380 
_SEQ_DT_LO                                EQU  00000000   2018* 3301  3378 
_SEQ_GBR_TBL                              IMPT 00000000   1974 
_SEQ_MAX_BYTE                             EQU  0000001C   2001*
_SEQ_MOVCMD_R0RD_TBL                      IMPT 00000000   1977 
_SEQ_MOVCMD_R1RD_TBL                      IMPT 00000000   1978 
_SEQ_MOVCMD_R1WR_TBL                      IMPT 00000000   1979 
_SEQ_MOVCMD_R3RD_TBL                      IMPT 00000000   1981 
_SEQ_MOVCMD_R3WR_TBL                      IMPT 00000000   1982 
_SEQ_MRG1_DATA                            IMPT 00000000    441 
_SEQ_NRG1_DATA                            IMPT 00000000    442 
_SEQ_OFFSET_ADR1                          EQU  00000000   2021*
_SEQ_OFFSET_ADR2                          EQU  000000C8   2022*
_SEQ_OFFSET_ADR3                          EQU  00000190   2023*
_SEQ_OFFSET_ADR4                          EQU  0000021C   2024*
_SEQ_OFFSET_ADR5                          EQU  000002F8   2025*
_SEQ_OFFSET_ADR6                          EQU  00000384   2026*
_SEQ_OFFSET_ADR7                          EQU  00000424   2027*
_SEQ_RUN1                                 IMPT 00000000    416 
_SEQ_RUN1_END                             IMPT 00000000    417 
_SEQ_RUN1_TOP                             IMPT 00000000    415 
_SEQ_RUN_CHG1_ERR_END                     IMPT 00000000   1963 
_SEQ_SEEK_CARD_TBL                        IMPT 00000000   1994  3531  3579  3705  3755  3805 
_SEQ_SEEK_WBIT_TBL                        IMPT 00000000   1993  3542  3589  3715  3765  3815 
_SEQ_SR_FLG                               IMPT 00000000    436  3329 
_SEQ_TMR_CARD_TOP                         EQU  00000424   2053* 3528  3576 
_SEQ_TMR_DATA                             IMPT 00000000    429  3476  3493  3562 
_SEQ_TMR_DT                               EQU  00000000   2012* 3450 
_SET_CHG                                  IMPT 00000000   1938 
_SET_CODE                        P        EXPT 000000A0   1863  3045*
_SET_CODE_END                    P        EXPT 000000B6   1864  3061*
_SQ000                                    EQU  00000000   2133*
_SQ001                                    EQU  00000002   2134*
_SQ002                                    EQU  00000004   2135*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    38

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ003                                    EQU  00000006   2136*
_SQ004                                    EQU  00000008   2137*
_SQ005                                    EQU  0000000A   2138*
_SQ006                                    EQU  0000000C   2139*
_SQ007                                    EQU  0000000E   2140*
_SQ008                                    EQU  00000010   2141*
_SQ009                                    EQU  00000012   2142*
_SQ010                                    EQU  00000014   2143*
_SQ011                                    EQU  00000016   2144*
_SQ012                                    EQU  00000018   2145*
_SQ013                                    EQU  0000001A   2146*
_SQ014                                    EQU  0000001C   2147*
_SQ015                                    EQU  0000001E   2148*
_SQ016                                    EQU  00000020   2149*
_SQ017                                    EQU  00000022   2150*
_SQ018                                    EQU  00000024   2151*
_SQ019                                    EQU  00000026   2152*
_SQ020                                    EQU  00000028   2153*
_SQ021                                    EQU  0000002A   2154*
_SQ022                                    EQU  0000002C   2155*
_SQ023                                    EQU  0000002E   2156*
_SQ024                                    EQU  00000030   2157*
_SQ025                                    EQU  00000032   2158*
_SQ026                                    EQU  00000034   2159*
_SQ027                                    EQU  00000036   2160*
_SQ028                                    EQU  00000038   2161*
_SQ029                                    EQU  0000003A   2162*
_SQ030                                    EQU  0000003C   2163*
_SQ031                                    EQU  0000003E   2164*
_SQ032                                    EQU  00000040   2165*
_SQ033                                    EQU  00000042   2166*
_SQ034                                    EQU  00000044   2167*
_SQ035                                    EQU  00000046   2168*
_SQ036                                    EQU  00000048   2169*
_SQ037                                    EQU  0000004A   2170*
_SQ038                                    EQU  0000004C   2171*
_SQ039                                    EQU  0000004E   2172*
_SQ040                                    EQU  00000050   2173*
_SQ041                                    EQU  00000052   2174*
_SQ042                                    EQU  00000054   2175*
_SQ043                                    EQU  00000056   2176*
_SQ044                                    EQU  00000058   2177*
_SQ045                                    EQU  0000005A   2178*
_SQ046                                    EQU  0000005C   2179*
_SQ047                                    EQU  0000005E   2180*
_SQ048                                    EQU  00000060   2181*
_SQ049                                    EQU  00000062   2182*
_SQ050                                    EQU  00000064   2183*
_SQ051                                    EQU  00000066   2184*
_SQ052                                    EQU  00000068   2185*
_SQ053                                    EQU  0000006A   2186*
_SQ054                                    EQU  0000006C   2187*
_SQ055                                    EQU  0000006E   2188*
_SQ056                                    EQU  00000070   2189*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    39

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ057                                    EQU  00000072   2190*
_SQ058                                    EQU  00000074   2191*
_SQ059                                    EQU  00000076   2192*
_SQ060                                    EQU  00000078   2193*
_SQ061                                    EQU  0000007A   2194*
_SQ062                                    EQU  0000007C   2195*
_SQ063                                    EQU  0000007E   2196*
_SQ064                                    EQU  00000080   2197*
_SQ065                                    EQU  00000082   2198*
_SQ066                                    EQU  00000084   2199*
_SQ067                                    EQU  00000086   2200*
_SQ068                                    EQU  00000088   2201*
_SQ069                                    EQU  0000008A   2202*
_SQ070                                    EQU  0000008C   2203*
_SQ071                                    EQU  0000008E   2204*
_SQ072                                    EQU  00000090   2205*
_SQ073                                    EQU  00000092   2206*
_SQ074                                    EQU  00000094   2207*
_SQ075                                    EQU  00000096   2208*
_SQ076                                    EQU  00000098   2209*
_SQ077                                    EQU  0000009A   2210*
_SQ078                                    EQU  0000009C   2211*
_SQ079                                    EQU  0000009E   2212*
_SQ080                                    EQU  000000A0   2213*
_SQ081                                    EQU  000000A2   2214*
_SQ082                                    EQU  000000A4   2215*
_SQ083                                    EQU  000000A6   2216*
_SQ084                                    EQU  000000A8   2217*
_SQ085                                    EQU  000000AA   2218*
_SQ086                                    EQU  000000AC   2219*
_SQ087                                    EQU  000000AE   2220*
_SQ088                                    EQU  000000B0   2221*
_SQ089                                    EQU  000000B2   2222*
_SQ090                                    EQU  000000B4   2223*
_SQ091                                    EQU  000000B6   2224*
_SQ092                                    EQU  000000B8   2225*
_SQ093                                    EQU  000000BA   2226*
_SQ094                                    EQU  000000BC   2227*
_SQ095                                    EQU  000000BE   2228*
_SQ096                                    EQU  000000C0   2229*
_SQ097                                    EQU  000000C2   2230*
_SQ098                                    EQU  000000C4   2231*
_SQ099                                    EQU  000000C6   2232*
_SQ100                                    EQU  000000C8   2234*
_SQ101                                    EQU  000000CA   2235*
_SQ102                                    EQU  000000CC   2236*
_SQ103                                    EQU  000000CE   2237*
_SQ104                                    EQU  000000D0   2238*
_SQ105                                    EQU  000000D2   2239*
_SQ106                                    EQU  000000D4   2240*
_SQ107                                    EQU  000000D6   2241*
_SQ108                                    EQU  000000D8   2242*
_SQ109                                    EQU  000000DA   2243*
_SQ110                                    EQU  000000DC   2244*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    40

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ111                                    EQU  000000DE   2245*
_SQ112                                    EQU  000000E0   2246*
_SQ113                                    EQU  000000E2   2247*
_SQ114                                    EQU  000000E4   2248*
_SQ115                                    EQU  000000E6   2249*
_SQ116                                    EQU  000000E8   2250*
_SQ117                                    EQU  000000EA   2251*
_SQ118                                    EQU  000000EC   2252*
_SQ119                                    EQU  000000EE   2253*
_SQ120                                    EQU  000000F0   2254*
_SQ121                                    EQU  000000F2   2255*
_SQ122                                    EQU  000000F4   2256*
_SQ123                                    EQU  000000F6   2257*
_SQ124                                    EQU  000000F8   2258*
_SQ125                                    EQU  000000FA   2259*
_SQ126                                    EQU  000000FC   2260*
_SQ127                                    EQU  000000FE   2261*
_SQ128                                    EQU  00000100   2262*
_SQ129                                    EQU  00000102   2263*
_SQ130                                    EQU  00000104   2264*
_SQ131                                    EQU  00000106   2265*
_SQ132                                    EQU  00000108   2266*
_SQ133                                    EQU  0000010A   2267*
_SQ134                                    EQU  0000010C   2268*
_SQ135                                    EQU  0000010E   2269*
_SQ136                                    EQU  00000110   2270*
_SQ137                                    EQU  00000112   2271*
_SQ138                                    EQU  00000114   2272*
_SQ139                                    EQU  00000116   2273*
_SQ140                                    EQU  00000118   2274*
_SQ141                                    EQU  0000011A   2275*
_SQ142                                    EQU  0000011C   2276*
_SQ143                                    EQU  0000011E   2277*
_SQ144                                    EQU  00000120   2278*
_SQ145                                    EQU  00000122   2279*
_SQ146                                    EQU  00000124   2280*
_SQ147                                    EQU  00000126   2281*
_SQ148                                    EQU  00000128   2282*
_SQ149                                    EQU  0000012A   2283*
_SQ150                                    EQU  0000012C   2284*
_SQ151                                    EQU  0000012E   2285*
_SQ152                                    EQU  00000130   2286*
_SQ153                                    EQU  00000132   2287*
_SQ154                                    EQU  00000134   2288*
_SQ155                                    EQU  00000136   2289*
_SQ156                                    EQU  00000138   2290*
_SQ157                                    EQU  0000013A   2291*
_SQ158                                    EQU  0000013C   2292*
_SQ159                                    EQU  0000013E   2293*
_SQ160                                    EQU  00000140   2294*
_SQ161                                    EQU  00000142   2295*
_SQ162                                    EQU  00000144   2296*
_SQ163                                    EQU  00000146   2297*
_SQ164                                    EQU  00000148   2298*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    41

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ165                                    EQU  0000014A   2299*
_SQ166                                    EQU  0000014C   2300*
_SQ167                                    EQU  0000014E   2301*
_SQ168                                    EQU  00000150   2302*
_SQ169                                    EQU  00000152   2303*
_SQ170                                    EQU  00000154   2304*
_SQ171                                    EQU  00000156   2305*
_SQ172                                    EQU  00000158   2306*
_SQ173                                    EQU  0000015A   2307*
_SQ174                                    EQU  0000015C   2308*
_SQ175                                    EQU  0000015E   2309*
_SQ176                                    EQU  00000160   2310*
_SQ177                                    EQU  00000162   2311*
_SQ178                                    EQU  00000164   2312*
_SQ179                                    EQU  00000166   2313*
_SQ180                                    EQU  00000168   2314*
_SQ181                                    EQU  0000016A   2315*
_SQ182                                    EQU  0000016C   2316*
_SQ183                                    EQU  0000016E   2317*
_SQ184                                    EQU  00000170   2318*
_SQ185                                    EQU  00000172   2319*
_SQ186                                    EQU  00000174   2320*
_SQ187                                    EQU  00000176   2321*
_SQ188                                    EQU  00000178   2322*
_SQ189                                    EQU  0000017A   2323*
_SQ190                                    EQU  0000017C   2324*
_SQ191                                    EQU  0000017E   2325*
_SQ192                                    EQU  00000180   2326*
_SQ193                                    EQU  00000182   2327*
_SQ194                                    EQU  00000184   2328*
_SQ195                                    EQU  00000186   2329*
_SQ196                                    EQU  00000188   2330*
_SQ197                                    EQU  0000018A   2331*
_SQ198                                    EQU  0000018C   2332*
_SQ199                                    EQU  0000018E   2333*
_SQ200                                    EQU  00000190   2335*
_SQ201                                    EQU  00000192   2336*
_SQ202                                    EQU  00000194   2337*
_SQ203                                    EQU  00000196   2338*
_SQ204                                    EQU  00000198   2339*
_SQ205                                    EQU  0000019A   2340*
_SQ206                                    EQU  0000019C   2341*
_SQ207                                    EQU  0000019E   2342*
_SQ208                                    EQU  000001A0   2343*
_SQ209                                    EQU  000001A2   2344*
_SQ210                                    EQU  000001A4   2345*
_SQ211                                    EQU  000001A6   2346*
_SQ212                                    EQU  000001A8   2347*
_SQ213                                    EQU  000001AA   2348*
_SQ214                                    EQU  000001AC   2349*
_SQ215                                    EQU  000001AE   2350*
_SQ216                                    EQU  000001B0   2351*
_SQ217                                    EQU  000001B2   2352*
_SQ218                                    EQU  000001B4   2353*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    42

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ219                                    EQU  000001B6   2354*
_SQ220                                    EQU  000001B8   2355*
_SQ221                                    EQU  000001BA   2356*
_SQ222                                    EQU  000001BC   2357*
_SQ223                                    EQU  000001BE   2358*
_SQ224                                    EQU  000001C0   2359*
_SQ225                                    EQU  000001C2   2360*
_SQ226                                    EQU  000001C4   2361*
_SQ227                                    EQU  000001C6   2362*
_SQ228                                    EQU  000001C8   2363*
_SQ229                                    EQU  000001CA   2364*
_SQ230                                    EQU  000001CC   2365*
_SQ231                                    EQU  000001CE   2366*
_SQ232                                    EQU  000001D0   2367*
_SQ233                                    EQU  000001D2   2368*
_SQ234                                    EQU  000001D4   2369*
_SQ235                                    EQU  000001D6   2370*
_SQ236                                    EQU  000001D8   2371*
_SQ237                                    EQU  000001DA   2372*
_SQ238                                    EQU  000001DC   2373*
_SQ239                                    EQU  000001DE   2374*
_SQ240                                    EQU  000001E0   2375*
_SQ241                                    EQU  000001E2   2376*
_SQ242                                    EQU  000001E4   2377*
_SQ243                                    EQU  000001E6   2378*
_SQ244                                    EQU  000001E8   2379*
_SQ245                                    EQU  000001EA   2380*
_SQ246                                    EQU  000001EC   2381*
_SQ247                                    EQU  000001EE   2382*
_SQ248                                    EQU  000001F0   2383*
_SQ249                                    EQU  000001F2   2384*
_SQ250                                    EQU  000001F4   2385*
_SQ251                                    EQU  000001F6   2386*
_SQ252                                    EQU  000001F8   2387*
_SQ253                                    EQU  000001FA   2388*
_SQ254                                    EQU  000001FC   2389*
_SQ255                                    EQU  000001FE   2390*
_SQ256                                    EQU  00000200   2391*
_SQ257                                    EQU  00000202   2392*
_SQ258                                    EQU  00000204   2393*
_SQ259                                    EQU  00000206   2394*
_SQ260                                    EQU  00000208   2395*
_SQ261                                    EQU  0000020A   2396*
_SQ262                                    EQU  0000020C   2397*
_SQ263                                    EQU  0000020E   2398*
_SQ264                                    EQU  00000210   2399*
_SQ265                                    EQU  00000212   2400*
_SQ266                                    EQU  00000214   2401*
_SQ267                                    EQU  00000216   2402*
_SQ268                                    EQU  00000218   2403*
_SQ269                                    EQU  0000021A   2404*
_SQ270                                    EQU  0000021C   2405*
_SQ271                                    EQU  0000021E   2406*
_SQ272                                    EQU  00000220   2407*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    43

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ273                                    EQU  00000222   2408*
_SQ274                                    EQU  00000224   2409*
_SQ275                                    EQU  00000226   2410*
_SQ276                                    EQU  00000228   2411*
_SQ277                                    EQU  0000022A   2412*
_SQ278                                    EQU  0000022C   2413*
_SQ279                                    EQU  0000022E   2414*
_SQ280                                    EQU  00000230   2415*
_SQ281                                    EQU  00000232   2416*
_SQ282                                    EQU  00000234   2417*
_SQ283                                    EQU  00000236   2418*
_SQ284                                    EQU  00000238   2419*
_SQ285                                    EQU  0000023A   2420*
_SQ286                                    EQU  0000023C   2421*
_SQ287                                    EQU  0000023E   2422*
_SQ288                                    EQU  00000240   2423*
_SQ289                                    EQU  00000242   2424*
_SQ290                                    EQU  00000244   2425*
_SQ291                                    EQU  00000246   2426*
_SQ292                                    EQU  00000248   2427*
_SQ293                                    EQU  0000024A   2428*
_SQ294                                    EQU  0000024C   2429*
_SQ295                                    EQU  0000024E   2430*
_SQ296                                    EQU  00000250   2431*
_SQ297                                    EQU  00000252   2432*
_SQ298                                    EQU  00000254   2433*
_SQ299                                    EQU  00000256   2434*
_SQ300                                    EQU  00000258   2436*
_SQ301                                    EQU  0000025A   2437*
_SQ302                                    EQU  0000025C   2438*
_SQ303                                    EQU  0000025E   2439*
_SQ304                                    EQU  00000260   2440*
_SQ305                                    EQU  00000262   2441*
_SQ306                                    EQU  00000264   2442*
_SQ307                                    EQU  00000266   2443*
_SQ308                                    EQU  00000268   2444*
_SQ309                                    EQU  0000026A   2445*
_SQ310                                    EQU  0000026C   2446*
_SQ311                                    EQU  0000026E   2447*
_SQ312                                    EQU  00000270   2448*
_SQ313                                    EQU  00000272   2449*
_SQ314                                    EQU  00000274   2450*
_SQ315                                    EQU  00000276   2451*
_SQ316                                    EQU  00000278   2452*
_SQ317                                    EQU  0000027A   2453*
_SQ318                                    EQU  0000027C   2454*
_SQ319                                    EQU  0000027E   2455*
_SQ320                                    EQU  00000280   2456*
_SQ321                                    EQU  00000282   2457*
_SQ322                                    EQU  00000284   2458*
_SQ323                                    EQU  00000286   2459*
_SQ324                                    EQU  00000288   2460*
_SQ325                                    EQU  0000028A   2461*
_SQ326                                    EQU  0000028C   2462*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    44

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ327                                    EQU  0000028E   2463*
_SQ328                                    EQU  00000290   2464*
_SQ329                                    EQU  00000292   2465*
_SQ330                                    EQU  00000294   2466*
_SQ331                                    EQU  00000296   2467*
_SQ332                                    EQU  00000298   2468*
_SQ333                                    EQU  0000029A   2469*
_SQ334                                    EQU  0000029C   2470*
_SQ335                                    EQU  0000029E   2471*
_SQ336                                    EQU  000002A0   2472*
_SQ337                                    EQU  000002A2   2473*
_SQ338                                    EQU  000002A4   2474*
_SQ339                                    EQU  000002A6   2475*
_SQ340                                    EQU  000002A8   2476*
_SQ341                                    EQU  000002AA   2477*
_SQ342                                    EQU  000002AC   2478*
_SQ343                                    EQU  000002AE   2479*
_SQ344                                    EQU  000002B0   2480*
_SQ345                                    EQU  000002B2   2481*
_SQ346                                    EQU  000002B4   2482*
_SQ347                                    EQU  000002B6   2483*
_SQ348                                    EQU  000002B8   2484*
_SQ349                                    EQU  000002BA   2485*
_SQ350                                    EQU  000002BC   2486*
_SQ351                                    EQU  000002BE   2487*
_SQ352                                    EQU  000002C0   2488*
_SQ353                                    EQU  000002C2   2489*
_SQ354                                    EQU  000002C4   2490*
_SQ355                                    EQU  000002C6   2491*
_SQ356                                    EQU  000002C8   2492*
_SQ357                                    EQU  000002CA   2493*
_SQ358                                    EQU  000002CC   2494*
_SQ359                                    EQU  000002CE   2495*
_SQ360                                    EQU  000002D0   2496*
_SQ361                                    EQU  000002D2   2497*
_SQ362                                    EQU  000002D4   2498*
_SQ363                                    EQU  000002D6   2499*
_SQ364                                    EQU  000002D8   2500*
_SQ365                                    EQU  000002DA   2501*
_SQ366                                    EQU  000002DC   2502*
_SQ367                                    EQU  000002DE   2503*
_SQ368                                    EQU  000002E0   2504*
_SQ369                                    EQU  000002E2   2505*
_SQ370                                    EQU  000002E4   2506*
_SQ371                                    EQU  000002E6   2507*
_SQ372                                    EQU  000002E8   2508*
_SQ373                                    EQU  000002EA   2509*
_SQ374                                    EQU  000002EC   2510*
_SQ375                                    EQU  000002EE   2511*
_SQ376                                    EQU  000002F0   2512*
_SQ377                                    EQU  000002F2   2513*
_SQ378                                    EQU  000002F4   2514*
_SQ379                                    EQU  000002F6   2515*
_SQ380                                    EQU  000002F8   2516*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    45

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ381                                    EQU  000002FA   2517*
_SQ382                                    EQU  000002FC   2518*
_SQ383                                    EQU  000002FE   2519*
_SQ384                                    EQU  00000300   2520*
_SQ385                                    EQU  00000302   2521*
_SQ386                                    EQU  00000304   2522*
_SQ387                                    EQU  00000306   2523*
_SQ388                                    EQU  00000308   2524*
_SQ389                                    EQU  0000030A   2525*
_SQ390                                    EQU  0000030C   2526*
_SQ391                                    EQU  0000030E   2527*
_SQ392                                    EQU  00000310   2528*
_SQ393                                    EQU  00000312   2529*
_SQ394                                    EQU  00000314   2530*
_SQ395                                    EQU  00000316   2531*
_SQ396                                    EQU  00000318   2532*
_SQ397                                    EQU  0000031A   2533*
_SQ398                                    EQU  0000031C   2534*
_SQ399                                    EQU  0000031E   2535*
_SQ400                                    EQU  00000320   2537*
_SQ401                                    EQU  00000322   2538*
_SQ402                                    EQU  00000324   2539*
_SQ403                                    EQU  00000326   2540*
_SQ404                                    EQU  00000328   2541*
_SQ405                                    EQU  0000032A   2542*
_SQ406                                    EQU  0000032C   2543*
_SQ407                                    EQU  0000032E   2544*
_SQ408                                    EQU  00000330   2545*
_SQ409                                    EQU  00000332   2546*
_SQ410                                    EQU  00000334   2547*
_SQ411                                    EQU  00000336   2548*
_SQ412                                    EQU  00000338   2549*
_SQ413                                    EQU  0000033A   2550*
_SQ414                                    EQU  0000033C   2551*
_SQ415                                    EQU  0000033E   2552*
_SQ416                                    EQU  00000340   2553*
_SQ417                                    EQU  00000342   2554*
_SQ418                                    EQU  00000344   2555*
_SQ419                                    EQU  00000346   2556*
_SQ420                                    EQU  00000348   2557*
_SQ421                                    EQU  0000034A   2558*
_SQ422                                    EQU  0000034C   2559*
_SQ423                                    EQU  0000034E   2560*
_SQ424                                    EQU  00000350   2561*
_SQ425                                    EQU  00000352   2562*
_SQ426                                    EQU  00000354   2563*
_SQ427                                    EQU  00000356   2564*
_SQ428                                    EQU  00000358   2565*
_SQ429                                    EQU  0000035A   2566*
_SQ430                                    EQU  0000035C   2567*
_SQ431                                    EQU  0000035E   2568*
_SQ432                                    EQU  00000360   2569*
_SQ433                                    EQU  00000362   2570*
_SQ434                                    EQU  00000364   2571*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    46

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ435                                    EQU  00000366   2572*
_SQ436                                    EQU  00000368   2573*
_SQ437                                    EQU  0000036A   2574*
_SQ438                                    EQU  0000036C   2575*
_SQ439                                    EQU  0000036E   2576*
_SQ440                                    EQU  00000370   2577*
_SQ441                                    EQU  00000372   2578*
_SQ442                                    EQU  00000374   2579*
_SQ443                                    EQU  00000376   2580*
_SQ444                                    EQU  00000378   2581*
_SQ445                                    EQU  0000037A   2582*
_SQ446                                    EQU  0000037C   2583*
_SQ447                                    EQU  0000037E   2584*
_SQ448                                    EQU  00000380   2585*
_SQ449                                    EQU  00000382   2586*
_SQ450                                    EQU  00000384   2587*
_SQ451                                    EQU  00000386   2588*
_SQ452                                    EQU  00000388   2589*
_SQ453                                    EQU  0000038A   2590*
_SQ454                                    EQU  0000038C   2591*
_SQ455                                    EQU  0000038E   2592*
_SQ456                                    EQU  00000390   2593*
_SQ457                                    EQU  00000392   2594*
_SQ458                                    EQU  00000394   2595*
_SQ459                                    EQU  00000396   2596*
_SQ460                                    EQU  00000398   2597*
_SQ461                                    EQU  0000039A   2598*
_SQ462                                    EQU  0000039C   2599*
_SQ463                                    EQU  0000039E   2600*
_SQ464                                    EQU  000003A0   2601*
_SQ465                                    EQU  000003A2   2602*
_SQ466                                    EQU  000003A4   2603*
_SQ467                                    EQU  000003A6   2604*
_SQ468                                    EQU  000003A8   2605*
_SQ469                                    EQU  000003AA   2606*
_SQ470                                    EQU  000003AC   2607*
_SQ471                                    EQU  000003AE   2608*
_SQ472                                    EQU  000003B0   2609*
_SQ473                                    EQU  000003B2   2610*
_SQ474                                    EQU  000003B4   2611*
_SQ475                                    EQU  000003B6   2612*
_SQ476                                    EQU  000003B8   2613*
_SQ477                                    EQU  000003BA   2614*
_SQ478                                    EQU  000003BC   2615*
_SQ479                                    EQU  000003BE   2616*
_SQ480                                    EQU  000003C0   2617*
_SQ481                                    EQU  000003C2   2618*
_SQ482                                    EQU  000003C4   2619*
_SQ483                                    EQU  000003C6   2620*
_SQ484                                    EQU  000003C8   2621*
_SQ485                                    EQU  000003CA   2622*
_SQ486                                    EQU  000003CC   2623*
_SQ487                                    EQU  000003CE   2624*
_SQ488                                    EQU  000003D0   2625*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    47

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ489                                    EQU  000003D2   2626*
_SQ490                                    EQU  000003D4   2627*
_SQ491                                    EQU  000003D6   2628*
_SQ492                                    EQU  000003D8   2629*
_SQ493                                    EQU  000003DA   2630*
_SQ494                                    EQU  000003DC   2631*
_SQ495                                    EQU  000003DE   2632*
_SQ496                                    EQU  000003E0   2633*
_SQ497                                    EQU  000003E2   2634*
_SQ498                                    EQU  000003E4   2635*
_SQ499                                    EQU  000003E6   2636*
_SQ500                                    EQU  000003E8   2638*
_SQ501                                    EQU  000003EA   2639*
_SQ502                                    EQU  000003EC   2640*
_SQ503                                    EQU  000003EE   2641*
_SQ504                                    EQU  000003F0   2642*
_SQ505                                    EQU  000003F2   2643*
_SQ506                                    EQU  000003F4   2644*
_SQ507                                    EQU  000003F6   2645*
_SQ508                                    EQU  000003F8   2646*
_SQ509                                    EQU  000003FA   2647*
_SQ510                                    EQU  000003FC   2648*
_SQ511                                    EQU  000003FE   2649*
_SQ512                                    EQU  00000400   2650*
_SQ513                                    EQU  00000402   2651*
_SQ514                                    EQU  00000404   2652*
_SQ515                                    EQU  00000406   2653*
_SQ516                                    EQU  00000408   2654*
_SQ517                                    EQU  0000040A   2655*
_SQ518                                    EQU  0000040C   2656*
_SQ519                                    EQU  0000040E   2657*
_SQ520                                    EQU  00000410   2658*
_SQ521                                    EQU  00000412   2659*
_SQ522                                    EQU  00000414   2660*
_SQ523                                    EQU  00000416   2661*
_SQ524                                    EQU  00000418   2662*
_SQ525                                    EQU  0000041A   2663*
_SQ526                                    EQU  0000041C   2664*
_SQ527                                    EQU  0000041E   2665*
_SQ528                                    EQU  00000420   2666*
_SQ529                                    EQU  00000422   2667*
_SQ530                                    EQU  00000424   2668*
_SQ531                                    EQU  00000426   2669*
_SQ532                                    EQU  00000428   2670*
_SQ533                                    EQU  0000042A   2671*
_SQ534                                    EQU  0000042C   2672*
_SQ535                                    EQU  0000042E   2673*
_SQ536                                    EQU  00000430   2674*
_SQ537                                    EQU  00000432   2675*
_SQ538                                    EQU  00000434   2676*
_SQ539                                    EQU  00000436   2677*
_SQ540                                    EQU  00000438   2678*
_SQ541                                    EQU  0000043A   2679*
_SQ542                                    EQU  0000043C   2680*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    48

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ543                                    EQU  0000043E   2681*
_SQ544                                    EQU  00000440   2682*
_SQ545                                    EQU  00000442   2683*
_SQ546                                    EQU  00000444   2684*
_SQ547                                    EQU  00000446   2685*
_SQ548                                    EQU  00000448   2686*
_SQ549                                    EQU  0000044A   2687*
_SQ550                                    EQU  0000044C   2688*
_SQ551                                    EQU  0000044E   2689*
_SQ552                                    EQU  00000450   2690*
_SQ553                                    EQU  00000452   2691*
_SQ554                                    EQU  00000454   2692*
_SQ555                                    EQU  00000456   2693*
_SQ556                                    EQU  00000458   2694*
_SQ557                                    EQU  0000045A   2695*
_SQ558                                    EQU  0000045C   2696*
_SQ559                                    EQU  0000045E   2697*
_SQ560                                    EQU  00000460   2698*
_SQ561                                    EQU  00000462   2699*
_SQ562                                    EQU  00000464   2700*
_SQ563                                    EQU  00000466   2701*
_SQ564                                    EQU  00000468   2702*
_SQ565                                    EQU  0000046A   2703*
_SQ566                                    EQU  0000046C   2704*
_SQ567                                    EQU  0000046E   2705*
_SQ568                                    EQU  00000470   2706*
_SQ569                                    EQU  00000472   2707*
_SQ570                                    EQU  00000474   2708*
_SQ571                                    EQU  00000476   2709*
_SQ572                                    EQU  00000478   2710*
_SQ573                                    EQU  0000047A   2711*
_SQ574                                    EQU  0000047C   2712*
_SQ575                                    EQU  0000047E   2713*
_SQ576                                    EQU  00000480   2714*
_SQ577                                    EQU  00000482   2715*
_SQ578                                    EQU  00000484   2716*
_SQ579                                    EQU  00000486   2717*
_SQ580                                    EQU  00000488   2718*
_SQ581                                    EQU  0000048A   2719*
_SQ582                                    EQU  0000048C   2720*
_SQ583                                    EQU  0000048E   2721*
_SQ584                                    EQU  00000490   2722*
_SQ585                                    EQU  00000492   2723*
_SQ586                                    EQU  00000494   2724*
_SQ587                                    EQU  00000496   2725*
_SQ588                                    EQU  00000498   2726*
_SQ589                                    EQU  0000049A   2727*
_SQ590                                    EQU  0000049C   2728*
_SQ591                                    EQU  0000049E   2729*
_SQ592                                    EQU  000004A0   2730*
_SQ593                                    EQU  000004A2   2731*
_SQ594                                    EQU  000004A4   2732*
_SQ595                                    EQU  000004A6   2733*
_SQ596                                    EQU  000004A8   2734*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    49

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ597                                    EQU  000004AA   2735*
_SQ598                                    EQU  000004AC   2736*
_SQ599                                    EQU  000004AE   2737*
_SQ600                                    EQU  000004B0   2739*
_SQ601                                    EQU  000004B2   2740*
_SQ602                                    EQU  000004B4   2741*
_SQ603                                    EQU  000004B6   2742*
_SQ604                                    EQU  000004B8   2743*
_SQ605                                    EQU  000004BA   2744*
_SQ606                                    EQU  000004BC   2745*
_SQ607                                    EQU  000004BE   2746*
_SQ608                                    EQU  000004C0   2747*
_SQ609                                    EQU  000004C2   2748*
_SQ610                                    EQU  000004C4   2749*
_SQ611                                    EQU  000004C6   2750*
_SQ612                                    EQU  000004C8   2751*
_SQ613                                    EQU  000004CA   2752*
_SQ614                                    EQU  000004CC   2753*
_SQ615                                    EQU  000004CE   2754*
_SQ616                                    EQU  000004D0   2755*
_SQ617                                    EQU  000004D2   2756*
_SQ618                                    EQU  000004D4   2757*
_SQ619                                    EQU  000004D6   2758*
_SQ620                                    EQU  000004D8   2759*
_SQ621                                    EQU  000004DA   2760*
_SQ622                                    EQU  000004DC   2761*
_SQ623                                    EQU  000004DE   2762*
_SQ624                                    EQU  000004E0   2763*
_SQ625                                    EQU  000004E2   2764*
_SQ626                                    EQU  000004E4   2765*
_SQ627                                    EQU  000004E6   2766*
_SQ628                                    EQU  000004E8   2767*
_SQ629                                    EQU  000004EA   2768*
_SQ630                                    EQU  000004EC   2769*
_SQ631                                    EQU  000004EE   2770*
_SQ632                                    EQU  000004F0   2771*
_SQ633                                    EQU  000004F2   2772*
_SQ634                                    EQU  000004F4   2773*
_SQ635                                    EQU  000004F6   2774*
_SQ636                                    EQU  000004F8   2775*
_SQ637                                    EQU  000004FA   2776*
_SQ638                                    EQU  000004FC   2777*
_SQ639                                    EQU  000004FE   2778*
_SQ640                                    EQU  00000500   2779*
_SQ641                                    EQU  00000502   2780*
_SQ642                                    EQU  00000504   2781*
_SQ643                                    EQU  00000506   2782*
_SQ644                                    EQU  00000508   2783*
_SQ645                                    EQU  0000050A   2784*
_SQ646                                    EQU  0000050C   2785*
_SQ647                                    EQU  0000050E   2786*
_SQ648                                    EQU  00000510   2787*
_SQ649                                    EQU  00000512   2788*
_SQ650                                    EQU  00000514   2789*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    50

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQ651                                    EQU  00000516   2790*
_SQ652                                    EQU  00000518   2791*
_SQ653                                    EQU  0000051A   2792*
_SQ654                                    EQU  0000051C   2793*
_SQ655                                    EQU  0000051E   2794*
_SQ656                                    EQU  00000520   2795*
_SQ657                                    EQU  00000522   2796*
_SQ658                                    EQU  00000524   2797*
_SQ659                                    EQU  00000526   2798*
_SQ660                                    EQU  00000528   2799*
_SQ661                                    EQU  0000052A   2800*
_SQ662                                    EQU  0000052C   2801*
_SQ663                                    EQU  0000052E   2802*
_SQ664                                    EQU  00000530   2803*
_SQ665                                    EQU  00000532   2804*
_SQ666                                    EQU  00000534   2805*
_SQ667                                    EQU  00000536   2806*
_SQ668                                    EQU  00000538   2807*
_SQ669                                    EQU  0000053A   2808*
_SQ670                                    EQU  0000053C   2809*
_SQ671                                    EQU  0000053E   2810*
_SQ672                                    EQU  00000540   2811*
_SQ673                                    EQU  00000542   2812*
_SQ674                                    EQU  00000544   2813*
_SQ675                                    EQU  00000546   2814*
_SQ676                                    EQU  00000548   2815*
_SQ677                                    EQU  0000054A   2816*
_SQ678                                    EQU  0000054C   2817*
_SQ679                                    EQU  0000054E   2818*
_SQ680                                    EQU  00000550   2819*
_SQ681                                    EQU  00000552   2820*
_SQ682                                    EQU  00000554   2821*
_SQ683                                    EQU  00000556   2822*
_SQ684                                    EQU  00000558   2823*
_SQ685                                    EQU  0000055A   2824*
_SQ686                                    EQU  0000055C   2825*
_SQ687                                    EQU  0000055E   2826*
_SQ688                                    EQU  00000560   2827*
_SQ689                                    EQU  00000562   2828*
_SQ690                                    EQU  00000564   2829*
_SQ691                                    EQU  00000566   2830*
_SQ692                                    EQU  00000568   2831*
_SQ693                                    EQU  0000056A   2832*
_SQ694                                    EQU  0000056C   2833*
_SQ695                                    EQU  0000056E   2834*
_SQ696                                    EQU  00000570   2835*
_SQ697                                    EQU  00000572   2836*
_SQ698                                    EQU  00000574   2837*
_SQ699                                    EQU  00000576   2838*
_SQCB200                                  EQU  00000000   2060*
_SQCB201                                  EQU  00000002   2061*
_SQCB202                                  EQU  00000004   2062*
_SQCB203                                  EQU  00000006   2063*
_SQCB204                                  EQU  00000008   2064*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    51

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB205                                  EQU  0000000A   2065*
_SQCB206                                  EQU  0000000C   2066*
_SQCB207                                  EQU  0000000E   2067*
_SQCB208                                  EQU  00000010   2068*
_SQCB209                                  EQU  00000012   2069*
_SQCB210                                  EQU  00000014   2070*
_SQCB211                                  EQU  00000016   2071*
_SQCB212                                  EQU  00000018   2072*
_SQCB213                                  EQU  0000001A   2073*
_SQCB214                                  EQU  0000001C   2074*
_SQCB215                                  EQU  0000001E   2075*
_SQCB216                                  EQU  00000020   2076*
_SQCB217                                  EQU  00000022   2077*
_SQCB218                                  EQU  00000024   2078*
_SQCB219                                  EQU  00000026   2079*
_SQCB220                                  EQU  00000028   2080*
_SQCB221                                  EQU  0000002A   2081*
_SQCB222                                  EQU  0000002C   2082*
_SQCB223                                  EQU  0000002E   2083*
_SQCB224                                  EQU  00000030   2084*
_SQCB225                                  EQU  00000032   2085*
_SQCB226                                  EQU  00000034   2086*
_SQCB227                                  EQU  00000036   2087*
_SQCB228                                  EQU  00000038   2088*
_SQCB229                                  EQU  0000003A   2089*
_SQCB230                                  EQU  0000003C   2090*
_SQCB231                                  EQU  0000003E   2091*
_SQCB232                                  EQU  00000040   2092*
_SQCB233                                  EQU  00000042   2093*
_SQCB234                                  EQU  00000044   2094*
_SQCB235                                  EQU  00000046   2095*
_SQCB236                                  EQU  00000048   2096*
_SQCB237                                  EQU  0000004A   2097*
_SQCB238                                  EQU  0000004C   2098*
_SQCB239                                  EQU  0000004E   2099*
_SQCB240                                  EQU  00000050   2100*
_SQCB241                                  EQU  00000052   2101*
_SQCB242                                  EQU  00000054   2102*
_SQCB243                                  EQU  00000056   2103*
_SQCB244                                  EQU  00000058   2104*
_SQCB245                                  EQU  0000005A   2105*
_SQCB246                                  EQU  0000005C   2106*
_SQCB247                                  EQU  0000005E   2107*
_SQCB248                                  EQU  00000060   2108*
_SQCB249                                  EQU  00000062   2109*
_SQCB250                                  EQU  00000064   2110*
_SQCB251                                  EQU  00000066   2111*
_SQCB252                                  EQU  00000068   2112*
_SQCB253                                  EQU  0000006A   2113*
_SQCB254                                  EQU  0000006C   2114*
_SQCB255                                  EQU  0000006E   2115*
_SQCB256                                  EQU  00000070   2116*
_SQCB257                                  EQU  00000072   2117*
_SQCB258                                  EQU  00000074   2118*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    52

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_SQCB259                                  EQU  00000076   2119*
_SQCB260                                  EQU  00000078   2120*
_SQCB261                                  EQU  0000007A   2121*
_SQCB262                                  EQU  0000007C   2122*
_SQCB263                                  EQU  0000007E   2123*
_SQCB264                                  EQU  00000080   2124*
_SQCB265                                  EQU  00000082   2125*
_SQCB266                                  EQU  00000084   2126*
_SQCB267                                  EQU  00000086   2127*
_SQCB268                                  EQU  00000088   2128*
_SQCB269                                  EQU  0000008A   2129*
_SQ_CB_DAT1                               EQU  00000046   2056*
_SQ_ERR_END                               EQU  0000FF00   2005*
_SQ_NML_COD                               EQU  00000000   2003*
_SQ_NML_END                               EQU  00000055   2004*
_START_ACK_COD                            EQU  00004321    213*
_START_REQ_COD                            EQU  00009876    212*
_STBCR                                    IMPT 00000000    350 
_STBCR2                                   IMPT 00000000    353 
_STWU_CHG                                 IMPT 00000000   1952 
_STWU_CODE                       P        EXPT 00000464   1895  3981*
_STWU_CODE_END                   P        EXPT 00000472   1896  3990*
_STW_CHG                                  IMPT 00000000   1953 
_STW_CMD                                  EQU  00000024   2040* 3936 
_STW_CODE                        P        EXPT 00000440   1897  3929*
_STW_CODE_END                    P        EXPT 0000044E   1898  3939*
_STW_SUB                         P        EXPT 00000450   1830  3946*
_STW_SUB_END                     P             0000045E   3953  3958*
_ST_CHG                                   IMPT 00000000   1936 
_ST_CODE                         P        EXPT 00000084   1861  3019*
_ST_CODE_END                     P        EXPT 0000009E   1862  3037*
_SUB_CHG                                  IMPT 00000000   1959 
_SUB_CMD                                  EQU  00000048   2049* 4441 
_SUB_CODE                        P        EXPT 0000059C   1915  4435*
_SUB_CODE_END                    P        EXPT 000005A8   1916  4444*
_SUB_SUB                         P        EXPT 000005A8   1839  4452*
_SUB_SUB_END                     P             000005BA   4459  4466*
_TCNT0                                    IMPT 00000000    366 
_TCNT1                                    IMPT 00000000    369 
_TCNT2                                    IMPT 00000000    372 
_TCOR0                                    IMPT 00000000    365 
_TCOR1                                    IMPT 00000000    368 
_TCOR2                                    IMPT 00000000    371 
_TCPR2                                    IMPT 00000000    374 
_TCR0                                     IMPT 00000000    367 
_TCR1                                     IMPT 00000000    370 
_TCR2                                     IMPT 00000000    373 
_TEA                                      IMPT 00000000    288 
_TMR_CMD                                  EQU  00000010   2035* 3453 
_TOCR                                     IMPT 00000000    363 
_TRA                                      IMPT 00000000    293 
_TSTR                                     IMPT 00000000    364 
_TTB                                      IMPT 00000000    287 
_VUPCHECK_EQU                             EQU  11AB3739     98*
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    53

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_WCR1                                     IMPT 00000000    314 
_WCR2                                     IMPT 00000000    315 
_WCR3                                     IMPT 00000000    316 
_WCTR_CHG                                 IMPT 00000000   1941 
_WCTR_CODE                       P        EXPT 000002E4   1885  3618*
_WCTR_CODE_END                   P        EXPT 000002EE   1886  3626*
_WCTR_S05                        P             00000300   3651  3661*
_WCTR_S05_10                     P             00000314   3669  3677*
_WCTR_S10                        P             00000330   3687  3697*
_WCTR_S15                        P             00000368   3720  3732*
_WCTR_S20                        P             000003A0   3746  3771*
_WCTR_S50                        P             000003BC   3654  3671  3784*
_WCTR_SUB                        P        EXPT 000002F0   1826  3643*
_WCTR_SUB_END                    P             000003F4   3690  3723  3773  3822*
_WNNRG_CHG                                IMPT 00000000   1948 
_WNNRG_CODE                      P        EXPT 00000150   1877  3242*
_WNNRG_CODE_END                  P        EXPT 00000154   1878  3245*
_WNRG_CHG                                 IMPT 00000000   1947 
_WNRG_CODE                       P        EXPT 0000014C   1875  3232*
_WNRG_CODE_END                   P        EXPT 00000150   1876  3235*
_WSC_CHG                                  IMPT 00000000   1937 
_WSC_CMD                                  EQU  00000018   2037* 3258 
_WSC_CODE                        P        EXPT 00000154   1887  3253*
_WSC_CODE_END                    P        EXPT 00000166   1888  3267*
_WSC_S10                         P             00000178   3282  3288*
_WSC_SUB                         P        EXPT 00000168   1827  3275*
_WSR_CHG                                  IMPT 00000000   1942 
_WSR_CMD                                  EQU  0000001C   2038* 3310 
_WSR_CODE                        P        EXPT 00000180   1889  3300*
_WSR_CODE_END                    P        EXPT 00000194   1890  3313*
_WSR_S10                         P             000001B8   3338  3348*
_WSR_SUB                         P        EXPT 00000194   1828  3321*
_WTCNT                                    IMPT 00000000    351 
_WTCSR                                    IMPT 00000000    352 
_WTMR_CHG                                 IMPT 00000000   1940 
_WTMR_CODE                       P        EXPT 00000200   1883  3449*
_WTMR_CODE_END                   P        EXPT 0000020A   1884  3457*
_WTMR_S10                        P             00000258   3517  3524*
_WTMR_S10_000                    P             0000022A   3481  3492*
_WTMR_S10_020                    P             0000024C   3499  3513*
_WTMR_S50                        P             00000290   3473  3561*
_WTMR_SUB                        P        EXPT 0000020C   1825  3465*
_WTMR_SUB_END                    P             000002C4   3505  3520  3549  3596*
_XORW_CHG                                 IMPT 00000000   1962 
_XORW_CMD                                 EQU  00000040   2047* 4334 
_XORW_CODE                       P        EXPT 00000554   1911  4328*
_XORW_CODE_END                   P        EXPT 00000560   1912  4337*
_XORW_SUB                        P        EXPT 00000560   1837  4345*
_XORW_SUB_END                    P             00000572   4352  4359*
_data_init2_timer                         IMPT 00000000   1772 
_mem_chk_flg                              IMPT 00000000   1774 
_sram_top                                 IMPT 00000000   1770 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:20:49                                                  PAGE    54

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

P                                REL-CODE    0000005DE        
