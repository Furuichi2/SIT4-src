*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     1
PROGRAM NAME =

    1                               1     ;------------------------------------------------------------------------
    2                               2     ;                                                                       |
    3                               3     ;   FILE        :vhandler.src                                           |
    4                               4     ;   DATE        :Mon, Jun 24, 2002                                      |
    5                               5     ;   DESCRIPTION :Reset/Interrupt Handler                                |
    6                               6     ;   CPU TYPE    :SH7750                                                 |
    7                               7     ;                                                                       |
    8                               8     ;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
    9                               9     ;                                                                       |
   10                              10     ;------------------------------------------------------------------------
   11                              11     
   12                              12     
   13                              13     
   14                              14                     .include        "env.inc"
   15                               1 I1  ;------------------------------------------------------------------------
   16                               2 I1  ;                                                                       |
   17                               3 I1  ;   FILE        :env.inc                                                |
   18                               4 I1  ;   DATE        :Mon, Jun 24, 2002                                      |
   19                               5 I1  ;   DESCRIPTION :Define Interruput Event Register                       |
   20                               6 I1  ;   CPU TYPE    :SH7750                                                 |
   21                               7 I1  ;                                                                       |
   22                               8 I1  ;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
   23                               9 I1  ;                                                                       |
   24                              10 I1  ;------------------------------------------------------------------------
   25                              11 I1  
   26                              12 I1  
   27                              13 I1  
   28                              14 I1  
   29          FF000024            15 I1  EXPEVT:         .equ    H'FF000024
   30          FF000028            16 I1  INTEVT:         .equ    H'FF000028
   31                              17 I1  
   32                              18 I1  
   33                              15                     .include        "vect.inc"
   34                               1 I1  ;------------------------------------------------------------------------
   35                               2 I1  ;                                                                       |
   36                               3 I1  ;   FILE        :vect.inc                                               |
   37                               4 I1  ;   DATE        :Mon, Jun 24, 2002                                      |
   38                               5 I1  ;   DESCRIPTION :Definition of Vector                                   |
   39                               6 I1  ;   CPU TYPE    :SH7750                                                 |
   40                               7 I1  ;                                                                       |
   41                               8 I1  ;   This file is generated by Hitachi Project Generator (Ver.1.1).      |
   42                               9 I1  ;                                                                       |
   43                              10 I1  ;------------------------------------------------------------------------
   44                              11 I1  
   45                              12 I1  
   46                              13 I1  
   47          000000F0            14 I1  SR_Init:        .equ    B'00000000000000000000000011110000
   48          400000F0            15 I1  SR_Init_DI:     .equ    B'01000000000000000000000011110000      ;// [ì¡å†”∞ƒﬁå≈íË]ëSäÑçûÇ›
                                          ã÷é~
   49                              16 I1  
   50                              17 I1  ;<<VECTOR DATA START (POWER ON RESET)>>
   51                              18 I1          ;H'000 Power On Reset (Hitachi-UDI RESET)
   52                              19 I1          .global         _PowerON_Reset
                                          
   53                              20 I1  ;<<VECTOR DATA END (POWER ON RESET)>>
   54                              21 I1  ;<<VECTOR DATA START (MANUAL RESET)>>
   55                              22 I1          ;H'020 Manual Reset
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     2
PROGRAM NAME =

   56                              23 I1          .global         _Manual_Reset
                                          
   57                              24 I1  ;<<VECTOR DATA END (MANUAL RESET)>>
   58                              25 I1  ;<<VECTOR DATA START (TBL RESET)>>
   59                              26 I1          ;H'140 TBL Reset (DATA TBL Reset)
   60                              27 I1          .global         _TBL_Reset
                                          
   61                              28 I1  ;<<VECTOR DATA END (TBL RESET)>>
   62                              29 I1  
   63                              30 I1          ;H'040 TLB miss/invalid (load)
   64                              31 I1          .global         _INT_TLBMiss_Load
   65                              32 I1          ;H'060 TLB miss/invalid (store)
   66                              33 I1          .global         _INT_TLBMiss_Store
   67                              34 I1          ;H'080 Initial page write
   68                              35 I1          .global         _INT_TLBInitial_Page
   69                              36 I1          ;H'0A0 TLB protect (load)
   70                              37 I1          .global         _INT_TLBProtect_Load
   71                              38 I1          ;H'0C0 TLB protect (store)
   72                              39 I1          .global         _INT_TLBProtect_Store
   73                              40 I1          ;H'0E0 Address error (load)
   74                              41 I1          .global         _INT_Address_load
   75                              42 I1          ;H'100 Address error (store)
   76                              43 I1          .global         _INT_Address_store
   77                              44 I1          ;H'120 FPU invalid
   78                              45 I1          .global         _INT_FPU
   79                              46 I1          ;H'140 Reserved
   80                              47 I1          .global         _INT_Reserved140
   81                              48 I1          ;H'160 TRAPA
   82                              49 I1          .global         _INT_TRAPA
   83                              50 I1          ;H'180 Illegal code
   84                              51 I1          .global         _INT_Illegal_code
   85                              52 I1          ;H'1A0 Illegal slot
   86                              53 I1          .global         _INT_Illegal_slot
   87                              54 I1          ;H'1C0 NMI
   88                              55 I1          .global         _INT_NMI
   89                              56 I1          ;H'1E0 User Break
   90                              57 I1          .global         _INT_User_Break
   91                              58 I1          ;H'200 External hardware interrupt
   92                              59 I1          .global         _INT_Extern_0000
   93                              60 I1          ;H'220 External hardware interrupt
   94                              61 I1          .global         _INT_Extern_0001
   95                              62 I1          ;H'240 External hardware interrupt
   96                              63 I1          .global         _INT_Extern_0010
   97                              64 I1          ;H'260 External hardware interrupt
   98                              65 I1          .global         _INT_Extern_0011
   99                              66 I1          ;H'280 External hardware interrupt
  100                              67 I1          .global         _INT_Extern_0100
  101                              68 I1          ;H'2A0 External hardware interrupt
  102                              69 I1          .global         _INT_Extern_0101
  103                              70 I1          ;H'2C0 External hardware interrupt
  104                              71 I1          .global         _INT_Extern_0110
  105                              72 I1          ;H'2E0 External hardware interrupt
  106                              73 I1          .global         _INT_Extern_0111
  107                              74 I1          ;H'300 External hardware interrupt
  108                              75 I1          .global         _INT_Extern_1000
  109                              76 I1          ;H'320 External hardware interrupt
  110                              77 I1          .global         _INT_Extern_1001
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     3
PROGRAM NAME =

  111                              78 I1          ;H'340 External hardware interrupt
  112                              79 I1          .global         _INT_Extern_1010
  113                              80 I1          ;H'360 External hardware interrupt
  114                              81 I1          .global         _INT_Extern_1011
  115                              82 I1          ;H'380 External hardware interrupt
  116                              83 I1          .global         _INT_Extern_1100
  117                              84 I1          ;H'3A0 External hardware interrupt
  118                              85 I1          .global         _INT_Extern_1101
  119                              86 I1          ;H'3C0 External hardware interrupt
  120                              87 I1          .global         _INT_Extern_1110
  121                              88 I1          ;H'3E0 Reserved
  122                              89 I1          .global         _INT_Reserved3E0
  123                              90 I1          ;H'400 TMU0 TUNI0
  124                              91 I1          .global         _INT_Timer_Under_0
  125                              92 I1          ;H'420 TMU1 TUNI1
  126                              93 I1          .global         _INT_Timer_Under_1
  127                              94 I1          ;H'440 TMU2 TUNI2
  128                              95 I1          .global         _INT_Timer_Under_2
  129                              96 I1          ;H'460 TMU2 TICPI2
  130                              97 I1          .global         _INT_Input_Capture
  131                              98 I1          ;H'480 RTC ATI
  132                              99 I1          .global         _INT_RTC_ATI
  133                             100 I1          ;H'4A0 RTC PRI
  134                             101 I1          .global         _INT_RTC_PRI
  135                             102 I1          ;H'4C0 RTC CUI
  136                             103 I1          .global         _INT_RTC_CUI
  137                             104 I1          ;H'4E0 SCI ERI
  138                             105 I1          .global         _INT_SCI_ERI
  139                             106 I1          ;H'500 SCI RXI
  140                             107 I1          .global         _INT_SCI_RXI
  141                             108 I1          ;H'520 SCI TXI
  142                             109 I1          .global         _INT_SCI_TXI
  143                             110 I1          ;H'540 SCI TEI
  144                             111 I1          .global         _INT_SCI_TEI
  145                             112 I1          ;H'560 WDT ITI
  146                             113 I1          .global         _INT_WDT
  147                             114 I1          ;H'580 REF RCMI
  148                             115 I1          .global         _INT_REF_RCMI
  149                             116 I1          ;H'5A0 REF ROVI
  150                             117 I1          .global         _INT_REF_ROVI
  151                             118 I1          ;H'5C0 Reserved
  152                             119 I1          .global         _INT_Reserved5C0
  153                             120 I1          ;H'5E0 Reserved
  154                             121 I1          .global         _INT_Reserved5E0
  155                             122 I1          ;H'600 Hitachi-UDI
  156                             123 I1          .global         _INT_HUDI
  157                             124 I1          ;H'620 Reserved
  158                             125 I1          .global         _INT_Reserved620
  159                             126 I1          ;H'640 DMAC DMTE0
  160                             127 I1          .global         _INT_DMAC_DMTE0
  161                             128 I1          ;H'660 DMAC DMTE1
  162                             129 I1          .global         _INT_DMAC_DMTE1
  163                             130 I1          ;H'680 DMAC DMTE2
  164                             131 I1          .global         _INT_DMAC_DMTE2
  165                             132 I1          ;H'6A0 DMAC DMTE3
  166                             133 I1          .global         _INT_DMAC_DMTE3
  167                             134 I1          ;H'6C0 DMAC DMAE
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     4
PROGRAM NAME =

  168                             135 I1          .global         _INT_DMAC_DMAE
  169                             136 I1          ;H'6E0 Reserved
  170                             137 I1          .global         _INT_Reserved6E0
  171                             138 I1          ;H'700 SCIF ERI
  172                             139 I1          .global         _INT_SCIF_ERI
  173                             140 I1          ;H'720 SCIF RXI
  174                             141 I1          .global         _INT_SCIF_RXI
  175                             142 I1          ;H'740 SCIF BRI
  176                             143 I1          .global         _INT_SCIF_BRI
  177                             144 I1          ;H'760 SCIF TXI
  178                             145 I1          .global         _INT_SCIF_TXI
  179                             146 I1          ;H'780 Reserved
  180                             147 I1          .global         _INT_Reserved780
  181                             148 I1          ;H'7A0 Reserved
  182                             149 I1          .global         _INT_Reserved7A0
  183                             150 I1          ;H'7C0 Reserved
  184                             151 I1          .global         _INT_Reserved7C0
  185                             152 I1          ;H'7E0 Reserved
  186                             153 I1          .global         _INT_Reserved7E0
  187                             154 I1          ;H'800 Illegal FPU
  188                             155 I1          .global         _INT_Illegal_FPU
  189                             156 I1          ;H'820 Illegal slot FPU
  190                             157 I1          .global         _INT_Illegal_slot_FPU
  191                             158 I1  
  192                             159 I1  
  193                              16     
  194          FFFFFF0F            17     IMASKclr:       .equ    H'FFFFFF0F
  195          CFFFFFFF            18     RBBLclr:        .equ    H'CFFFFFFF
  196          70000000            19     MDRBBLset:      .equ    H'70000000
  197                              20     
  198                              21                     .import         _RESET_Vectors
  199                              22                     .import         _INT_Vectors
  200                              23                     .import         _INT_MASK
  201                              24     
  202                              25     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  203                              26     ;*             macro definition                                *;
  204                              27     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  205                              28                     .macro PUSH_EXP_BASE_REG
  206                              29             stc.l   ssr,@-r15               ; save ssr
  207                              30             stc.l   spc,@-r15               ; save spc
  208                              31             sts.l   pr,@-r15                ; save context registers
  209                              32             stc.l   r7_bank,@-r15
  210                              33             stc.l   r6_bank,@-r15
  211                              34             stc.l   r5_bank,@-r15
  212                              35             stc.l   r4_bank,@-r15
  213                              36             stc.l   r3_bank,@-r15
  214                              37             stc.l   r2_bank,@-r15
  215                              38             stc.l   r1_bank,@-r15
  216                              39             stc.l   r0_bank,@-r15
  217                              40                     .endm
  218                              41     ;
  219                              42                     .macro POP_EXP_BASE_REG
  220                              43             ldc.l   @r15+,r0_bank           ; recover registers
  221                              44             ldc.l   @r15+,r1_bank
  222                              45             ldc.l   @r15+,r2_bank
  223                              46             ldc.l   @r15+,r3_bank
  224                              47             ldc.l   @r15+,r4_bank
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     5
PROGRAM NAME =

  225                              48             ldc.l   @r15+,r5_bank
  226                              49             ldc.l   @r15+,r6_bank
  227                              50             ldc.l   @r15+,r7_bank
  228                              51             lds.l   @r15+,pr
  229                              52             ldc.l   @r15+,spc
  230                              53             ldc.l   @r15+,ssr
  231                              54                     .endm
  232                              55     ;
  233                              56     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  234                              57     ;               reset
                                                                  ;
  235                              58     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  236 00000000                     59                     .section        RSTHandler,code
  237 00000000                     60     _ResetHandler:
  238 00000000 0009                61             nop             ;1 ROM√ﬁ ﬁØ∏óp 10*NOP
  239 00000002 0009                62             nop             ;2
  240 00000004 0009                63             nop             ;3
  241 00000006 0009                64             nop             ;4
  242 00000008 0009                65             nop             ;5
  243 0000000A 0009                66             nop             ;6
  244 0000000C 0009                67             nop             ;7
  245 0000000E 0009                68             nop             ;8
  246 00000010 0009                69             nop             ;9
  247 00000012 0009                70             nop             ;10
  248 00000014 D004                71                                     mov.l   #EXPEVT,r0
  249 00000016 6002                72                                     mov.l   @r0,r0
  250 00000018 200A                73             XOR     R0,R0
  251 0000001A 4009                74                                     shlr2   r0
  252 0000001C 4001                75                                     shlr    r0
  253 0000001E D103                76                                     mov.l   #_RESET_Vectors,r1
  254 00000020 301C                77                                     add             r1,r0
  255 00000022 6002                78                                     mov.l   @r0,r0
  256 00000024 402B                79                                     jmp             @r0
  257 00000026 0009                80                                     nop
  258                              81     ;
  259                              82     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  260                              83     ;               exceptional interrupt
                                                  ;
  261                              84     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  262                                     ***** BEGIN-POOL *****
  263 00000028 FF000024                   DATA FOR SOURCE-LINE 71
  264 0000002C 00000000                   DATA FOR SOURCE-LINE 76
  265                                     ***** END-POOL *****
  266 00000000                     85                     .section        INTHandler,code
  267                              86                     .export         INTHandlerPRG
  268 00000000                     87     INTHandlerPRG:
  269 00000000                     88     _ExpHandler:
  270 00000000 0009                89             nop             ;1 ROM√ﬁ ﬁØ∏óp 10*NOP
  271 00000002 0009                90             nop             ;2
  272 00000004 0009                91             nop             ;3
  273 00000006 0009                92             nop             ;4
  274 00000008 0009                93             nop             ;5
  275 0000000A 0009                94             nop             ;6
  276 0000000C 0009                95             nop             ;7
  277 0000000E 0009                96             nop             ;8
  278 00000010 0009                97             nop             ;9
  279 00000012 0009                98             nop             ;10
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     6
PROGRAM NAME =

  280                              99                                     PUSH_EXP_BASE_REG
  281 00000014 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  282 00000016 4F43                   M           stc.l   spc,@-r15               ; save spc
  283 00000018 4F22                   M           sts.l   pr,@-r15                ; save context registers
  284 0000001A 4FF3                   M           stc.l   r7_bank,@-r15
  285 0000001C 4FE3                   M           stc.l   r6_bank,@-r15
  286 0000001E 4FD3                   M           stc.l   r5_bank,@-r15
  287 00000020 4FC3                   M           stc.l   r4_bank,@-r15
  288 00000022 4FB3                   M           stc.l   r3_bank,@-r15
  289 00000024 4FA3                   M           stc.l   r2_bank,@-r15
  290 00000026 4F93                   M           stc.l   r1_bank,@-r15
  291 00000028 4F83                   M           stc.l   r0_bank,@-r15
  292                             100     ;
  293 0000002A D00A               101                                     mov.l   #EXPEVT,r0                      ; set event addres
                                          s
  294 0000002C 6102               102                                     mov.l   @r0,r1                          ; set exception co
                                          de
  295 0000002E D00A               103                                     mov.l   #_INT_Vectors,r0        ; set vector table address
  296 00000030 71C0               104                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  297 00000032 4109               105                                     shlr2   r1
  298 00000034 4101               106                                     shlr    r1
  299 00000036 031E               107                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
  300                             108     ;
  301 00000038 D008               109                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  302 0000003A 4109               110                                     shlr2   r1
  303 0000003C 011C               111                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  304 0000003E 611C               112                                     extu.b  r1,r1
  305                             113     ;
  306 00000040 0002               114                                     stc             sr,r0                           ; save sr
  307 00000042 D207               115                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  308 00000044 2029               116                                     and             r2,r0                           ; clear ma
                                          sk data
  309 00000046 201B               117                                     or              r1,r0                           ; set inte
                                          rrupt mask
  310 00000048 403E               118                                     ldc             r0,ssr                          ; set curr
                                          ent status
  311                             119     ;
  312 0000004A 434E               120                                     ldc.l   r3,spc
  313 0000004C D005               121                                     mov.l   #__int_term,r0          ; set interrupt terminate
  314 0000004E 402A               122                                     lds             r0,pr
  315                             123     ;
  316 00000050 002B               124                                     rte
  317 00000052 0009               125                                     nop
  318                             126     ;
  319                                     ***** BEGIN-POOL *****
  320 00000054 FF000024                   DATA FOR SOURCE-LINE 101
  321 00000058 00000000                   DATA FOR SOURCE-LINE 103
  322 0000005C 00000000                   DATA FOR SOURCE-LINE 109
  323 00000060 CFFFFF0F                   DATA FOR SOURCE-LINE 115
  324 00000064 00000000                   DATA FOR SOURCE-LINE 121
  325                                     ***** END-POOL *****
  326                             127                                     .pool
  327                             128     ;
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     7
PROGRAM NAME =

  328                             129     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  329                             130     ;               Interrupt terminate
                                                          ;
  330                             131     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  331 00000068                    132                                     .align  4
  332 00000068                    133     __int_term:
  333 00000068 D007               134                                     mov.l   #MDRBBLset,r0   ; set MD,BL,RB
  334 0000006A 400E               135                                     ldc.l   r0,sr                           ;
  335                             136                                     POP_EXP_BASE_REG
  336 0000006C 4F87                   M           ldc.l   @r15+,r0_bank           ; recover registers
  337 0000006E 4F97                   M           ldc.l   @r15+,r1_bank
  338 00000070 4FA7                   M           ldc.l   @r15+,r2_bank
  339 00000072 4FB7                   M           ldc.l   @r15+,r3_bank
  340 00000074 4FC7                   M           ldc.l   @r15+,r4_bank
  341 00000076 4FD7                   M           ldc.l   @r15+,r5_bank
  342 00000078 4FE7                   M           ldc.l   @r15+,r6_bank
  343 0000007A 4FF7                   M           ldc.l   @r15+,r7_bank
  344 0000007C 4F26                   M           lds.l   @r15+,pr
  345 0000007E 4F47                   M           ldc.l   @r15+,spc
  346 00000080 4F37                   M           ldc.l   @r15+,ssr
  347 00000082 002B               137                                     rte                                     ; return
  348 00000084 0009               138                                     nop
  349                             139     ;
  350                                     ***** BEGIN-POOL *****
  351 00000086 0000                       ALIGNMENT CODE
  352 00000088 70000000                   DATA FOR SOURCE-LINE 134
  353                                     ***** END-POOL *****
  354                             140                                     .pool
  355                             141     ;
  356                             142     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  357                             143     ;               TLB miss interrupt
                                                          ;
  358                             144     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  359 00000300                    145                     .org    H'300
  360 00000300                    146     _TLBmissHandler:
  361 00000300 0009               147             nop             ;1 ROM√ﬁ ﬁØ∏óp 10*NOP
  362 00000302 0009               148             nop             ;2
  363 00000304 0009               149             nop             ;3
  364 00000306 0009               150             nop             ;4
  365 00000308 0009               151             nop             ;5
  366 0000030A 0009               152             nop             ;6
  367 0000030C 0009               153             nop             ;7
  368 0000030E 0009               154             nop             ;8
  369 00000310 0009               155             nop             ;9
  370 00000312 0009               156             nop             ;10
  371                             157                                     PUSH_EXP_BASE_REG
  372 00000314 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  373 00000316 4F43                   M           stc.l   spc,@-r15               ; save spc
  374 00000318 4F22                   M           sts.l   pr,@-r15                ; save context registers
  375 0000031A 4FF3                   M           stc.l   r7_bank,@-r15
  376 0000031C 4FE3                   M           stc.l   r6_bank,@-r15
  377 0000031E 4FD3                   M           stc.l   r5_bank,@-r15
  378 00000320 4FC3                   M           stc.l   r4_bank,@-r15
  379 00000322 4FB3                   M           stc.l   r3_bank,@-r15
  380 00000324 4FA3                   M           stc.l   r2_bank,@-r15
  381 00000326 4F93                   M           stc.l   r1_bank,@-r15
  382 00000328 4F83                   M           stc.l   r0_bank,@-r15
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     8
PROGRAM NAME =

  383                             158     ;
  384 0000032A D00A               159                                     mov.l   #EXPEVT,r0                      ; set event addres
                                          s
  385 0000032C 6102               160                                     mov.l   @r0,r1                          ; set exception co
                                          de
  386 0000032E D00A               161                                     mov.l   #_INT_Vectors,r0        ; set vector table address
  387 00000330 71C0               162                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  388 00000332 4109               163                                     shlr2   r1
  389 00000334 4101               164                                     shlr    r1
  390 00000336 031E               165                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
  391                             166     ;
  392 00000338 D008               167                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  393 0000033A 4109               168                                     shlr2   r1
  394 0000033C 011C               169                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  395 0000033E 611C               170                                     extu.b  r1,r1
  396                             171     ;
  397 00000340 0002               172                                     stc             sr,r0                           ; save sr
  398 00000342 D207               173                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  399 00000344 2029               174                                     and             r2,r0                           ; clear ma
                                          sk data
  400 00000346 201B               175                                     or              r1,r0                           ; set inte
                                          rrupt mask
  401 00000348 403E               176                                     ldc             r0,ssr                          ; set curr
                                          ent status
  402                             177     ;
  403 0000034A 434E               178                                     ldc.l   r3,spc
  404 0000034C D005               179                                     mov.l   #__int_term,r0          ; set interrupt terminate
  405 0000034E 402A               180                                     lds             r0,pr
  406                             181     ;
  407 00000350 002B               182                                     rte
  408 00000352 0009               183                                     nop
  409                             184     ;
  410                                     ***** BEGIN-POOL *****
  411 00000354 FF000024                   DATA FOR SOURCE-LINE 159
  412 00000358 00000000                   DATA FOR SOURCE-LINE 161
  413 0000035C 00000000                   DATA FOR SOURCE-LINE 167
  414 00000360 CFFFFF0F                   DATA FOR SOURCE-LINE 173
  415 00000364 00000000                   DATA FOR SOURCE-LINE 179
  416                                     ***** END-POOL *****
  417                             185                                     .pool
  418                             186     ;
  419                             187     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  420                             188     ;               IRQ
                                                                          ;
  421                             189     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  422 00000500                    190                     .org    H'500
  423 00000500                    191     _IRQHandler:
  424 00000500 0009               192             nop             ;1 ROM√ﬁ ﬁØ∏óp 10*NOP
  425 00000502 0009               193             nop             ;2
  426 00000504 0009               194             nop             ;3
  427 00000506 0009               195             nop             ;4
  428 00000508 0009               196             nop             ;5
  429 0000050A 0009               197             nop             ;6
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE     9
PROGRAM NAME =

  430 0000050C 0009               198             nop             ;7
  431 0000050E 0009               199             nop             ;8
  432 00000510 0009               200             nop             ;9
  433 00000512 0009               201             nop             ;10
  434                             202                                     PUSH_EXP_BASE_REG
  435 00000514 4F33                   M           stc.l   ssr,@-r15               ; save ssr
  436 00000516 4F43                   M           stc.l   spc,@-r15               ; save spc
  437 00000518 4F22                   M           sts.l   pr,@-r15                ; save context registers
  438 0000051A 4FF3                   M           stc.l   r7_bank,@-r15
  439 0000051C 4FE3                   M           stc.l   r6_bank,@-r15
  440 0000051E 4FD3                   M           stc.l   r5_bank,@-r15
  441 00000520 4FC3                   M           stc.l   r4_bank,@-r15
  442 00000522 4FB3                   M           stc.l   r3_bank,@-r15
  443 00000524 4FA3                   M           stc.l   r2_bank,@-r15
  444 00000526 4F93                   M           stc.l   r1_bank,@-r15
  445 00000528 4F83                   M           stc.l   r0_bank,@-r15
  446                             203     ;
  447 0000052A D00A               204                                     mov.l   #INTEVT,r0                      ; set event addres
                                          s
  448 0000052C 6102               205                                     mov.l   @r0,r1                          ; set exception co
                                          de
  449 0000052E D00A               206                                     mov.l   #_INT_Vectors,r0        ; set vector table address
  450 00000530 71C0               207                                     add             #-(h'40),r1                     ; exceptio
                                          n code - h'40
  451 00000532 4109               208                                     shlr2   r1
  452 00000534 4101               209                                     shlr    r1
  453 00000536 031E               210                                     mov.l   @(r0,r1),r3                     ; set interrupt fu
                                          nction addr
  454                             211     ;
  455 00000538 D008               212                                     mov.l   #_INT_MASK,r0           ; interrupt mask table add
                                          r
  456 0000053A 4109               213                                     shlr2   r1
  457 0000053C 011C               214                                     mov.b   @(r0,r1),r1                     ; interrupt mask
  458 0000053E 611C               215                                     extu.b  r1,r1
  459                             216     ;
  460 00000540 0002               217                                     stc             sr,r0                           ; save sr
  461 00000542 D207               218                                     mov.l   #(RBBLclr&IMASKclr),r2          ; RB,BL,mask clear
                                           data
  462 00000544 2029               219                                     and             r2,r0                           ; clear ma
                                          sk data
  463 00000546 201B               220                                     or              r1,r0                           ; set inte
                                          rrupt mask
  464 00000548 403E               221                                     ldc             r0,ssr                          ; set curr
                                          ent status
  465                             222     ;
  466 0000054A 434E               223                                     ldc.l   r3,spc
  467 0000054C D005               224                                     mov.l   #__int_term,r0          ; set interrupt terminate
  468 0000054E 402A               225                                     lds             r0,pr
  469                             226     ;
  470 00000550 002B               227                                     rte
  471 00000552 0009               228                                     nop
  472                             229     ;
  473                                     ***** BEGIN-POOL *****
  474 00000554 FF000028                   DATA FOR SOURCE-LINE 204
  475 00000558 00000000                   DATA FOR SOURCE-LINE 206
  476 0000055C 00000000                   DATA FOR SOURCE-LINE 212
  477 00000560 CFFFFF0F                   DATA FOR SOURCE-LINE 218
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE    10
PROGRAM NAME =

  478 00000564 00000000                   DATA FOR SOURCE-LINE 224
  479                                     ***** END-POOL *****
  480                             230                                     .pool
  481                             231                                     .end
  *****TOTAL ERRORS       0
  *****TOTAL WARNINGS     0
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE    11

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

EXPEVT                                    EQU  FF000024     29*  248   293   384 
IMASKclr                                  EQU  FFFFFF0F    194*  307   398   461 
INTEVT                                    EQU  FF000028     30*  447 
INTHandler                       INTHandl SCT  00000000    266*
INTHandlerPRG                    INTHandl EXPT 00000000    267   268*
MDRBBLset                                 EQU  70000000    196*  333 
RBBLclr                                   EQU  CFFFFFFF    195*  307   398   461 
RSTHandler                       RSTHandl SCT  00000000    236*
SR_Init                                   EQU  000000F0     47*
SR_Init_DI                                EQU  400000F0     48*
_ExpHandler                      INTHandl      00000000    269*
_INT_Address_load                         IMPT 00000000     74 
_INT_Address_store                        IMPT 00000000     76 
_INT_DMAC_DMAE                            IMPT 00000000    168 
_INT_DMAC_DMTE0                           IMPT 00000000    160 
_INT_DMAC_DMTE1                           IMPT 00000000    162 
_INT_DMAC_DMTE2                           IMPT 00000000    164 
_INT_DMAC_DMTE3                           IMPT 00000000    166 
_INT_Extern_0000                          IMPT 00000000     92 
_INT_Extern_0001                          IMPT 00000000     94 
_INT_Extern_0010                          IMPT 00000000     96 
_INT_Extern_0011                          IMPT 00000000     98 
_INT_Extern_0100                          IMPT 00000000    100 
_INT_Extern_0101                          IMPT 00000000    102 
_INT_Extern_0110                          IMPT 00000000    104 
_INT_Extern_0111                          IMPT 00000000    106 
_INT_Extern_1000                          IMPT 00000000    108 
_INT_Extern_1001                          IMPT 00000000    110 
_INT_Extern_1010                          IMPT 00000000    112 
_INT_Extern_1011                          IMPT 00000000    114 
_INT_Extern_1100                          IMPT 00000000    116 
_INT_Extern_1101                          IMPT 00000000    118 
_INT_Extern_1110                          IMPT 00000000    120 
_INT_FPU                                  IMPT 00000000     78 
_INT_HUDI                                 IMPT 00000000    156 
_INT_Illegal_FPU                          IMPT 00000000    188 
_INT_Illegal_code                         IMPT 00000000     84 
_INT_Illegal_slot                         IMPT 00000000     86 
_INT_Illegal_slot_FPU                     IMPT 00000000    190 
_INT_Input_Capture                        IMPT 00000000    130 
_INT_MASK                                 IMPT 00000000    200   301   392   455 
_INT_NMI                                  IMPT 00000000     88 
_INT_REF_RCMI                             IMPT 00000000    148 
_INT_REF_ROVI                             IMPT 00000000    150 
_INT_RTC_ATI                              IMPT 00000000    132 
_INT_RTC_CUI                              IMPT 00000000    136 
_INT_RTC_PRI                              IMPT 00000000    134 
_INT_Reserved140                          IMPT 00000000     80 
_INT_Reserved3E0                          IMPT 00000000    122 
_INT_Reserved5C0                          IMPT 00000000    152 
_INT_Reserved5E0                          IMPT 00000000    154 
_INT_Reserved620                          IMPT 00000000    158 
_INT_Reserved6E0                          IMPT 00000000    170 
_INT_Reserved780                          IMPT 00000000    180 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE    12

*** CROSS REFERENCE LIST

NAME                             SECTION  ATTR VALUE             SEQUENCE

_INT_Reserved7A0                          IMPT 00000000    182 
_INT_Reserved7C0                          IMPT 00000000    184 
_INT_Reserved7E0                          IMPT 00000000    186 
_INT_SCIF_BRI                             IMPT 00000000    176 
_INT_SCIF_ERI                             IMPT 00000000    172 
_INT_SCIF_RXI                             IMPT 00000000    174 
_INT_SCIF_TXI                             IMPT 00000000    178 
_INT_SCI_ERI                              IMPT 00000000    138 
_INT_SCI_RXI                              IMPT 00000000    140 
_INT_SCI_TEI                              IMPT 00000000    144 
_INT_SCI_TXI                              IMPT 00000000    142 
_INT_TLBInitial_Page                      IMPT 00000000     68 
_INT_TLBMiss_Load                         IMPT 00000000     64 
_INT_TLBMiss_Store                        IMPT 00000000     66 
_INT_TLBProtect_Load                      IMPT 00000000     70 
_INT_TLBProtect_Store                     IMPT 00000000     72 
_INT_TRAPA                                IMPT 00000000     82 
_INT_Timer_Under_0                        IMPT 00000000    124 
_INT_Timer_Under_1                        IMPT 00000000    126 
_INT_Timer_Under_2                        IMPT 00000000    128 
_INT_User_Break                           IMPT 00000000     90 
_INT_Vectors                              IMPT 00000000    199   295   386   449 
_INT_WDT                                  IMPT 00000000    146 
_IRQHandler                      INTHandl      00000500    423*
_Manual_Reset                             IMPT 00000000     56 
_PowerON_Reset                            IMPT 00000000     52 
_RESET_Vectors                            IMPT 00000000    198   253 
_ResetHandler                    RSTHandl      00000000    237*
_TBL_Reset                                IMPT 00000000     60 
_TLBmissHandler                  INTHandl      00000300    360*
__int_term                       INTHandl      00000068    313   332*  404   467 
*** SuperH RISC engine ASSEMBLER V.7.01.02.000 ***    12/13/20 18:21:14                                                  PAGE    13

*** SECTION DATA LIST

SECTION                          ATTRIBUTE    SIZE             START

RSTHandler                       REL-CODE    000000030        
INTHandler                       REL-CODE    000000568        
